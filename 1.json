{
  "openapi": "3.0.1",
  "info": {
    "title": "730.adsd-clients-s-rest-v1",
    "description": "730 ЦДС: Сервис aдминистративных поручений",
    "contact": {
      "name": "Корнеев Роман Сергеевич",
      "url": "https://vtb.ru",
      "email": "rskorneev@vtb.ru"
    },
    "license": {
      "name": "VTB API License",
      "url": "https://vtb.ru"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://adsd-clients-service.dk1-adsd01.dv.adsd.innodev.local/ui-api-web/kib/adsd/clients/v1",
      "description": "DSO"
    },
    {
      "url": "https://adsd-clients-service.oslb-synt01.test.vtb.ru/ui-api-web/kib/adsd/clients/v1",
      "description": "IFT"
    },
    {
      "url": "https://adsd-clients-service.oslb-app01.test.vtb.ru/ui-api-web/kib/adsd/clients/v1",
      "description": "PREPROD"
    },
    {
      "url": "https://adsd-clients-service.adsd-lbc.region.vtb.ru/ui-api-web/kib/adsd/clients/v1",
      "description": "PROD"
    }
  ],
  "paths": {
    "/payment-accounts/{accountNumber}": {
      "get": {
        "tags": [
          "Банковские реквизиты"
        ],
        "summary": "Вернуть банковские реквизиты для заданного пассивного счета из данных АП",
        "description": "Вернуть банковские реквизиты для заданного пассивного счета из данных АП",
        "operationId": "paymentaccounts-getpaymentaccountsbypassiveaccountnumber",
        "parameters": [
          {
            "name": "accountNumber",
            "in": "path",
            "description": "Номер пассивного счета",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Банковские реквизиты",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PaymentAccountDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/trustee-appointment-attorney/not-revoked/mdm/{mdm}": {
      "get": {
        "tags": [
          "Доверенности УЛ"
        ],
        "summary": "Получение не отмененных Доверенностей УЛ по Mdm клиента выдавшего доверенность",
        "description": "Получение не отмененных Доверенностей УЛ по Mdm клиента выдавшего доверенность",
        "operationId": "trusteeappointmentattorney-getnotrevokedtrusteeappointmentattorneysbymdm",
        "parameters": [
          {
            "name": "mdm",
            "in": "path",
            "description": "Mdm клиента выдавший доверенность",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Список идентификаторов доверенностей УЛ",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotRevokedTrusteeAppointmentAttorneyModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/trustee-appointment-attorney/mdm/{mdm}": {
      "get": {
        "tags": [
          "Доверенности УЛ"
        ],
        "summary": "Вернуть полномочия по Mdm клиента доверителя",
        "description": "Вернуть полномочия по Mdm клиента доверителя",
        "operationId": "trusteeappointmentattorney-gettrusteeappointmentattorneysbymdm",
        "parameters": [
          {
            "name": "mdm",
            "in": "path",
            "description": "Mdm клиента",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Документы канцелярии клиента",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ClientAuthorityModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/document-flow/{clientId}": {
      "get": {
        "tags": [
          "Канцелярия"
        ],
        "summary": "Вернуть документы канцелярии по идентификатору клиента",
        "description": "Вернуть документы канцелярии по идентификатору клиента",
        "operationId": "documentflow-getdocumentflowsbyclientid",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "Идентификатор клиента",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Документы канцелярии клиента",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentFlowReadModel"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/authority-adapter/person-authorities/{mdmId}": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Получить Полномочия ФЛ по `MDM ID`",
        "description": "Получить Полномочия ФЛ по `MDM ID`",
        "operationId": "authority-getpersonauthoritiesbymdmid",
        "parameters": [
          {
            "name": "mdmId",
            "in": "path",
            "description": "MDM ID",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Полномочия ФЛ",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 2147483647,
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RelatedAttorneyLetter"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Нет доступа",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/cs-adapter/person/{mdmId}": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Получить Карточку ФЛ по MDM ID",
        "description": "Получить Карточку ФЛ по MDM ID",
        "operationId": "cs-getpersonbymdmid",
        "parameters": [
          {
            "name": "mdmId",
            "in": "path",
            "description": "MDM ID",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточка ФЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPersonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/cs-adapter/person/match": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Нечеткий поиск Карточек ФЛ",
        "description": "Нечеткий поиск Карточек ФЛ",
        "operationId": "cs-matchpersons",
        "parameters": [
          {
            "name": "surname",
            "in": "query",
            "description": "Фамилия",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Имя",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "middleName",
            "in": "query",
            "description": "Отчество",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "series",
            "in": "query",
            "description": "ДУЛ (Серия)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "number",
            "in": "query",
            "description": "ДУЛ (Номер)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "tin",
            "in": "query",
            "description": "ИНН",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "birthDay",
            "in": "query",
            "description": "Дата рождения (гггг-мм-дд)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Почта",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "phoneNumber",
            "in": "query",
            "description": "Номер телефона",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "searchType",
            "in": "query",
            "description": "Тип поиска (all, cust, phone, fid, all_act, cust_act, phone_act)",
            "schema": {
              "maxLength": 255,
              "type": "string",
              "default": "all"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточки ФЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchPersonsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/cs-adapter/person/qstfl/{mdmId}": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Получить Анкету ФЛ по MDM ID",
        "description": "Получить Анкету ФЛ по MDM ID",
        "operationId": "cs-getqstfl",
        "parameters": [
          {
            "name": "mdmId",
            "in": "path",
            "description": "MDM ID",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Анкета ФЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQSTFLResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Анкета ФЛ с указанным идентификатором не найдена",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/cs-adapter/organization/{mdmCode}": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Получить карточку ЮЛ по `MDM CODE`",
        "description": "Получить карточку ЮЛ по `MDM CODE`",
        "operationId": "cs-getorganizationbymdmcode",
        "parameters": [
          {
            "name": "mdmCode",
            "in": "path",
            "description": "MDM CODE",
            "required": true,
            "schema": {
              "maximum": 79228162514264337593543950335,
              "minimum": 0,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточка ЮЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetOrganizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/cs-adapter/organization/search": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Поиск карточек ЮЛ по ИНН/ОГРН/БИК",
        "description": "Поиск карточек ЮЛ по ИНН/ОГРН/БИК",
        "operationId": "cs-searchorganizations",
        "parameters": [
          {
            "name": "tin",
            "in": "query",
            "description": "ИНН",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "registrationNumber",
            "in": "query",
            "description": "ОГРН",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "bic",
            "in": "query",
            "description": "БИК",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество записей в ответе",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточки ЮЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchOrganizationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/cs-adapter/organization/match": {
      "get": {
        "tags": [
          "Обращение к Общим Сервисам"
        ],
        "summary": "Нечеткий поиск Карточек ЮЛ",
        "description": "Нечеткий поиск Карточек ЮЛ",
        "operationId": "cs-matchorganizations",
        "parameters": [
          {
            "name": "fullNameRu",
            "in": "query",
            "description": "Наименование ЮЛ",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "fullNameEn",
            "in": "query",
            "description": "Наименование ЮЛ (en)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "nameRu",
            "in": "query",
            "description": "Краткое наименование ЮЛ",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "nameEn",
            "in": "query",
            "description": "Краткое наименование ЮЛ (en)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "tin",
            "in": "query",
            "description": "ИНН",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "mdmCode",
            "in": "query",
            "description": "MDM CODE",
            "schema": {
              "maximum": 79228162514264337593543950335,
              "minimum": 0,
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "registrationNumber",
            "in": "query",
            "description": "ОГРН",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "bic",
            "in": "query",
            "description": "БИК",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Максимальное количество записей в ответе",
            "schema": {
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Карточки ЮЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MatchOrganizationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/organization": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение для юридического лица",
        "description": "Создать административное поручение для юридического лица",
        "operationId": "adminorder-createorganizationadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationOrderCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationOrderCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationOrderCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для юридического лица",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/person": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение для физического лица",
        "description": "Создать административное поручение для физического лица",
        "operationId": "adminorder-createpersonadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonOrderCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonOrderCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PersonOrderCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для физического лица",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-account/reserve": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение на открытие счета. Шаг резервирование счета.",
        "description": "Создать административное поручение на открытие счета. Шаг резервирование счета.",
        "operationId": "adminorder-createdepoaccountorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservePassiveAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservePassiveAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ReservePassiveAccountModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение на создание счета. Шаг резервирование счета.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-account/{id}": {
      "put": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Обновить административное поручение на открытие пассивного счета.",
        "description": "Обновить административное поручение на открытие пассивного счета.",
        "operationId": "adminorder-updatedepoaccountorder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id административного поручения",
            "required": true,
            "schema": {
              "maximum": 9007199254740991,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenPassiveAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenPassiveAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenPassiveAccountModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "201": {
            "description": "Обновленное административное поручение на создание счета"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/resume/{id}": {
      "put": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Продолжить исполнение АП",
        "description": "Продолжить исполнение АП",
        "operationId": "adminorder-resumeadminorder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id административного поручения",
            "required": true,
            "schema": {
              "maximum": 9007199254740991,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Статус в который нужно перевести административное поручение",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/AdminOrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Административное поручение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-account/modify": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение на изменение пассивного счета.",
        "description": "Создать административное поручение на изменение пассивного счета.",
        "operationId": "adminorder-modifydepoaccountorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyPassiveAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyPassiveAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyPassiveAccountModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение на изменение пассивного счета.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-account/close": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение на закрытие пассивного счета.",
        "description": "Создать административное поручение на закрытие пассивного счета.",
        "operationId": "adminorder-closepassiveaccountadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveAccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveAccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveAccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение на закрытие пассивного счёта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/client-restrictions/set": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение на установку ограничения на клиента.",
        "description": "Создать административное поручение на установку ограничения на клиента.",
        "operationId": "adminorder-setclientrestrictionsadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetClientRestrictionsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SetClientRestrictionsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SetClientRestrictionsCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение на установку ограничения на клиента",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-account/{number}/restrictions/create": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение на установку ограничения пассивного счёта.",
        "description": "Создать административное поручение на установку ограничения пассивного счёта.",
        "operationId": "adminorder-createpassiveaccountrestrictionadminorder",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Номер пассивного счёта",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassiveAccountRestrictionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassiveAccountRestrictionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassiveAccountRestrictionModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение на установку ограничения пассивного счёта.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-account/{number}/restrictions/close": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение на снятие ограничения пассивного счёта.",
        "description": "Создать административное поручение на снятие ограничения пассивного счёта.",
        "operationId": "adminorder-closepassiveaccountrestrictionadminorder",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Номер пассивного счёта",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveAccountRestrictionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveAccountRestrictionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveAccountRestrictionModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение на снятие ограничения пассивного счёта.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/{id}": {
      "get": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Вернуть административное поручение по идентификатору",
        "description": "Вернуть административное поручение по идентификатору",
        "operationId": "adminorder-getadminorder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Идентификатор административного поручения",
            "required": true,
            "schema": {
              "maximum": 9007199254740991,
              "minimum": 1,
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Поручение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FullAdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order": {
      "get": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Вернуть список административных поручений",
        "description": "Вернуть список административных поручений",
        "operationId": "adminorder-getadminorders",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "description": "Номер страницы",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Limit",
            "in": "query",
            "description": "Количество записей на странице",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "OrderBy",
            "in": "query",
            "description": "Выражение для сортировки (field1=value1;field2=value2;)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          },
          {
            "name": "FilterBy",
            "in": "query",
            "description": "Выражение для фильтрации (field1=value1;field2=value2;)",
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Данные для страницы административных поручений",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModelPagedResult"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Административное поручение с указанным идентификатором не найдено",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/payment-accounts": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать административное поручение для банковских реквизитов",
        "description": "Создать административное поручение для банковских реквизитов",
        "operationId": "adminorder-createpaymentaccountsadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentAccountsCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentAccountsCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePaymentAccountsCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для банковских реквизитов",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/person/build/{mdmId}": {
      "get": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Возвращает данные для физического лица по Карточке ФЛ (без сохранения в базу данных)",
        "description": "Возвращает данные для физического лица по Карточке ФЛ (без сохранения в базу данных)",
        "operationId": "adminorder-buildpersonadminorder",
        "parameters": [
          {
            "name": "mdmId",
            "in": "path",
            "description": "MDM ID Карточки ФЛ",
            "required": true,
            "schema": {
              "maxLength": 255,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Поручение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonCreateModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Карточка ФЛ не найдена в ОС Карточка ФЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/organization/build/{mdmCode}": {
      "get": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Возвращает данные для юридического лица по Карточке ЮЛ (без сохранения в базу данных)",
        "description": "Возвращает данные для юридического лица по Карточке ЮЛ (без сохранения в базу данных)",
        "operationId": "adminorder-buildorganizationadminorder",
        "parameters": [
          {
            "name": "mdmCode",
            "in": "path",
            "description": "MDM CODE Карточки ЮЛ",
            "required": true,
            "schema": {
              "maximum": 79228162514264337593543950335,
              "minimum": -79228162514264337593543950335,
              "type": "number",
              "format": "double"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Поручение",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationCreateModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "404": {
            "description": "Карточка ЮЛ не найдена в ОС Карточка ЮЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-subaccount/create": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на открытие пассивного раздела",
        "description": "Создать АП на открытие пассивного раздела",
        "operationId": "adminorder-createpassivesubaccountadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassiveSubaccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassiveSubaccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePassiveSubaccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для открытия пассивного раздела",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/passive-subaccount/close": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на закрытие пассивного раздела",
        "description": "Создать АП на закрытие пассивного раздела",
        "operationId": "adminorder-closepassivesubaccountadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveSubaccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveSubaccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ClosePassiveSubaccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для закрытия пассивного раздела",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/active-account/create": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на открытие активного счёта",
        "description": "Создать АП на открытие активного счёта",
        "operationId": "adminorder-createactiveaccountadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateActiveAccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateActiveAccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateActiveAccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для открытия активного счёта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/active-account/modify": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на изменение активного счёта",
        "description": "Создать АП на изменение активного счёта",
        "operationId": "adminorder-modifyactiveaccountadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyActiveAccountModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyActiveAccountModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyActiveAccountModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для изменения активного счёта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/active-account/close": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на закрытие активного счёта",
        "description": "Создать АП на закрытие активного счёта",
        "operationId": "adminorder-closeactiveaccountadminorder",
        "requestBody": {
          "description": "Данные административного поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseActiveAccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseActiveAccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseActiveAccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для открытия активного счёта",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/active-subaccount/create": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на открытие активного раздела",
        "description": "Создать АП на открытие активного раздела",
        "operationId": "adminorder-createactivesubaccountadminorder",
        "requestBody": {
          "description": "Данные админ поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenActiveSubaccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenActiveSubaccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/OpenActiveSubaccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для открытия активного раздела",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/active-subaccount/modify": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на изменение активного раздела",
        "description": "Создать АП на изменение активного раздела",
        "operationId": "adminorder-modifyactivesubaccountadminorder",
        "requestBody": {
          "description": "Данные админ поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyActiveSubaccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyActiveSubaccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ModifyActiveSubaccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для изменения активного раздела",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/active-subaccount/close": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на закрытие активного раздела",
        "description": "Создать АП на закрытие активного раздела",
        "operationId": "adminorder-closeactivesubaccountadminorder",
        "requestBody": {
          "description": "Данные админ поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseActiveSubaccountCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseActiveSubaccountCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseActiveSubaccountCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для закрытия активного раздела",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/trustee-appointment-attorney/create": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на создание доверенности на назначениe уполномоченных лиц (УЛ)",
        "description": "Создать АП на создание доверенности на назначениe уполномоченных лиц (УЛ)",
        "operationId": "adminorder-createtrusteeappointmentattorneyadminorder",
        "requestBody": {
          "description": "Данные админ поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrusteeAppointmentAttorneyCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrusteeAppointmentAttorneyCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrusteeAppointmentAttorneyCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для назначения УЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    },
    "/admin-order/trustee-appointment-attorney/close": {
      "post": {
        "tags": [
          "Управление административными поручениями"
        ],
        "summary": "Создать АП на отмену доверенности на назначение уполномоченных лиц (УЛ)",
        "description": "Создать АП на отмену доверенности на назначение уполномоченных лиц (УЛ)",
        "operationId": "adminorder-closetrusteeappointmentattorneyadminorder",
        "requestBody": {
          "description": "Данные админ поручения",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTrusteeAppointmentAttorneyCreateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTrusteeAppointmentAttorneyCreateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CloseTrusteeAppointmentAttorneyCreateModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Созданное административное поручение для отмены назначения УЛ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdminOrderReadModel"
                }
              }
            }
          },
          "400": {
            "description": "Некорректный запрос",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "500": {
            "description": "Необработанная ошибка",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDTO"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "oauth2": [
              "openid"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AccountClassSimpleDto": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 255,
            "type": "string",
            "description": "Уникальный мнемонический код.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Название, короткое текстовое описание назначения вида счета.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Вид счета."
      },
      "AccountCommunication": {
        "required": [
          "priorityLevel",
          "transferChannel"
        ],
        "type": "object",
        "properties": {
          "transferChannel": {
            "$ref": "#/components/schemas/AccountDataTransferChannelType"
          },
          "details": {
            "maxLength": 100,
            "type": "string",
            "description": "Номер или адрес способа передачи данных",
            "nullable": true
          },
          "supportingDocumentNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Номер доп. соглашения для способа передачи данных (при наличии)",
            "nullable": true
          },
          "supportingDocumentTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата доп. соглашения для способа передачи данных (при наличии)",
            "format": "date-time",
            "nullable": true
          },
          "priorityLevel": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Уровень приоритета",
            "format": "int32"
          },
          "note": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий к способу обмена информацией",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Способы коммуникации по счету депо"
      },
      "AccountDataTransferChannelType": {
        "maxLength": 255,
        "enum": [
          "Email",
          "BankTerritorialBranch",
          "OnlineServiceSystems",
          "FinancialMessagesTransferSystem",
          "DirectInterbankInteractionChannel",
          "RemoteBankingSystem",
          "Mail",
          "Personally",
          "Telefax",
          "AuthorizedRepresentative",
          "SWIFT",
          "SecuredElectronicDocumentManagementSystem",
          "Other"
        ],
        "type": "string"
      },
      "AccountHierarchyType": {
        "maxLength": 255,
        "enum": [
          "WithoutSubaccounts",
          "WithSubaccounts"
        ],
        "type": "string"
      },
      "AccountState": {
        "maxLength": 255,
        "enum": [
          "Closed",
          "Opened"
        ],
        "type": "string"
      },
      "AccountingEntityType": {
        "maxLength": 255,
        "enum": [
          "Securities",
          "UnqualifiedForeignFinancialInstruments"
        ],
        "type": "string"
      },
      "ActionCode": {
        "maxLength": 255,
        "enum": [
          "Create",
          "Change",
          "Close"
        ],
        "type": "string",
        "description": "Действие"
      },
      "ActiveAccount": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Номер активного счёта"
          },
          "safekeepingAccount": {
            "$ref": "#/components/schemas/SafekeepingAccountSimpleDto"
          }
        },
        "additionalProperties": false,
        "description": "Параметры активного счёта"
      },
      "ActiveAccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор счета.",
            "format": "int64"
          },
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета.",
            "nullable": true
          },
          "openingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время открытия счета в формате UTC.",
            "format": "date-time"
          },
          "closingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время закрытия счета в формате UTC.",
            "format": "date-time",
            "nullable": true
          },
          "state": {
            "$ref": "#/components/schemas/AccountState"
          },
          "accountingEntityType": {
            "$ref": "#/components/schemas/AccountingEntityType"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование, короткое текстовое описание счета.",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "type": "string",
            "description": "Описание, короткое текстовое описание назначения вида счета.",
            "nullable": true
          },
          "accountClass": {
            "$ref": "#/components/schemas/AccountClassSimpleDto"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientTypeSimpleDto"
          },
          "safekeepingAccount": {
            "$ref": "#/components/schemas/SafekeepingAccountSimpleDto"
          },
          "legacyAccount": {
            "$ref": "#/components/schemas/LegacyAccountDto"
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия счета.",
            "example": "2024-04-10"
          }
        },
        "additionalProperties": false,
        "description": "Активный счет."
      },
      "ActiveAccountWriteModel": {
        "required": [
          "accountClassCode",
          "accountingEntityType",
          "activeAccountName",
          "safekeepingAccount"
        ],
        "type": "object",
        "properties": {
          "accountingEntityType": {
            "$ref": "#/components/schemas/AccountingEntityType"
          },
          "accountClassCode": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Код вида счета"
          },
          "activeAccountName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Наименование активного счета"
          },
          "commentary": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий к счёту",
            "nullable": true
          },
          "clientTypeCode": {
            "maxLength": 10,
            "type": "string",
            "description": "Код типа клиента",
            "nullable": true
          },
          "safekeepingAccount": {
            "$ref": "#/components/schemas/CreateSafekeepingAccountCommandDto"
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия счета.",
            "nullable": true,
            "example": "2024-04-10"
          },
          "legacyAccount": {
            "$ref": "#/components/schemas/LegacyAccountDto"
          }
        },
        "additionalProperties": false,
        "description": "Модель создания активного аккаунта"
      },
      "ActiveSubaccount": {
        "required": [
          "accountNumber",
          "subaccountCode"
        ],
        "type": "object",
        "properties": {
          "accountNumber": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер активного счета"
          },
          "subaccountCode": {
            "maxLength": 9,
            "minLength": 1,
            "type": "string",
            "description": "Идентификатор раздела активного счета"
          }
        },
        "additionalProperties": false,
        "description": "Раздела активного счета."
      },
      "ActiveSubaccountModifyModel": {
        "required": [
          "activeAccount",
          "activeSubaccountSubtype",
          "passiveSubaccountSubtypes"
        ],
        "type": "object",
        "properties": {
          "activeAccount": {
            "$ref": "#/components/schemas/ActiveAccount"
          },
          "activeSubaccountSubtype": {
            "$ref": "#/components/schemas/ModifyActiveSubaccountSubtype"
          },
          "passiveSubaccountSubtypes": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ModifyPassiveSubaccountSubtype"
            },
            "description": "Связанные подтипы раздела пассивного счета."
          }
        },
        "additionalProperties": false,
        "description": "Модель для изменения активного раздела"
      },
      "ActiveSubaccountSubtype": {
        "type": "object",
        "properties": {
          "subaccountType": {
            "$ref": "#/components/schemas/SubaccountType"
          },
          "subaccountAffiliation": {
            "$ref": "#/components/schemas/SubaccountAffiliation"
          },
          "safekeepingSubaccount": {
            "$ref": "#/components/schemas/SafekeepingSubaccount"
          },
          "safekeepingAccount": {
            "$ref": "#/components/schemas/SafekeepingAccount"
          }
        },
        "additionalProperties": false,
        "description": "Подтип раздела активного счёта"
      },
      "ActiveSubaccountWriteModel": {
        "type": "object",
        "properties": {
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия раздела.",
            "example": "2024-04-10"
          },
          "activeAccount": {
            "$ref": "#/components/schemas/ActiveAccount"
          },
          "activeSubaccountSubtype": {
            "$ref": "#/components/schemas/ActiveSubaccountSubtype"
          },
          "passiveSubaccountSubtypes": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PassiveSubaccountSubtype"
            },
            "description": "Связанные подтипы раздела пассивного счета.",
            "nullable": true
          },
          "accountClassCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код вида счета",
            "nullable": true
          },
          "activeAccountName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование активного счета",
            "nullable": true
          },
          "clientTypeCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код типа клиента",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Раздел активного счета."
      },
      "ActivityStructure2": {
        "type": "object",
        "properties": {
          "mdmActivityTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "portion": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "portionStr": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "workExperience": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "workExperienceStr": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "activityDTE": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "activityDTM": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AdminOperationAuditLogDto": {
        "type": "object",
        "properties": {
          "actorUserId": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификатор пользователя-инициатора действия.",
            "nullable": true
          },
          "isRestrictionsBypassEnabled": {
            "type": "boolean",
            "description": "Обход ограничений."
          },
          "status": {
            "$ref": "#/components/schemas/AdminOperationStatus"
          },
          "timestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время действия над операцией.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Аудит административной операции."
      },
      "AdminOperationDto": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор операции.",
            "format": "int64"
          },
          "operationType": {
            "$ref": "#/components/schemas/AdminOperationType"
          },
          "status": {
            "$ref": "#/components/schemas/AdminOperationStatus"
          },
          "processMode": {
            "$ref": "#/components/schemas/ProcessMode"
          },
          "auditLogs": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminOperationAuditLogDto"
            },
            "description": "Записи аудита административной операции.",
            "nullable": true
          },
          "restrictions": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EntityRestrictionDto"
            },
            "description": "Ограничения, с которыми была выполнена операция.",
            "nullable": true
          },
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderDto"
          },
          "registryEntry": {
            "$ref": "#/components/schemas/RegistryEntryDto"
          }
        },
        "additionalProperties": false,
        "description": "Административная операция."
      },
      "AdminOperationStatus": {
        "maxLength": 255,
        "enum": [
          "Created",
          "Cancelled",
          "Executed"
        ],
        "type": "string"
      },
      "AdminOperationType": {
        "maxLength": 255,
        "enum": [
          "ActiveAccount",
          "ActiveAccountOpening",
          "ActiveAccountClosing",
          "ActiveAccountModifying",
          "PassiveAccount",
          "PassiveAccountOpening",
          "PassiveAccountClosing",
          "PassiveAccountModifying",
          "PassiveAccountReserving",
          "PassiveAccountRestrictionsSetting",
          "PassiveAccountPaymentAccountsSetting",
          "ActiveSubaccount",
          "ActiveSubaccountOpening",
          "ActiveSubaccountClosing",
          "ActiveSubaccountModifying",
          "PassiveSubaccount",
          "PassiveSubaccountOpening",
          "PassiveSubaccountClosing",
          "ActivePersonalAccount",
          "ActivePersonalAccountOpening",
          "ActivePersonalAccountClosing",
          "PassivePersonalAccount",
          "PassivePersonalAccountOpening",
          "PassivePersonalAccountClosing"
        ],
        "type": "string"
      },
      "AdminOrderCreateModel": {
        "required": [
          "actionCode",
          "adminOrderStatus",
          "clientOrderReceivedBankAt",
          "dateClientOrder",
          "initiator",
          "numberClientOrder",
          "orderType",
          "orderTypeTechnical"
        ],
        "type": "object",
        "properties": {
          "numberClientOrder": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер АП"
          },
          "clientOrderReceivedBankAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время получения Банком поручения Клиента",
            "format": "date-time"
          },
          "clientOrderReceivedDepositaryAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время получения Депозитарием (ИС ЦДС) поручения от Клиента",
            "format": "date-time",
            "nullable": true
          },
          "dateClientOrder": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата поручения Клиента",
            "example": "2024-04-10"
          },
          "actionCode": {
            "$ref": "#/components/schemas/ActionCode"
          },
          "idDepoUchet": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Номер связанной операции в Депо.учёте",
            "format": "int64",
            "nullable": true
          },
          "adminOrderStatus": {
            "$ref": "#/components/schemas/AdminOrderStatus"
          },
          "orderBelonging": {
            "$ref": "#/components/schemas/OrderBelonging"
          },
          "source": {
            "maxLength": 30,
            "type": "string",
            "description": "Источник",
            "nullable": true
          },
          "depoAgreementType": {
            "$ref": "#/components/schemas/DepoAgreementType"
          },
          "depoAgreementNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Номер депозитарного договора",
            "nullable": true
          },
          "brokerAgreementType": {
            "$ref": "#/components/schemas/BrokerAgreementType"
          },
          "brokerAgreementNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Номер брокерского соглашения",
            "nullable": true
          },
          "brokerAgreementOpeningDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата брокерского соглашения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "brokerAgreementClosingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия брокерского соглашения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "depoAgreementOpeningDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата депозитарного договора",
            "nullable": true,
            "example": "2024-04-10"
          },
          "depoAgreementClosingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия депозитарного договора",
            "nullable": true,
            "example": "2024-04-10"
          },
          "requestId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Номер запроса (номер родительского АП)",
            "format": "int64",
            "nullable": true
          },
          "externalSourceSystem": {
            "maxLength": 32,
            "type": "string",
            "description": "Система источник",
            "nullable": true
          },
          "initiator": {
            "maxLength": 24,
            "minLength": 1,
            "type": "string",
            "description": "Инициатор"
          },
          "signingKind": {
            "$ref": "#/components/schemas/SigningKind"
          },
          "orderType": {
            "$ref": "#/components/schemas/OrderType"
          },
          "orderTypeTechnical": {
            "$ref": "#/components/schemas/OrderTypeTechnical"
          },
          "baseDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseDocument"
            },
            "description": "Документы - основания на создания административных поручений",
            "nullable": true
          },
          "adminOrderRelation": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maximum": 9007199254740991,
              "minimum": -9007199254740991,
              "type": "integer",
              "format": "int64"
            },
            "description": "Связанные поручения",
            "nullable": true
          },
          "adsdDocumentFlows": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentFlow"
            },
            "description": "Канцелярия",
            "nullable": true
          },
          "additionalComment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий к АП",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Административное поручение"
      },
      "AdminOrderDto": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор административного поручения.",
            "format": "int64"
          },
          "timestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время административного поручения в формате UTC.",
            "format": "date-time"
          },
          "initiatorType": {
            "$ref": "#/components/schemas/InitiatorType"
          }
        },
        "additionalProperties": false,
        "description": "Административное поручение.\r\nОснование административной операции."
      },
      "AdminOrderReadModel": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "createdAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время создания АП",
            "format": "date-time"
          },
          "updatedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время любого последнего обновления АП",
            "format": "date-time"
          },
          "clientOrderReceivedBankAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время получения Банком поручения Клиента",
            "format": "date-time"
          },
          "clientOrderReceivedDepositaryAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время получения Депозитарием (ИС ЦДС) поручения от Клиента",
            "format": "date-time",
            "nullable": true
          },
          "executedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата исполнения поручения",
            "format": "date-time",
            "nullable": true
          },
          "dateClientOrder": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата поручения Клиента",
            "example": "2024-04-10"
          },
          "numberClientOrder": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер поручения Клиента",
            "nullable": true
          },
          "orderType": {
            "$ref": "#/components/schemas/OrderType"
          },
          "source": {
            "maxLength": 255,
            "type": "string",
            "description": "Первичный источни",
            "nullable": true
          },
          "orderBelonging": {
            "$ref": "#/components/schemas/OrderBelonging"
          },
          "actionCode": {
            "$ref": "#/components/schemas/ActionCode"
          },
          "mdmId": {
            "maxLength": 255,
            "type": "string",
            "description": "МДМ код клиента",
            "nullable": true
          },
          "depoClientCode": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id клиента в ЦДС",
            "format": "int64",
            "nullable": true
          },
          "idDepoUchet": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Номер связанной операции в Депо.учёте",
            "format": "int64",
            "nullable": true
          },
          "adminOrderStatus": {
            "$ref": "#/components/schemas/AdminOrderStatus"
          },
          "technicalStatus": {
            "maxLength": 255,
            "type": "string",
            "description": "Технический статус",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "description": "Полное название/имя",
            "nullable": true
          },
          "inn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "description": "ТИН",
            "nullable": true
          },
          "ogrn": {
            "maxLength": 255,
            "type": "string",
            "description": "ОГРН",
            "nullable": true
          },
          "bic": {
            "maxLength": 255,
            "type": "string",
            "description": "БИК",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета",
            "nullable": true
          },
          "accountSectionNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер раздела счета",
            "nullable": true,
            "deprecated": true
          },
          "brokerAgreementType": {
            "$ref": "#/components/schemas/BrokerAgreementType"
          },
          "brokerAgreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер брокерского соглашения",
            "nullable": true
          },
          "brokerAgreementOpeningDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата брокерского соглашения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "brokerAgreementClosingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия брокерского соглашения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "requestId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Номер запроса (номер родительского АП)",
            "format": "int64",
            "nullable": true,
            "deprecated": true
          },
          "externalSourceSystem": {
            "maxLength": 255,
            "type": "string",
            "description": "Система источник",
            "nullable": true
          },
          "initiator": {
            "maxLength": 255,
            "type": "string",
            "description": "Инициатор",
            "nullable": true
          },
          "signingKind": {
            "$ref": "#/components/schemas/SigningKind"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "depoAgreementType": {
            "$ref": "#/components/schemas/DepoAgreementType"
          },
          "depoAgreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер депозитарного договора",
            "nullable": true
          },
          "depoAgreementOpeningDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата депозитарного договора",
            "nullable": true,
            "example": "2024-04-10"
          },
          "depoAgreementClosingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия депозитарного договора",
            "nullable": true,
            "example": "2024-04-10"
          },
          "correlationId": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификатор сообщения в асинхронном процессе (транспорт Кафка)",
            "nullable": true
          },
          "orderTypeTechnical": {
            "$ref": "#/components/schemas/OrderTypeTechnical"
          },
          "baseDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseDocument"
            },
            "description": "Документы-основания",
            "nullable": true
          },
          "adminOrderRelation": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maximum": 9007199254740991,
              "minimum": -9007199254740991,
              "type": "integer",
              "format": "int64"
            },
            "description": "Связанные поручения",
            "nullable": true
          },
          "adsdDocumentFlows": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentFlow"
            },
            "description": "Канцелярия",
            "nullable": true
          },
          "additionalComment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий к АП",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Административное поручение"
      },
      "AdminOrderReadModelPagedResult": {
        "type": "object",
        "properties": {
          "queryable": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminOrderReadModel"
            },
            "nullable": true
          },
          "currentPage": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "pageCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "rowCount": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AdminOrderState": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id состояния",
            "format": "int64"
          },
          "status": {
            "$ref": "#/components/schemas/AdminOrderStatus"
          },
          "technicalStatus": {
            "maxLength": 255,
            "type": "string",
            "description": "Технический статус",
            "nullable": true
          },
          "transitionDateTime": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время перехода АП на статус (UTC)",
            "format": "date-time"
          },
          "forceTransition": {
            "type": "boolean",
            "description": "Признак того, что АП было переведено в текущие состояние в ручном режиме"
          },
          "userLogin": {
            "maxLength": 255,
            "type": "string",
            "description": "Учётная запись пользователя",
            "nullable": true
          },
          "userIp": {
            "maxLength": 255,
            "type": "string",
            "description": "IP пользователя",
            "nullable": true
          },
          "comment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий (может отсутствовать)",
            "nullable": true
          },
          "error": {
            "maxLength": 255,
            "type": "string",
            "description": "Текс ошибки (может отсутствовать)",
            "nullable": true
          },
          "data": {
            "description": "Данные текущего состояния АП",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Состояние административного поручения"
      },
      "AdminOrderStatus": {
        "maxLength": 255,
        "enum": [
          "Created",
          "TakeOnDepositary",
          "OnExecution",
          "Fulfilled",
          "Canceled",
          "Denied",
          "Deleted"
        ],
        "type": "string",
        "description": "Статус административного поручения"
      },
      "BankAffiliation": {
        "maxLength": 255,
        "enum": [
          "Head",
          "Branch"
        ],
        "type": "string"
      },
      "BankDetailsDto": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор реквизитов банка.",
            "format": "int64"
          },
          "rcbic": {
            "maxLength": 255,
            "type": "string",
            "description": "БИК - банковский идентификационный код.\r\nRCBIC - Russian Central Bank Identifier Code.\r\nЧисловой код отделения банка на территории РФ.",
            "nullable": true
          },
          "swift": {
            "maxLength": 255,
            "type": "string",
            "description": "SWIFT-код банка.\r\nКод банка в международном формате в системе SWIFT.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование банка.",
            "nullable": true
          },
          "correspondentAccount": {
            "maxLength": 255,
            "type": "string",
            "description": "Корреспондентский счет банка.",
            "nullable": true
          },
          "inn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН банка.",
            "nullable": true
          },
          "kpp": {
            "maxLength": 255,
            "type": "string",
            "description": "КПП - код причины постановки.",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "type": "string",
            "description": "Город банка.",
            "nullable": true
          },
          "country": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна банка.",
            "nullable": true
          },
          "relation": {
            "$ref": "#/components/schemas/BankRelation"
          },
          "affiliation": {
            "$ref": "#/components/schemas/BankAffiliation"
          },
          "financialMessagesTransferSystemCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код СПФС.",
            "nullable": true
          },
          "directInterbankInteractionChannelCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код КПМВ.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Реквизиты банка."
      },
      "BankIdentity": {
        "type": "object",
        "properties": {
          "bik": {
            "maxLength": 255,
            "type": "string",
            "description": "БИК банка",
            "nullable": true
          },
          "swift": {
            "maxLength": 255,
            "type": "string",
            "description": "SWIFT банка",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Реквизиты банка"
      },
      "BankRelation": {
        "maxLength": 255,
        "enum": [
          "Internal",
          "External"
        ],
        "type": "string"
      },
      "BaseDocument": {
        "type": "object",
        "properties": {
          "type": {
            "maxLength": 255,
            "type": "string",
            "description": "Тип документа",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование",
            "nullable": true
          },
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер документа",
            "nullable": true
          },
          "signingDate": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата подписания документа",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Документ-основания"
      },
      "BeneficiaryCrossRef": {
        "type": "object",
        "properties": {
          "partyUId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "systemNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeneficiaryCrossRefUL": {
        "type": "object",
        "properties": {
          "partyUIdUL": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "systemNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BeneficiaryModelResponse": {
        "type": "object",
        "properties": {
          "actingFlag": {
            "type": "boolean",
            "nullable": true
          },
          "beneficiaryType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "companyName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "familyName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "beneficiaryBirthOrRegistrationDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "beneficiaryActivityType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "changeDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "foreignCountryTaxResidencyType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "exclusionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "beneficiaryCrossRefUL": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeneficiaryCrossRefUL"
            },
            "nullable": true
          },
          "beneficiaryCrossRef": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeneficiaryCrossRef"
            },
            "nullable": true
          },
          "taxResidencyCountry": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxResidencyCountryModel"
            },
            "nullable": true
          },
          "controllingPerson": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ControllingPersonModelResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BlackList": {
        "type": "object",
        "properties": {
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "type": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "value": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BrokerAgreementType": {
        "maxLength": 255,
        "enum": [
          "BrokerAgreementGeneral",
          "BrokerAgreementIis"
        ],
        "type": "string",
        "description": "Тип брокерского соглашения"
      },
      "CRSCountry": {
        "type": "object",
        "properties": {
          "address": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientAddOkvedCode2": {
        "type": "object",
        "properties": {
          "additionalOkved": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientAuthorityModel": {
        "type": "object",
        "properties": {
          "attorneyNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер доверенности",
            "nullable": true
          },
          "trusteeFullName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование УЛ",
            "nullable": true
          },
          "attorneyStartDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата начала действия",
            "nullable": true,
            "example": "2024-04-10"
          },
          "attorneyEndDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата отмены, иначе дата окончания действия",
            "nullable": true,
            "example": "2024-04-10"
          },
          "numberClientOrder": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер АП",
            "nullable": true
          },
          "adminOrderId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор АП",
            "format": "int64",
            "nullable": true
          },
          "documentFlows": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentFlowReadModel"
            },
            "description": "Документы Канцелярии полномочия",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Полномочие выданное Клиентом"
      },
      "ClientId2": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "mdmCode": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "externalId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "absCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientInformationResponse": {
        "type": "object",
        "properties": {
          "eventNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "eventDescription": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "eventDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ClientRestriction": {
        "type": "object",
        "properties": {
          "restrictionId": {
            "maxLength": 255,
            "type": "string",
            "description": "Код ограничения",
            "nullable": true
          },
          "startDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата начала действия ограничения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "endDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата окончания действия ограничения",
            "nullable": true,
            "example": "2024-04-10"
          }
        },
        "additionalProperties": false,
        "description": "Ограничение на клиента"
      },
      "ClientRestrictionAction": {
        "maxLength": 255,
        "enum": [
          "ApplyRestriction",
          "LiftRestriction"
        ],
        "type": "string",
        "description": "Действие с ограничением на клиента"
      },
      "ClientType": {
        "maxLength": 255,
        "enum": [
          "Broker",
          "Depository",
          "BrokerAndDepository",
          "Proprietary"
        ],
        "type": "string",
        "description": "Тип клиента"
      },
      "ClientTypeSimpleDto": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 255,
            "type": "string",
            "description": "Уникальный мнемонический код.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Название, короткое текстовое описание.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Тип клиента."
      },
      "CloseActiveAccountCreateModel": {
        "type": "object",
        "properties": {
          "activeAccount": {
            "$ref": "#/components/schemas/ActiveAccount"
          },
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель на закрытие активного счёта"
      },
      "CloseActiveSubaccountCreateModel": {
        "required": [
          "adminOrder",
          "subaccountCode"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "subaccountCode": {
            "$ref": "#/components/schemas/ActiveSubaccount"
          }
        },
        "additionalProperties": false,
        "description": "Модель закрытия активного раздела"
      },
      "ClosePassiveAccountCreateModel": {
        "type": "object",
        "properties": {
          "passiveAccount": {
            "$ref": "#/components/schemas/PassiveAccount"
          },
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель на закрытие пассивного счёта"
      },
      "ClosePassiveAccountRestrictionModel": {
        "required": [
          "adminOrder"
        ],
        "type": "object",
        "properties": {
          "restriction": {
            "$ref": "#/components/schemas/SetRestrictionAction"
          },
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель снятия ограничения на пассивный счет"
      },
      "ClosePassiveSubaccountCreateModel": {
        "required": [
          "adminOrder",
          "passiveSubaccount"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "passiveSubaccount": {
            "$ref": "#/components/schemas/PassiveSubaccountCreateModel"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          }
        },
        "additionalProperties": false,
        "description": "Закрытие пассивного раздела"
      },
      "CloseTrusteeAppointmentAttorneyCreateModel": {
        "required": [
          "adminOrder",
          "trusteeAppointmentAttorney"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "trusteeAppointmentAttorney": {
            "$ref": "#/components/schemas/TrusteeAppointmentAttorneyWriteModel"
          },
          "skhDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "description": "Ссылки на СКХ документы для регистрации в канцелярии",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "АП на отмену доверенности на назначение УЛ"
      },
      "ComplexQuestionModel": {
        "type": "object",
        "properties": {
          "position": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PodftRequest_plainQuestion"
            },
            "nullable": true
          },
          "property": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PodftRequest_plainQuestion"
            },
            "nullable": true
          },
          "relative": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PodftRequest_plainQuestion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactAlternatePhoneModel3": {
        "type": "object",
        "properties": {
          "areaName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "completeNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notFormFullPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "qualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "providerName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verificated": {
            "type": "boolean",
            "nullable": true
          },
          "verificationDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "operatorAddress": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "cityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "number": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "numberProfile": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactCommunicationAddressModel1": {
        "type": "object",
        "properties": {
          "emailType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "uRI": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "verifiedFlag": {
            "type": "boolean",
            "nullable": true
          },
          "verifiedDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "emailAllChanges": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "domainType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactEducationModel0": {
        "type": "object",
        "properties": {
          "educationDegree": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "educationType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "institutionName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "speciality": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "scientificDegree": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactIdentity": {
        "type": "object",
        "properties": {
          "comment": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "confirmed": {
            "type": "boolean",
            "nullable": true
          },
          "countryIssue": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "issueCountryCodeSymbol": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "divisionCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "issueDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "issued": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "number": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "series": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "typeValue": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invalidStatus": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "documentQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "primary": {
            "type": "boolean",
            "nullable": true
          },
          "divisionCodeQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactInsPersonalAddressModel2": {
        "type": "object",
        "properties": {
          "apartmentNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "building": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "cityType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDateofRegistration": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "fullAddress": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "house": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "housing": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kLADR": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "location": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notFormAddrName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "oKATO": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "province": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "provinceType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "regionType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDateofRegistration": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "state": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "streetType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "temporaryRegistrationStartDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "temporaryRegistrationEndDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kladrPostalCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "district": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "militaryNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalBox": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vladenie": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hostel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "floor": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "entrance": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "section": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flat2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "office": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "office2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "room": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "room2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kladrActualityDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "oksmCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "oktmoCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fiasCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fiasLevel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "qCPostalCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "complCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "validationExtension": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactParentRelationshipModel": {
        "type": "object",
        "properties": {
          "partyUId": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedPartyType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedPartyUId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedAttrib": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedAttrib2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "portion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "role": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "cIFContactRefRelated": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedReference"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactPerson2": {
        "type": "object",
        "properties": {
          "jobTitle": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "phone": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "emailQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactPubContactIdentityModel0": {
        "type": "object",
        "properties": {
          "confirmed": {
            "type": "boolean",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endOfRightToStay": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "expirationDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "issueCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "issueCountryCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "issueCountryCodeSymbol": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "issueDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "issueName": {
            "maxLength": 500,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "number": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "series": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startOfRightToStay": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "typeCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "invalidStatus": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "documentQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "primary": {
            "type": "boolean",
            "nullable": true
          },
          "divisionCodeQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactRelationshipModel0": {
        "type": "object",
        "properties": {
          "cIFContactRefRelated": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedReference"
            },
            "nullable": true
          },
          "cIFAccountRefRelated": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedReference"
            },
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "partyUId": {
            "maxLength": 15,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "portion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedAttrib": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedAttrib2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedPartyType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relatedPartyUId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "role": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactRelativesModel2": {
        "type": "object",
        "properties": {
          "birthDateTime": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "dependentFlag": {
            "type": "boolean",
            "nullable": true
          },
          "fIO": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "relationDegree": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactSegmentBlackListModel0": {
        "type": "object",
        "properties": {
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blackListName": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blackListValue": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ContactSegmentModel2": {
        "type": "object",
        "properties": {
          "criterion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "value": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ControllingPersonModelResponse": {
        "type": "object",
        "properties": {
          "actingFlag": {
            "type": "boolean",
            "nullable": true
          },
          "familyName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "foreignCountryTaxResidencyType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "employeeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "changeDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "exclusionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "countryName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "controllingPersonCrossRefUL": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeneficiaryCrossRefUL"
            },
            "nullable": true
          },
          "controllingPersonCrossRef": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeneficiaryCrossRef"
            },
            "nullable": true
          },
          "taxResidencyCountry": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxResidencyCountryModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CorrespondentPaymentDetailsDto": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование.",
            "nullable": true
          },
          "inn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН - идентификационный номер налогоплательщика.",
            "nullable": true
          },
          "kpp": {
            "maxLength": 255,
            "type": "string",
            "description": "КПП - код причины постановки.",
            "nullable": true
          },
          "address": {
            "maxLength": 255,
            "type": "string",
            "description": "Адрес места регистрации.",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "type": "string",
            "description": "Город места регистрации.",
            "nullable": true
          },
          "country": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна места регистрации.",
            "nullable": true
          },
          "additionalRequisites": {
            "maxLength": 255,
            "type": "string",
            "description": "Дополнительные реквизиты.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Платежные реквизиты корреспондента.\r\nПолучатель или отправитель."
      },
      "CreateActiveAccountCreateModel": {
        "required": [
          "activeAccount",
          "adminOrder"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "activeAccount": {
            "$ref": "#/components/schemas/ActiveAccountWriteModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель создания активного счета"
      },
      "CreatePassiveAccountRestrictionModel": {
        "required": [
          "adminOrder"
        ],
        "type": "object",
        "properties": {
          "restriction": {
            "$ref": "#/components/schemas/SetRestrictionAction"
          },
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель установки ограничения на пассивный счет"
      },
      "CreatePassiveSubaccountCreateModel": {
        "required": [
          "adminOrder",
          "passiveSubaccount"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "passiveSubaccount": {
            "$ref": "#/components/schemas/PassiveSubaccountCreateModel"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          }
        },
        "additionalProperties": false,
        "description": "Создание пассивного раздела"
      },
      "CreatePaymentAccountsCreateModel": {
        "required": [
          "adminOrder",
          "paymentAccounts"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "paymentAccounts": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAccountsCreateModel"
            },
            "description": "Банковские реквизиты"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          }
        },
        "additionalProperties": false,
        "description": "Админисистративное поручение на создание платежных реквизитов"
      },
      "CreateSafekeepingAccountCommandDto": {
        "type": "object",
        "properties": {
          "safekeepingPlaceReferenceId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор места хранения.",
            "format": "int32"
          },
          "id": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор счета в месте хранения.",
            "format": "int32"
          },
          "hierarchyType": {
            "$ref": "#/components/schemas/AccountHierarchyType"
          },
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета в месте хранения.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Название, короткое текстовое описание счета в месте хранения.",
            "nullable": true
          },
          "interdepositoryAgreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер междепозитарного договора.",
            "nullable": true
          },
          "interdepositoryAgreementDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата междепозитарного договора.",
            "nullable": true,
            "example": "2024-04-10"
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия счета.",
            "example": "2024-04-10"
          },
          "closingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия счета.",
            "nullable": true,
            "example": "2024-04-10"
          },
          "state": {
            "$ref": "#/components/schemas/AccountState"
          }
        },
        "additionalProperties": false,
        "description": "Создание счета в месте хранения."
      },
      "CreateTrusteeAppointmentAttorneyCreateModel": {
        "required": [
          "adminOrder",
          "trusteeAppointmentAttorney"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "trusteeAppointmentAttorney": {
            "$ref": "#/components/schemas/TrusteeAppointmentAttorneyCreateModel"
          },
          "skhDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "description": "Ссылки на СКХ документы для регистрации в канцелярии",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "АП на создание доверенности на назначение УЛ"
      },
      "CrossRef": {
        "type": "object",
        "properties": {
          "externalId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "systemNumber": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CrsAttributes3": {
        "type": "object",
        "properties": {
          "crsActivityCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsBnfResidentCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsExceptionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsHighValueAccountCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsSprvResidentCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsResidentCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "crsFormDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "crsModifyDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "crsUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsIsExceptionFromReporting": {
            "type": "boolean",
            "nullable": true
          },
          "crsIsReportingPerson": {
            "type": "boolean",
            "nullable": true
          },
          "crsIsManual": {
            "type": "boolean"
          },
          "crsExpensiveBalanceDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "personAbsenceReasonCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "requestResult": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isRelWithForeign": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CrsResponse": {
        "type": "object",
        "properties": {
          "foreignCountryTaxResidencyType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "foreignCountryTaxResidencyDetectionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "extendedBalanceType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "extendedBalanceInfoUpdateDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "questionaryCompletionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "foreignTaxResidentBeneficiaryAbsenceReason": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "CRSUpdateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CRSAccountablePerson": {
            "type": "boolean",
            "nullable": true
          },
          "manualAccountablePersonCRS": {
            "type": "boolean",
            "nullable": true
          },
          "clientRequestResults": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "clientRequestResultsCategory": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "foreignCountryConnection": {
            "type": "boolean",
            "nullable": true
          },
          "taxResidencyCountry": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxResidencyCountryModel"
            },
            "nullable": true
          },
          "beneficiary": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BeneficiaryModelResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Currency": {
        "maxLength": 255,
        "enum": [
          "RUB",
          "USD",
          "EUR",
          "CNY"
        ],
        "type": "string",
        "description": "Валюта"
      },
      "CurrencySimpleDto": {
        "type": "object",
        "properties": {
          "alphabeticCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код валюты (алфавитный).",
            "nullable": true
          },
          "numericCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код валюты (цифровой).",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование валюты.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Валюта."
      },
      "DepoAgreementType": {
        "maxLength": 255,
        "enum": [
          "DepoGeneral",
          "DepoBroker"
        ],
        "type": "string",
        "description": "Тип депозитарного договора"
      },
      "DocumentFlow": {
        "required": [
          "registrationNumberIn"
        ],
        "type": "object",
        "properties": {
          "registrationNumberIn": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string",
            "description": "Номер входящего документа"
          },
          "clientId": {
            "maxLength": 100,
            "type": "string",
            "description": "Mdm Id Клиента",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Канцелярия"
      },
      "DocumentFlowReadModel": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id отношения",
            "format": "int64",
            "nullable": true
          },
          "createdAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время создания отношения",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время любого последнего обновления отношения",
            "format": "date-time",
            "nullable": true
          },
          "registrationNumberIn": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер входящего документа",
            "nullable": true
          },
          "clientId": {
            "maxLength": 255,
            "type": "string",
            "description": "Mdm Id Клиента",
            "nullable": true
          },
          "adminOrderId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id АП",
            "format": "int64",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Канцелярия"
      },
      "DocumentSubTypeCode": {
        "maxLength": 255,
        "enum": [
          "License",
          "TaxInfo",
          "RegistrationInfo",
          "IdentityPersonality",
          "Other"
        ],
        "type": "string",
        "description": "Тип документа о регистрации"
      },
      "EconomicSector2": {
        "type": "object",
        "properties": {
          "economicSectorCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "workTimeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "economicSectorDTE": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "economicSectorDTM": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EntityRestrictionDto": {
        "type": "object",
        "properties": {
          "entity": {
            "$ref": "#/components/schemas/RestrictionEntity"
          },
          "restriction": {
            "$ref": "#/components/schemas/RestrictionDto"
          },
          "settingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата установки.",
            "format": "date-time"
          },
          "behaviorLevel": {
            "$ref": "#/components/schemas/RestrictionBehaviorLevel"
          }
        },
        "additionalProperties": false,
        "description": "Ограничение объекта."
      },
      "ErrorDTO": {
        "type": "object",
        "properties": {
          "code": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Код ошибки",
            "format": "int32"
          },
          "message": {
            "maxLength": 255,
            "type": "string",
            "description": "Текст ошибки",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ошибка"
      },
      "EtalonCitizenRelation2": {
        "type": "object",
        "properties": {
          "relatedSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "relatedClient": {
            "$ref": "#/components/schemas/EtalonCitizenSnapshot3"
          },
          "relationTypes": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientRelationType2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonCitizenSnapshot3": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmCode": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isEIO": {
            "type": "boolean",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "firstNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "birthPlace": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "sexCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "snils": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okved": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isResident": {
            "type": "boolean",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isMain": {
            "type": "boolean",
            "nullable": true
          },
          "ochDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "addresses": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientAddress3"
            },
            "nullable": true
          },
          "contacts": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientContact3"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientPhone3"
            },
            "nullable": true
          },
          "documents": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDoc3"
            },
            "nullable": true
          },
          "publicPersonInfo": {
            "$ref": "#/components/schemas/PublicPersonInfo3"
          },
          "crsAttributes": {
            "$ref": "#/components/schemas/CrsAttributes3"
          },
          "fatcaAttributes": {
            "$ref": "#/components/schemas/FatcaAttributes3"
          },
          "clientCrs": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrs3"
            },
            "nullable": true
          },
          "relationWithSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientAddress3": {
        "type": "object",
        "properties": {
          "addressTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "addressFull": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "postalCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "district": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "settlement": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "building": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "blockNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "office": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kladr": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "offshoreCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "regionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "districtCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "cityCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "streetCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "addressFullEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fiasId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "regionEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "districtEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "cityEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "settlementEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "streetEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullAddressFctr": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullAddressFctrEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "stateEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "stateType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "stateTypeEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "districtType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "districtTypeEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "cityType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "cityTypeEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "settlementType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "settlementTypeEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "streetType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "streetTypeEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "house": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "stateRu": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finishDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isTrust": {
            "type": "boolean",
            "nullable": true
          },
          "complCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "addressStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "postalCodeStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientBlackListItem2": {
        "type": "object",
        "properties": {
          "similarity": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isExcluded": {
            "type": "boolean",
            "nullable": true
          },
          "blackListTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modificationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "excludeDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blacklistedDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deleteDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blackListReasonCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "modifyUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isManual": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientContact3": {
        "type": "object",
        "properties": {
          "contactTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "value": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "comment": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isTrust": {
            "type": "boolean",
            "nullable": true
          },
          "isMain": {
            "type": "boolean",
            "nullable": true
          },
          "emailQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientCrs3": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "inputDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "revealDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "exceptDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "countryIsoA3": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tinReasonCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tinReasonInfo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsStateCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "addressInResidencyCountry": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "requestOffshoreResults": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "taxReason": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "notResidenceCountryCodes": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientCrsBeneficiary2": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/ClientId2"
          },
          "personType": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "clientType": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "controlCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "revealDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "exceptDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsPersonStateCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsResidentCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsActivityCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsModifyDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "clientCrs": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrs3"
            },
            "nullable": true
          },
          "crsControllingPersons": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsControllingPerson2"
            },
            "nullable": true
          },
          "partyUId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmRelWithSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "requestResult": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isRelWithForeign": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EtalonClientCrsControllingPerson2": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/ClientId2"
          },
          "personType": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "clientType": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "controlCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "revealDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "exceptDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "endDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsPersonStateCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "crsResidentCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crsModifyDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "clientCrs": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrs3"
            },
            "nullable": true
          },
          "partyUId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmRelWithSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "requestResult": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isRelWithForeign": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EtalonClientDivision2": {
        "type": "object",
        "properties": {
          "refCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "biscuitCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientDoc3": {
        "type": "object",
        "properties": {
          "documentTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "docSubTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "docSeries": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "docNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "issuer": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "issuerCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "issuerPlace": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "issueDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "validDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "ssid": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "comments": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "seriesStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "numberStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "issueDateStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "validDateStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "issueCountryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientFatcaPerson2": {
        "type": "object",
        "properties": {
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "clientType": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "personName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ssn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "street": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "building": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "office": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "city": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "region": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "residencyStatus": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "residenceCountryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "residenceCountryCodes": {
            "maxItems": 500,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "fatcaUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EtalonClientGovernment2": {
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "relatedClientId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "relatedClient": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "relatedClientCitizen": {
            "$ref": "#/components/schemas/EtalonCitizenSnapshot3"
          },
          "comments": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientInvalidReason2": {
        "type": "object",
        "properties": {
          "invalidReasonCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "EtalonClientPhone3": {
        "type": "object",
        "properties": {
          "phoneCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneComment": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneExt": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneNormal": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phonePrefix": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneValue": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "priority": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "operatorName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneRegion": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isTrust": {
            "type": "boolean",
            "nullable": true
          },
          "isMain": {
            "type": "boolean",
            "nullable": true
          },
          "phoneQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "phoneStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientQuestionnaire2": {
        "type": "object",
        "properties": {
          "dateCreate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "dateUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "dateRevision": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "dateNotPlanUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "dateClose": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "managerFill": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "managerModify": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "managerControl": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "managerOpenAcc": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "managerClient": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "managerInputClient": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "curatorClient": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "baseCapitalCur": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "contragents": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "businessRelationshipCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "businessRelationshipOther": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "operations": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "operationsNum": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "operationInComeNum": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "operationSum": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "operationIncomeSum": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "bankList": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "marketInfo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "historyinfo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "additionalInfo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "otherInfo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "activityPlace": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hasMonitoring": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "property": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "profitSum": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "profitSource": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "activityTypes": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "migrationCard": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "migrationCardNotUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "branches": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "visaDoc": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "selfBeneficiary": {
            "type": "boolean"
          },
          "riskNotes": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "riskLevelCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "beneficiaryCheckCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedBusiness": {
            "type": "boolean"
          },
          "addressPresence": {
            "type": "boolean"
          },
          "baseCapital": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "baseCapitalAmountCur": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "number",
            "format": "double"
          },
          "dateRisk": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "dateNextRisk": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "dateStart": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "businessReputation": {
            "type": "boolean"
          },
          "managerFillPosition": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "managerModifyPosition": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isboulTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "beneficiaryUserName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "beneficiaryUserPosition": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "trustManagerIsboyulName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isTrustManagerIsboyul": {
            "type": "boolean"
          },
          "protectorIsboyulName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isProtectorIsboyul": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "EtalonClientQuestionnaireDetail2": {
        "type": "object",
        "properties": {
          "questionTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "response": {
            "$ref": "#/components/schemas/ResponseType2"
          },
          "responseDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "responseText": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "reputation": {
            "$ref": "#/components/schemas/ResponseType2"
          },
          "riskFactorCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientRelation2": {
        "type": "object",
        "properties": {
          "relatedSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "relatedClient": {
            "$ref": "#/components/schemas/EtalonClientRelationRelatedClient"
          },
          "relationTypes": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientRelationType2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientRelationAttribute2": {
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientRelationRelatedClient": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmCode": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmLegalStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modificationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isResident": {
            "type": "boolean",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kio": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxRegistryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kpp": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isBranch": {
            "type": "boolean",
            "nullable": true
          },
          "isInBlackList": {
            "type": "boolean",
            "nullable": true
          },
          "isInvisible": {
            "type": "boolean",
            "nullable": true
          },
          "clientTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okato": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okogu": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okfs": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okopf": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okved": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "rnko": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "largeKpp": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "bic": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "swift": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "dateLastUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateNextUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInvalid": {
            "type": "boolean",
            "nullable": true
          },
          "additionalOkvedCodes": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientAddOkvedCode2"
            },
            "nullable": true
          },
          "addresses": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientAddress3"
            },
            "nullable": true
          },
          "contacts": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientContact3"
            },
            "nullable": true
          },
          "contactPersons": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPerson2"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientPhone3"
            },
            "nullable": true
          },
          "headRelations": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelHeadBranch2"
            },
            "nullable": true
          },
          "divisions": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDivision2"
            },
            "nullable": true
          },
          "branchRelations": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelHeadBranch2"
            },
            "nullable": true
          },
          "mdmRelWithSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "mdmInvalidReasons": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientInvalidReason2"
            },
            "nullable": true
          },
          "documents": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDoc3"
            },
            "nullable": true
          },
          "isboul": {
            "type": "boolean",
            "nullable": true
          },
          "ogrnDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oldRegistryNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "accreditationNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "accreditationDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isMain": {
            "type": "boolean",
            "nullable": true
          },
          "isPdl": {
            "type": "boolean",
            "nullable": true
          },
          "questionnaireDetails": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientQuestionnaireDetail2"
            },
            "nullable": true
          },
          "questionnaire": {
            "$ref": "#/components/schemas/EtalonClientQuestionnaire2"
          },
          "blackList": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientBlackListItem2"
            },
            "nullable": true
          },
          "crsAttributes": {
            "$ref": "#/components/schemas/CrsAttributes3"
          },
          "fatcaAttributes": {
            "$ref": "#/components/schemas/FatcaAttributes3"
          },
          "clientCrs": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrs3"
            },
            "nullable": true
          },
          "fatcaPersons": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientFatcaPerson2"
            },
            "nullable": true
          },
          "governments": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientGovernment2"
            },
            "nullable": true
          },
          "relWithCitizen": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonCitizenRelation2"
            },
            "nullable": true
          },
          "predecessors": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonPredecessor2"
            },
            "nullable": true
          },
          "isPartner": {
            "type": "boolean",
            "nullable": true
          },
          "mdmCompanyTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isBusinessRight": {
            "type": "boolean",
            "nullable": true
          },
          "mdmTaxSystemCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isCorporateFlag": {
            "type": "boolean",
            "nullable": true
          },
          "mdmNumTaxInspectionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxRegion": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxCity": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registeringAuthorityName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmBankRelationCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmStateFundingCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmStateFundingValueCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "higherStateAgency": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isPositiveCreditWorthness": {
            "type": "boolean",
            "nullable": true
          },
          "isPmbFundFlag": {
            "type": "boolean",
            "nullable": true
          },
          "mdmOpfCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmBankStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "createdDivisionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "maintainedDivisionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "corrNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hqName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hqLegalAddress": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppBko": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "additionalKpp": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "employeesCountCompany": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "locationCountryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedActivity": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedActivityState": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastChngSourceAbs": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "activityStructures": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStructure2"
            },
            "nullable": true
          },
          "economicSectors": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EconomicSector2"
            },
            "nullable": true
          },
          "segments": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment2"
            },
            "nullable": true
          },
          "codeWord": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isPersonalAttendance": {
            "type": "boolean",
            "nullable": true
          },
          "isIdentified": {
            "type": "boolean",
            "nullable": true
          },
          "isFatcaCrsIdentification": {
            "type": "boolean",
            "nullable": true
          },
          "isFnsDocumentsMatching": {
            "type": "boolean",
            "nullable": true
          },
          "dposResponsible": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32"
          },
          "isSelfCertificationDone": {
            "type": "boolean",
            "nullable": true
          },
          "isCib": {
            "type": "boolean",
            "nullable": true
          },
          "isIdentificationCalculated": {
            "type": "boolean",
            "nullable": true
          },
          "isDoubt": {
            "type": "boolean",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "firstNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthPlace": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "sexCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "version": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "zCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ssLogin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isIdentifiedGlobal": {
            "type": "boolean",
            "nullable": true
          },
          "egrStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrStatusDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "egrDeactivateCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrDeactivate": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrDeactivateDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "isCorporateMsp": {
            "type": "boolean",
            "nullable": true
          },
          "crsControllingPersons": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsControllingPerson2"
            },
            "nullable": true
          },
          "crsBeneficiaries": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsBeneficiary2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientRelationType2": {
        "type": "object",
        "properties": {
          "relationTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "sourceSystemDte": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "ulbsRelation": {
            "type": "boolean"
          },
          "relationAttributes": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientRelationAttribute2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonClientSnapshot2": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmCode": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmLegalStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modificationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isResident": {
            "type": "boolean",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kio": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxRegistryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kpp": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isBranch": {
            "type": "boolean",
            "nullable": true
          },
          "isInBlackList": {
            "type": "boolean",
            "nullable": true
          },
          "isInvisible": {
            "type": "boolean",
            "nullable": true
          },
          "clientTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okato": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okogu": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okfs": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okopf": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okved": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "rnko": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "largeKpp": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "bic": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "swift": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "dateLastUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateNextUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInvalid": {
            "type": "boolean",
            "nullable": true
          },
          "additionalOkvedCodes": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientAddOkvedCode2"
            },
            "nullable": true
          },
          "addresses": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientAddress3"
            },
            "nullable": true
          },
          "contacts": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientContact3"
            },
            "nullable": true
          },
          "contactPersons": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPerson2"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientPhone3"
            },
            "nullable": true
          },
          "divisions": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDivision2"
            },
            "nullable": true
          },
          "headRelations": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelHeadBranch2"
            },
            "nullable": true
          },
          "branchRelations": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelHeadBranch2"
            },
            "nullable": true
          },
          "mdmRelWithSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "mdmInvalidReasons": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientInvalidReason2"
            },
            "nullable": true
          },
          "documents": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDoc3"
            },
            "nullable": true
          },
          "isboul": {
            "type": "boolean",
            "nullable": true
          },
          "ogrnDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oldRegistryNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "accreditationNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "accreditationDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isMain": {
            "type": "boolean",
            "nullable": true
          },
          "isPdl": {
            "type": "boolean",
            "nullable": true
          },
          "questionnaireDetails": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientQuestionnaireDetail2"
            },
            "nullable": true
          },
          "questionnaire": {
            "$ref": "#/components/schemas/EtalonClientQuestionnaire2"
          },
          "blackList": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientBlackListItem2"
            },
            "nullable": true
          },
          "crsAttributes": {
            "$ref": "#/components/schemas/CrsAttributes3"
          },
          "fatcaAttributes": {
            "$ref": "#/components/schemas/FatcaAttributes3"
          },
          "clientCrs": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrs3"
            },
            "nullable": true
          },
          "fatcaPersons": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientFatcaPerson2"
            },
            "nullable": true
          },
          "crsControllingPersons": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsControllingPerson2"
            },
            "nullable": true
          },
          "crsBeneficiaries": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsBeneficiary2"
            },
            "nullable": true
          },
          "governments": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientGovernment2"
            },
            "nullable": true
          },
          "relWithLegal": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientRelation2"
            },
            "nullable": true
          },
          "relWithCitizen": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonCitizenRelation2"
            },
            "nullable": true
          },
          "predecessors": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonPredecessor2"
            },
            "nullable": true
          },
          "isPartner": {
            "type": "boolean",
            "nullable": true
          },
          "mdmCompanyTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isBusinessRight": {
            "type": "boolean",
            "nullable": true
          },
          "mdmTaxSystemCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isCorporateFlag": {
            "type": "boolean",
            "nullable": true
          },
          "mdmNumTaxInspectionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxRegion": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxCity": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registeringAuthorityName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmBankRelationCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmStateFundingCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmStateFundingValueCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "higherStateAgency": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isPositiveCreditWorthness": {
            "type": "boolean",
            "nullable": true
          },
          "isPmbFundFlag": {
            "type": "boolean",
            "nullable": true
          },
          "mdmOpfCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmBankStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "createdDivisionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "maintainedDivisionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "corrNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hqName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hqLegalAddress": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppBko": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "additionalKpp": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "employeesCountCompany": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "locationCountryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedActivity": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedActivityState": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastChngSourceAbs": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "activityStructures": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStructure2"
            },
            "nullable": true
          },
          "economicSectors": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EconomicSector2"
            },
            "nullable": true
          },
          "segments": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment2"
            },
            "nullable": true
          },
          "codeWord": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isPersonalAttendance": {
            "type": "boolean",
            "nullable": true
          },
          "isIdentified": {
            "type": "boolean",
            "nullable": true
          },
          "isFatcaCrsIdentification": {
            "type": "boolean",
            "nullable": true
          },
          "isFnsDocumentsMatching": {
            "type": "boolean",
            "nullable": true
          },
          "isSelfCertificationDone": {
            "type": "boolean",
            "nullable": true
          },
          "dposResponsible": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isCib": {
            "type": "boolean",
            "nullable": true
          },
          "isIdentificationCalculated": {
            "type": "boolean",
            "nullable": true
          },
          "isDoubt": {
            "type": "boolean",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "firstNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthPlace": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "questionnaireStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlNameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlTinStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlRegistryNumberStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullNameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "nameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "officialNameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kioQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kioStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumberQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumberStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tinQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tinStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpoQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpoStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "bikStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okvedStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "additionalOkvedStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "swiftStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthdayStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fioStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ssLogin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "sexCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "version": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "zCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isIdentifiedGlobal": {
            "type": "boolean",
            "nullable": true
          },
          "egrStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrStatusDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "egrDeactivateCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrDeactivate": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrDeactivateDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCorporateMsp": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtalonPredecessor2": {
        "type": "object",
        "properties": {
          "mdmCode": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "mergeDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "FatcaAttributes3": {
        "type": "object",
        "properties": {
          "fatcaUser": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaFiStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaClassifierCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaSign": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "fatcaControlSign": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "fatcaTin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaUrfuMarker": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "fatcaFormFillDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "fatcaUsIndicia": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "fatcaGiId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaModifyDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "fatcaUserLogin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaUserName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaInz": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "fatcaIsActualAddress": {
            "type": "boolean"
          },
          "fatcaIsLegalAddress": {
            "type": "boolean"
          },
          "fatcaIsCitizenship": {
            "type": "boolean"
          },
          "fatcaIsIdentityDocument": {
            "type": "boolean"
          },
          "fatcaIsPhonePrefix": {
            "type": "boolean"
          },
          "fatcaIsBirthplace": {
            "type": "boolean"
          },
          "fatcaIsGreenCard": {
            "type": "boolean"
          },
          "fatcaIsFinancialInstitute": {
            "type": "boolean"
          },
          "fatcaIsAttorneyInFact": {
            "type": "boolean"
          },
          "fatcaIsControllingPerson": {
            "type": "boolean"
          },
          "fatcaSsn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaOtherSign": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaNextUpdateDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "fatcaGiin1": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaGiin2": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaGiin3": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaGiin4": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fatcaSignActivationDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "personAbsenceReasonCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FatcaResponse": {
        "type": "object",
        "properties": {
          "identificationResult": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "identificationResultAssignmentDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "foreignTaxResidentType": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "foreignTaxResidentStatus": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "SSN": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "ITIN": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "questionaryCompletionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "questionaryPlannedUpdateDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "greenCard": {
            "type": "boolean",
            "nullable": true
          },
          "USARegistration": {
            "type": "boolean",
            "nullable": true
          },
          "USACitizenship": {
            "type": "boolean",
            "nullable": true
          },
          "USAPhonePrefix": {
            "type": "boolean",
            "nullable": true
          },
          "USAPlaceOfResidence": {
            "type": "boolean",
            "nullable": true
          },
          "USAIdentityDocument": {
            "type": "boolean",
            "nullable": true
          },
          "USAPlaceOfBirth": {
            "type": "boolean",
            "nullable": true
          },
          "USAAttorneyInFact": {
            "type": "boolean",
            "nullable": true
          },
          "USAOtherSign": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "FATCAUpdateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "finMonitoringConfirmationFlag": {
            "type": "boolean",
            "nullable": true
          },
          "employeeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FaultMessageModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 999,
            "minimum": 100,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "text": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "description": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FullAdminOrderReadModel": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "createdAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время создания АП",
            "format": "date-time"
          },
          "updatedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время любого последнего обновления АП",
            "format": "date-time"
          },
          "clientOrderReceivedBankAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время получения Банком поручения Клиента",
            "format": "date-time"
          },
          "clientOrderReceivedDepositaryAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата и время получения Депозитарием (ИС ЦДС) поручения от Клиента",
            "format": "date-time",
            "nullable": true
          },
          "executedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата исполнения поручения",
            "format": "date-time",
            "nullable": true
          },
          "dateClientOrder": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата поручения Клиента",
            "example": "2024-04-10"
          },
          "numberClientOrder": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер поручения Клиента",
            "nullable": true
          },
          "orderType": {
            "$ref": "#/components/schemas/OrderType"
          },
          "source": {
            "maxLength": 255,
            "type": "string",
            "description": "Первичный источни",
            "nullable": true
          },
          "orderBelonging": {
            "$ref": "#/components/schemas/OrderBelonging"
          },
          "actionCode": {
            "$ref": "#/components/schemas/ActionCode"
          },
          "mdmId": {
            "maxLength": 255,
            "type": "string",
            "description": "МДМ код клиента",
            "nullable": true
          },
          "depoClientCode": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id клиента в ЦДС",
            "format": "int64",
            "nullable": true
          },
          "idDepoUchet": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Номер связанной операции в Депо.учёте",
            "format": "int64",
            "nullable": true
          },
          "adminOrderStatus": {
            "$ref": "#/components/schemas/AdminOrderStatus"
          },
          "technicalStatus": {
            "maxLength": 255,
            "type": "string",
            "description": "Технический статус",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "description": "Полное название/имя",
            "nullable": true
          },
          "inn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "description": "ТИН",
            "nullable": true
          },
          "ogrn": {
            "maxLength": 255,
            "type": "string",
            "description": "ОГРН",
            "nullable": true
          },
          "bic": {
            "maxLength": 255,
            "type": "string",
            "description": "БИК",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета",
            "nullable": true
          },
          "accountSectionNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер раздела счета",
            "nullable": true,
            "deprecated": true
          },
          "brokerAgreementType": {
            "$ref": "#/components/schemas/BrokerAgreementType"
          },
          "brokerAgreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер брокерского соглашения",
            "nullable": true
          },
          "brokerAgreementOpeningDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата брокерского соглашения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "brokerAgreementClosingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия брокерского соглашения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "requestId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Номер запроса (номер родительского АП)",
            "format": "int64",
            "nullable": true,
            "deprecated": true
          },
          "externalSourceSystem": {
            "maxLength": 255,
            "type": "string",
            "description": "Система источник",
            "nullable": true
          },
          "initiator": {
            "maxLength": 255,
            "type": "string",
            "description": "Инициатор",
            "nullable": true
          },
          "signingKind": {
            "$ref": "#/components/schemas/SigningKind"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "depoAgreementType": {
            "$ref": "#/components/schemas/DepoAgreementType"
          },
          "depoAgreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер депозитарного договора",
            "nullable": true
          },
          "depoAgreementOpeningDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата депозитарного договора",
            "nullable": true,
            "example": "2024-04-10"
          },
          "depoAgreementClosingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата закрытия депозитарного договора",
            "nullable": true,
            "example": "2024-04-10"
          },
          "correlationId": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификатор сообщения в асинхронном процессе (транспорт Кафка)",
            "nullable": true
          },
          "orderTypeTechnical": {
            "$ref": "#/components/schemas/OrderTypeTechnical"
          },
          "baseDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseDocument"
            },
            "description": "Документы-основания",
            "nullable": true
          },
          "adminOrderRelation": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maximum": 9007199254740991,
              "minimum": -9007199254740991,
              "type": "integer",
              "format": "int64"
            },
            "description": "Связанные поручения",
            "nullable": true
          },
          "adsdDocumentFlows": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentFlow"
            },
            "description": "Канцелярия",
            "nullable": true
          },
          "additionalComment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий к АП",
            "nullable": true
          },
          "initialRequest": {
            "description": "Данные запроса от внешней системы, которая инициировала создание АП",
            "nullable": true
          },
          "data": {
            "description": "Данные текущего состояния АП",
            "nullable": true
          },
          "states": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdminOrderState"
            },
            "description": "Коллекция состояний административного поручения",
            "nullable": true
          },
          "fullNameForSearch": {
            "maxLength": 255,
            "type": "string",
            "description": "Полное ФИО для поиска",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Расширенная модель Административное поручение с дополнительными данными"
      },
      "GenderCode": {
        "maxLength": 255,
        "enum": [
          "Male",
          "Female"
        ],
        "type": "string",
        "description": "Пол"
      },
      "GetContactFullModel": {
        "type": "object",
        "properties": {
          "auxClientInformation": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientInformationResponse"
            },
            "nullable": true
          },
          "CRSCountry": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CRSCountry"
            },
            "nullable": true
          },
          "personIdentificationStatus": {
            "$ref": "#/components/schemas/IdentificationStatus"
          },
          "contactParentRelationship": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactParentRelationshipModel"
            },
            "nullable": true
          },
          "deduplicated": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "fatcaNextUpdate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "CRSDateFilled": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "PODFTDateSign": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "OMS": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "address": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactInsPersonalAddressModel2"
            },
            "nullable": true
          },
          "bankEmployee": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthDateTime": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "birthDateQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthdatePopularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlace": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualCountryCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceOkato": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceCountry": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceSettlement": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceRegion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceRayon": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceCity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualCountry": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualRegion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualRayon": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualCity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualSettlement": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceValidationCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceValidationExtension": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "blackList": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactSegmentBlackListModel0"
            },
            "nullable": true
          },
          "changeDateFullName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "childrenNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "consentCreditBureauUpload": {
            "type": "boolean",
            "nullable": true
          },
          "consentCreditBureauVerification": {
            "type": "boolean",
            "nullable": true
          },
          "contactPhoneCommunication": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactAlternatePhoneModel3"
            },
            "nullable": true
          },
          "contactRelationship": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactRelationshipModel0"
            },
            "nullable": true
          },
          "deathDateTime": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "deathDateQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "dependentNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "education": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactEducationModel0"
            },
            "nullable": true
          },
          "emailCommunication": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactCommunicationAddressModel1"
            },
            "nullable": true
          },
          "employment": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobHistoryModel0"
            },
            "nullable": true
          },
          "employerCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstNameLat": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameAblative": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameDative": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameGenitive": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "genderCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "genderQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "householderNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lastNameLat": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "maritalStatusCode": {
            "maximum": 10000,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "middleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nationalityCountryCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "numTaxInspection": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "partyUId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personDocumentIdentity": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPubContactIdentityModel0"
            },
            "nullable": true
          },
          "plannedUpdateDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "previousFirstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "previousLastName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "previousMiddleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "pubOfficialStatus": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "relatives": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactRelativesModel2"
            },
            "nullable": true
          },
          "riskLevel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rezidentFlag": {
            "type": "boolean",
            "nullable": true
          },
          "riskLevelJustification": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JustificationRiskModel"
            },
            "nullable": true
          },
          "segment": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactSegmentModel2"
            },
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taxRezident": {
            "type": "boolean",
            "nullable": true
          },
          "terminated": {
            "type": "boolean",
            "nullable": true
          },
          "tIN": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "innQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "innConfirmed": {
            "type": "boolean",
            "nullable": true
          },
          "type": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "identifierEsia": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "verificationEsiaDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "noValidDUL": {
            "type": "boolean",
            "nullable": true
          },
          "lastNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "previousNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unconfirmedDeathFlag": {
            "type": "boolean",
            "nullable": true
          },
          "unconfirmedDeathDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "conflict": {
            "type": "boolean",
            "nullable": true
          },
          "fullNameEditedChanges": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameNSReasons": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "codeTCCB": {
            "$ref": "#/components/schemas/GetContactFullModelCodeTCCB"
          }
        },
        "additionalProperties": false
      },
      "GetContactFullModelCodeTCCB": {
        "maxLength": 255,
        "enum": [
          "_15",
          "_16"
        ],
        "type": "string"
      },
      "GetOrganizationResponse": {
        "type": "object",
        "properties": {
          "organization": {
            "$ref": "#/components/schemas/EtalonClientSnapshot2"
          }
        },
        "additionalProperties": false
      },
      "GetPersonResponse": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/GetContactFullModel"
          }
        },
        "additionalProperties": false
      },
      "GetQSTFLResponse": {
        "type": "object",
        "properties": {
          "qstfl": {
            "$ref": "#/components/schemas/GetQSTOutput"
          }
        },
        "additionalProperties": false
      },
      "GetQSTOutput": {
        "type": "object",
        "properties": {
          "faultMessage": {
            "$ref": "#/components/schemas/FaultMessageModel"
          },
          "partyUId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employeeLogin": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "crossRef": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CrossRef"
            },
            "nullable": true
          },
          "fatca": {
            "$ref": "#/components/schemas/FatcaResponse"
          },
          "crs": {
            "$ref": "#/components/schemas/CrsResponse"
          },
          "podFt": {
            "$ref": "#/components/schemas/PodftRequest"
          }
        },
        "additionalProperties": false
      },
      "IdentificationStatus": {
        "required": [
          "identificationProof",
          "identificationType",
          "loginExternalSystem",
          "nameExternalSystem",
          "plannedUpdateDate",
          "typeOfPresence",
          "updateDate"
        ],
        "type": "object",
        "properties": {
          "subjectType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "clientRbFlag": {
            "type": "boolean",
            "nullable": true
          },
          "clientCorpFlag": {
            "type": "boolean",
            "nullable": true
          },
          "identificationProof": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "identificationType": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "loginExternalSystem": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "nameExternalSystem": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string"
          },
          "plannedUpdateDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string"
          },
          "typeOfPresence": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string"
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "IdentityDocument": {
        "required": [
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "typeCode": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Тип документа",
            "format": "int32"
          },
          "typeName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование типа документа",
            "nullable": true
          },
          "groupName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование группы документа",
            "nullable": true
          },
          "series": {
            "maxLength": 10,
            "type": "string",
            "description": "Серия",
            "nullable": true
          },
          "number": {
            "maxLength": 30,
            "type": "string",
            "description": "Номер",
            "nullable": true
          },
          "issueDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Когда выдан",
            "nullable": true,
            "example": "2024-04-10"
          },
          "issueName": {
            "maxLength": 500,
            "type": "string",
            "description": "Орган, выдавший документ",
            "nullable": true
          },
          "issueCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код подразделения",
            "nullable": true
          },
          "startOfRightToStay": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата выдачи",
            "nullable": true,
            "example": "2024-04-10"
          },
          "endOfRightToStay": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата окончания",
            "nullable": true,
            "example": "2024-04-10"
          },
          "startDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата начала действия",
            "nullable": true,
            "example": "2024-04-10"
          },
          "endDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата окончания действия",
            "nullable": true,
            "example": "2024-04-10"
          },
          "invalidStatus": {
            "maxLength": 100,
            "type": "string",
            "description": "Актуальность документа",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "ДУЛ"
      },
      "IncomeType": {
        "maxLength": 255,
        "enum": [
          "DividendsType1",
          "DividendsType2",
          "DividendsType3"
        ],
        "type": "string",
        "description": "Вид дохода"
      },
      "InitiatorType": {
        "maxLength": 255,
        "enum": [
          "Emitter",
          "Depositary",
          "Client",
          "Operator",
          "Government",
          "AuthorizedRepresentative",
          "Proprietary",
          "Bank",
          "Another"
        ],
        "type": "string"
      },
      "IntermediaryBank": {
        "type": "object",
        "properties": {
          "intermediaryBankName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование банка посредника",
            "nullable": true
          },
          "intermediaryBankAccountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета банка-посредника в банке-корреспонденте",
            "nullable": true
          },
          "intermediaryBankSwift": {
            "maxLength": 255,
            "type": "string",
            "description": "SWIFT код банка посредника",
            "nullable": true
          },
          "intermediaryBankKpmv": {
            "maxLength": 255,
            "type": "string",
            "description": "КПМВ/СПФС код банка посредника",
            "nullable": true
          },
          "chainOrder": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Порядковый номер в цепочке банков-посредников.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Банк-посредник"
      },
      "IntermediaryBankDetailsChainItemDto": {
        "type": "object",
        "properties": {
          "bankDetails": {
            "$ref": "#/components/schemas/BankDetailsDto"
          },
          "chainOrder": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Порядковый номер в цепочке банков-посредников.",
            "format": "int32"
          },
          "intermediaryAccountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета банка-посредника в банке-корреспонденте (или в следующем элементе цепочки банков-посредников).",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Реквизиты банка-посредника."
      },
      "InvestorQualificationMethod": {
        "maxLength": 255,
        "enum": [
          "InLowQI",
          "AssignedQI"
        ],
        "type": "string",
        "description": "КИ по закону или присвоенная"
      },
      "InvestorQualificationType": {
        "maxLength": 255,
        "enum": [
          "NonQualified",
          "Qualified"
        ],
        "type": "string",
        "description": "Тип инвестора"
      },
      "JobHistoryModel0": {
        "type": "object",
        "properties": {
          "employerOrganizationName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employmentContractType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "employmentType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "fullAddress": {
            "maxLength": 1000,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "jobTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "taxPayerIdentificationNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "JustificationRiskModel": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LegacyAccountDto": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер в legacy-системе.",
            "nullable": true
          },
          "legacyId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор в legacy-системе.",
            "format": "int32"
          },
          "legacySystem": {
            "$ref": "#/components/schemas/LegacySystemType"
          }
        },
        "additionalProperties": false,
        "description": "Счет в legacy-системе."
      },
      "LegacySystemType": {
        "maxLength": 255,
        "enum": [
          "Ads",
          "ZFront"
        ],
        "type": "string"
      },
      "MatchOrganizationsResponse": {
        "type": "object",
        "properties": {
          "organizations": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MatchSearchEtalonClientSnapshot"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchPersonsResponse": {
        "type": "object",
        "properties": {
          "persons": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonOutput"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MatchSearchEtalonClientSnapshot": {
        "type": "object",
        "properties": {
          "matchingFactorPercent": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmCode": {
            "maximum": 79228162514264337593543950335,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "mdmLegalStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "creationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "modificationDateTime": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "nameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isResident": {
            "type": "boolean",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kio": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxRegistryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registryDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "kpp": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isBranch": {
            "type": "boolean",
            "nullable": true
          },
          "isInBlackList": {
            "type": "boolean",
            "nullable": true
          },
          "isInvisible": {
            "type": "boolean",
            "nullable": true
          },
          "clientTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okato": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okogu": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okfs": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okopf": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okved": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "rnko": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "largeKpp": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "bic": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "swift": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "dateLastUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateNextUpdate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isInvalid": {
            "type": "boolean",
            "nullable": true
          },
          "additionalOkvedCodes": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientAddOkvedCode2"
            },
            "nullable": true
          },
          "addresses": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientAddress3"
            },
            "nullable": true
          },
          "contacts": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientContact3"
            },
            "nullable": true
          },
          "contactPersons": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactPerson2"
            },
            "nullable": true
          },
          "phoneNumbers": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientPhone3"
            },
            "nullable": true
          },
          "divisions": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDivision2"
            },
            "nullable": true
          },
          "headRelations": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelHeadBranch2"
            },
            "nullable": true
          },
          "branchRelations": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelHeadBranch2"
            },
            "nullable": true
          },
          "mdmRelWithSources": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelWithSource3"
            },
            "nullable": true
          },
          "mdmInvalidReasons": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientInvalidReason2"
            },
            "nullable": true
          },
          "documents": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientDoc3"
            },
            "nullable": true
          },
          "isboul": {
            "type": "boolean",
            "nullable": true
          },
          "ogrnDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oldRegistryNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "accreditationNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "accreditationDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isMain": {
            "type": "boolean",
            "nullable": true
          },
          "isPdl": {
            "type": "boolean",
            "nullable": true
          },
          "questionnaireDetails": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientQuestionnaireDetail2"
            },
            "nullable": true
          },
          "questionnaire": {
            "$ref": "#/components/schemas/EtalonClientQuestionnaire2"
          },
          "blackList": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientBlackListItem2"
            },
            "nullable": true
          },
          "crsAttributes": {
            "$ref": "#/components/schemas/CrsAttributes3"
          },
          "fatcaAttributes": {
            "$ref": "#/components/schemas/FatcaAttributes3"
          },
          "clientCrs": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrs3"
            },
            "nullable": true
          },
          "fatcaPersons": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientFatcaPerson2"
            },
            "nullable": true
          },
          "crsControllingPersons": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsControllingPerson2"
            },
            "nullable": true
          },
          "crsBeneficiaries": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientCrsBeneficiary2"
            },
            "nullable": true
          },
          "governments": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientGovernment2"
            },
            "nullable": true
          },
          "relWithLegal": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientRelation2"
            },
            "nullable": true
          },
          "relWithCitizen": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonCitizenRelation2"
            },
            "nullable": true
          },
          "predecessors": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonPredecessor2"
            },
            "nullable": true
          },
          "isPartner": {
            "type": "boolean",
            "nullable": true
          },
          "mdmCompanyTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isBusinessRight": {
            "type": "boolean",
            "nullable": true
          },
          "mdmTaxSystemCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isCorporateFlag": {
            "type": "boolean",
            "nullable": true
          },
          "mdmNumTaxInspectionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxRegion": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "taxCity": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registeringAuthorityName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmBankRelationCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmStateFundingCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmStateFundingValueCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "higherStateAgency": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isPositiveCreditWorthness": {
            "type": "boolean",
            "nullable": true
          },
          "isPmbFundFlag": {
            "type": "boolean",
            "nullable": true
          },
          "mdmOpfCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "mdmBankStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "createdDivisionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "maintainedDivisionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "corrNumber": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hqName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "hqLegalAddress": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppBko": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "additionalKpp": {
            "maxItems": 10000,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "nullable": true
          },
          "employeesCountCompany": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "locationCountryCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedActivity": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "licensedActivityState": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastChngSourceAbs": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "activityStructures": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActivityStructure2"
            },
            "nullable": true
          },
          "economicSectors": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EconomicSector2"
            },
            "nullable": true
          },
          "segments": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment2"
            },
            "nullable": true
          },
          "codeWord": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isPersonalAttendance": {
            "type": "boolean",
            "nullable": true
          },
          "isIdentified": {
            "type": "boolean",
            "nullable": true
          },
          "isFatcaCrsIdentification": {
            "type": "boolean",
            "nullable": true
          },
          "isFnsDocumentsMatching": {
            "type": "boolean",
            "nullable": true
          },
          "isSelfCertificationDone": {
            "type": "boolean",
            "nullable": true
          },
          "dposResponsible": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isCib": {
            "type": "boolean",
            "nullable": true
          },
          "isIdentificationCalculated": {
            "type": "boolean",
            "nullable": true
          },
          "isDoubt": {
            "type": "boolean",
            "nullable": true
          },
          "questionnaireStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlNameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlTinStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrlRegistryNumberStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fullNameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "nameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "officialNameStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kioQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kioStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "kppStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumberQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "registryNumberStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tinQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tinStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpoQC": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okpoStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "bikStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "okvedStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "additionalOkvedStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "swiftStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthdayStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "fioStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ssLogin": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "zCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "sexCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "version": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "isIdentifiedGlobal": {
            "type": "boolean"
          },
          "egrStatusCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrStatus": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrStatusDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "egrDeactivateCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrDeactivate": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "egrDeactivateDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isCorporateMsp": {
            "type": "boolean",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "firstNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "middleNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "lastNameEn": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthPlace": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MdmLegalStatusCode": {
        "maxLength": 255,
        "enum": [
          "Undefined",
          "Citizen",
          "Businessman",
          "Enterprise",
          "Finance",
          "Lawyer",
          "Notary",
          "Farmer",
          "Holding"
        ],
        "type": "string",
        "description": "Юридический статус"
      },
      "ModifyActiveAccountModel": {
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "activeAccount": {
            "$ref": "#/components/schemas/ActiveAccountDto"
          }
        },
        "additionalProperties": false,
        "description": "Модель изменения активного счета"
      },
      "ModifyActiveSubaccountCreateModel": {
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "activeSubaccountModifyModel": {
            "$ref": "#/components/schemas/ActiveSubaccountModifyModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель создания активного счета"
      },
      "ModifyActiveSubaccountSubtype": {
        "required": [
          "subaccountCode",
          "subaccountType"
        ],
        "type": "object",
        "properties": {
          "subaccountType": {
            "$ref": "#/components/schemas/SubaccountType"
          },
          "subaccountCode": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Код раздела."
          },
          "safekeepingSubaccount": {
            "$ref": "#/components/schemas/SafekeepingSubaccountIdentifier"
          },
          "safekeepingAccount": {
            "$ref": "#/components/schemas/SafekeepingAccount"
          }
        },
        "additionalProperties": false,
        "description": "Редактирование подтипа раздела активного счета"
      },
      "ModifyPassiveAccountModel": {
        "required": [
          "accountCommunications",
          "adminOrder",
          "passiveAccountClassCode",
          "passiveAccountNumber",
          "passiveAccountSubClassCode"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "passiveAccountNumber": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер пассивного счета"
          },
          "passiveAccountClassCode": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Уникальный мнемонический код счета"
          },
          "passiveAccountSubClassCode": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Подвид счета"
          },
          "passiveAccountSegregationType": {
            "$ref": "#/components/schemas/PassiveAccountSegregationType"
          },
          "passiveAccountPaymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "paymentAccounts": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAccount"
            },
            "description": "Банковские реквизиты",
            "nullable": true
          },
          "accountCommunications": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCommunication"
            },
            "description": "Способы коммуникации по счету депо"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование счета.",
            "nullable": true
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия счета.",
            "example": "2024-04-10"
          },
          "legacyAccount": {
            "$ref": "#/components/schemas/LegacyAccountDto"
          },
          "explicitNameBasis": {
            "maxLength": 255,
            "type": "string",
            "description": "Базовая часть наименования счета, заданная в явном виде.",
            "nullable": true
          },
          "agreementType": {
            "maxLength": 255,
            "type": "string",
            "description": "Тип договора.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель изменения пассивного счета"
      },
      "ModifyPassiveSubaccountSubtype": {
        "required": [
          "subaccountType"
        ],
        "type": "object",
        "properties": {
          "subaccountType": {
            "$ref": "#/components/schemas/SubaccountType"
          },
          "subaccountAffiliation": {
            "$ref": "#/components/schemas/SubaccountAffiliation"
          },
          "subaccountCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код раздела",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Связанные подтипы раздела пассивного счета"
      },
      "NotRevokedTrusteeAppointmentAttorneyModel": {
        "type": "object",
        "properties": {
          "adminOrderId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор АП",
            "format": "int64",
            "nullable": true
          },
          "attorneyNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер доверенности",
            "nullable": true
          },
          "attorneyDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата доверенности",
            "nullable": true,
            "example": "2024-04-10"
          }
        },
        "additionalProperties": false,
        "description": "Урезанная модель Доверенности УЛ для поиска"
      },
      "OpenActiveSubaccountCreateModel": {
        "required": [
          "activeSubaccount",
          "adminOrder"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "activeSubaccount": {
            "$ref": "#/components/schemas/ActiveSubaccountWriteModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель открытия активного раздела"
      },
      "OpenPassiveAccountModel": {
        "required": [
          "accountCommunications",
          "passiveAccount"
        ],
        "type": "object",
        "properties": {
          "passiveAccount": {
            "$ref": "#/components/schemas/PassiveAccountModel"
          },
          "accountCommunications": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountCommunication"
            },
            "description": "Способы коммуникации по счету депо"
          }
        },
        "additionalProperties": false,
        "description": "Данные для обновления АП на открытие счета"
      },
      "OrderBelonging": {
        "maxLength": 255,
        "enum": [
          "Person",
          "Organization"
        ],
        "type": "string",
        "description": "Принадлежность АП"
      },
      "OrderType": {
        "maxLength": 255,
        "enum": [
          "Person",
          "Organization",
          "PassiveAccount",
          "PassiveSubAccount",
          "PaymentAccounts",
          "ActiveAccount",
          "ActiveSubAccount",
          "TrusteeAppointmentAttorney",
          "TrusteePerson",
          "TrusteeOrganization",
          "PassiveAccountRestrictions",
          "ClientRestrictions"
        ],
        "type": "string",
        "description": "Тип административного поручения"
      },
      "OrderTypeTechnical": {
        "maxLength": 255,
        "enum": [
          "Standard",
          "Technical"
        ],
        "type": "string",
        "description": "Вид административного поручения"
      },
      "OrganizationAddress": {
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 30,
            "type": "string",
            "description": "Тип адреса (Справочные данные)",
            "nullable": true
          },
          "country": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна",
            "nullable": true
          },
          "fullAddress": {
            "maxLength": 1000,
            "type": "string",
            "description": "Полный адрес",
            "nullable": true
          },
          "okato": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКАТО (Общероссийский классификатор объектов административно-территориального деления)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Адреса ЮЛ"
      },
      "OrganizationContactInformation": {
        "type": "object",
        "properties": {
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "brokerEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "Брокерский email",
            "nullable": true
          },
          "depositoryEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "Депозитарный email",
            "nullable": true
          },
          "fax": {
            "maxLength": 255,
            "type": "string",
            "description": "Факс",
            "nullable": true
          },
          "brokerPhone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона (для брокерских операций)",
            "nullable": true
          },
          "depoPhone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона (для депозитарных операций)",
            "nullable": true
          },
          "depositoryFax": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер факса (для депозитарных операций)",
            "nullable": true
          },
          "corpActEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "E-mail (для КД Депозитария)",
            "nullable": true
          },
          "personActingOnCharter": {
            "maxLength": 255,
            "type": "string",
            "description": "Лицо, действующее по уставу",
            "nullable": true
          },
          "positionPerson": {
            "maxLength": 255,
            "type": "string",
            "description": "Должность лица",
            "nullable": true
          },
          "contactPersons": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationContactPerson"
            },
            "description": "Контактные лица",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Контактная информация ЮЛ"
      },
      "OrganizationContactPerson": {
        "required": [
          "contactBankCard",
          "contactBankCardSave"
        ],
        "type": "object",
        "properties": {
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "description": "Контактное лицо (ФИО)",
            "nullable": true
          },
          "jobTitle": {
            "maxLength": 255,
            "type": "string",
            "description": "Должность",
            "nullable": true
          },
          "contactPhone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона",
            "nullable": true
          },
          "contactEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "contactFax": {
            "maxLength": 255,
            "type": "string",
            "description": "Факс",
            "nullable": true
          },
          "contactBankCard": {
            "type": "boolean",
            "description": "Контакт из банковской карточки"
          },
          "contactBankCardSave": {
            "type": "boolean",
            "description": "Сохранять изменение банк-й карточки контакта в будущем"
          },
          "comment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Контактное лицо организации"
      },
      "OrganizationCreateModel": {
        "required": [
          "addresses",
          "clientType",
          "contactInformation",
          "countryCode",
          "documents",
          "fullName",
          "isTaxResident",
          "kpp",
          "mdmCode",
          "mdmLegalStatusCode",
          "name",
          "qualifiedInvestor",
          "registrationDate",
          "registryNumber"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ID клиента в ЦДС",
            "format": "int64",
            "nullable": true
          },
          "mdmCode": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "MDM CODE"
          },
          "fullName": {
            "maxLength": 2000,
            "minLength": 1,
            "type": "string",
            "description": "Полное наименование (рус)"
          },
          "name": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Краткое наименование (рус)"
          },
          "fullNameEn": {
            "maxLength": 500,
            "type": "string",
            "description": "Полное наименование (лат)",
            "nullable": true
          },
          "nameEn": {
            "maxLength": 500,
            "type": "string",
            "description": "Краткое наименование (лат)",
            "nullable": true
          },
          "adsId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ID клиента в АДС",
            "format": "int64",
            "nullable": true
          },
          "registrationDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата регистрации",
            "example": "2024-04-10"
          },
          "zFrontId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ID клиента в ZF",
            "format": "int64",
            "nullable": true
          },
          "tin": {
            "maxLength": 80,
            "type": "string",
            "description": "ТИН",
            "nullable": true
          },
          "inn": {
            "maxLength": 10,
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "lei": {
            "maxLength": 20,
            "type": "string",
            "description": "Международный код идентификации юридического лица",
            "nullable": true
          },
          "registryNumber": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "ОГРН / Регистрационный номер"
          },
          "bic": {
            "maxLength": 30,
            "type": "string",
            "description": "БИК для банков",
            "nullable": true
          },
          "mdmLegalStatusCode": {
            "$ref": "#/components/schemas/MdmLegalStatusCode"
          },
          "kpp": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "КПП"
          },
          "swift": {
            "maxLength": 30,
            "type": "string",
            "description": "SWIFT организации (из карточки)",
            "nullable": true
          },
          "spfc": {
            "maxLength": 30,
            "type": "string",
            "description": "СПФС организации",
            "nullable": true
          },
          "kpmv": {
            "maxLength": 30,
            "type": "string",
            "description": "КПМВ организации",
            "nullable": true
          },
          "depoSwift": {
            "maxLength": 30,
            "type": "string",
            "description": "SWIFT (Депозитария)",
            "nullable": true
          },
          "smb": {
            "$ref": "#/components/schemas/Smb"
          },
          "kik": {
            "type": "boolean",
            "description": "Подконтрольный нерезидент (КИК)",
            "nullable": true
          },
          "isResident": {
            "type": "boolean",
            "description": "Валютный резидент РФ",
            "default": false,
            "nullable": true
          },
          "isTaxResident": {
            "type": "boolean",
            "description": "Налоговый резидент РФ",
            "default": false
          },
          "economicSectorCode": {
            "maxLength": 128,
            "type": "string",
            "description": "Сектор экономики",
            "nullable": true
          },
          "mdmOpfCode": {
            "maxLength": 32,
            "type": "string",
            "description": "Форма",
            "nullable": true
          },
          "clientTypeCode": {
            "maxLength": 30,
            "type": "string",
            "description": "Тип клиента MDM",
            "nullable": true
          },
          "clientClass": {
            "maxLength": 255,
            "type": "string",
            "description": "Класс клиента",
            "nullable": true
          },
          "opf": {
            "maxLength": 255,
            "type": "string",
            "description": "ОПФ",
            "nullable": true
          },
          "kio": {
            "maxLength": 30,
            "type": "string",
            "description": "КИО",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string",
            "description": "Страна регистрации (ISO A2)"
          },
          "isBranch": {
            "type": "boolean",
            "description": "Признак филиала",
            "nullable": true
          },
          "okpo": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКПО (Общероссийский классификатор предприятий и организаций)",
            "nullable": true
          },
          "okogu": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКОГУ (Общероссийский классификатор органов государственной власти и управления)",
            "nullable": true
          },
          "okved": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКВЭД (Общероссийский классификатор видов экономической деятельности)",
            "nullable": true
          },
          "additionalOkvedCodes": {
            "maxLength": 1000,
            "type": "string",
            "description": "КВЭДы (Общероссийский классификатор видов экономической деятельности)",
            "nullable": true
          },
          "okfs": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКФС (Общероссийский классификатор форм собственности)",
            "nullable": true
          },
          "okopf": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "ОКОПФ (Общероссийский классификатор организационно-правовых форм)",
            "format": "int32",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКТМО (Общероссийский классификатор территорий муниципальных образований)",
            "nullable": true
          },
          "largeKpp": {
            "maxLength": 100,
            "type": "string",
            "description": "КПП (Код причины постановки на учет) крупнейшего налогоплательщика",
            "nullable": true
          },
          "addresses": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAddress"
            },
            "description": "Адреса"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/OrganizationContactInformation"
          },
          "documents": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDocument"
            },
            "description": "Документы"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "qualifiedInvestor": {
            "$ref": "#/components/schemas/QualifiedInvestor"
          },
          "risk": {
            "$ref": "#/components/schemas/OrganizationRisk"
          },
          "restrictions": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRestriction"
            },
            "description": "Ограничения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель юридического лица"
      },
      "OrganizationDocument": {
        "required": [
          "issueName",
          "typeCode"
        ],
        "type": "object",
        "properties": {
          "documentTypeCode": {
            "$ref": "#/components/schemas/OrganizationDocumentType"
          },
          "documentSubTypeCode": {
            "$ref": "#/components/schemas/DocumentSubTypeCode"
          },
          "typeCode": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Тип документа",
            "format": "int32"
          },
          "typeName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование типа документа",
            "nullable": true
          },
          "groupName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование группы документа",
            "nullable": true
          },
          "docSeries": {
            "maxLength": 255,
            "type": "string",
            "description": "Серия",
            "nullable": true
          },
          "docNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер",
            "nullable": true
          },
          "issueName": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string",
            "description": "Орган, выдавший документ о регистрации"
          },
          "issueCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Код подразделения",
            "nullable": true
          },
          "issueDate": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата выдачи",
            "format": "date-time",
            "nullable": true
          },
          "validDate": {
            "maxLength": 255,
            "type": "string",
            "description": "Срок действия",
            "format": "date-time",
            "nullable": true
          },
          "licenseProfessionalSecurities": {
            "type": "boolean",
            "description": "Лицензия Профессионального участника",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Документ ЮЛ"
      },
      "OrganizationDocumentType": {
        "maxLength": 255,
        "enum": [
          "License",
          "RegistrationInfo"
        ],
        "type": "string",
        "description": "Тип документа."
      },
      "OrganizationOrderCreateModel": {
        "required": [
          "adminOrder",
          "organization"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationCreateModel"
          },
          "changedFields": {
            "maxItems": 2147483647,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "description": "Список полей в которых изменилось значение",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Админисистративное поручение на создание ЮЛ"
      },
      "OrganizationReadModel": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": 0,
            "type": "integer",
            "description": "ID клиента в ЦДС",
            "format": "int64"
          },
          "mdmCode": {
            "maxLength": 255,
            "type": "string",
            "description": "MDM CODE",
            "nullable": true
          },
          "createdAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата создания Клиента в БД Витрины ЦДС",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата изменения Клиента в БД Витрины ЦДС с помощью последнего исполненного АП (тип Анкета клиента)",
            "format": "date-time",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "description": "Полное наименование (рус)",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Краткое наименование (рус)",
            "nullable": true
          },
          "fullNameEn": {
            "maxLength": 255,
            "type": "string",
            "description": "Полное наименование (лат)",
            "nullable": true
          },
          "nameEn": {
            "maxLength": 255,
            "type": "string",
            "description": "Краткое наименование (лат)",
            "nullable": true
          },
          "adsId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ID клиента в АДС",
            "format": "int64",
            "nullable": true
          },
          "zFrontId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ID клиента в ZF",
            "format": "int64",
            "nullable": true
          },
          "registrationDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата регистрации",
            "nullable": true,
            "example": "2024-04-10"
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификационный номер налогоплательщика - иностранной организации (или его аналог) в стране регистрации",
            "nullable": true
          },
          "inn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "lei": {
            "maxLength": 255,
            "type": "string",
            "description": "Международный код идентификации юридического лица",
            "nullable": true
          },
          "registryNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "ОГРН / Регистрационный номер",
            "nullable": true
          },
          "bic": {
            "maxLength": 255,
            "type": "string",
            "description": "БИК",
            "nullable": true
          },
          "mdmLegalStatusCode": {
            "$ref": "#/components/schemas/MdmLegalStatusCode"
          },
          "kpp": {
            "maxLength": 255,
            "type": "string",
            "description": "КПП",
            "nullable": true
          },
          "swift": {
            "maxLength": 255,
            "type": "string",
            "description": "SWIFT организации (из карточки)",
            "nullable": true
          },
          "spfc": {
            "maxLength": 255,
            "type": "string",
            "description": "СПФС организации",
            "nullable": true
          },
          "kpmv": {
            "maxLength": 255,
            "type": "string",
            "description": "КПМВ организации",
            "nullable": true
          },
          "depoSwift": {
            "maxLength": 255,
            "type": "string",
            "description": "SWIFT (Депозитария)",
            "nullable": true
          },
          "smb": {
            "$ref": "#/components/schemas/Smb"
          },
          "kik": {
            "type": "boolean",
            "description": "Подконтрольный нерезидент (КИК)",
            "nullable": true
          },
          "isResident": {
            "type": "boolean",
            "description": "Валютный резидент РФ",
            "nullable": true
          },
          "isTaxResident": {
            "type": "boolean",
            "description": "Налоговый резидент РФ",
            "nullable": true
          },
          "economicSectorCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Сектор экономики",
            "nullable": true
          },
          "mdmOpfCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Форма",
            "nullable": true
          },
          "adminOrders": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maximum": 9007199254740991,
              "minimum": -9007199254740991,
              "type": "integer",
              "format": "int64"
            },
            "description": "Связанные поручения",
            "nullable": true
          },
          "adminOrderId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id последнего АП",
            "format": "int64",
            "nullable": true,
            "deprecated": true
          },
          "clientTypeCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Тип клиента MDM",
            "nullable": true
          },
          "clientClass": {
            "maxLength": 255,
            "type": "string",
            "description": "Класс клиента",
            "nullable": true
          },
          "opf": {
            "maxLength": 255,
            "type": "string",
            "description": "ОПФ",
            "nullable": true
          },
          "kio": {
            "maxLength": 255,
            "type": "string",
            "description": "КИО",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна регистрации (ISO A2)",
            "nullable": true
          },
          "isBranch": {
            "type": "boolean",
            "description": "Признак филиала",
            "nullable": true
          },
          "okpo": {
            "maxLength": 255,
            "type": "string",
            "description": "ОКПО (Общероссийский классификатор предприятий и организаций)",
            "nullable": true
          },
          "okogu": {
            "maxLength": 255,
            "type": "string",
            "description": "ОКОГУ (Общероссийский классификатор органов государственной власти и управления)",
            "nullable": true
          },
          "okved": {
            "maxLength": 255,
            "type": "string",
            "description": "ОКВЭД (Общероссийский классификатор видов экономической деятельности)",
            "nullable": true
          },
          "additionalOkvedCodes": {
            "maxLength": 255,
            "type": "string",
            "description": "КВЭДы (Общероссийский классификатор видов экономической деятельности)",
            "nullable": true
          },
          "okfs": {
            "maxLength": 255,
            "type": "string",
            "description": "ОКФС (Общероссийский классификатор форм собственности)",
            "nullable": true
          },
          "okopf": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "ОКОПФ (Общероссийский классификатор организационно-правовых форм)",
            "format": "int32",
            "nullable": true
          },
          "oktmo": {
            "maxLength": 255,
            "type": "string",
            "description": "ОКТМО (Общероссийский классификатор территорий муниципальных образований)",
            "nullable": true
          },
          "largeKpp": {
            "maxLength": 255,
            "type": "string",
            "description": "КПП (Код причины постановки на учет) крупнейшего налогоплательщика",
            "nullable": true
          },
          "addresses": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationAddress"
            },
            "description": "Адреса",
            "nullable": true
          },
          "contactInformation": {
            "$ref": "#/components/schemas/OrganizationContactInformation"
          },
          "documents": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationDocument"
            },
            "description": "Документы ЮЛ",
            "nullable": true
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "qualifiedInvestor": {
            "$ref": "#/components/schemas/QualifiedInvestor"
          },
          "risk": {
            "$ref": "#/components/schemas/OrganizationRisk"
          },
          "restrictions": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRestriction"
            },
            "description": "Ограничения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель юридического лица"
      },
      "OrganizationRisk": {
        "type": "object",
        "properties": {
          "riskLevelCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Уровень риска",
            "nullable": true
          },
          "riskNotes": {
            "maxLength": 255,
            "type": "string",
            "description": "Оценка уровня риска",
            "nullable": true
          },
          "dateRisk": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата оценки риска",
            "nullable": true,
            "example": "2024-04-10"
          },
          "dateNextRisk": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата план. пересмотра уровня риска",
            "nullable": true,
            "example": "2024-04-10"
          }
        },
        "additionalProperties": false,
        "description": "Риски"
      },
      "PassiveAccount": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Номер пассивного счёта"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          }
        },
        "additionalProperties": false,
        "description": "Параметры пассивного счёта"
      },
      "PassiveAccountIdentifierDto": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Идентификатор пассивного счета."
      },
      "PassiveAccountModel": {
        "required": [
          "accountClass",
          "accountingEntityType",
          "accountSubClass"
        ],
        "type": "object",
        "properties": {
          "accountClass": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Вид счета"
          },
          "accountSubClass": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Подвид счета"
          },
          "accountingEntityType": {
            "$ref": "#/components/schemas/AccountingEntityType"
          },
          "parentAccount": {
            "maxLength": 255,
            "type": "string",
            "description": "Базовый счет",
            "nullable": true
          },
          "segregationType": {
            "$ref": "#/components/schemas/PassiveAccountSegregationType"
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия счета.",
            "example": "2024-04-10"
          },
          "legacyAccount": {
            "$ref": "#/components/schemas/LegacyAccountDto"
          },
          "explicitNameBasis": {
            "maxLength": 255,
            "type": "string",
            "description": "Базовая часть наименования счета, заданная в явном виде.",
            "nullable": true
          },
          "agreementType": {
            "maxLength": 255,
            "type": "string",
            "description": "Тип договора.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель обновления данных счета депо"
      },
      "PassiveAccountSegregationType": {
        "maxLength": 255,
        "enum": [
          "TKS1",
          "TKS2",
          "TKS3"
        ],
        "type": "string"
      },
      "PassiveSubaccountCreateModel": {
        "required": [
          "number",
          "openingTimestampUtc",
          "passiveSubAccountSubType",
          "sectionName",
          "state",
          "storage",
          "subaccountCode"
        ],
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер счёта"
          },
          "passiveSubAccountSubType": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Код раздела"
          },
          "sectionName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Наименование раздела"
          },
          "subaccountCode": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Код активного раздела"
          },
          "storage": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Место хранения"
          },
          "state": {
            "$ref": "#/components/schemas/AccountState"
          },
          "openingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время открытия счета в формате UTC.",
            "format": "date-time"
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия раздела.",
            "example": "2024-04-10"
          },
          "closingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время закрытия счета в формате UTC.",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель для создания пассивного раздела"
      },
      "PassiveSubaccountSubtype": {
        "type": "object",
        "properties": {
          "subaccountType": {
            "$ref": "#/components/schemas/SubaccountType"
          },
          "subaccountAffiliation": {
            "$ref": "#/components/schemas/SubaccountAffiliation"
          }
        },
        "additionalProperties": false
      },
      "PaymentAccount": {
        "type": "object",
        "properties": {
          "currency": {
            "maxLength": 255,
            "type": "string",
            "description": "Валюта счета (буквенный код по ИСО 4217)",
            "nullable": true
          },
          "accountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета получателя",
            "nullable": true
          },
          "paymentAccountType": {
            "$ref": "#/components/schemas/PaymentAccountType"
          },
          "correspondentBank": {
            "$ref": "#/components/schemas/BankIdentity"
          },
          "intermediaryBank": {
            "$ref": "#/components/schemas/BankIdentity"
          },
          "intermediaryAccountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета банка посредника",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Реквизит расчётного счета."
      },
      "PaymentAccountAssignment": {
        "maxLength": 255,
        "enum": [
          "Income",
          "Commission",
          "Other"
        ],
        "type": "string"
      },
      "PaymentAccountDto": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Идентификатор счета.",
            "format": "int64"
          },
          "passiveAccount": {
            "$ref": "#/components/schemas/PassiveAccountIdentifierDto"
          },
          "accountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета.",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/CurrencySimpleDto"
          },
          "accountAssignment": {
            "$ref": "#/components/schemas/PaymentAccountAssignment"
          },
          "paymentAccountType": {
            "$ref": "#/components/schemas/PaymentAccountType"
          },
          "correspondentPaymentDetails": {
            "$ref": "#/components/schemas/CorrespondentPaymentDetailsDto"
          },
          "correspondentBankDetails": {
            "$ref": "#/components/schemas/BankDetailsDto"
          },
          "intermediaryBankDetails": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntermediaryBankDetailsChainItemDto"
            },
            "description": "Реквизиты банка-посредника.",
            "nullable": true
          },
          "creditCard": {
            "maxLength": 255,
            "type": "string",
            "description": "Банковская карта.",
            "nullable": true
          },
          "priorityOrder": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Уровень приоритета.",
            "format": "int32"
          },
          "settingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата установки.",
            "format": "date-time"
          },
          "adminOperation": {
            "$ref": "#/components/schemas/AdminOperationDto"
          }
        },
        "additionalProperties": false,
        "description": "Расчетный счет."
      },
      "PaymentAccountType": {
        "maxLength": 255,
        "enum": [
          "Own",
          "Brokerage"
        ],
        "type": "string"
      },
      "PaymentAccountsCreateModel": {
        "required": [
          "accountNumber",
          "currency",
          "paymentTo306"
        ],
        "type": "object",
        "properties": {
          "depoAccountNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета депо",
            "nullable": true
          },
          "paymentMethod": {
            "$ref": "#/components/schemas/PaymentMethod"
          },
          "accountAssignments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentAccountAssignment"
            },
            "description": "Назначения расчетного счета. Для каких целей предназначен счет.",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Currency"
          },
          "paymentTo306": {
            "type": "boolean",
            "description": "Получение выплат на 306",
            "default": false
          },
          "incomeType": {
            "$ref": "#/components/schemas/IncomeType"
          },
          "incomeCurrency": {
            "$ref": "#/components/schemas/Currency"
          },
          "accountNumber": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер счета получателя"
          },
          "accountName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование получателя",
            "nullable": true
          },
          "bankBic": {
            "maxLength": 255,
            "type": "string",
            "description": "БИК банка получателя",
            "nullable": true
          },
          "bankInn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН банка получателя",
            "nullable": true
          },
          "bankKpp": {
            "maxLength": 255,
            "type": "string",
            "description": "КПП банка получателя",
            "nullable": true
          },
          "bankSwift": {
            "maxLength": 255,
            "type": "string",
            "description": "SWIFT код банка получателя",
            "nullable": true
          },
          "bankKpmv": {
            "maxLength": 255,
            "type": "string",
            "description": "КПМВ/СПФС  код банка получателя",
            "nullable": true
          },
          "bankCorrAccount": {
            "maxLength": 255,
            "type": "string",
            "description": "Корр / счет банка получателя",
            "nullable": true
          },
          "bankName": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование банка получателя",
            "nullable": true
          },
          "bankAccount": {
            "maxLength": 255,
            "type": "string",
            "description": "Счет банка получателя в банке посреднике",
            "nullable": true
          },
          "bankCountry": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна банка получателя в банке посреднике",
            "nullable": true
          },
          "bankCity": {
            "maxLength": 255,
            "type": "string",
            "description": "Город банка получателя в банке посреднике",
            "nullable": true
          },
          "bankAddress": {
            "maxLength": 255,
            "type": "string",
            "description": "Адрес банка получателя в банке посреднике",
            "nullable": true
          },
          "intermediaryBanks": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IntermediaryBank"
            },
            "description": "Банки-посредники",
            "nullable": true
          },
          "addInfo": {
            "maxLength": 255,
            "type": "string",
            "description": "Дополнительные реквизиты",
            "nullable": true
          },
          "addPaymentPurpose": {
            "maxLength": 255,
            "type": "string",
            "description": "Дополнительное назначение платежа",
            "nullable": true
          },
          "creditCard": {
            "maxLength": 255,
            "type": "string",
            "description": "Банковская карта.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование счёта",
            "nullable": true
          },
          "accountClassCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Уникальный мнемонический код счета",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Банковские реквизиты"
      },
      "PaymentMethod": {
        "maxLength": 255,
        "enum": [
          "DirectDebiting",
          "Invoicing"
        ],
        "type": "string"
      },
      "PersonAddress": {
        "type": "object",
        "properties": {
          "typeCode": {
            "maxLength": 30,
            "type": "string",
            "description": "Тип адреса (Справочные данные)",
            "nullable": true
          },
          "country": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна",
            "nullable": true
          },
          "fullAddress": {
            "maxLength": 1000,
            "type": "string",
            "description": "Полный адрес",
            "nullable": true
          },
          "okato": {
            "maxLength": 100,
            "type": "string",
            "description": "ОКАТО (Общероссийский классификатор объектов административно-территориального деления)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Адреса ФЛ"
      },
      "PersonContactInformation": {
        "type": "object",
        "properties": {
          "phone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона",
            "nullable": true
          },
          "email": {
            "maxLength": 255,
            "type": "string",
            "description": "Email",
            "nullable": true
          },
          "brokerEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "Брокерский email",
            "nullable": true
          },
          "depositoryEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "Депозитарный email",
            "nullable": true
          },
          "fax": {
            "maxLength": 255,
            "type": "string",
            "description": "Факс",
            "nullable": true
          },
          "brokerPhone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона (для брокерских операций)",
            "nullable": true
          },
          "depoPhone": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер телефона (для депозитарных операций)",
            "nullable": true
          },
          "depositoryFax": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер факса (для депозитарных операций)",
            "nullable": true
          },
          "corpActEmail": {
            "maxLength": 255,
            "type": "string",
            "description": "E-mail (для КД Депозитария)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Контактная информация ФЛ"
      },
      "PersonCreateModel": {
        "required": [
          "addresses",
          "clientType",
          "contactInformation",
          "firstName",
          "genderCode",
          "identityDocuments",
          "isTaxResident",
          "lastName",
          "mdmId",
          "nationalityCountryCode",
          "qualifiedInvestor"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id",
            "format": "int64",
            "nullable": true
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Имя"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Фамилия"
          },
          "middleName": {
            "maxLength": 50,
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "firstNameLat": {
            "maxLength": 82,
            "type": "string",
            "description": "Имя (латинскими буквами)",
            "nullable": true
          },
          "middleNameLat": {
            "maxLength": 82,
            "type": "string",
            "description": "Отчество (латинскими буквами)",
            "nullable": true
          },
          "lastNameLat": {
            "maxLength": 82,
            "type": "string",
            "description": "Фамилия (латинскими буквами)",
            "nullable": true
          },
          "fullNameLat": {
            "maxLength": 255,
            "type": "string",
            "description": "ИОФ полностью (латинскими буквами)",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата рождения",
            "example": "2024-04-10"
          },
          "tin": {
            "maxLength": 80,
            "type": "string",
            "description": "ТИН",
            "nullable": true
          },
          "inn": {
            "maxLength": 12,
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "taxResidencyCountry": {
            "maxLength": 3,
            "type": "string",
            "description": "Государство (территория) налогового резидентства физического лица",
            "nullable": true
          },
          "nationalityCountryCode": {
            "maxLength": 32,
            "minLength": 1,
            "type": "string",
            "description": "Страна"
          },
          "mdmId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "description": "Id клиента"
          },
          "mdmType": {
            "maxLength": 32,
            "type": "string",
            "description": "Тип клиента МДМ",
            "nullable": true
          },
          "genderCode": {
            "$ref": "#/components/schemas/GenderCode"
          },
          "isResident": {
            "type": "boolean",
            "description": "Валютный резидент РФ",
            "nullable": true
          },
          "isTaxResident": {
            "type": "boolean",
            "description": "Налоговый резидент РФ"
          },
          "addresses": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonAddress"
            },
            "description": "Адреса"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/PersonContactInformation"
          },
          "identityDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDocument"
            },
            "description": "ДУЛ"
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "qualifiedInvestor": {
            "$ref": "#/components/schemas/QualifiedInvestor"
          },
          "numberSnils": {
            "maxLength": 30,
            "type": "string",
            "description": "СНИЛС",
            "nullable": true
          },
          "risk": {
            "$ref": "#/components/schemas/PersonRisk"
          },
          "isBankEmployee": {
            "type": "boolean",
            "description": "Признак сотрудника банка",
            "nullable": true
          },
          "adsId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "АДС Id",
            "format": "int64",
            "nullable": true
          },
          "zFrontId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ZFront Id",
            "format": "int64",
            "nullable": true
          },
          "deathDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата смерти",
            "nullable": true,
            "example": "2024-04-10"
          },
          "restrictions": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRestriction"
            },
            "description": "Ограничения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Данные создаваемого физического лица"
      },
      "PersonOrderCreateModel": {
        "required": [
          "adminOrder",
          "person"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "person": {
            "$ref": "#/components/schemas/PersonCreateModel"
          },
          "changedFields": {
            "maxItems": 2147483647,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 255,
              "type": "string"
            },
            "description": "Список полей в которых изменилось значение",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Административное поручение на создание ФЛ"
      },
      "PersonOutput": {
        "type": "object",
        "properties": {
          "auxClientInformation": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientInformationResponse"
            },
            "nullable": true
          },
          "OMS": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personIdentificationStatus": {
            "$ref": "#/components/schemas/IdentificationStatus"
          },
          "contactParentRelationship": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactParentRelationshipModel"
            },
            "nullable": true
          },
          "birthDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "birthDateQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthdatePopularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "deathDateTime": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "deathDateQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlace": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualCountryCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceOkato": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceCountry": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceSettlement": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceRegion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceRayon": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceCity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualCountry": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualRegion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualRayon": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualCity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceActualSettlement": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceValidationCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "birthPlaceValidationExtension": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "blackList": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BlackList"
            },
            "nullable": true
          },
          "citizenship": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "contactIdentity": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactIdentity"
            },
            "nullable": true
          },
          "contactRelationship": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactRelationshipModel0"
            },
            "nullable": true
          },
          "createdExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lfmAblative": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lfmDative": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "lfmGenitive": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "maritalStatus": {
            "maximum": 10000,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "matchRule": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "matchScore": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "mf": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "genderQualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "partyUId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalAddress": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonalAddress"
            },
            "nullable": true
          },
          "phoneCommunication": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PhoneCommunication"
            },
            "nullable": true
          },
          "plannedUpdateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "riskLevel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "riskLevelJustification": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JustificationRiskModel"
            },
            "nullable": true
          },
          "segment": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Segment"
            },
            "nullable": true
          },
          "surName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "tin": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "innQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "innConfirmed": {
            "type": "boolean",
            "nullable": true
          },
          "typePerson": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "identifierEsia": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "verificationEsiaDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "lastNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "firstNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "middleNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "previousNameQC": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "unconfirmedDeathFlag": {
            "type": "boolean",
            "nullable": true
          },
          "unconfirmedDeathDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "fullNameEditedChanges": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fullNameNSReasons": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "codeTCCB": {
            "$ref": "#/components/schemas/PersonOutputCodeTCCB"
          }
        },
        "additionalProperties": false
      },
      "PersonOutputCodeTCCB": {
        "maxLength": 255,
        "enum": [
          "_15",
          "_16"
        ],
        "type": "string"
      },
      "PersonReadModel": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": 0,
            "type": "integer",
            "description": "Id",
            "format": "int64"
          },
          "createdAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата создания",
            "format": "date-time",
            "nullable": true
          },
          "updatedAt": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата обновления",
            "format": "date-time",
            "nullable": true
          },
          "firstName": {
            "maxLength": 255,
            "type": "string",
            "description": "Имя",
            "nullable": true
          },
          "lastName": {
            "maxLength": 255,
            "type": "string",
            "description": "Фамилия",
            "nullable": true
          },
          "middleName": {
            "maxLength": 255,
            "type": "string",
            "description": "Отчество",
            "nullable": true
          },
          "fullName": {
            "maxLength": 255,
            "type": "string",
            "description": "ФИО",
            "nullable": true
          },
          "firstNameLat": {
            "maxLength": 255,
            "type": "string",
            "description": "Имя (латинскими буквами)",
            "nullable": true
          },
          "middleNameLat": {
            "maxLength": 255,
            "type": "string",
            "description": "Отчество (латинскими буквами)",
            "nullable": true
          },
          "lastNameLat": {
            "maxLength": 255,
            "type": "string",
            "description": "Фамилия (латинскими буквами)",
            "nullable": true
          },
          "fullNameLat": {
            "maxLength": 255,
            "type": "string",
            "description": "ИОФ полностью (латинскими буквами)",
            "nullable": true
          },
          "birthDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "дата рождения",
            "nullable": true,
            "example": "2024-04-10"
          },
          "tin": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификационный номер налогоплательщика",
            "nullable": true
          },
          "inn": {
            "maxLength": 255,
            "type": "string",
            "description": "ИНН",
            "nullable": true
          },
          "taxResidencyCountry": {
            "maxLength": 255,
            "type": "string",
            "description": "Государство (территория) налогового резидентства физического лица",
            "nullable": true
          },
          "nationalityCountryCode": {
            "maxLength": 255,
            "type": "string",
            "description": "Страна",
            "nullable": true
          },
          "mdmId": {
            "maxLength": 255,
            "type": "string",
            "description": "МДМ код клиента",
            "nullable": true
          },
          "adsId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "АДС Id",
            "format": "int64",
            "nullable": true
          },
          "zFrontId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "ZFront Id",
            "format": "int64",
            "nullable": true
          },
          "adminOrders": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "maximum": 9007199254740991,
              "minimum": -9007199254740991,
              "type": "integer",
              "format": "int64"
            },
            "description": "Связанные поручения",
            "nullable": true
          },
          "adminOrderId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id последнего АП",
            "format": "int64",
            "nullable": true,
            "deprecated": true
          },
          "mdmType": {
            "maxLength": 255,
            "type": "string",
            "description": "Типы клиентов по отношению к Банку",
            "nullable": true
          },
          "genderCode": {
            "$ref": "#/components/schemas/GenderCode"
          },
          "isResident": {
            "type": "boolean",
            "description": "Валютный резидент РФ",
            "nullable": true
          },
          "isTaxResident": {
            "type": "boolean",
            "description": "Налоговый резидент РФ",
            "nullable": true
          },
          "addresses": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PersonAddress"
            },
            "description": "Адреса",
            "nullable": true
          },
          "contactInformation": {
            "$ref": "#/components/schemas/PersonContactInformation"
          },
          "identityDocuments": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityDocument"
            },
            "description": "ДУЛ",
            "nullable": true
          },
          "clientType": {
            "$ref": "#/components/schemas/ClientType"
          },
          "qualifiedInvestor": {
            "$ref": "#/components/schemas/QualifiedInvestor"
          },
          "numberSnils": {
            "maxLength": 255,
            "type": "string",
            "description": "СНИЛС",
            "nullable": true
          },
          "risk": {
            "$ref": "#/components/schemas/PersonRisk"
          },
          "isBankEmployee": {
            "type": "boolean",
            "description": "Признак сотрудника банка",
            "nullable": true
          },
          "deathDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата смерти",
            "nullable": true,
            "example": "2024-04-10"
          },
          "restrictions": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClientRestriction"
            },
            "description": "Ограничения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель физического лица"
      },
      "PersonRisk": {
        "type": "object",
        "properties": {
          "riskLevelJustification": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RiskLevelJustification"
            },
            "description": "RiskLevelJustification",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Риски"
      },
      "PersonalAddress": {
        "type": "object",
        "properties": {
          "addressName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "apartamentNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "building": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "cityType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "country": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "districtType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "house": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "housing": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kladrCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notFormAddrName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "okatoCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalAddressType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalPrefCity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalPrefDistrict": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalPrefSettlement": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalPrefState": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "personalPrefStreet": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "settlementType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "stateNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "stateType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "streetType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "temporaryRegistrationStartDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "temporaryRegistrationEndDate": {
            "maxLength": 30,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kladrPostalCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "district": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "militaryNumber": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "postalBox": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "vladenie": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "hostel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "floor": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "entrance": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "section": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "flat2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "office": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "office2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "room": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "room2": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "kladrActualityDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "oksmCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "oktmoCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fiasCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "fiasLevel": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "qCPostalCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "complCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "checkCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "validationExtension": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PhoneCommunication": {
        "type": "object",
        "properties": {
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "fullPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "notFormFullPhone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "operatorName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneRegion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneType": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "phoneValue": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "rawId": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "trustFlag": {
            "type": "boolean",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "verificated": {
            "type": "boolean",
            "nullable": true
          },
          "verificationDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "operatorAddress": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "timezone": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "countryCode": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "cityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "number": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "extension": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "numberProfile": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "popularity": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "qualityCode": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PlainQuestionModel": {
        "type": "object",
        "properties": {
          "sign": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PodftRequest_plainQuestionSign"
            },
            "nullable": true
          },
          "dateSign": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PodftRequest_plainQuestionDate"
            },
            "nullable": true
          },
          "other": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PodftRequest_plainQuestion"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PodftRequest": {
        "type": "object",
        "properties": {
          "plainQuestion": {
            "$ref": "#/components/schemas/PlainQuestionModel"
          },
          "complexQuestion": {
            "$ref": "#/components/schemas/ComplexQuestionModel"
          }
        },
        "additionalProperties": false
      },
      "PodftRequest_plainQuestion": {
        "type": "object",
        "properties": {
          "question": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "answer": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PodftRequest_plainQuestionDate": {
        "type": "object",
        "properties": {
          "question": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "answer": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PodftRequest_plainQuestionSign": {
        "type": "object",
        "properties": {
          "question": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "answer": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProcessMode": {
        "maxLength": 255,
        "enum": [
          "Standard",
          "Service"
        ],
        "type": "string"
      },
      "PublicPersonInfo3": {
        "type": "object",
        "properties": {
          "publicPersonTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "publicPersonRelativeTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "publicPersonRelativeName": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "publicPersonText": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "publicPersonWorkAddress": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "publicPersonCompany": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "publicPersonPosition": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "QualifiedInvestor": {
        "required": [
          "investorQualificationType"
        ],
        "type": "object",
        "properties": {
          "investorQualificationType": {
            "$ref": "#/components/schemas/InvestorQualificationType"
          },
          "investorQualificationDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата присвоения статуса",
            "nullable": true,
            "example": "2024-04-10"
          },
          "investorQualificationDateOut": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата снятия статуса",
            "nullable": true,
            "example": "2024-04-10"
          },
          "investorQualificationMethod": {
            "$ref": "#/components/schemas/InvestorQualificationMethod"
          },
          "investorQualificationDocumentNumber": {
            "maxLength": 100,
            "type": "string",
            "description": "Номер документа предоставления статуса КИ",
            "nullable": true
          },
          "availableSecurities": {
            "maxLength": 20,
            "type": "string",
            "description": "Доступные ценные бумаги",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Квал инвестор"
      },
      "RegistryEntryDto": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер.",
            "nullable": true
          },
          "timestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время регистрации в формате UTC.",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": "Канцелярская запись."
      },
      "RelHeadBranch2": {
        "type": "object",
        "properties": {
          "headId": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "branchId": {
            "maximum": 79228162514264337593543950335,
            "minimum": -79228162514264337593543950335,
            "type": "number",
            "format": "double"
          },
          "headMdmCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "branchMdmCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelWithSource3": {
        "type": "object",
        "properties": {
          "absCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "externalId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "sourceSystemDte": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "zCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crossRefTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "crossRefMergeTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ssid": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "isIdentified": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedAttorneyLetter": {
        "type": "object",
        "properties": {
          "number": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "principalId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "trusteeType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "trusteeId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "powerOfAttorneyType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "employeeId": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "createdDate": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "validityStart": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "validityEnd": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "relatedEcmUrls": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RelatedEcmUrl"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedEcmUrl": {
        "type": "object",
        "properties": {
          "docType": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "ecmUrl": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RelatedReference": {
        "type": "object",
        "properties": {
          "id": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "externalSystemId": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ReservePassiveAccountCreateModel": {
        "type": "object",
        "properties": {
          "agreementType": {
            "maxLength": 255,
            "type": "string",
            "description": "Тип соглашения",
            "nullable": true
          },
          "agreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер соглашения",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Модель резерва счета"
      },
      "ReservePassiveAccountModel": {
        "required": [
          "adminOrder",
          "depoReservePassiveAccount"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "depoReservePassiveAccount": {
            "$ref": "#/components/schemas/ReservePassiveAccountCreateModel"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          }
        },
        "additionalProperties": false
      },
      "ResponseType2": {
        "type": "object",
        "properties": {
          "questionTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "questionSubTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "code": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RestrictionBehaviorLevel": {
        "maxLength": 255,
        "enum": [
          "Blocking",
          "Warning",
          "Notification"
        ],
        "type": "string"
      },
      "RestrictionDto": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор ограничения.",
            "format": "int32"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование ограничения.",
            "nullable": true
          },
          "description": {
            "maxLength": 255,
            "type": "string",
            "description": "Описание, короткое текстовое описание ограничения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Ограничение."
      },
      "RestrictionEntity": {
        "maxLength": 255,
        "enum": [
          "Client",
          "Account",
          "Security"
        ],
        "type": "string"
      },
      "RiskLevelJustification": {
        "type": "object",
        "properties": {
          "riskLevelCodePerson": {
            "maxLength": 30,
            "type": "string",
            "description": "Уровень риска",
            "nullable": true
          },
          "dateRisk": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата оценки риска",
            "nullable": true,
            "example": "2024-04-10"
          }
        },
        "additionalProperties": false,
        "description": "RiskLevelJustification"
      },
      "SafekeepingAccount": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор счета в месте хранения.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Раздел счёта в месте хранения"
      },
      "SafekeepingAccountSimpleDto": {
        "type": "object",
        "properties": {
          "safekeepingPlace": {
            "$ref": "#/components/schemas/SafekeepingPlaceSimpleDto"
          },
          "id": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор счета в месте хранения.",
            "format": "int32"
          },
          "hierarchyType": {
            "$ref": "#/components/schemas/AccountHierarchyType"
          },
          "number": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер счета в месте хранения.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Название, короткое текстовое описание счета в месте хранения.",
            "nullable": true
          },
          "interdepositoryAgreementNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер междепозитарного договора.",
            "nullable": true,
            "deprecated": true
          },
          "interdepositoryAgreementDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата междепозитарного договора.",
            "nullable": true,
            "example": "2024-04-10",
            "deprecated": true
          },
          "openingDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата открытия счета.",
            "example": "2024-04-10",
            "deprecated": true
          }
        },
        "additionalProperties": false,
        "description": "Счет в месте хранения."
      },
      "SafekeepingPlaceSimpleDto": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 255,
            "type": "string",
            "description": "Уникальный мнемонический код места хранения.",
            "nullable": true
          },
          "referenceId": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор места хранения.",
            "format": "int32",
            "deprecated": true
          },
          "safekeepingPlaceType": {
            "$ref": "#/components/schemas/SafekeepingPlaceTypeSimpleDto"
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование места хранения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Место хранения ценных бумаг."
      },
      "SafekeepingPlaceTypeSimpleDto": {
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 255,
            "type": "string",
            "description": "Уникальный мнемонический код типа места хранения.",
            "nullable": true
          },
          "name": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование типа места хранения.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Тип места хранения."
      },
      "SafekeepingSubaccount": {
        "required": [
          "code",
          "name",
          "openingTimestampUtc"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор раздела счета в месте хранения.",
            "format": "int32"
          },
          "safekeepingAccount": {
            "$ref": "#/components/schemas/SafekeepingAccount"
          },
          "code": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Код раздела счета в месте хранения."
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Название, короткое текстовое описание раздела счета в месте хранения."
          },
          "openingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время открытия счета в формате UTC.",
            "format": "date-time"
          },
          "closingTimestampUtc": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата/время закрытия счета в формате UTC.",
            "format": "date-time",
            "nullable": true
          },
          "accountState": {
            "type": "boolean",
            "description": "Статус раздела."
          }
        },
        "additionalProperties": false,
        "description": "Раздел счёта в месте хранения"
      },
      "SafekeepingSubaccountIdentifier": {
        "type": "object",
        "properties": {
          "id": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Идентификатор раздела счета в месте хранения",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Идентификатор раздела счета в месте хранения."
      },
      "SearchOrganizationsResponse": {
        "type": "object",
        "properties": {
          "organizations": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtalonClientSnapshot2"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Segment": {
        "type": "object",
        "properties": {
          "criterion": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "endDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "loginExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "nameExternalSystem": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "status": {
            "maximum": 10,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "updateDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "value": {
            "maxLength": 30,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Segment2": {
        "type": "object",
        "properties": {
          "segmentTypeCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "segmentValue": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "segmentCriterionCode": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "segmentCriterion": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "segmentDTC": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "segmentDTE": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          },
          "segmentDTM": {
            "maxLength": 255,
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "SetClientRestrictionsCreateModel": {
        "required": [
          "restrictions"
        ],
        "type": "object",
        "properties": {
          "adminOrder": {
            "$ref": "#/components/schemas/AdminOrderCreateModel"
          },
          "restrictions": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SetRestrictionAction"
            },
            "description": "Изменяемые ограничения"
          },
          "personMdmId": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификатор МДМ ФЛ",
            "nullable": true
          },
          "organizationMdmId": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификатор МДМ ЮЛ",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Админисистративное поручение на установку ограничений на клиента"
      },
      "SetRestrictionAction": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Тип ограничения",
            "format": "int64"
          },
          "restrictionAction": {
            "$ref": "#/components/schemas/ClientRestrictionAction"
          }
        },
        "additionalProperties": false,
        "description": "Ограничения пассивного счёта"
      },
      "SigningKind": {
        "maxLength": 255,
        "enum": [
          "Digital",
          "Paper"
        ],
        "type": "string",
        "description": "Способ подписания"
      },
      "Smb": {
        "maxLength": 255,
        "enum": [
          "SMB",
          "KIB"
        ],
        "type": "string",
        "description": "СМБ/КИБ"
      },
      "SubaccountAffiliation": {
        "required": [
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Тип принадлежности раздела.",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Идентификатор принадлежности раздела счета."
      },
      "SubaccountClass": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 1,
            "minLength": 1,
            "type": "string",
            "description": "Код вида раздела."
          }
        },
        "additionalProperties": false,
        "description": "Вида раздела"
      },
      "SubaccountSubclasses": {
        "required": [
          "code"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Код подвида раздела"
          }
        },
        "additionalProperties": false,
        "description": "Подвиды раздела."
      },
      "SubaccountType": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "code": {
            "maxLength": 3,
            "minLength": 1,
            "type": "string",
            "description": "Код типа раздела активного счёта"
          },
          "name": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Наименование подтипа раздела"
          },
          "nameEng": {
            "maxLength": 255,
            "type": "string",
            "description": "Наименование подтипа раздела на английском языке.",
            "nullable": true
          },
          "nameExtension": {
            "maxLength": 50,
            "type": "string",
            "description": "Расширение наименования подтипа раздела.",
            "nullable": true
          },
          "nameExtensionEng": {
            "maxLength": 50,
            "type": "string",
            "description": "Расширение наименования подтипа раздела на английском языке.",
            "nullable": true
          },
          "subaccountClass": {
            "$ref": "#/components/schemas/SubaccountClass"
          },
          "subaccountSubclasses": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubaccountSubclasses"
            },
            "description": "Подвиды раздела.",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Тип раздела счета."
      },
      "TaxResidencyCountryModel": {
        "type": "object",
        "properties": {
          "actingFlag": {
            "type": "boolean",
            "nullable": true
          },
          "countryName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "addressInResidencyCountry": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TIN": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "TINAbsenceReason": {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detectionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "exclusionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "employeeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "changeDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "descriptionTINAbsenceReason": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taxResidencyStatus": {
            "maxItems": 1000,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaxResidencyStatusModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TaxResidencyStatusModel": {
        "type": "object",
        "properties": {
          "actingFlag": {
            "type": "boolean",
            "nullable": true
          },
          "countryName": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "investmentResidency": {
            "maximum": 150,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "anotherCountryResidency": {
            "maximum": 150,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "livingInAnotherCountry": {
            "maximum": 150,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "anotherCountryName": {
            "maxLength": 10,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "taxInAnotherCountry": {
            "maximum": 150,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "nonPaymentOfTaxReason": {
            "maxLength": 250,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "anotherCountryCenter": {
            "maximum": 150,
            "minimum": 0,
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detectionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "exclusionDate": {
            "maxLength": 100,
            "minLength": 0,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "nullable": true
          },
          "changeDate": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "employeeName": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TrusteeAppointmentAttorneyCreateModel": {
        "required": [
          "attorneyDate",
          "attorneyNumber",
          "documentType",
          "isForAllPassiveAccounts"
        ],
        "type": "object",
        "properties": {
          "attorneyNumber": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер доверенности"
          },
          "attorneyDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата доверенности",
            "example": "2024-04-10"
          },
          "documentType": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Тип документа, подтверждающий полномочия"
          },
          "attorneyStartDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата начала действия",
            "nullable": true,
            "example": "2024-04-10"
          },
          "attorneyEndDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата окончания действия",
            "nullable": true,
            "example": "2024-04-10"
          },
          "attorneyRevokedDate": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата отзыва доверенности",
            "format": "date-time",
            "nullable": true
          },
          "isForAllPassiveAccounts": {
            "type": "boolean",
            "description": "Признак назначения доверенности на все счета"
          },
          "comment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий",
            "nullable": true
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          },
          "passiveAccounts": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrusteeAppointmentAttorneyPassiveAccount"
            },
            "description": "Пассивные счета доверенности",
            "nullable": true
          },
          "trustees": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrusteeAppointmentWriteModel"
            },
            "description": "Уполномоченные лица доверенности",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Доверенность на назначение уполномоченных лиц"
      },
      "TrusteeAppointmentAttorneyPassiveAccount": {
        "required": [
          "passiveAccountNumber"
        ],
        "type": "object",
        "properties": {
          "passiveAccountNumber": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Номер пассивного счета доверенности"
          }
        },
        "additionalProperties": false,
        "description": "Пассивнй счет доверенности"
      },
      "TrusteeAppointmentAttorneyWriteModel": {
        "required": [
          "attorneyDate",
          "attorneyNumber",
          "documentType",
          "isForAllPassiveAccounts",
          "isRevoked"
        ],
        "type": "object",
        "properties": {
          "attorneyNumber": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Номер доверенности"
          },
          "attorneyDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата доверенности",
            "example": "2024-04-10"
          },
          "documentType": {
            "maxLength": 20,
            "minLength": 1,
            "type": "string",
            "description": "Тип документа, подтверждающий полномочия"
          },
          "attorneyStartDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата начала доверенности",
            "nullable": true,
            "example": "2024-04-10"
          },
          "attorneyEndDate": {
            "maxLength": 10,
            "pattern": "^[0-9]{4}-[0-9]{2}-[0-9]{2}$",
            "type": "string",
            "description": "Дата конца доверенности",
            "nullable": true,
            "example": "2024-04-10"
          },
          "isRevoked": {
            "type": "boolean",
            "description": "Признак отзыва доверенности"
          },
          "attorneyRevokedDate": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата отзыва доверенности",
            "format": "date-time",
            "nullable": true
          },
          "cancelAttorneyNumber": {
            "maxLength": 255,
            "type": "string",
            "description": "Номер доверенности отмены",
            "nullable": true
          },
          "cancelAttorneyDate": {
            "maxLength": 255,
            "type": "string",
            "description": "Дата отмены доверенности",
            "format": "date-time",
            "nullable": true
          },
          "cancelDocumentType": {
            "maxLength": 20,
            "type": "string",
            "description": "Тип документа отмены доверенности",
            "nullable": true
          },
          "isForAllPassiveAccounts": {
            "type": "boolean",
            "description": "Признак назначения доверенности на все счета"
          },
          "comment": {
            "maxLength": 255,
            "type": "string",
            "description": "Комментарий",
            "nullable": true
          },
          "adminOrderId": {
            "maximum": 9007199254740991,
            "minimum": -9007199254740991,
            "type": "integer",
            "description": "Id последнего АП",
            "format": "int64"
          },
          "person": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "organization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          },
          "passiveAccounts": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrusteeAppointmentAttorneyPassiveAccount"
            },
            "description": "Пассивные счета доверенности",
            "nullable": true
          },
          "trustees": {
            "maxItems": 2147483647,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TrusteeAppointmentWriteModel"
            },
            "description": "Уполномоченные лица доверенности",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Доверенность уполномоченного лица"
      },
      "TrusteeAppointmentWriteModel": {
        "type": "object",
        "properties": {
          "correlationId": {
            "maxLength": 255,
            "type": "string",
            "description": "Идентификатор сообщения в асинхронном процессе (транспорт Кафка)",
            "nullable": true,
            "readOnly": true
          },
          "priorityNumber": {
            "maximum": 2147483647,
            "minimum": -2147483648,
            "type": "integer",
            "description": "Номер очередности УЛ при отображении на фронте",
            "format": "int32",
            "nullable": true
          },
          "trusteePerson": {
            "$ref": "#/components/schemas/PersonReadModel"
          },
          "trusteeOrganization": {
            "$ref": "#/components/schemas/OrganizationReadModel"
          }
        },
        "additionalProperties": false,
        "description": "Модель назначения уполномоченного лица (УЛ)"
      }
    },
    "securitySchemes": {
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://adsd-access-control-tis.dk1-adsd01.dv.adsd.innodev.local/connect/authorize",
            "tokenUrl": "https://adsd-access-control.dk1-adsd01.dv.adsd.innodev.local/token",
            "scopes": {
              "openid": "Subject",
              "profile": "Profile"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Банковские реквизиты"
    },
    {
      "name": "Доверенности УЛ"
    },
    {
      "name": "Канцелярия"
    },
    {
      "name": "Обращение к Общим Сервисам"
    },
    {
      "name": "Управление административными поручениями"
    }
  ]
}