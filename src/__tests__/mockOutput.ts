export const expectedParsedData = [
  {
      "path": "/Общие ошибки API",
      "method": "get",
      "methodDesc": "Описание общих ошибок методов API",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/catalogs/search",
      "method": "post",
      "methodDesc": "Поиск по списку каталогов заполнения",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\nЕсли переданы несуществующие идентификаторы категории, ОИВ, системы-потребителя, то также возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке каталогов.\nПоиск производится по атрибутам идентификатору и полному наименованию каталога.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nresponsiblePerson,\ncountActiveObjects,\ncountUnsignedObjects,\ncountObjects,\ndateLastSign,\ndateNextUpdate,\nstatusSignObjects,\nstatusSignMetadata\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "string[\nasc,\ndesc\n]",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false
          },
          {
              "paramName": "statusSigning",
              "paramIn": "query",
              "paramType": "string[\nsigned,\nneverSigned,\nhasChange,\narchive\n]",
              "description": "Статус подписания каталога. Может принимать следующие значения:\n  - `signed` - подписанный, изменения отсутствуют. Каталог имеет этот статус при выполнении условия:\n    statusSignObjects = signed И statusSignMetadata = signed\n  - `neverSigned` - ни разу не подписан. Каталог имеет этот статус при выполнении условия:\n    dateLastSign=null И statusSignObjects != archive\n  - `hasChange` - подписанный, имеются изменения. Каталог имеет этот статус при выполнении условия:\n    dateLastSign = {value} И (statusSignObjects = unsigned ИЛИ statusSignMetadata = unsigned)\n  - `archive` - в архиве. Каталог имеет этот статус при выполнении условия:\n    statusSignObjects = archive И statusSignMetadata = archive",
              "required": false,
          },
          {
              "paramName": "planSigning",
              "paramIn": "query",
              "paramType": "string[\nok,\nless3Day,\nexpired\n]",
              "description": "Статус просрочки подписания каталога. Может принимать следующие значения:\n  - `ok` - срок планового подписания не нарушен. Включает каталоги, для которых dateNextUpdate строго больше текущей даты ИЛИ является null.\n  - `less3Day` - до планового подписания менее 3-х дней. Вклячает каталоги, у которых dateNextUpdate меньше или равна текущей даты + 3 дня.\n  - `expired` - плановое подписание просрочено. Включает каталоги, для которых dateNextUpdate строго меньше текущей даты.",
              "required": false,
          }
      ]
  },
  {
      "path": "/catalogs",
      "method": "post",
      "methodDesc": "Первичное сохранение каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "generalInfo",
                  "paramType": "object",
                  "description": "Настройки вкладки \"Общая информация\" каталога заполнения",
                  "required": true,
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "array[StringFillingCatalogAttribute,IntegerFillingCatalogAttribute,FloatFillingCatalogAttribute,DateFillingCatalogAttribute,BooleanFillingCatalogAttribute,FileFillingCatalogAttribute,DictFillingCatalogAttribute,LinkFillingCatalogAttribute,TableFillingCatalogAttribute]",
                  "description": "Атрибут каталога заполнения",
                  "required": false,
              },
              {
                  "paramName": "meta",
                  "paramType": "object",
                  "description": "Настройки вкладки \"Метаданные\" каталога заполнения",
                  "required": false,
              },
              {
                  "paramName": "constructor[index]",
                  "paramType": "array[ConstructorPackageData]",
                  "description": "Настройки конструктора процессов. Представляет собой массив пакетов.",
                  "required": false,
              },
              {
                  "paramName": "constructor[index].tomlFormat",
                  "paramType": "string",
                  "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                  "required": true,
              },
              {
                  "paramName": "constructor[index].jsonFormat",
                  "paramType": "object",
                  "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                  "required": true,
              },
              {
                  "paramName": "constructor[index].jsonFormat.groups[index]",
                  "paramType": "array[object]",
                  "description": "Массив групп атрибутов",
                  "required": true,
              },
              {
                  "paramName": "constructor[index].jsonFormat.groups[index].groupTechName",
                  "paramType": "string[^[a-zA-Z][_a-zA-Z0-9]*$]",
                  "description": "Технологическое наименование группы атрибутов. Должно быть уникально в рамках групп одного каталога.",
                  "required": true,
              },
              {
                  "paramName": "constructor[index].jsonFormat.groups[index].groupName",
                  "paramType": "string",
                  "description": "Пользовательское наименование группы атрибутов.",
                  "required": false,
              },
              {
                  "paramName": "constructor[index].jsonFormat.groups[index].applyTableAttr",
                  "paramType": "string",
                  "description": "Группа атрибутов настраивается из табличного атрибута и применяется ко всему вложенному каталогу. Указывается табличный атрибут в формате attr.{TableTechName1}.{TableTechName11}.{TableTechName111}.{и т.д.}. То есть указывается вся последовательность табличных атрибутов от корня до того, для которого настраивается группа.\n\nЕсли передано данное поле, то в описании блоков могут использоваться только атрибуты внутри указанной таблицы.",
                  "required": false,
              },
              {
                  "paramName": "constructor[index].jsonFormat.groups[index].attributes",
                  "paramType": "array[string]",
                  "description":  "Массив атрибутов, входящих в группу. Указываются в формате attr.{techNameAttr}",
                  "required": true,
              },
              {
                  "paramName": "constructor[index].jsonFormat.groups[index].condition",
                  "paramType": "string",
                  "description": "Условие, описанное в синтаксисе условий конструктора проверок. Доступны все типы атрибутов каталога, включая системные.",
                  "required": false,
              },
              {
                  "paramName": "conditionalUniq",
                  "paramType": "string",
                  "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                  "required": false,
              },
              {
                  "paramName": "groupUniq",
                  "paramType": "string",
                  "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                  "required": false,
              },
              {
                  "paramName": "map",
                  "paramType": "object",
                  "description": "",
                  "required": false,
              },
              {
                  "paramName": "map.hasGeo",
                  "paramType": "boolean",
                  "description": "Наличие геопривязки в каталоге",
                  "required": true,
              },
              {
                  "paramName": "map.typeGeoTagIds",
                  "paramType": "array[string[MultiPoint,MultiLineString,MultiPolygon]]",
                  "description": "Массив строковых идентификаторов типов геометрии",
                  "required": false,
              },
              {
                  "paramName": "map.isWGS84",
                  "paramType": "boolean",
                  "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                  "required": false,
              },
              {
                  "paramName": "map.isReq",
                  "paramType": "boolean",
                  "description": "Обязательность геопривязки",
                  "required": false,
              },
              {
                  "paramName": "map.isOneTypeGeoForObj",
                  "paramType": "boolean",
                  "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                  "required": false,
              },
              {
                  "paramName": "map.isNotReqGeoForService",
                  "paramType": "boolean",
                  "description": "Необязательность геометрии при загрузке через сервис",
                  "required": false,
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/catalogs",
      "method": "delete",
      "methodDesc": "Отметка каталога удалённым",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogIds",
              "paramIn": "query",
              "paramType": "array[integer]",
              "description": "Массив идентификаторов каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}",
      "method": "put",
      "methodDesc": "Изменение настроек каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "generalInfo",
                  "paramType": "object",
                  "description": "Настройки вкладки \"Общая информация\" каталога заполнения",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.id",
                  "paramType": "integer",
                  "description": "Идентификатор каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.fullName",
                  "paramType": "string",
                  "description": "Полное наименование каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.technicalName",
                  "paramType": "string",
                  "description": "Технологическое наименование каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.shortName",
                  "paramType": "string",
                  "description": "Краткое наименование каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.kindCatalog",
                  "paramType": "object",
                  "description": "Вид каталога",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.kindCatalog.id",
                  "paramType": "integer(int32)",
                  "description": "Идентификатор вида каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.kindCatalog.name",
                  "paramType": "string",
                  "description": "Название вида каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.kindCatalogId",
                  "paramType": "integer",
                  "description": "Идентификатор вида каталога",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.typeCatalog",
                  "paramType": "object",
                  "description": "Тип каталога",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.typeCatalog",
                  "paramType": "object",
                  "description": "Тип каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.typeCatalog.id",
                  "paramType": "integer(int32)",
                  "description": "Идентификатор типа каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.typeCatalog.name",
                  "paramType": "string",
                  "description": "Название типа каталога",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.typeCatalogId",
                  "paramType": "integer",
                  "description": "Идентификатор типа каталога",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.thematicCategory",
                  "paramType": "object",
                  "description": "Тематическая категория каталога",
                  "required": true,
              },
              {
                "paramName": "generalInfo.thematicCategory.id",
                "paramType": "integer(int32)",
                "description": "Идентификатор тематической категории",
                "required": true,
              },
              {
                  "paramName": "generalInfo.thematicCategory.name",
                  "paramType": "string",
                  "description": "Русскоязычное наименование тематической категории",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.thematicCategoryId",
                  "paramType": "integer",
                  "description": "Идентификатор тематической категории каталога",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.objectCategories[index]",
                  "paramType": "array[object]",
                  "description": "Категории объекта",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.objectCategories[index].id",
                  "paramType": "integer(int32)",
                  "description": "Идентификатор категории объектов",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.objectCategories[index].rusName",
                  "paramType": "string",
                  "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.objectCategories[index].enName",
                  "paramType": "string",
                  "description": "Англоязычное наименование категории объектов",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.oivs[index]",
                  "paramType": "array[object]",
                  "description": "Поставщики информации каталога (ответственные ОИВы)",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.oivs[index].id",
                  "paramType": "integer(int32)",
                  "description": "Идентификатор ОИВа",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.oivs[index].name",
                  "paramType": "string",
                  "description": "Наименование ОИВа",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.oivsIds",
                  "paramType": "array[integer]",
                  "description": "Список идентификаторов поставщиков информации каталога (ответственные ОИВы)",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.accountingObject",
                  "paramType": "string",
                  "description": "Объект учёта",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.keywords",
                  "paramType": "string",
                  "description": "Ключевые слова",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.systemsConsumers[index]",
                  "paramType": "array[object]",
                  "description": "Системы потребители данных каталога",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.systemsConsumers[index].id",
                  "paramType": "integer(int32)",
                  "description": "Идентификатор информационной системы",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.systemsConsumers[index].name",
                  "paramType": "string",
                  "description": "Название информационной системы",
                  "required": true,
              },
              {
                  "paramName": "generalInfo.systemsConsumersIds",
                  "paramType": "array[integer]",
                  "description": "Список идентификаторов систем потребителей данных",
                  "required": false,
              },
              {
                  "paramName": "generalInfo.isShowDeleteObjects",
                  "paramType": "boolean",
                  "description": "Признак \"Показывать удалённые объекты\"",
                  "required": true,
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "array[object]",
                  "description": "Настройки вкладки \"Атрибуты\" каталога заполнения",
                  "required": false,
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "array[object[Один из вариантов]]",
                  "description": "Настройки вкладки \"Атрибуты\" каталога заполнения",
                  "required": false,
              },
              {
                  "paramName": "attributes[index] Вариант 1",
                  "paramType": "attributes[index] Вариант 1",
                  "description": "attributes[index] Вариант 1",
                  "required": false,
              },
            //   "StringFillingCatalogAttribute": {
            //     "description": "Строковый атрибут каталога заполнения",
            //     "type": "object",
            //     "allOf": [
            //         {
            //             "$ref": "#/components/schemas/CommonFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/CommonCatalogAttributeWithDefaultValue"
            //         },
            //         {
            //             "$ref": "#/components/schemas/CommonCatalogAttributeWithFieldMask"
            //         },
            //         {
            //             "$ref": "#/components/schemas/CommonCatalogAttributeWithSearchIndex"
            //         },
            //         {
            //             "$ref": "#/components/schemas/CommonCatalogAttributeWithFieldRegex"
            //         }
            //     ],
            //     "properties": {
            //         "maxLength": {
            //             "description": "Максимальная длина строкового значения",
            //             "type": "integer"
            //         }
            //     },
            //     "required": [
            //         "maxLength"
            //     ]
            // },
              {
                  "paramName": "attributes[index] Вариант 1",
                  "paramType": "attributes[index] Вариант 1",
                  "description": "attributes[index] Вариант 1",
                  "required": false,
              },
            //   "CommonFillingCatalogAttribute": {
            //     "description": "Общая информация атрибута каталога заполнения",
            //     "type": "object",
            //     "allOf": [
            //         {
            //             "$ref": "#/components/schemas/CommonCatalogAttribute"
            //         }
            //     ],
            //     "properties": {
            //         "isReq": {
            //             "description": "Свойство обязательности атрибута",
            //             "type": "boolean"
            //         },
            //         "isUniq": {
            //             "description": "Свойство уникальности значения атрибута",
            //             "type": "boolean"
            //         },
            //         "isUniqWithinParent": {
            //             "description": "Признак, что уникальность значений атрибутов внутри табличного атрибута будет проверятся в рамках объекта-родителя.",
            //             "type": "boolean",
            //             "default": false
            //         },
            //         "isBanEdit": {
            //             "description": "Свойство запрета на редактирование",
            //             "type": "boolean"
            //         },
            //         "isSystemModify": {
            //             "description": "Свойство, что значение атрибута изменяется системой",
            //             "type": "boolean"
            //         },
            //         "objOperatingMode": {
            //             "$ref": "#/components/schemas/FillingCatalogOperatingModeTagIdEnum"
            //         },
            //         "oivs": {
            //             "description": "Список ОИВ, ответственных за значение, содержащееся в атрибуте",
            //             "type": "array",
            //             "items": {
            //                 "$ref": "oivs.yaml#/components/schemas/CommonOivInfo"
            //             },
            //             "readOnly": true,
            //             "minItems": 1
            //         },
            //         "oivsIds": {
            //             "description": "Список идентификаторов ОИВ, ответственных за значение, содержащееся в атрибуте",
            //             "type": "array",
            //             "items": {
            //                 "type": "integer"
            //             },
            //             "writeOnly": true,
            //             "minItems": 1
            //         },
            //         "isManualInput": {
            //             "description": "Настроено ли на этот атрибут заполнение значениями не из справочника (ручной ввод) в блоках Автозаполнения конструктора",
            //             "type": "boolean",
            //             "readOnly": true
            //         },
            //         "manualInputTargets": {
            //             "description": "Массив атрибутов, значение которых зависит от заполнения данного атрибута при автозаполнении.\nОписываются в блоке `Автозаполнение` конструктора в массиве [[blocks.properties.mapping]].\n\nПоле обязательное. Если атрибутов нет, то возвращается пустой массив.",
            //             "readOnly": true,
            //             "type": "array",
            //             "items": {
            //                 "type": "object",
            //                 "properties": {
            //                     "attrId": {
            //                         "description": "Идентификатор атрибута в ЕХД",
            //                         "type": "integer"
            //                     },
            //                     "isDependent": {
            //                         "description": "Является ли атрибут зависимым в рамках ручного ввода",
            //                         "type": "boolean"
            //                     }
            //                 }
            //             }
            //         },
            //         "manualInputSources": {
            //             "description": "Массив идентификаторов атрибутов, от значения которых зависит значение данного атрибута при Автозаполнении.\n\nПоле обязательное. Если атрибутов нет, то возвращается пустой массив.",
            //             "readOnly": true,
            //             "type": "array",
            //             "items": {
            //                 "type": "integer",
            //                 "format": "int32"
            //             }
            //         }
            //     },
            //     "required": [
            //         "isReq",
            //         "isUniq",
            //         "isUniqWithinParent",
            //         "isBanEdit",
            //         "isSystemModify",
            //         "objOperatingMode",
            //         "oivs",
            //         "oivsIds"
            //     ]
            // },
            //   "FillingCatalogAttribute": {
            //     "description": "Атрибут каталога заполнения",
            //     "type": "object",
            //     "oneOf": [
            //         {
            //             "$ref": "#/components/schemas/StringFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/IntegerFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/FloatFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/DateFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/BooleanFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/FileFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/DictFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/LinkFillingCatalogAttribute"
            //         },
            //         {
            //             "$ref": "#/components/schemas/TableFillingCatalogAttribute"
            //         }
            //     ]
            // },
              {
                  "paramName": "meta",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Настройки вкладки \"Метаданные\" каталога заполнения",
                  "required": false,
                  "schema": {
                      "description": "Настройки вкладки \"Метаданные\" каталога заполнения",
                      "paramName": "meta",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Настройки вкладки \"Метаданные\" каталога заполнения",
                          "paramName": "meta",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "constructor[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Настройки конструктора процессов. Представляет собой массив пакетов.",
                  "required": false,
                  "schema": {
                      "description": "Настройки конструктора процессов. Представляет собой массив пакетов.",
                      "paramName": "constructor[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Настройки конструктора процессов. Представляет собой массив пакетов.",
                          "paramName": "constructor[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "constructor[index].tomlFormat",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                      "paramName": "constructor[index].tomlFormat",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                          "paramName": "constructor[index].tomlFormat",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "constructor[index].jsonFormat",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                      "paramName": "constructor[index].jsonFormat",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                          "paramName": "constructor[index].jsonFormat",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "conditionalUniq",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                  "required": false,
                  "schema": {
                      "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                      "paramName": "conditionalUniq",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                          "paramName": "conditionalUniq",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "groupUniq",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                  "required": false,
                  "schema": {
                      "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                      "paramName": "groupUniq",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                          "paramName": "groupUniq",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "map",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "map",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "map.hasGeo",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наличие геопривязки в каталоге",
                  "required": true,
                  "schema": {
                      "description": "Наличие геопривязки в каталоге",
                      "paramName": "map.hasGeo",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наличие геопривязки в каталоге",
                          "paramName": "map.hasGeo",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "map.typeGeoTagIds[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "map.typeGeoTagIds[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "map.typeGeoTagIds[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.isWGS84",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                  "required": false,
                  "schema": {
                      "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                      "paramName": "map.isWGS84",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                          "paramName": "map.isWGS84",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.isReq",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Обязательность геопривязки",
                  "required": false,
                  "schema": {
                      "description": "Обязательность геопривязки",
                      "paramName": "map.isReq",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Обязательность геопривязки",
                          "paramName": "map.isReq",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.isOneTypeGeoForObj",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                      "paramName": "map.isOneTypeGeoForObj",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                          "paramName": "map.isOneTypeGeoForObj",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.isNotReqGeoForService",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Необязательность геометрии при загрузке через сервис",
                  "required": false,
                  "schema": {
                      "description": "Необязательность геометрии при загрузке через сервис",
                      "paramName": "map.isNotReqGeoForService",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Необязательность геометрии при загрузке через сервис",
                          "paramName": "map.isNotReqGeoForService",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/generalInfo",
      "method": "get",
      "methodDesc": "Получение общей информации каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/attributes",
      "method": "get",
      "methodDesc": "Получение атрибутов каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "paramName": "array",
              "paramType": "Не найден тип",
              "description": "Атрибут каталога заполнения",
              "required": false,
              "schema": []
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/meta",
      "method": "get",
      "methodDesc": "Получение метаданных каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/meta",
      "method": "put",
      "methodDesc": "Изменение метаданных каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/lite/{catalogId}/attributes",
      "method": "get",
      "methodDesc": "Получение списка атрибутов каталога заполенения с минимальным набором свойств",
      "responses": {
          "description": "Успешный ответ. Если атрибуты не найдены, например удовлетворяющие параметру forLinks, то отдаётся пустой список.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута в ЕХД (attrId).",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута в ЕХД (attrId).",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута в ЕХД (attrId).",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование атрибута в каталоге",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование атрибута в каталоге",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование атрибута в каталоге",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "forLinks",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить атрибуты каталога, которые можно использовать в качестве атрибута для связи.\n\nАтрибуты должны иметь тип: строка, дробное число, дата, справочник, ссылка на объект, целое число.\n\nИсключаются типы: файл, флаг, таблица.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/userPrivileges",
      "method": "get",
      "methodDesc": "Получение списка привилегий пользователя, доступных для данного каталога заполнения",
      "responses": {
          "description": "Успешный ответ. Если у пользователя нет доступа к каталогу, возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "canView",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Просмотр",
                  "required": true,
                  "schema": {
                      "description": "Просмотр",
                      "paramName": "canView",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Просмотр",
                          "paramName": "canView",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canExport",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Экспорт",
                  "required": true,
                  "schema": {
                      "description": "Экспорт",
                      "paramName": "canExport",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Экспорт",
                          "paramName": "canExport",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canEditMeta",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Редактирование метаданных",
                  "required": true,
                  "schema": {
                      "description": "Редактирование метаданных",
                      "paramName": "canEditMeta",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Редактирование метаданных",
                          "paramName": "canEditMeta",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canEdit",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Редактирование",
                  "required": true,
                  "schema": {
                      "description": "Редактирование",
                      "paramName": "canEdit",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Редактирование",
                          "paramName": "canEdit",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canSign",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Подписание",
                  "required": true,
                  "schema": {
                      "description": "Подписание",
                      "paramName": "canSign",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Подписание",
                          "paramName": "canSign",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canImport",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Импорт",
                  "required": true,
                  "schema": {
                      "description": "Импорт",
                      "paramName": "canImport",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Импорт",
                          "paramName": "canImport",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/constructor",
      "method": "get",
      "methodDesc": "Получение настроек конструктора процессов каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "tomlFormat",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                      "paramName": "tomlFormat",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                          "paramName": "tomlFormat",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "jsonFormat",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                      "paramName": "jsonFormat",
                      "paramIn": "object",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                          "paramName": "jsonFormat",
                          "paramIn": "object",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/constructorPackages",
      "method": "get",
      "methodDesc": "Получение пакетов конструктора процессов каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "packName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название пакета",
                  "required": false,
                  "schema": {
                      "description": "Название пакета",
                      "paramName": "packName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Название пакета",
                          "paramName": "packName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "packTechName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Технологическое наименование пакета. Должно быть уникально в рамках каталога.",
                  "required": true,
                  "schema": {
                      "description": "Технологическое наименование пакета. Должно быть уникально в рамках каталога.",
                      "paramName": "packTechName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Технологическое наименование пакета. Должно быть уникально в рамках каталога.",
                          "paramName": "packTechName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "isMain",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак главного процесса. Если для каталога настраивается конструктор, то обязательно должен быть только 1 файл со значением true. С файла со свойством isMain: true начинается обработка описанного процесса.",
                  "required": true,
                  "schema": {
                      "description": "Признак главного процесса. Если для каталога настраивается конструктор, то обязательно должен быть только 1 файл со значением true. С файла со свойством isMain: true начинается обработка описанного процесса.",
                      "paramName": "isMain",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Признак главного процесса. Если для каталога настраивается конструктор, то обязательно должен быть только 1 файл со значением true. С файла со свойством isMain: true начинается обработка описанного процесса.",
                          "paramName": "isMain",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "event",
                  "paramType": "unknown param type",
                  "description": "Событие, при котором запускается процесс, описанный в конструкторе. Может принимать значения:\n  - change - изменение объекта, включая создание\n  - create - создание объекта,\n  - delete - удаление объекта.",
                  "required": true,
                  "schema": {
                      "description": "Событие, при котором запускается процесс, описанный в конструкторе. Может принимать значения:\n  - change - изменение объекта, включая создание\n  - create - создание объекта,\n  - delete - удаление объекта.",
                      "paramName": "event",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Событие, при котором запускается процесс, описанный в конструкторе. Может принимать значения:\n  - change - изменение объекта, включая создание\n  - create - создание объекта,\n  - delete - удаление объекта.",
                          "paramName": "event",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "applyTableAttr",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Применить процесс пакета к объектам табличного атрибута. Указывается табличный атрибут в формате attr.{TableTechName1}.{TableTechName11}.{TableTechName111}.{и т.д.}. То есть указывается вся последовательность табличных атрибутов от корня до того, для которого настраивается пакет.\nЕсли передано данное поле, то в описании блоков могут использоваться только атрибуты внутри указанной таблицы.",
                  "required": false,
                  "schema": {
                      "description": "Применить процесс пакета к объектам табличного атрибута. Указывается табличный атрибут в формате attr.{TableTechName1}.{TableTechName11}.{TableTechName111}.{и т.д.}. То есть указывается вся последовательность табличных атрибутов от корня до того, для которого настраивается пакет.\nЕсли передано данное поле, то в описании блоков могут использоваться только атрибуты внутри указанной таблицы.",
                      "paramName": "applyTableAttr",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Применить процесс пакета к объектам табличного атрибута. Указывается табличный атрибут в формате attr.{TableTechName1}.{TableTechName11}.{TableTechName111}.{и т.д.}. То есть указывается вся последовательность табличных атрибутов от корня до того, для которого настраивается пакет.\nЕсли передано данное поле, то в описании блоков могут использоваться только атрибуты внутри указанной таблицы.",
                          "paramName": "applyTableAttr",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/constructor/validate",
      "method": "post",
      "methodDesc": "Валидация настроек конструктора процессов",
      "responses": {
          "description": "Успешный ответ.\nВозвращаются настройки в формате json для работы с ними в веб-интерфейсе.",
          "schema": [
              {
                  "paramName": "tomlFormat",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                      "paramName": "tomlFormat",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                          "paramName": "tomlFormat",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "jsonFormat",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                      "paramName": "jsonFormat",
                      "paramIn": "object",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                          "paramName": "jsonFormat",
                          "paramIn": "object",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "constructor[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "constructor[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "constructor[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "constructor[index].tomlFormat",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                      "paramName": "constructor[index].tomlFormat",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\nПередаётся в качестве строки с экранированием символов.",
                          "paramName": "constructor[index].tomlFormat",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "constructor[index].jsonFormat",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                  "required": true,
                  "schema": {
                      "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                      "paramName": "constructor[index].jsonFormat",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\nНеобходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.",
                          "paramName": "constructor[index].jsonFormat",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                  "required": false,
                  "schema": {
                      "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/catalogs/{catalogId}/conditionalUniq",
      "method": "get",
      "methodDesc": "Получение настроек условной уникальности каталога заполнения",
      "responses": {
          "description": "Успешный ответ. Если условие уникальности не настроено, то возвращается пустая строка",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/conditionalUniq/validate",
      "method": "post",
      "methodDesc": "Валидация настройки условной уникальности",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "conditionalUniq",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                  "required": true,
                  "schema": {
                      "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                      "paramName": "conditionalUniq",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.",
                          "paramName": "conditionalUniq",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                  "required": false,
                  "schema": {
                      "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/catalogs/{catalogId}/groupUniq",
      "method": "get",
      "methodDesc": "Получение настроек групповой уникальности каталога заполнения",
      "responses": {
          "description": "Успешный ответ. Если настройка отсутствует, то возвращается пустой объект.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/groupUniq/validate",
      "method": "post",
      "methodDesc": "Валидация настройки групповой уникальности",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "groupUniq",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                      "paramName": "groupUniq",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                          "paramName": "groupUniq",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                  "required": false,
                  "schema": {
                      "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/catalogs/{catalogId}/map",
      "method": "get",
      "methodDesc": "Получение настроек карты каталога заполнения",
      "responses": {
          "description": "Успешный ответ.",
          "schema": [
              {
                  "paramName": "hasGeo",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Наличие геопривязки в каталоге",
                  "required": true,
                  "schema": {
                      "description": "Наличие геопривязки в каталоге",
                      "paramName": "hasGeo",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Наличие геопривязки в каталоге",
                          "paramName": "hasGeo",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "typeGeoTagIds[index]",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "typeGeoTagIds[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "typeGeoTagIds[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isWGS84",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                  "required": false,
                  "schema": {
                      "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                      "paramName": "isWGS84",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                          "paramName": "isWGS84",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isReq",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Обязательность геопривязки",
                  "required": false,
                  "schema": {
                      "description": "Обязательность геопривязки",
                      "paramName": "isReq",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Обязательность геопривязки",
                          "paramName": "isReq",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isOneTypeGeoForObj",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                      "paramName": "isOneTypeGeoForObj",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                          "paramName": "isOneTypeGeoForObj",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isNotReqGeoForService",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Необязательность геометрии при загрузке через сервис",
                  "required": false,
                  "schema": {
                      "description": "Необязательность геометрии при загрузке через сервис",
                      "paramName": "isNotReqGeoForService",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Необязательность геометрии при загрузке через сервис",
                          "paramName": "isNotReqGeoForService",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/status",
      "method": "put",
      "methodDesc": "Изменение статуса каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "archive",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает на необходимость изменения статуса \"Архивный\" у каталога заполнения.\n  - `true` - присвоить каталогу статус \"Архивный\",\n  - `false` - убрать статус \"Архивный\" с каталога. Если в каталоге есть изменения в объектах или метаданных, то каталог переходит в статус \"Не подписано\". Если текущие данные каталога не имеют отличий от последних подписанных версий, то каталог переходит в статус \"Подписано\".",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/refs",
      "method": "post",
      "methodDesc": "Создание связи с каталогом публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога публикации",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога публикации",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "technicalName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование каталога публикации",
                      "paramName": "technicalName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование каталога публикации",
                          "paramName": "technicalName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "shortName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Краткое наименование каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Краткое наименование каталога публикации",
                      "paramName": "shortName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Краткое наименование каталога публикации",
                          "paramName": "shortName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "typeCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор типа каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор типа каталога публикации",
                      "paramName": "typeCatalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор типа каталога публикации",
                          "paramName": "typeCatalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "kindCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор вида каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор вида каталога публикации",
                      "paramName": "kindCatalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор вида каталога публикации",
                          "paramName": "kindCatalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "thematicCategoryId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор тематической категории каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор тематической категории каталога публикации",
                      "paramName": "thematicCategoryId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор тематической категории каталога публикации",
                          "paramName": "thematicCategoryId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "defaultPriority",
                  "paramType": "unknown param type",
                  "description": "Приоритет публикации каталога",
                  "required": true,
                  "schema": {
                      "description": "Приоритет публикации каталога",
                      "paramName": "defaultPriority",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Приоритет публикации каталога",
                          "paramName": "defaultPriority",
                          "paramIn": "",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "publicationCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор каталога публикации",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/catalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и атрибутах, в которых используется каталог",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется каталог заполнения",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку атрибутов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/catalogPackages/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и конструкторах процессов, в которых используется каталог",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется каталог",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `packName`, `packTechName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\npackName,\npackTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `packName`, `packTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\npackName,\npackTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/catalogUniqs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и настройках уникальностей, в которых используется каталог",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых справочник используется в конструкторе проверок",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `uniqTypeTag`, `packTechName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nuniqTypeTag,\npackTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nuniqTypeTag,\npackTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/catalogGroups/search",
      "method": "post",
      "methodDesc": "Получение информации о группах каталогов, в которые входит каталог",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор группы каталогов",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор группы каталогов",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Наименование группы каталогов",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование группы каталогов",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку групп каталогов, в которые входит каталог заполнения",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых групп каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку групп каталогов.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те группы каталогов, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все группы каталогов, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/publCatalogConditions/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации, в которых используется каталог",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов публикации, в которых используется каталог",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id` и `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogs/{catalogId}/dictionaries/search",
      "method": "post",
      "methodDesc": "Получение информации о справочниках созданных на основе каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор справочника",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор справочника",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор справочника",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование справочника",
                  "required": true,
                  "schema": {
                      "description": "Наименование справочника",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование справочника",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку справочников, созданных на основе каталога",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых справочников (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку справочников.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те справочники, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все справочники, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id` и `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogs/sequence",
      "method": "get",
      "methodDesc": "Получение нового идентификатора каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Primitive param description",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/publicationCatalogs/search",
      "method": "post",
      "methodDesc": "Поиск по списку каталогов публикации",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n\nЕсли переданы несуществующие идентификаторы категории, ОИВ, системы-потребителя, то также возвращается пустой массив вместо 404 ошибки.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке каталогов.\nПоиск производится по атрибутам `id` и `fullName`.\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\ncountActiveObjects,\ncountObjects,\nresponsiblePerson,\nsourceCatalogId,\ndateNextUpdate\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\ncountActiveObjects,\ncountObjects,\nresponsiblePerson,\nsourceCatalogId,\ndateNextUpdate\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "publicationStatus",
              "paramIn": "query",
              "paramType": "string",
              "description": "Статус каталога публикации. Может принимать следующие значения:\n  - `unpublished` - не опубликован\n  - `manualPublication` - публикуется вручную\n  - `autoPublication` - публикуется автоматически\n  - `archive` - архивный",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "fillingCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор каталога заполнения.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/lite/search",
      "method": "get",
      "methodDesc": "Поиск по списку каталогов публикации с минимальным набором свойств",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке каталогов.\nПоиск производится по полному наименованию каталога и является регистронезависимым.\nЗапрос со значением `тест` вернет все каталоги, полное наименование которых содержит подстроку `тест` независимо от регистра.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "fillingCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор каталога заполнения.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "forLinks",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить каталоги, которые можно указать в качестве ссылочных.\nДанные каталоги имеют атрибут с отмеченным свойством \"Главный\".",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "forDataset",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, который указывает, что в ответе должны быть каталоги публикации доступные для связи с набором данных.\nДанные каталоги:\n  - не имеют связей с версиями наборов данных,\n  - в поле \"Системы-потребители\" КП указан Портал открытых данных.\nС другими параметрами, которые так же влияют на выборку сочетается через оператор \"И\".",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "userId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя. Необязательный параметр. Если указан, следует исключать из выборки все группы каталогов, имеющие связи с пользователем",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs",
      "method": "post",
      "methodDesc": "Cохранение каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "generalInfo",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": true,
                  "schema": {
                      "description": "",
                      "paramName": "generalInfo",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "",
                          "paramName": "generalInfo",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Атрибут каталога публикации",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут каталога публикации",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "meta",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "meta",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "meta",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Настройки публикации для систем-потребителей",
                  "required": false,
                  "schema": {
                      "description": "Настройки публикации для систем-потребителей",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Настройки публикации для систем-потребителей",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Настройки сортировки каталога публикации.\nПередается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\nНесколько объектов определяют многоуровневую сортировку.\nПорядок объектов в массиве определяет уровни сортировки.",
                  "required": false,
                  "schema": {
                      "description": "Настройки сортировки каталога публикации.\nПередается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\nНесколько объектов определяют многоуровневую сортировку.\nПорядок объектов в массиве определяет уровни сортировки.",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Настройки сортировки каталога публикации.\nПередается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\nНесколько объектов определяют многоуровневую сортировку.\nПорядок объектов в массиве определяет уровни сортировки.",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attrId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                      "paramName": "sortings[index].attrId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                          "paramName": "sortings[index].attrId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].sortingOrder",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].sortingOrder",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].sortingOrder",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationConditions",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условия ограничения выборки каталога публикации.\n\nПередается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.",
                  "required": false,
                  "schema": {
                      "description": "Условия ограничения выборки каталога публикации.\n\nПередается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.",
                      "paramName": "publicationConditions",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условия ограничения выборки каталога публикации.\n\nПередается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.",
                          "paramName": "publicationConditions",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "map",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "map",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "map.hasGeo",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наличие геопривязки в каталоге",
                  "required": false,
                  "schema": {
                      "description": "Наличие геопривязки в каталоге",
                      "paramName": "map.hasGeo",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наличие геопривязки в каталоге",
                          "paramName": "map.hasGeo",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.typeGeoTagIds[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "map.typeGeoTagIds[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "map.typeGeoTagIds[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.syncedProperties[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                  "required": false,
                  "schema": {
                      "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                      "paramName": "map.syncedProperties[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                          "paramName": "map.syncedProperties[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.syncedProperties[index].tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                      "paramName": "map.syncedProperties[index].tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                          "paramName": "map.syncedProperties[index].tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.syncedProperties[index].name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                  "required": true,
                  "schema": {
                      "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                      "paramName": "map.syncedProperties[index].name",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                          "paramName": "map.syncedProperties[index].name",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "map.syncedPropertiesTagIds[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                      "paramName": "map.syncedPropertiesTagIds[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                          "paramName": "map.syncedPropertiesTagIds[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/publicationCatalogs",
      "method": "delete",
      "methodDesc": "Отметка каталога публикации удалённым",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Массив идентификаторов каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/checkConditionsChange",
      "method": "post",
      "methodDesc": "Проверка изменения условий ограничения выборки",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Primitive param description",
              "paramName": "primitive param name",
              "paramType": "boolean"
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}",
      "method": "put",
      "methodDesc": "Изменение настроек каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "generalInfo",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": true,
                  "schema": {
                      "description": "",
                      "paramName": "generalInfo",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "",
                          "paramName": "generalInfo",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Атрибут каталога публикации",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут каталога публикации",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "meta",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "meta",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "meta",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Настройки публикации для систем-потребителей",
                  "required": false,
                  "schema": {
                      "description": "Настройки публикации для систем-потребителей",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Настройки публикации для систем-потребителей",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Настройки сортировки каталога публикации.\nПередается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\nНесколько объектов определяют многоуровневую сортировку.\nПорядок объектов в массиве определяет уровни сортировки.",
                  "required": false,
                  "schema": {
                      "description": "Настройки сортировки каталога публикации.\nПередается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\nНесколько объектов определяют многоуровневую сортировку.\nПорядок объектов в массиве определяет уровни сортировки.",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Настройки сортировки каталога публикации.\nПередается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\nНесколько объектов определяют многоуровневую сортировку.\nПорядок объектов в массиве определяет уровни сортировки.",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attrId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                      "paramName": "sortings[index].attrId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                          "paramName": "sortings[index].attrId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].sortingOrder",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].sortingOrder",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].sortingOrder",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationConditions",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условия ограничения выборки каталога публикации.\n\nПередается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.",
                  "required": false,
                  "schema": {
                      "description": "Условия ограничения выборки каталога публикации.\n\nПередается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.",
                      "paramName": "publicationConditions",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условия ограничения выборки каталога публикации.\n\nПередается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.",
                          "paramName": "publicationConditions",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "map",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "map",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "map.hasGeo",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наличие геопривязки в каталоге",
                  "required": false,
                  "schema": {
                      "description": "Наличие геопривязки в каталоге",
                      "paramName": "map.hasGeo",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наличие геопривязки в каталоге",
                          "paramName": "map.hasGeo",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.typeGeoTagIds[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "map.typeGeoTagIds[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "map.typeGeoTagIds[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.syncedProperties[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                  "required": false,
                  "schema": {
                      "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                      "paramName": "map.syncedProperties[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                          "paramName": "map.syncedProperties[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.syncedProperties[index].tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                      "paramName": "map.syncedProperties[index].tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                          "paramName": "map.syncedProperties[index].tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "map.syncedProperties[index].name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                  "required": true,
                  "schema": {
                      "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                      "paramName": "map.syncedProperties[index].name",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                          "paramName": "map.syncedProperties[index].name",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "map.syncedPropertiesTagIds[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                      "paramName": "map.syncedPropertiesTagIds[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                          "paramName": "map.syncedPropertiesTagIds[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/generalInfo",
      "method": "get",
      "methodDesc": "Получение общей информации каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/attributes",
      "method": "get",
      "methodDesc": "Получение атрибутов каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "paramName": "array",
              "paramType": "Не найден тип",
              "description": "Атрибут каталога публикации",
              "required": false,
              "schema": []
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/lite/{catalogId}/attributes",
      "method": "get",
      "methodDesc": "Получение списка атрибутов каталога публикации с минимальным набором свойств",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута в ЕХД (attrId).",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута в ЕХД (attrId).",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута в ЕХД (attrId).",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование атрибута в каталоге",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование атрибута в каталоге",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование атрибута в каталоге",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "forLinks",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить атрибуты каталога, которые можно использовать в качестве атрибута для связи.\n\nАтрибуты должны иметь тип: строка, дробное число, дата, справочник, ссылка на объект, целое число.\n\nИсключаются типы: файл, флаг, таблица.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/userPrivileges",
      "method": "get",
      "methodDesc": "Получение списка привилегий пользователя, доступных для данного каталога публикации",
      "responses": {
          "description": "Успешный ответ. Если у пользователя нет доступа к каталогу, возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "canView",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Просмотр",
                  "required": true,
                  "schema": {
                      "description": "Просмотр",
                      "paramName": "canView",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Просмотр",
                          "paramName": "canView",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canExport",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Экспорт",
                  "required": true,
                  "schema": {
                      "description": "Экспорт",
                      "paramName": "canExport",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Экспорт",
                          "paramName": "canExport",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canEditMeta",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Редактирование метаданных",
                  "required": true,
                  "schema": {
                      "description": "Редактирование метаданных",
                      "paramName": "canEditMeta",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Редактирование метаданных",
                          "paramName": "canEditMeta",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "canPubl",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Публикация объектов",
                  "required": true,
                  "schema": {
                      "description": "Публикация объектов",
                      "paramName": "canPubl",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Публикация объектов",
                          "paramName": "canPubl",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/meta",
      "method": "get",
      "methodDesc": "Получение метаданных каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/meta",
      "method": "put",
      "methodDesc": "Изменение метаданных каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "respPersonFIO",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ФИО ответственного за каталог",
                  "required": false,
                  "schema": {
                      "description": "ФИО ответственного за каталог",
                      "paramName": "respPersonFIO",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "ФИО ответственного за каталог",
                          "paramName": "respPersonFIO",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "respPersonEmail",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Адрес электронной почты ответственного за каталог",
                  "required": false,
                  "schema": {
                      "description": "Адрес электронной почты ответственного за каталог",
                      "paramName": "respPersonEmail",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Адрес электронной почты ответственного за каталог",
                          "paramName": "respPersonEmail",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "respPersonPhone",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Телефон ответственного за каталог",
                  "required": false,
                  "schema": {
                      "description": "Телефон ответственного за каталог",
                      "paramName": "respPersonPhone",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Телефон ответственного за каталог",
                          "paramName": "respPersonPhone",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "description",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Описание каталога",
                  "required": false,
                  "schema": {
                      "description": "Описание каталога",
                      "paramName": "description",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Описание каталога",
                          "paramName": "description",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/systemPublicationSettings",
      "method": "get",
      "methodDesc": "Получение настроек публикации каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Нет описания",
              "paramName": "Array[undefined]",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Array[undefined]",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/systemPublicationSettings",
      "method": "put",
      "methodDesc": "Изменение настроек публикации для систем-потребителей в исторических версиях КП.",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Список идентификаторов систем потребителей данных",
                  "required": false,
                  "schema": {
                      "description": "Список идентификаторов систем потребителей данных",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Список идентификаторов систем потребителей данных",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "systemPublicationSettings",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "systemPublicationSettings",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "systemPublicationSettings",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/sortings",
      "method": "get",
      "methodDesc": "Получение настроек сортировки атрибутов каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "attrId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                      "paramName": "attrId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога, по которому определена сортировка",
                          "paramName": "attrId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortingOrder",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortingOrder",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortingOrder",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/publicationConditions",
      "method": "get",
      "methodDesc": "Получение условий ограничения выборки каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/publicationConditions/validate",
      "method": "post",
      "methodDesc": "Валидация настройки ограничения выборки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "publicationConditions",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройка ограничения выборки, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Настройка ограничения выборки, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                      "paramName": "publicationConditions",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройка ограничения выборки, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.",
                          "paramName": "publicationConditions",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут каталога публикации с набором свойств, необходимых для проведения валидации настроек огранчиения выборки",
                  "required": false,
                  "schema": {
                      "description": "Атрибут каталога публикации с набором свойств, необходимых для проведения валидации настроек огранчиения выборки",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут каталога публикации с набором свойств, необходимых для проведения валидации настроек огранчиения выборки",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/publicationCatalogs/{catalogId}/map",
      "method": "get",
      "methodDesc": "Получение настроек карты каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "hasGeo",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Наличие геопривязки в каталоге",
                  "required": false,
                  "schema": {
                      "description": "Наличие геопривязки в каталоге",
                      "paramName": "hasGeo",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Наличие геопривязки в каталоге",
                          "paramName": "hasGeo",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "typeGeoTagIds[index]",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "typeGeoTagIds[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "typeGeoTagIds[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "syncedProperties[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                  "required": false,
                  "schema": {
                      "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                      "paramName": "syncedProperties[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации",
                          "paramName": "syncedProperties[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "syncedProperties[index].tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                      "paramName": "syncedProperties[index].tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                          "paramName": "syncedProperties[index].tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "syncedProperties[index].name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                  "required": true,
                  "schema": {
                      "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                      "paramName": "syncedProperties[index].name",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\nВозможны следующие значения:\n  - hasGeo - Наличие геопривязки\n  - typeGeoTagIds - Тип геометрии",
                          "paramName": "syncedProperties[index].name",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "syncedPropertiesTagIds[index]",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                      "paramName": "syncedPropertiesTagIds[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n  - `hasGeo` - Наличие геопривязки\n  - `typeGeoTagIds` - Тип геометрии",
                          "paramName": "syncedPropertiesTagIds[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/status",
      "method": "put",
      "methodDesc": "Изменение статуса каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "status",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Новый статус каталога публикации.",
              "required": true,
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/access",
      "method": "get",
      "methodDesc": "Получение систем-потребителей, которым доступен каталог публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/access",
      "method": "put",
      "methodDesc": "Изменение доступа систем-потребителей к каталогу публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "granted",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов систем, для которых доступен каталог публикации.\nОт `1` до `100`.\n\nЕсли параметр `granted` не указан, то каталог не доступен для всех систем.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/publish",
      "method": "get",
      "methodDesc": "Запуск публикации каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/versions",
      "method": "post",
      "methodDesc": "Создание новой версии каталога публикации",
      "responses": {
          "description": "Успешный ответ, версии не созданы",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор атрибута",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор атрибута",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "newRusName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Новое русскоязычное наименование атрибута",
                  "required": false,
                  "schema": {
                      "description": "Новое русскоязычное наименование атрибута",
                      "paramName": "newRusName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Новое русскоязычное наименование атрибута",
                          "paramName": "newRusName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "newEnName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Новое англоязычное наименование атрибута",
                  "required": false,
                  "schema": {
                      "description": "Новое англоязычное наименование атрибута",
                      "paramName": "newEnName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Новое англоязычное наименование атрибута",
                          "paramName": "newEnName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "newTechName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Новое техническое наименование атрибута",
                  "required": false,
                  "schema": {
                      "description": "Новое техническое наименование атрибута",
                      "paramName": "newTechName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Новое техническое наименование атрибута",
                          "paramName": "newTechName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор альтернативного наименования атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор альтернативного наименования атрибута",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор альтернативного наименования атрибута",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "newRusName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Новое русскоязычное альтернативное наименование атрибута",
                  "required": false,
                  "schema": {
                      "description": "Новое русскоязычное альтернативное наименование атрибута",
                      "paramName": "newRusName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Новое русскоязычное альтернативное наименование атрибута",
                          "paramName": "newRusName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "newEnName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Новое англоязычное альтернативное наименование атрибута",
                  "required": false,
                  "schema": {
                      "description": "Новое англоязычное альтернативное наименование атрибута",
                      "paramName": "newEnName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Новое англоязычное альтернативное наименование атрибута",
                          "paramName": "newEnName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Идентификаторы удаленных альтернативных наименований атрибута",
                  "required": false,
                  "schema": {
                      "description": "Идентификаторы удаленных альтернативных наименований атрибута",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Идентификаторы удаленных альтернативных наименований атрибута",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Массив идентификаторов каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/syncProperties",
      "method": "put",
      "methodDesc": "Изменение синхронизируемых свойств каталогов публикации",
      "responses": {
          "description": "Успешный ответ.\n\n### Возвращается в двух случаях:\n  - Настройки каталогов не были изменены;\n  - Настройки каталогов были изменены (в ответе перечисляются идентификаторы измененных каталогов).",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "attrId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута",
                      "paramName": "attrId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута",
                          "paramName": "attrId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "newValue",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Новое значение для атрибута",
                  "required": true,
                  "schema": {
                      "description": "Новое значение для атрибута",
                      "paramName": "newValue",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Новое значение для атрибута",
                          "paramName": "newValue",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор вложеннего каталога, если атрибут принадлежит табличному",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор вложеннего каталога, если атрибут принадлежит табличному",
                      "paramName": "childCatalogId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор вложеннего каталога, если атрибут принадлежит табличному",
                          "paramName": "childCatalogId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "tagId",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование измененного поля из списка синхронизируемых",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование измененного поля из списка синхронизируемых",
                      "paramName": "tagId",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование измененного поля из списка синхронизируемых",
                          "paramName": "tagId",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "newValue",
                  "paramType": "unknown param type",
                  "description": "Новое значение синхронизируемого поля",
                  "required": true,
                  "schema": {
                      "description": "Новое значение синхронизируемого поля",
                      "paramName": "newValue",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Новое значение синхронизируемого поля",
                          "paramName": "newValue",
                          "paramIn": "",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Массив идентификаторов каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/identNumber",
      "method": "get",
      "methodDesc": "Получение идентификационного номера для каталога публикации",
      "responses": {
          "description": "Успешный ответ.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/releases/search",
      "method": "post",
      "methodDesc": "Получение релизов каталога публикации",
      "responses": {
          "description": "Успешный ответ. Если для каталога публикации не найдено релизов, то возвращается пустой список.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Уникальный идентификатор релиза",
                  "required": false,
                  "schema": {
                      "description": "Уникальный идентификатор релиза",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Уникальный идентификатор релиза",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "createDate",
                  "paramType": "unknown param type",
                  "description": "Primitive param description",
                  "required": false,
                  "schema": {
                      "description": "Primitive param description",
                      "paramName": "createDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Primitive param description",
                          "paramName": "createDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "cntPublished",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество новых опубликованных объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество новых опубликованных объектов в рамках релиза.",
                      "paramName": "cntPublished",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество новых опубликованных объектов в рамках релиза.",
                          "paramName": "cntPublished",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntDeleted",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество помеченных удалёнными объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество помеченных удалёнными объектов в рамках релиза.",
                      "paramName": "cntDeleted",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество помеченных удалёнными объектов в рамках релиза.",
                          "paramName": "cntDeleted",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntRestored",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество восстановленных объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество восстановленных объектов в рамках релиза.",
                      "paramName": "cntRestored",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество восстановленных объектов в рамках релиза.",
                          "paramName": "cntRestored",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntUpdated",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество изменённых объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество изменённых объектов в рамках релиза.",
                      "paramName": "cntUpdated",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество изменённых объектов в рамках релиза.",
                          "paramName": "cntUpdated",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntPassed",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.",
                  "required": true,
                  "schema": {
                      "description": "Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.",
                      "paramName": "cntPassed",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.",
                          "paramName": "cntPassed",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntActive",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество активных объектов каталога публикации, получившееся в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Общее количество активных объектов каталога публикации, получившееся в рамках релиза.",
                      "paramName": "cntActive",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Общее количество активных объектов каталога публикации, получившееся в рамках релиза.",
                          "paramName": "cntActive",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntAll",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество всех объектов каталога публикации, получившееся в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Общее количество всех объектов каталога публикации, получившееся в рамках релиза.",
                      "paramName": "cntAll",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Общее количество всех объектов каталога публикации, получившееся в рамках релиза.",
                          "paramName": "cntAll",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых релизов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/releases",
      "method": "post",
      "methodDesc": "Ручное создание релиза каталога публикации",
      "responses": {
          "description": "Успешный ответ, о создании релиза.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/releases/checkObjects",
      "method": "get",
      "methodDesc": "Получение статистики по опубликованным объектам, которые доступны для формирования релиза.",
      "responses": {
          "description": "Успешный ответ.\nПоля id и createDate не имеют значений, так как эти поля относятся только к сформированным релизам.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Уникальный идентификатор релиза",
                  "required": false,
                  "schema": {
                      "description": "Уникальный идентификатор релиза",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Уникальный идентификатор релиза",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "createDate",
                  "paramType": "unknown param type",
                  "description": "Primitive param description",
                  "required": false,
                  "schema": {
                      "description": "Primitive param description",
                      "paramName": "createDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Primitive param description",
                          "paramName": "createDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "cntPublished",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество новых опубликованных объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество новых опубликованных объектов в рамках релиза.",
                      "paramName": "cntPublished",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество новых опубликованных объектов в рамках релиза.",
                          "paramName": "cntPublished",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntDeleted",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество помеченных удалёнными объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество помеченных удалёнными объектов в рамках релиза.",
                      "paramName": "cntDeleted",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество помеченных удалёнными объектов в рамках релиза.",
                          "paramName": "cntDeleted",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntRestored",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество восстановленных объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество восстановленных объектов в рамках релиза.",
                      "paramName": "cntRestored",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество восстановленных объектов в рамках релиза.",
                          "paramName": "cntRestored",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntUpdated",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество изменённых объектов в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Количество изменённых объектов в рамках релиза.",
                      "paramName": "cntUpdated",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество изменённых объектов в рамках релиза.",
                          "paramName": "cntUpdated",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntPassed",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.",
                  "required": true,
                  "schema": {
                      "description": "Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.",
                      "paramName": "cntPassed",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.",
                          "paramName": "cntPassed",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntActive",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество активных объектов каталога публикации, получившееся в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Общее количество активных объектов каталога публикации, получившееся в рамках релиза.",
                      "paramName": "cntActive",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Общее количество активных объектов каталога публикации, получившееся в рамках релиза.",
                          "paramName": "cntActive",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "cntAll",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество всех объектов каталога публикации, получившееся в рамках релиза.",
                  "required": true,
                  "schema": {
                      "description": "Общее количество всех объектов каталога публикации, получившееся в рамках релиза.",
                      "paramName": "cntAll",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Общее количество всех объектов каталога публикации, получившееся в рамках релиза.",
                          "paramName": "cntAll",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publicationCatalogs/{catalogId}/checkSettingsChange",
      "method": "post",
      "methodDesc": "Проверка изменения настроек каталога публикации (атрибутов, ограничение выборки, геометрии)",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Primitive param description",
              "paramName": "primitive param name",
              "paramType": "boolean"
          }
      },
      "requests": {
          "schema": [
              {
                  "paramName": "attributes[index]",
                  "paramType": "unknown param type",
                  "description": "Атрибут каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Атрибут каталога публикации",
                      "paramName": "attributes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Атрибут каталога публикации",
                          "paramName": "attributes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "conditions",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройки ограничения выборки каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Настройки ограничения выборки каталога публикации",
                      "paramName": "conditions",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройки ограничения выборки каталога публикации",
                          "paramName": "conditions",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "map",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Настройки карты каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Настройки карты каталога публикации",
                      "paramName": "map",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Настройки карты каталога публикации",
                          "paramName": "map",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/columns",
      "method": "get",
      "methodDesc": "Получение столбцов для открытия списка объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "attrId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута или системного атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута или системного атрибута",
                      "paramName": "attrId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута или системного атрибута",
                          "paramName": "attrId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название столбца в списке",
                  "required": true,
                  "schema": {
                      "description": "Название столбца в списке",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название столбца в списке",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "objectFieldName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название поля, используемое в объекте каталога",
                  "required": false,
                  "schema": {
                      "description": "Название поля, используемое в объекте каталога",
                      "paramName": "objectFieldName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Название поля, используемое в объекте каталога",
                          "paramName": "objectFieldName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictionaryId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор справочника, возвращается для справочных атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор справочника, возвращается для справочных атрибутов каталога",
                      "paramName": "dictionaryId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор справочника, возвращается для справочных атрибутов каталога",
                          "paramName": "dictionaryId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "columnType",
                  "paramType": "unknown param type",
                  "description": "Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n  - `technical` - техническая информация\n  - `attribute` - атрибут каталога\n  - `manualInput` - признак ручного ввода для атрибута каталога",
                  "required": false,
                  "schema": {
                      "description": "Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n  - `technical` - техническая информация\n  - `attribute` - атрибут каталога\n  - `manualInput` - признак ручного ввода для атрибута каталога",
                      "paramName": "columnType",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n  - `technical` - техническая информация\n  - `attribute` - атрибут каталога\n  - `manualInput` - признак ручного ввода для атрибута каталога",
                          "paramName": "columnType",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "typeTag",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа атрибута",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование типа атрибута",
                      "paramName": "typeTag",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование типа атрибута",
                          "paramName": "typeTag",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/search",
      "method": "post",
      "methodDesc": "Поиск по списку объектов корневого каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых объектов, используется для фильтрации по статусу объекта.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "globalIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\nМожет использоваться для дополнительной фильтрации при работе со списком объектов ссылочного атрибута. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "signedVersion",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить последние подписанные версии объектов.\nТакие версии есть у объектов во всех статусах, кроме new. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "isError",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить объекты, имеющие статус \"Ошибка\". \nЕсли параметр не передан или имеет значение null, тогда возвращаются все объекты каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "string[\nEPSG:4326,\nMSK:77,\ndefault\n]",
              "description": "Признак, указывающий на включение в ответ геоданных объекта в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объект возвращается без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `MSK:77` - геоданные объекта возвращаются в системе координат MSK77,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nEPSG:4326,\nMSK:77,\ndefault\n]"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/child/search",
      "method": "post",
      "methodDesc": "Поиск по списку объектов вложенного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами и сортировками по списку объектов",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "parentGlobalId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальный идентификатор родительского объекта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "rootGlobalId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальный идентификатор корневого объекта (объекта в корневом каталоге, которому принадлежат вложенные объекты).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "parentCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор родительского каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "rootCatalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор корневого каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "signedVersion",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить последние подписанные версии объектов.\nТакие версии есть у объектов во всех статусах, кроме new. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects",
      "method": "post",
      "methodDesc": "Сохранение объекта",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для сохранения объекта в каталоге",
          "schema": [
              {
                  "paramName": "action",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "action",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "action",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "globalId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Глобальный идентификатор объекта.",
                  "required": false,
                  "schema": {
                      "description": "Глобальный идентификатор объекта.",
                      "paramName": "globalId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Глобальный идентификатор объекта.",
                          "paramName": "globalId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "systemObjectId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор объекта в системе-поставщике",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор объекта в системе-поставщике",
                      "paramName": "systemObjectId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор объекта в системе-поставщике",
                          "paramName": "systemObjectId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "objectStatus",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "objectStatus",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "objectStatus",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isError",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Есть ли на объекте ошибки фоновой проверки",
                  "required": false,
                  "schema": {
                      "description": "Есть ли на объекте ошибки фоновой проверки",
                      "paramName": "isError",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Есть ли на объекте ошибки фоновой проверки",
                          "paramName": "isError",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "data[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Массив атрибутов и их значений в рамках одного объекта",
                  "required": false,
                  "schema": {
                      "description": "Массив атрибутов и их значений в рамках одного объекта",
                      "paramName": "data[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Массив атрибутов и их значений в рамках одного объекта",
                          "paramName": "data[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "data[index].attrId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута",
                      "paramName": "data[index].attrId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута",
                          "paramName": "data[index].attrId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "data[index].catalogAttrId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор атрибута каталога",
                      "paramName": "data[index].catalogAttrId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор атрибута каталога",
                          "paramName": "data[index].catalogAttrId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "data[index].isManualInput",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Заполнен ли атрибут с использованием ручного ввода.\n`true` указывается только для тех атрибутов, которые сопоставляются со справочником в Автозаполнении. Для самих автозаполняемых указывается `false` (если они не используются для сопоставления со справочником в других блоках Автозаполнение).",
                  "required": true,
                  "schema": {
                      "description": "Заполнен ли атрибут с использованием ручного ввода.\n`true` указывается только для тех атрибутов, которые сопоставляются со справочником в Автозаполнении. Для самих автозаполняемых указывается `false` (если они не используются для сопоставления со справочником в других блоках Автозаполнение).",
                      "paramName": "data[index].isManualInput",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Заполнен ли атрибут с использованием ручного ввода.\n`true` указывается только для тех атрибутов, которые сопоставляются со справочником в Автозаполнении. Для самих автозаполняемых указывается `false` (если они не используются для сопоставления со справочником в других блоках Автозаполнение).",
                          "paramName": "data[index].isManualInput",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "data[index].value",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Значение атрибута, передаваемое при сохранении или чтении, если verbose=false.\nДля типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                  "required": false,
                  "schema": {
                      "description": "Значение атрибута, передаваемое при сохранении или чтении, если verbose=false.\nДля типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                      "paramName": "data[index].value",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Значение атрибута, передаваемое при сохранении или чтении, если verbose=false.\nДля типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                          "paramName": "data[index].value",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "geodata",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "geodata",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "geodata",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "geodata.type",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                  "required": true,
                  "schema": {
                      "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                      "paramName": "geodata.type",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                          "paramName": "geodata.type",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "geodata.properties",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дополнительные свойства для геоданных объекта",
                  "required": true,
                  "schema": {
                      "description": "Дополнительные свойства для геоданных объекта",
                      "paramName": "geodata.properties",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дополнительные свойства для геоданных объекта",
                          "paramName": "geodata.properties",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "geodata.geometry",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Описание геометрии объекта",
                  "required": true,
                  "schema": {
                      "description": "Описание геометрии объекта",
                      "paramName": "geodata.geometry",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Описание геометрии объекта",
                          "paramName": "geodata.geometry",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/catalogObjects",
      "method": "get",
      "methodDesc": "Получение данных объекта",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Нет описания",
              "paramName": "Array[undefined]",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Array[undefined]",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "globalIds",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\nЧисло элементов в массиве: до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых объектов, используется для фильтрации по статусу объекта.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "systemObjectIds",
              "paramIn": "query",
              "paramType": "string",
              "description": "Идентификаторы объектов каталога в системе-поставищике, которые нужно вернуть.\n\nЧисло элементов в массиве: до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "returnStatus",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Возвращать ли поля статуса объекта.\nЕсли передан true, то в ответ включаются следующие поля:\n  - статус объекта (поле `objectStatus`);\n  - наличие ошибок фоновой проверки в объекте (поле `isError`).\n\nЭти поля также возвращаются в методе `POST  /catalogObjects/search`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "verbose",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Возвращать ли подробный ответ для ссылочных и справочных объектов.\n\nПри передаче `true` в значениях ссылочных и справочных атрибутов возвращается объект,\nсодержащий идентификатор объекта ссылочного каталога `globalId` или элемента справочника `dictElementId`,\nа также строковое значение `value` того атрибута, которое выбрано для отображения в каталоге.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "returnSystem",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Возвращать ли системные атрибуты в ответе.\n\nСистемные атрибуты включают:\n  - дату создания (attrId = -16);\n  - дату подписания (attrId = -4);\n  - информацию о подписи объекта (attrId = -12);\n  - дату последнего изменения (attrId = -11);\n  - тип последнего изменения (attrId = -10);\n  - актора, совершившего последнее изменение, пользователя или систему (attrId = -13);\n  - наличие геоданных (attrId = -22).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "string[\nEPSG:4326,\nMSK:77,\ndefault\n]",
              "description": "Признак, указывающий на включение в ответ геоданных объекта в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объект возвращается без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `MSK:77` - геоданные объекта возвращаются в системе координат MSK77,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nEPSG:4326,\nMSK:77,\ndefault\n]"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/errors",
      "method": "get",
      "methodDesc": "Получение ошибок объекта каталога, обнаруженных при фоновой проверке",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "globalId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Глобальный идентификатор объекта, для которого вернулась ошибка",
                  "required": true,
                  "schema": {
                      "description": "Глобальный идентификатор объекта, для которого вернулась ошибка",
                      "paramName": "globalId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Глобальный идентификатор объекта, для которого вернулась ошибка",
                          "paramName": "globalId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "errorInfo",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Информация об ошибках ФЛК",
                  "required": true,
                  "schema": {
                      "description": "Информация об ошибках ФЛК",
                      "paramName": "errorInfo",
                      "paramIn": "object",
                      "required": true,
                      "schema": {
                          "description": "Информация об ошибках ФЛК",
                          "paramName": "errorInfo",
                          "paramIn": "object",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "globalIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Глобальные идентификаторы объектов каталога.\n\nМассив не может быть пустым.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/editProperties",
      "method": "get",
      "methodDesc": "Получение свойств редактирования каталога для карточки объекта",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": [
              {
                  "paramName": "catalogProperties",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Свойства редактирования объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Свойства редактирования объектов каталога",
                      "paramName": "catalogProperties",
                      "paramIn": "object",
                      "schema": {
                          "description": "Свойства редактирования объектов каталога",
                          "paramName": "catalogProperties",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "dictionaryProperties[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": true,
                  "schema": {
                      "description": "",
                      "paramName": "dictionaryProperties[index]",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "",
                          "paramName": "dictionaryProperties[index]",
                          "paramIn": "",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/rollback",
      "method": "post",
      "methodDesc": "Отмена изменений объекта",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с массивом идентификаторов объектов",
          "schema": {
              "description": "Глобальные идентификаторы объектов",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/recover",
      "method": "post",
      "methodDesc": "Восстановление объекта",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с массивом идентификаторов объектов",
          "schema": {
              "description": "Глобальные идентификаторы объектов",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/delete",
      "method": "post",
      "methodDesc": "Удаление объекта",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с данными объектов для удаления",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив глобальных идентификаторов объектов",
                  "required": false,
                  "schema": {
                      "description": "Массив глобальных идентификаторов объектов",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив глобальных идентификаторов объектов",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "attrId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор атрибута",
                      "paramName": "attrId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор атрибута",
                          "paramName": "attrId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "value",
                  "paramType": "unknown param type",
                  "description": "Значение атрибута, передаваемое при удалении.\nДля типов данных справочник, ссылка на объект, файл значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                  "required": false,
                  "schema": {
                      "description": "Значение атрибута, передаваемое при удалении.\nДля типов данных справочник, ссылка на объект, файл значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                      "paramName": "value",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Значение атрибута, передаваемое при удалении.\nДля типов данных справочник, ссылка на объект, файл значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                          "paramName": "value",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/catalogObjects/clear",
      "method": "post",
      "methodDesc": "Удаление всех объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с данными атрибутов объектов для удаления",
          "schema": [
              {
                  "paramName": "attrId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор атрибута",
                      "paramName": "attrId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор атрибута",
                          "paramName": "attrId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "value",
                  "paramType": "unknown param type",
                  "description": "Значение атрибута, передаваемое при удалении.\nДля типов данных справочник, ссылка на объект, файл значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                  "required": false,
                  "schema": {
                      "description": "Значение атрибута, передаваемое при удалении.\nДля типов данных справочник, ссылка на объект, файл значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                      "paramName": "value",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Значение атрибута, передаваемое при удалении.\nДля типов данных справочник, ссылка на объект, файл значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.",
                          "paramName": "value",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/publicationObjects/columns",
      "method": "get",
      "methodDesc": "Получение столбцов для открытия списка объектов каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "attrId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута или системного атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута или системного атрибута",
                      "paramName": "attrId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута или системного атрибута",
                          "paramName": "attrId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название столбца в списке",
                  "required": true,
                  "schema": {
                      "description": "Название столбца в списке",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название столбца в списке",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "objectFieldName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название поля, используемое в объекте каталога",
                  "required": false,
                  "schema": {
                      "description": "Название поля, используемое в объекте каталога",
                      "paramName": "objectFieldName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Название поля, используемое в объекте каталога",
                          "paramName": "objectFieldName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictionaryId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор справочника, возвращается для справочных атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор справочника, возвращается для справочных атрибутов каталога",
                      "paramName": "dictionaryId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор справочника, возвращается для справочных атрибутов каталога",
                          "paramName": "dictionaryId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "columnType",
                  "paramType": "unknown param type",
                  "description": "Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n  - `technical` - техническая информация\n  - `attribute` - атрибут каталога\n  - `manualInput` - признак ручного ввода для атрибута каталога",
                  "required": false,
                  "schema": {
                      "description": "Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n  - `technical` - техническая информация\n  - `attribute` - атрибут каталога\n  - `manualInput` - признак ручного ввода для атрибута каталога",
                      "paramName": "columnType",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n  - `technical` - техническая информация\n  - `attribute` - атрибут каталога\n  - `manualInput` - признак ручного ввода для атрибута каталога",
                          "paramName": "columnType",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "typeTag",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа атрибута",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование типа атрибута",
                      "paramName": "typeTag",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование типа атрибута",
                          "paramName": "typeTag",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "rootCatalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор корневого каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/publicationObjects/search",
      "method": "post",
      "methodDesc": "Поиск по списку объектов корневого каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами и сортировками по списку объектов",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "globalIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\nМожет использоваться для дополнительной фильтрации при работе со списком объектов ссылочного атрибута. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых объектов каталога публикации, используется для фильтрации по статусу объекта.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий на включение в ответ геоданных объекта публикации. \nВ публикации геоданные объекта хранятся в системе координат WGS84. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/publicationObjects/child/search",
      "method": "post",
      "methodDesc": "Поиск по списку объектов вложенного каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами и сортировками по списку объектов",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "parentGlobalId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальный идентификатор родительского объекта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "rootGlobalId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальный идентификатор корневого объекта (объекта в корневом каталоге, которому принадлежат вложенные объекты).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "parentCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор родительского каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "rootCatalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор корневого каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationObjects",
      "method": "get",
      "methodDesc": "Получение данных объекта каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Нет описания",
              "paramName": "Array[undefined]",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Array[undefined]",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "globalIds",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\nЧисло элементов в массиве: до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "systemObjectIds",
              "paramIn": "query",
              "paramType": "string",
              "description": "Идентификаторы объектов каталога в системе-поставищике, которые нужно вернуть.\n\nЧисло элементов в массиве: до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "verbose",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Возвращать ли подробный ответ для ссылочных и справочных объектов.\n\nПри передаче `true` в значениях ссылочных и справочных атрибутов возвращается объект,\nсодержащий идентификатор объекта ссылочного каталога `globalId` или элемента справочника `dictElementId`,\nа также строковое значение `value` того атрибута, которое выбрано для отображения в каталоге.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "returnSystem",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Возвращать ли системные атрибуты в ответе.\n\nСистемные атрибуты включают:\n  - дату публикации (attrId = -8)\n  - наличие геоданных (attrId = -22).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий на включение в ответ геоданных объекта публикации. \nВ публикации геоданные объекта хранятся в системе координат WGS84. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups/search",
      "method": "post",
      "methodDesc": "Получение списка групп каталогов",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса для поиска по списку групп каталогов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых групп каталогов (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке групп каталогов. Поиск производится по атрибутам `id` и `name`. Запрос со значением `12` вернет все Группы каталогов, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "userId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя. Необязательный параметр. Если указан, следует исключать из выборки все группы каталогов, имеющие связи с пользователем",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups",
      "method": "get",
      "methodDesc": "Получение групп каталогов по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogGroupIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов групп каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups",
      "method": "post",
      "methodDesc": "Создание группы каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/catalogGroups",
      "method": "delete",
      "methodDesc": "Удаление группы каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogGroupIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов групп каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups/{catalogGroupId}",
      "method": "put",
      "methodDesc": "Изменение данных группы каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogGroupId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор группы каталогов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups/{catalogGroupId}/catalogs/search",
      "method": "post",
      "methodDesc": "Поиск неудалённых каталогов, связанных с группой каталогов",
      "responses": {
          "description": "Успешный ответ. При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса для поиска по списку каталогов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogGroupId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор группы каталогов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id` и `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/catalogGroups/{catalogGroupId}/catalogs",
      "method": "post",
      "methodDesc": "Добавление каталогов в группу каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Информация о каталогах, добавляемых в группу каталогов (список идентификаторов)",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "catalogGroupId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор группы каталогов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups/{catalogGroupId}/catalogs",
      "method": "delete",
      "methodDesc": "Удаление каталогов из группы каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Информация о каталогах, добавляемых в группу каталогов (список идентификаторов)",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "catalogGroupId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор группы каталогов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/catalogGroups/{catalogGroupId}/userSpecPrivileges/search",
      "method": "post",
      "methodDesc": "Поиск неудалённых пользователей, связанных с группой каталогов через специальные привилегии",
      "responses": {
          "description": "Успешный ответ.",
          "schema": {
              "description": "Информация о пользователе и спецпривилегиях для группы каталогов",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Информация о пользователе и спецпривилегиях для группы каталогов",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "Пример тела запроса для поиска по списку пользователей и спецролей",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogGroupId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор группы каталогов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых пользователей (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку пользователей.\nПоиск производится по полям `id`, `login` и `userFio`.\nВ ответе будут представлены только те пользователи, в указанных полях которых содержится поисковое значение.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nlogin,\nuserFio\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `login` и `userFio`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nlogin,\nuserFio\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/attributes/search",
      "method": "post",
      "methodDesc": "Поиск по списку атрибутов ЕХД",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку атрибутов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "attributeTypes[index]",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа атрибута",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование типа атрибута",
                      "paramName": "attributeTypes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование типа атрибута",
                          "paramName": "attributeTypes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "attributeIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов атрибутов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых атрибутов (число от `1` до `1000`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку атрибутов.\nПоиск производится по полям `id`, `techName`, `rusName`, `enName` и `description`.\nВ ответе будут представлены только те атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все атрибуты, идентификатор, наименования или описание которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\ntechName,\nrusName,\nenName,\ndescription\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `techName`, `rusName`, `enName` и `description`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\ntechName,\nrusName,\nenName,\ndescription\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "filterOutIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Массив идентификаторов сущностей, которые необходимо исключить из общего списка.\n\nПример: окно со списком атрибутов ЕХД, доступных для добавления в каталог.\nНеобходимо исключить атрибуты, которые уже добавлены в каталог.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/attributes",
      "method": "get",
      "methodDesc": "Получение информации об атрибутах",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "paramName": "array",
              "paramType": "Не найден тип",
              "description": "Атрибут",
              "required": false,
              "schema": []
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "attributeIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов атрибутов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/attributes",
      "method": "post",
      "methodDesc": "Создание нового атрибута в ЕХД",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/attributes",
      "method": "delete",
      "methodDesc": "Удаление атрибутов из ЕХД",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "attributeIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов атрибутов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/attributes/{attributeId}",
      "method": "put",
      "methodDesc": "Изменение информации об атрибуте",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "attributeId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор атрибута.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/attributes/{attributeId}/catalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах, в которых используется атрибут",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование каталога",
                      "paramName": "catalogName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование каталога",
                          "paramName": "catalogName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "isCatalogDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Удален ли каталог",
                  "required": true,
                  "schema": {
                      "description": "Удален ли каталог",
                      "paramName": "isCatalogDeleted",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Удален ли каталог",
                          "paramName": "isCatalogDeleted",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributeRusName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование атрибута в каталоге\n\nМожет быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование атрибута в каталоге\n\nМожет быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию",
                      "paramName": "attributeRusName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование атрибута в каталоге\n\nМожет быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию",
                          "paramName": "attributeRusName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributeEnName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Англоязычное наименование атрибута в каталоге\n\nМожет быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию",
                  "required": true,
                  "schema": {
                      "description": "Англоязычное наименование атрибута в каталоге\n\nМожет быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию",
                      "paramName": "attributeEnName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Англоязычное наименование атрибута в каталоге\n\nМожет быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию",
                          "paramName": "attributeEnName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов атрибута",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "attributeId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор атрибута.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `catalogId`, `catalogName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор, наименование или название атрибута в которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "dataModes",
              "paramIn": "query",
              "paramType": "string",
              "description": "Технические наименования режимов работы с данными возвращаемых каталогов.\n\nИспользуется для фильтрации.\nВ параметре передается строка. Не может передаваться пустая строка.\n\nДопустимые значения:\n  - `filling` - заполнение;\n  - `publication` - публикация.\n\nПо умолчанию `filling`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "catalogStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Технические статусы возвращаемых каталогов.\n\nИспользуется для фильтрации.\nВ параметре передается массив строк, строка представляет собой ключевое слово.\nНе может передаваться пустой массив.\n\nДопустимые значения:\n  - `active` - активный;\n  - `deleted` - удаленный.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\ncatalogId,\ncatalogName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `catalogId`, `catalogName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `catalogId`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\ncatalogId,\ncatalogName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/attributes/{attributeId}/catalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах заполнения и атрибутах, в которых используется атрибут",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов и атрибутов атрибута",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "attributeId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор атрибута.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/attributes/{attributeId}/publicationCatalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации и атрибутах, в которых используется атрибут",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов и атрибутов атрибута",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "attributeId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор атрибута.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/attributes/groups",
      "method": "post",
      "methodDesc": "Создание новой группы атрибутов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/attributes/groups",
      "method": "get",
      "methodDesc": "Получение списка групп атрибутов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор группы атрибутов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор группы атрибутов",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор группы атрибутов",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование группы атрибутоа",
                  "required": true,
                  "schema": {
                      "description": "Наименование группы атрибутоа",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование группы атрибутоа",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/attributes/groups",
      "method": "delete",
      "methodDesc": "Удаление групп атрибутов с отвязкой от атрибутов всех каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "groupIds",
              "paramIn": "query",
              "paramType": "integer",
              "description": "Список идентификаторов удаляемых групп атрибутов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/attributes/groups/{groupId}",
      "method": "put",
      "methodDesc": "Изменение (переименование) группы атрибутов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "groupId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор группы атрибутов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/attributes/system/{systemId}",
      "method": "get",
      "methodDesc": "Получение системных атрибутов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор системного атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор системного атрибута",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор системного атрибута",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование системного атрибута",
                  "required": true,
                  "schema": {
                      "description": "Наименование системного атрибута",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование системного атрибута",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "systemId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/attributes/types",
      "method": "get",
      "methodDesc": "Получение списка типов атрибутов в ЕХД",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор типа атрибута",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор типа атрибута",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор типа атрибута",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramType": "unknown param type",
                  "description": "Наименование типа атрибута",
                  "required": false,
                  "schema": {
                      "description": "Наименование типа атрибута",
                      "paramName": "name",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Наименование типа атрибута",
                          "paramName": "name",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "typeTag",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа атрибута",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование типа атрибута",
                      "paramName": "typeTag",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование типа атрибута",
                          "paramName": "typeTag",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/dictionaries/search",
      "method": "post",
      "methodDesc": "Поиск по списку справочников",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку справочников",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых справочников (число от `1` до `500`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку справочников. Поиск производится по идентификатору и наименованию.\n\nЗапрос со значением `12` вернет все справочники, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/aux/{auxDictTagId}",
      "method": "get",
      "methodDesc": "Получение содержания вспомогательных справочников",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "auxDictTagId",
              "paramIn": "path",
              "paramType": "string[\nkindCatalog,\ntypeCatalog,\nperiodUpdate,\npublicationStatus,\nfilterOperator,\nobjectStatus,\npublObjectStatus,\nattributeType,\nsignStatus,\nsubCatalogHistory,\nsubCatalogHistoryType,\nsubObjectLog,\nimportHistoryStatus,\ndatasetSeasonality,\ndatasetDictType,\nsysColumns,\ngeneralInfoSyncedProperty,\nmetadataSyncedProperty,\nmapSyncedProperty,\nrubric,\nsearchIndexStatus,\nuserGroup,\nuserPrivilege,\nmailingStatus,\nmenu,\nuserStatus,\nsecurityEvent,\nlastChangeType,\npushsubStatus,\ngeoType\n]",
              "description": "Строковый идентификатор вспомогательного справочника",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nkindCatalog,\ntypeCatalog,\nperiodUpdate,\npublicationStatus,\nfilterOperator,\nobjectStatus,\npublObjectStatus,\nattributeType,\nsignStatus,\nsubCatalogHistory,\nsubCatalogHistoryType,\nsubObjectLog,\nimportHistoryStatus,\ndatasetSeasonality,\ndatasetDictType,\nsysColumns,\ngeneralInfoSyncedProperty,\nmetadataSyncedProperty,\nmapSyncedProperty,\nrubric,\nsearchIndexStatus,\nuserGroup,\nuserPrivilege,\nmailingStatus,\nmenu,\nuserStatus,\nsecurityEvent,\nlastChangeType,\npushsubStatus,\ngeoType\n]"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов справочника (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку элементов справочника. Поиск производится по идентификатору и наименованию.\n\nЗапрос со значением `123` вернет все элементы справочника, идентификатор или наименование которых содержит подстроку `123`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/columns",
      "method": "get",
      "methodDesc": "Получение колонок справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "techName",
                  "paramType": "unknown param type",
                  "description": "Техническое название столбца определенного формата.\nНазвание может содержать английские буквы, цифры и символы нижнего подчеркивания _. Должно начинаться с буквы",
                  "required": true,
                  "schema": {
                      "description": "Техническое название столбца определенного формата.\nНазвание может содержать английские буквы, цифры и символы нижнего подчеркивания _. Должно начинаться с буквы",
                      "paramName": "techName",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое название столбца определенного формата.\nНазвание может содержать английские буквы, цифры и символы нижнего подчеркивания _. Должно начинаться с буквы",
                          "paramName": "techName",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "rusName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное название столбца",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное название столбца",
                      "paramName": "rusName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное название столбца",
                          "paramName": "rusName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaries",
      "method": "post",
      "methodDesc": "Создание справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/dictionaries",
      "method": "get",
      "methodDesc": "Получение общей информации справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "paramName": "array",
              "paramType": "Не найден тип",
              "description": "Справочник",
              "required": false,
              "schema": []
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов справочников.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/dictionaries",
      "method": "delete",
      "methodDesc": "Удаление справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов справочников.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/dictionaries/validate",
      "method": "post",
      "methodDesc": "Валидация условия ограничения выборки для справочника на основе каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "condition",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условие ограничения выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Условие ограничения выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                      "paramName": "condition",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Условие ограничения выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                          "paramName": "condition",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога для получения атрибутов и проверки их использования в условии",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога для получения атрибутов и проверки их использования в условии",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога для получения атрибутов и проверки их использования в условии",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/dictionaries/{dictionaryId}",
      "method": "put",
      "methodDesc": "Изменение информации о справочнике",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/attributes/search",
      "method": "post",
      "methodDesc": "Получение информации об атрибутах, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута ЕХД",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута ЕХД",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута ЕХД",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование атрибута",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование атрибута",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование атрибута",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку атрибутов, в которых используется справочник",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку атрибутов.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все атрибуты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/catalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах заполнения и атрибутах, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов и атрибутов, в которых используется справочник",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/publicationCatalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации и атрибутах, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется справочник",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/searchIndexes/search",
      "method": "post",
      "methodDesc": "Получение информации о поисковых индексах, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку поисковых индексов, в которых используется справочник",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку индексов.\nПоиск производится по полям `id`, `name`, `dictColumnName` и `dictColumnTechName`.\nВ ответе будут представлены только те поисковые индексы, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все поисковые индексы, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\ndictColumnName,\ndictColumnTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`, `dictColumnName` и `dictColumnTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\ndictColumnName,\ndictColumnTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/childDictionaries/search",
      "method": "post",
      "methodDesc": "Получение информации о дочерних справочниках, в которых используется справочник как родитель",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор справочника",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор справочника",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор справочника",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование справочника",
                  "required": true,
                  "schema": {
                      "description": "Наименование справочника",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование справочника",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку дочерних справочников, в которых справочник указан родителем",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых справочников (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку справочников.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те справочники, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все справочники, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id` и `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/catalogPackages/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и конструкторах процессов, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых справочник используется в конструкторе проверок",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `packName`, `packTechName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\npackName,\npackTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `packName`, `packTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\npackName,\npackTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/catalogUniqs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и настройках уникальностей, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых справочник используется в конструкторе проверок",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `uniqTypeTag`, `packTechName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nuniqTypeTag,\npackTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nuniqTypeTag,\npackTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaries/{dictionaryId}/publCatalogConditions/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации, в которых используется справочник",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется справочник",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id` и `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements/search",
      "method": "post",
      "methodDesc": "Поиск по списку элементов справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку элементов справочника",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов справочника (число от `1` до `500`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "dictionaryElementStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы элементов справочника.\n\nИспользуется для фильтрации.\nВ параметре передается массив строк, строка представляет собой ключевое слово.\nНе может передаваться пустой массив.\n\nДопустимые значения:\n  - `active` - активный;\n  - `deleted` - удаленный.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку элементов справочника. Поиск производится по идентификатору и наименованию.\n\nЗапрос со значением `123` вернет все элементы справочника, идентификатор или наименование которых содержит подстроку `123`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "parentDictElementIds",
              "paramIn": "query",
              "paramType": "string",
              "description": "Массив идентификаторов элементов родительского справочника.\nВ ответе должны содержаться элементы справочника в соответствии с переданными родительскими идентификаторами.\nЕсли в массиве содержится идентификатор несуществующего или удалённого элемента, то он игнорируется.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements/columns",
      "method": "get",
      "methodDesc": "Получение столбцов для элементов справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название столбца в списке",
                  "required": true,
                  "schema": {
                      "description": "Название столбца в списке",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название столбца в списке",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "techName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца",
                      "paramName": "techName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца",
                          "paramName": "techName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnType",
                  "paramType": "unknown param type",
                  "description": "Тип столбца списка элементов справочника, показывает, какой тип информации передается в столбце:\n  - `general` - общая информация\n  - `additional` - дополнительный столбец, добавленный пользователем вручную",
                  "required": false,
                  "schema": {
                      "description": "Тип столбца списка элементов справочника, показывает, какой тип информации передается в столбце:\n  - `general` - общая информация\n  - `additional` - дополнительный столбец, добавленный пользователем вручную",
                      "paramName": "columnType",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Тип столбца списка элементов справочника, показывает, какой тип информации передается в столбце:\n  - `general` - общая информация\n  - `additional` - дополнительный столбец, добавленный пользователем вручную",
                          "paramName": "columnType",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "typeTag",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа атрибута",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование типа атрибута",
                      "paramName": "typeTag",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование типа атрибута",
                          "paramName": "typeTag",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements",
      "method": "post",
      "methodDesc": "Создание элемента справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Строковый идентифкатор ресурса, для которого передан ответ",
                  "required": false,
                  "schema": {
                      "description": "Строковый идентифкатор ресурса, для которого передан ответ",
                      "paramName": "id",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Строковый идентифкатор ресурса, для которого передан ответ",
                          "paramName": "id",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Текст ответа",
                  "required": true,
                  "schema": {
                      "description": "Текст ответа",
                      "paramName": "message",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Текст ответа",
                          "paramName": "message",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "code",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "HTTP-код ошибки",
                  "required": true,
                  "schema": {
                      "description": "HTTP-код ошибки",
                      "paramName": "code",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "HTTP-код ошибки",
                          "paramName": "code",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "messageType",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип ответа",
                  "required": true,
                  "schema": {
                      "description": "Тип ответа",
                      "paramName": "messageType",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип ответа",
                          "paramName": "messageType",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "key",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор элемента справочника",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор элемента справочника",
                      "paramName": "key",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор элемента справочника",
                          "paramName": "key",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "value",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название элемента справочника на русском языке",
                  "required": true,
                  "schema": {
                      "description": "Название элемента справочника на русском языке",
                      "paramName": "value",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название элемента справочника на русском языке",
                          "paramName": "value",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "value_en",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название элемента справочника на английском языке (при наличии)",
                  "required": false,
                  "schema": {
                      "description": "Название элемента справочника на английском языке (при наличии)",
                      "paramName": "value_en",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Название элемента справочника на английском языке (при наличии)",
                          "paramName": "value_en",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "prnt_key",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор элемента родительского справочника (при наличии)",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор элемента родительского справочника (при наличии)",
                      "paramName": "prnt_key",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор элемента родительского справочника (при наличии)",
                          "paramName": "prnt_key",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements",
      "method": "get",
      "methodDesc": "Получение информации об элементе справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "key",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор элемента справочника",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор элемента справочника",
                      "paramName": "key",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор элемента справочника",
                          "paramName": "key",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "value",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название элемента справочника на русском языке",
                  "required": true,
                  "schema": {
                      "description": "Название элемента справочника на русском языке",
                      "paramName": "value",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название элемента справочника на русском языке",
                          "paramName": "value",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "value_en",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название элемента справочника на английском языке (при наличии)",
                  "required": false,
                  "schema": {
                      "description": "Название элемента справочника на английском языке (при наличии)",
                      "paramName": "value_en",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Название элемента справочника на английском языке (при наличии)",
                          "paramName": "value_en",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "prnt_key",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор элемента родительского справочника (при наличии)",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор элемента родительского справочника (при наличии)",
                      "paramName": "prnt_key",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор элемента родительского справочника (при наличии)",
                          "paramName": "prnt_key",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryElementIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов элементов справочника.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements",
      "method": "delete",
      "methodDesc": "Отметка элемента справочника удаленным",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "dictionaryElementIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов элементов справочника.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "userConfirmedDeletion",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Пользователь подтвердил удаление элементов справочника.\n\nПередается `false` при первом запросе на удаление, `true` - после подтверждения пользователем. \n\nЕсли `true`, то не проверять элементы на использование в системе и удалять их без предупреждения.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements/{dictionaryElementId}",
      "method": "put",
      "methodDesc": "Изменение элемента справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Строковый идентифкатор ресурса, для которого передан ответ",
                  "required": false,
                  "schema": {
                      "description": "Строковый идентифкатор ресурса, для которого передан ответ",
                      "paramName": "id",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Строковый идентифкатор ресурса, для которого передан ответ",
                          "paramName": "id",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Текст ответа",
                  "required": true,
                  "schema": {
                      "description": "Текст ответа",
                      "paramName": "message",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Текст ответа",
                          "paramName": "message",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "code",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "HTTP-код ошибки",
                  "required": true,
                  "schema": {
                      "description": "HTTP-код ошибки",
                      "paramName": "code",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "HTTP-код ошибки",
                          "paramName": "code",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "messageType",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип ответа",
                  "required": true,
                  "schema": {
                      "description": "Тип ответа",
                      "paramName": "messageType",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип ответа",
                          "paramName": "messageType",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "key",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор элемента справочника",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор элемента справочника",
                      "paramName": "key",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор элемента справочника",
                          "paramName": "key",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "value",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название элемента справочника на русском языке",
                  "required": true,
                  "schema": {
                      "description": "Название элемента справочника на русском языке",
                      "paramName": "value",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название элемента справочника на русском языке",
                          "paramName": "value",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "value_en",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название элемента справочника на английском языке (при наличии)",
                  "required": false,
                  "schema": {
                      "description": "Название элемента справочника на английском языке (при наличии)",
                      "paramName": "value_en",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Название элемента справочника на английском языке (при наличии)",
                          "paramName": "value_en",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "prnt_key",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор элемента родительского справочника (при наличии)",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор элемента родительского справочника (при наличии)",
                      "paramName": "prnt_key",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор элемента родительского справочника (при наличии)",
                          "paramName": "prnt_key",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "dictionaryElementId",
              "paramIn": "path",
              "paramType": "string",
              "description": "Идентификатор элемента справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/dictionaryElements/recover",
      "method": "post",
      "methodDesc": "Восстановление элемента справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с массивом идентификаторов элементов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Primitive param description",
                  "required": false,
                  "schema": {
                      "description": "Primitive param description",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Primitive param description",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaryExports",
      "method": "post",
      "methodDesc": "Запуск экспорта справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaryExports/{exportId}/cancel",
      "method": "get",
      "methodDesc": "Отмена  экспорта справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "exportId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор экспорта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/dictionaryExports/history",
      "method": "post",
      "methodDesc": "Получение истории экспортов справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор экспорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор экспорта",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор экспорта",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                  "required": true,
                  "schema": {
                      "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramType": "unknown param type",
                  "description": "Дата и время запроса экспорта",
                  "required": true,
                  "schema": {
                      "description": "Дата и время запроса экспорта",
                      "paramName": "dateStart",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата и время запроса экспорта",
                          "paramName": "dateStart",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramType": "unknown param type",
                  "description": "Дата и время окончания экспорта",
                  "required": false,
                  "schema": {
                      "description": "Дата и время окончания экспорта",
                      "paramName": "dateEnd",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата и время окончания экспорта",
                          "paramName": "dateEnd",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "userName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ФИО пользователя, запустившего экспорт",
                  "required": true,
                  "schema": {
                      "description": "ФИО пользователя, запустившего экспорт",
                      "paramName": "userName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "ФИО пользователя, запустившего экспорт",
                          "paramName": "userName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countAllObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество объектов в экспорте",
                  "required": false,
                  "schema": {
                      "description": "Общее количество объектов в экспорте",
                      "paramName": "countAllObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Общее количество объектов в экспорте",
                          "paramName": "countAllObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа файла экспорта",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование типа файла экспорта",
                      "paramName": "type",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование типа файла экспорта",
                          "paramName": "type",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                      "paramName": "fileId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                          "paramName": "fileId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "status",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "status",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hasSettings",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Указывает на применение настроек к файлу экспорта.",
                  "required": true,
                  "schema": {
                      "description": "Указывает на применение настроек к файлу экспорта.",
                      "paramName": "hasSettings",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Указывает на применение настроек к файлу экспорта.",
                          "paramName": "hasSettings",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку экспортов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов списка историй экспортов (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/regexps/search",
      "method": "post",
      "methodDesc": "Поиск по списку регулярных выражений",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку регулярных выражений",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых регулярных выражений (число от `1` до `500`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку регулярных выражений.\nПоиск производится по идентификатору и наименованию регулярного выражения.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/regexps",
      "method": "post",
      "methodDesc": "Создание регулярного выражения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/regexps",
      "method": "get",
      "methodDesc": "Получение информации о регулярных выражениях",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "regexIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов регулярных выражений.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/regexps",
      "method": "delete",
      "methodDesc": "Удаление регулярных выражений",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "regexIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов регулярных выражений.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}",
      "method": "put",
      "methodDesc": "Изменение регулярного выражения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}/attributes/search",
      "method": "post",
      "methodDesc": "Получение информации об атрибутах, в которых используется регулярное выражение",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога, в котором используется данный атрибут",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога, в котором используется данный атрибут",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога, в котором используется данный атрибут",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название каталога, в котором используется данный атрибут",
                  "required": true,
                  "schema": {
                      "description": "Название каталога, в котором используется данный атрибут",
                      "paramName": "catalogName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название каталога, в котором используется данный атрибут",
                          "paramName": "catalogName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributeId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута ЕХД",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута ЕХД",
                      "paramName": "attributeId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута ЕХД",
                          "paramName": "attributeId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "attributeName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название атрибута",
                  "required": true,
                  "schema": {
                      "description": "Название атрибута",
                      "paramName": "attributeName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название атрибута",
                          "paramName": "attributeName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку атрибутов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых атрибутов (число от `1` до `500`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку атрибутов. Поиск производится по идентификатору и наименованию каталога, а также по идентификатору и наименованию атрибута.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\ncatalogId,\ncatalogName,\nattributeId,\nattributeName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `catalogId`, `catalogName`, `attributeId`, `attributeName`.\n\nПо умолчанию: `catalogId`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\ncatalogId,\ncatalogName,\nattributeId,\nattributeName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}/checkAttributes",
      "method": "get",
      "methodDesc": "Проверка, используется ли регулярное выражение в атрибутах каталогов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "usedInCatalogs",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Результат проверки. `true` если выражение используется в каталогах, `false` - не используется",
                  "required": true,
                  "schema": {
                      "description": "Результат проверки. `true` если выражение используется в каталогах, `false` - не используется",
                      "paramName": "usedInCatalogs",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Результат проверки. `true` если выражение используется в каталогах, `false` - не используется",
                          "paramName": "usedInCatalogs",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Сообщение с результатом проверки и информацией об атрибутах",
                  "required": false,
                  "schema": {
                      "description": "Сообщение с результатом проверки и информацией об атрибутах",
                      "paramName": "message",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Сообщение с результатом проверки и информацией об атрибутах",
                          "paramName": "message",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/regexps/testString",
      "method": "post",
      "methodDesc": "Проверка, соответствует ли введенный текст регулярному выражению",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "textIsMatch",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "textIsMatch",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "textIsMatch",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Сообщения результата проверки",
                  "required": false,
                  "schema": {
                      "description": "Сообщения результата проверки",
                      "paramName": "message",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Сообщения результата проверки",
                          "paramName": "message",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса регулярным выражением и текстом для проверки",
          "schema": [
              {
                  "paramName": "regexValue",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Значение регулярного выражения",
                  "required": true,
                  "schema": {
                      "description": "Значение регулярного выражения",
                      "paramName": "regexValue",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Значение регулярного выражения",
                          "paramName": "regexValue",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "textValue",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Текст для проверки на соответствие регулярному выражению",
                  "required": true,
                  "schema": {
                      "description": "Текст для проверки на соответствие регулярному выражению",
                      "paramName": "textValue",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Текст для проверки на соответствие регулярному выражению",
                          "paramName": "textValue",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/regexps/{regexId}/catalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и атрибутах, в которых используется регулярное выражение",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов и атрибутов, в которых используется регулярное выражение",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов и атрибутов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}/catalogPackages/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и конструкторах процессов, в которых используется регулярное выражение",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется регулярное выражение",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `packName`, `packTechName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\npackName,\npackTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `packName`, `packTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\npackName,\npackTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}/catalogUniqs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и настройках уникальностей, в которых используется регулярное выражение",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется регулярное выражение",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id`, `fullName`, `uniqTypeTag`, `packTechName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nuniqTypeTag,\npackTechName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nuniqTypeTag,\npackTechName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}/publCatalogConditions/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации, в которых используется регулярное выражение",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется регулярное выражение",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id` и `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/search",
      "method": "post",
      "methodDesc": "Поиск по списку поисковых индексов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку поисковых индексов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых индексов (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку индексов. Поиск производится по идентификатору индекса `id`, наименованиям `name` и `techName`, \nописанию индекса `description`, наименованию справочника `dictName`, наименованию столбца справочника `dictColumnName`.\n\nЗапрос со значением `12` вернет все индексы, у которых идентификатор индекса, наименования или описание индекса, \nнаименование справочника или столбца справочника которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\ntechName,\ndictName,\ndictColumnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`, `techName`, `dictName`, `dictColumnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\ntechName,\ndictName,\ndictColumnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых поисковых индексов, используется для фильтрации по статусу индекса.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes",
      "method": "get",
      "methodDesc": "Получение поисковых индексов по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "indexIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов поисковых индексов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes",
      "method": "post",
      "methodDesc": "Создание поискового индекса",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/searchIndexes",
      "method": "delete",
      "methodDesc": "Удаление поискового индекса",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "indexIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов поисковых индексов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/{indexId}",
      "method": "put",
      "methodDesc": "Изменение информации о поисковом индексе",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "indexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор индекса.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/{indexId}/catalogAttributes/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах и атрибутах, в которых используется поисковый индекс",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов и атрибутов, в которых используется поисковый индекс",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "indexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор индекса.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов и атрибутов.\nПоиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\nВ ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nattributeRusName,\nattributeEnName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/{indexId}/dictionary",
      "method": "get",
      "methodDesc": "Получение информации о справочнике, по которому построен поисковый индекс",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "indexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор индекса.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/{indexId}/query",
      "method": "get",
      "methodDesc": "Запрос к поисковому индексу",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Primitive param description",
              "paramName": "primitive param name",
              "paramType": "string"
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "indexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор индекса.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "query",
              "paramIn": "query",
              "paramType": "string",
              "description": "Значение поискового запроса",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/{indexId}/rebuild",
      "method": "post",
      "methodDesc": "Полное перестроение индекса",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "indexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор индекса.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/searchIndexes/{indexId}/resendErrors",
      "method": "post",
      "methodDesc": "Повторная обработка ошибочных записей",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "indexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор индекса.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/oivs/search",
      "method": "post",
      "methodDesc": "Получение списка ОИВов",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых ОИВов (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке ОИВов. Поиск производится по атрибутам `id`, `name`, 'shortName', `inn`. Запрос со значением `12` вернет все ОИВы, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\nshortName,\ninn\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `name`, `shortName`, `inn`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\nshortName,\ninn\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "hasCatalogs",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий, что ОИВ является поставщиком хотя бы в одном каталоге",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "countCatalogs",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий, что ответ должен содержать количество каталогов, для которых ОИВ является поставщиком",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/oivs",
      "method": "get",
      "methodDesc": "Получение ОИВов по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Нет описания",
              "paramName": "Array[undefined]",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Array[undefined]",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "oivIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов ОИВов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/oivs",
      "method": "post",
      "methodDesc": "Создание ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/oivs",
      "method": "delete",
      "methodDesc": "Удаление ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "oivIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов ОИВов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/oivs/{oivId}",
      "method": "put",
      "methodDesc": "Изменение данных ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "oivId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/oivs/{oivId}/catalogs/search",
      "method": "post",
      "methodDesc": "Поиск каталогов заполнения, связанных с ОИВ",
      "responses": {
          "description": "Успешный ответ. При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. Если переданы несуществующие идентификаторы категории, ОИВ, то также возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "oivId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке каталогов.\nПоиск производится по идентификатору и полному наименованию каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nthematicCategory,\nobjectCategories,\noivs\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nthematicCategory,\nobjectCategories,\noivs\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/oivs/{oivId}/publicationCatalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации, в которых указана ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых указана ОИВ",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "oivId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/oivs/{oivId}/catalogGroups/search",
      "method": "post",
      "methodDesc": "Получение информации о группах каталогов, в которых указана ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор группы каталогов",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор группы каталогов",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Наименование группы каталогов",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование группы каталогов",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку групп каталогов, в которых указана ОИВ",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "oivId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку групп каталогов.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те группы каталогов, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все группы каталогов, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/oivs/{oivId}/childOivs/search",
      "method": "post",
      "methodDesc": "Получение информации о дочерних ОИВах, в которых указана ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор группы каталогов",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор группы каталогов",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Наименование группы каталогов",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование группы каталогов",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку групп каталогов, в которых указана ОИВ",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "oivId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку групп каталогов.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те группы каталогов, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все группы каталогов, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/users/search",
      "method": "post",
      "methodDesc": "Получение списка пользователей",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых пользователей (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке Пользователей. Поиск производится по атрибутам `id`, `Логин`, `Фамилия`, `Имя`, `Отчество` и `e-mail`. Запрос со значением `Iva` вернет всех Пользователей, атрибуты которого содержат подстроку `Iva`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nlastName,\nfirstName,\npathroName,\nlogin,\nemail,\nuserGroupName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `firstName`, `lastName`, `pathroName` `login`, `email`, `userGroupName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nlastName,\nfirstName,\npathroName,\nlogin,\nemail,\nuserGroupName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "oivId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ. Необязательный параметр. Если передается oivId, то в ответе возвращаются пользователи, связанные с указанным ОИВ.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "isAdmin",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак администратора",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/users",
      "method": "get",
      "methodDesc": "Получение данных пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов пользователей.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/users",
      "method": "post",
      "methodDesc": "Создание пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/users",
      "method": "delete",
      "methodDesc": "Изменение статуса учетной записи пользователя на \"Удалена\"",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов пользователей.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/users/{userId}",
      "method": "put",
      "methodDesc": "Изменение данных пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/users/admins",
      "method": "post",
      "methodDesc": "Создание администратора",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/users/admins/{userId}",
      "method": "put",
      "methodDesc": "Изменение данных администратора",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/users/block",
      "method": "get",
      "methodDesc": "Блокирование пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов пользователей.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/users/recover",
      "method": "get",
      "methodDesc": "Восстановление пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов пользователей.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/users/{userId}/resetPassword",
      "method": "get",
      "methodDesc": "Сброс пароля пользователя (триггер для вызова метода сброса пароля KeyCloak)",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/users/{userId}/specPrivileges/search",
      "method": "post",
      "methodDesc": "Получение спецпривилегий пользователя по его идентификатору",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса для поиска по списку специальных привилегий",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "userId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "dataMode",
              "paramIn": "query",
              "paramType": "string",
              "description": "Технические наименования режимов работы с данными возвращаемых каталогов и групп каталогов.\n\nИспользуется для фильтрации.\nВ параметре передается строка. Не может передаваться пустая строка.\n\nДопустимые значения:\n  - `fillingCatalog` - Каталоги заполнения\n  - `publicationCatalog` - Каталоги публикации\n  - `catalogGroup` - Группы каталогов\n  - `all` - Все\n\nПо умолчанию `all`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых спецпривилегий (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке спецпривилегий Пользователя. Поиск производится по атрибутам `id`, `Наименование` каталога/группы каталогов. Запрос со значением `Iva` вернет все каталоги, атрибуты которого содержат подстроку `Iva`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nentityId,\nentityName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `entityId`, `entityName`.\n\nПо умолчанию: `entityId`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nentityId,\nentityName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/users/{userId}/specPrivileges",
      "method": "post",
      "methodDesc": "Сохранение спецпривилегий пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "entityId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога или группы каталогов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога или группы каталогов",
                      "paramName": "entityId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога или группы каталогов",
                          "paramName": "entityId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "entityName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование сущности",
                  "required": false,
                  "schema": {
                      "description": "Наименование сущности",
                      "paramName": "entityName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Наименование сущности",
                          "paramName": "entityName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "entityType",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип сущности",
                  "required": true,
                  "schema": {
                      "description": "Тип сущности",
                      "paramName": "entityType",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип сущности",
                          "paramName": "entityType",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "privilege",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Привилегии каталогов и групп каталогов",
                  "required": false,
                  "schema": {
                      "description": "Привилегии каталогов и групп каталогов",
                      "paramName": "privilege",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Привилегии каталогов и групп каталогов",
                          "paramName": "privilege",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "userId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/users/{userId}/specPrivileges",
      "method": "put",
      "methodDesc": "Изменение спецпривилегий пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "userId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор пользователя.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/users/specPrivileges",
      "method": "delete",
      "methodDesc": "Удаление спецпривилегий пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "specPrivilegeIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов спецпривилегий.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/thematicCategories/search",
      "method": "post",
      "methodDesc": "Получение списка тематических категорий",
      "responses": {
          "description": "Успешный ответ. \nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку тематических категорий",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых тематических категорий (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке тематических категорий. Поиск производится по атрибутам `id`, `name` и `enName`. Запрос со значением `12` вернет все категории, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\nenName\n]",
              "description": "Поле, по которому производится сортировка.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\nenName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/thematicCategories",
      "method": "get",
      "methodDesc": "Получение тематических категорий по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "categoryIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов тематических категорий.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/thematicCategories",
      "method": "post",
      "methodDesc": "Создание тематической категории",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/thematicCategories",
      "method": "delete",
      "methodDesc": "Удаление тематической категории",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "categoryIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов тематических категорий.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/thematicCategories/{thematicCategoryId}",
      "method": "put",
      "methodDesc": "Изменение информации о тематической категории",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "thematicCategoryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор тематической категории.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/thematicCategories/{thematicCategoryId}/catalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах заполнения, в которых используется тематическая категория",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется тематическая категория",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "thematicCategoryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор тематической категории.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id` и `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/thematicCategories/{thematicCategoryId}/publicationCatalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации, в которых используется тематическая категория",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется тематическая категория",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "thematicCategoryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор тематической категории.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id` и `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/systems/search",
      "method": "post",
      "methodDesc": "Получение списка систем",
      "responses": {
          "description": "Успешный ответ. При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых систем (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке информационных систем. Поиск производится по атрибутам `id`, `name`, `login`. Запрос со значением `12` вернет все системы, идентификатор, наименование или логин которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\nlogin,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `name`, `login`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\nlogin,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "typeIntegration",
              "paramIn": "query",
              "paramType": "array",
              "description": "Указывает с каким типом интеграции необходимо получить системы:\n  - `consumer` - потребитель\n  - `supplier` - поставщик\n\nВ параметре передается массив тэгов. Если массив не передан, возвращаются любые типы интеграций",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "countCatalogs",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий, что ответ должен содержать количество каталогов, с которыми система имеет интеграцию. Если выбран тип интеграции supplier, consumer, то считается количество для указанного типа, иначе оба типа.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/systems",
      "method": "get",
      "methodDesc": "Получение систем по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "systemIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов систем.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/systems",
      "method": "post",
      "methodDesc": "Создание новой информационной системы",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/systems",
      "method": "delete",
      "methodDesc": "Отметка системы удаленной",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "systemIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов систем.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/systems/recover",
      "method": "get",
      "methodDesc": "Восстановление системы",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "systemIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов систем.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/systems/{systemId}",
      "method": "put",
      "methodDesc": "Изменение данных системы",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "systemId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/systems/{systemId}/catalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах заполнения, в которых указана система",
      "responses": {
          "description": "Успешный ответ.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "systemId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `200`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "typeIntegration",
              "paramIn": "query",
              "paramType": "array",
              "description": "Указывает с каким типом интеграции необходимо получить системы:\n  - `consumer` - потребитель\n  - `supplier` - поставщик\n\nВ параметре передается массив тэгов. Если массив не передан, возвращаются любые типы интеграций",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/systems/{systemId}/publicationCatalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах публикации, из которых система получает данные",
      "responses": {
          "description": "Успешный ответ.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "systemId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/check",
      "method": "get",
      "methodDesc": "Запуск указанных проверок для каталога.",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование статуса результата проверки",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование статуса результата проверки",
                      "paramName": "status",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование статуса результата проверки",
                          "paramName": "status",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "signCheckId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор блокировки, которая будет применяться к каталогу",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор блокировки, которая будет применяться к каталогу",
                      "paramName": "signCheckId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор блокировки, которая будет применяться к каталогу",
                          "paramName": "signCheckId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Сообщения с результатом проверки",
                  "required": false,
                  "schema": {
                      "description": "Сообщения с результатом проверки",
                      "paramName": "message",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Сообщения с результатом проверки",
                          "paramName": "message",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "checkCatalog",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список проверок, которые будут запускаться для каталога.\nВ параметре передается массив строк, строка представляет собой ключевое слово.\n\nДопустимые значения: \n- `isSigning` - находится ли каталог в процессе подписания, \n- `userRights` - проверка, что у пользователя есть права на подписание данных каталога, \n- `FLKErrors` - проверка, есть ли объекты с ошибками ФЛК,\n- `responsiblePerson` - проверка, указано ли у каталога ответственное лицо.\n- `description` - проверка, заполнено ли описание каталога,\n- `isImport` - находится ли каталог в процессе импорта.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}",
      "method": "post",
      "methodDesc": "Подписание всех неподписанных объектов выбранного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с данными цифровой подписи",
          "schema": [
              {
                  "paramName": "unsignedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Неподписанный хэш от бэкенда",
                  "required": true,
                  "schema": {
                      "description": "Неподписанный хэш от бэкенда",
                      "paramName": "unsignedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Неподписанный хэш от бэкенда",
                          "paramName": "unsignedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Подписанный хэш от КриптоПро",
                  "required": true,
                  "schema": {
                      "description": "Подписанный хэш от КриптоПро",
                      "paramName": "signedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Подписанный хэш от КриптоПро",
                          "paramName": "signedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "certificateObject",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "certificateObject",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "certificateObject.subjectName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о сертификате подписи",
                  "required": true,
                  "schema": {
                      "description": "Информация о сертификате подписи",
                      "paramName": "certificateObject.subjectName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о сертификате подписи",
                          "paramName": "certificateObject.subjectName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.issuerName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о том, кто выпустил сертификат",
                  "required": true,
                  "schema": {
                      "description": "Информация о том, кто выпустил сертификат",
                      "paramName": "certificateObject.issuerName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о том, кто выпустил сертификат",
                          "paramName": "certificateObject.issuerName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validFromDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата начала валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата начала валидации подписи",
                      "paramName": "certificateObject.validFromDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата начала валидации подписи",
                          "paramName": "certificateObject.validFromDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validToDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата окончания валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания валидации подписи",
                      "paramName": "certificateObject.validToDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания валидации подписи",
                          "paramName": "certificateObject.validToDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.serialNumber",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Серийный номер",
                  "required": true,
                  "schema": {
                      "description": "Серийный номер",
                      "paramName": "certificateObject.serialNumber",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Серийный номер",
                          "paramName": "certificateObject.serialNumber",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.publicKey",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Публичный ключ",
                  "required": true,
                  "schema": {
                      "description": "Публичный ключ",
                      "paramName": "certificateObject.publicKey",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Публичный ключ",
                          "paramName": "certificateObject.publicKey",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "signatureId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписания каталога, полученный на этапе формирования хэша.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/hash",
      "method": "get",
      "methodDesc": "Получение общего хэша всех неподписанных объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "signatureId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор процесса подписания",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор процесса подписания",
                      "paramName": "signatureId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор процесса подписания",
                          "paramName": "signatureId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Хэш подписания",
                  "required": true,
                  "schema": {
                      "description": "Хэш подписания",
                      "paramName": "hash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Хэш подписания",
                          "paramName": "hash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/hash",
      "method": "post",
      "methodDesc": "Создание общего хэша подписания для подписания через внешние API",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "signatureId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор процесса подписания",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор процесса подписания",
                      "paramName": "signatureId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор процесса подписания",
                          "paramName": "signatureId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Хэш подписания",
                  "required": true,
                  "schema": {
                      "description": "Хэш подписания",
                      "paramName": "hash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Хэш подписания",
                          "paramName": "hash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Тело запроса для сохранения объекта в каталоге с подписанием",
          "schema": [
              {
                  "paramName": "unsignedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Неподписанный хэш от бэкенда",
                  "required": true,
                  "schema": {
                      "description": "Неподписанный хэш от бэкенда",
                      "paramName": "unsignedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Неподписанный хэш от бэкенда",
                          "paramName": "unsignedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Подписанный хэш от КриптоПро",
                  "required": true,
                  "schema": {
                      "description": "Подписанный хэш от КриптоПро",
                      "paramName": "signedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Подписанный хэш от КриптоПро",
                          "paramName": "signedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "certificateObject",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "certificateObject",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "certificateObject.subjectName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о сертификате подписи",
                  "required": true,
                  "schema": {
                      "description": "Информация о сертификате подписи",
                      "paramName": "certificateObject.subjectName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о сертификате подписи",
                          "paramName": "certificateObject.subjectName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.issuerName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о том, кто выпустил сертификат",
                  "required": true,
                  "schema": {
                      "description": "Информация о том, кто выпустил сертификат",
                      "paramName": "certificateObject.issuerName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о том, кто выпустил сертификат",
                          "paramName": "certificateObject.issuerName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validFromDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата начала валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата начала валидации подписи",
                      "paramName": "certificateObject.validFromDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата начала валидации подписи",
                          "paramName": "certificateObject.validFromDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validToDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата окончания валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания валидации подписи",
                      "paramName": "certificateObject.validToDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания валидации подписи",
                          "paramName": "certificateObject.validToDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.serialNumber",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Серийный номер",
                  "required": true,
                  "schema": {
                      "description": "Серийный номер",
                      "paramName": "certificateObject.serialNumber",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Серийный номер",
                          "paramName": "certificateObject.serialNumber",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.publicKey",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Публичный ключ",
                  "required": true,
                  "schema": {
                      "description": "Публичный ключ",
                      "paramName": "certificateObject.publicKey",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Публичный ключ",
                          "paramName": "certificateObject.publicKey",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "systemId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "fileId",
              "paramIn": "query",
              "paramType": "string",
              "description": "Идентификатор uuid файла.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/meta",
      "method": "post",
      "methodDesc": "Подписание метаданных выбранного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса c данными цифровой подписи",
          "schema": [
              {
                  "paramName": "unsignedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Неподписанный хэш от бэкенда",
                  "required": true,
                  "schema": {
                      "description": "Неподписанный хэш от бэкенда",
                      "paramName": "unsignedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Неподписанный хэш от бэкенда",
                          "paramName": "unsignedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Подписанный хэш от КриптоПро",
                  "required": true,
                  "schema": {
                      "description": "Подписанный хэш от КриптоПро",
                      "paramName": "signedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Подписанный хэш от КриптоПро",
                          "paramName": "signedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "certificateObject",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "certificateObject",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "certificateObject.subjectName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о сертификате подписи",
                  "required": true,
                  "schema": {
                      "description": "Информация о сертификате подписи",
                      "paramName": "certificateObject.subjectName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о сертификате подписи",
                          "paramName": "certificateObject.subjectName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.issuerName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о том, кто выпустил сертификат",
                  "required": true,
                  "schema": {
                      "description": "Информация о том, кто выпустил сертификат",
                      "paramName": "certificateObject.issuerName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о том, кто выпустил сертификат",
                          "paramName": "certificateObject.issuerName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validFromDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата начала валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата начала валидации подписи",
                      "paramName": "certificateObject.validFromDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата начала валидации подписи",
                          "paramName": "certificateObject.validFromDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validToDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата окончания валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания валидации подписи",
                      "paramName": "certificateObject.validToDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания валидации подписи",
                          "paramName": "certificateObject.validToDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.serialNumber",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Серийный номер",
                  "required": true,
                  "schema": {
                      "description": "Серийный номер",
                      "paramName": "certificateObject.serialNumber",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Серийный номер",
                          "paramName": "certificateObject.serialNumber",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.publicKey",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Публичный ключ",
                  "required": true,
                  "schema": {
                      "description": "Публичный ключ",
                      "paramName": "certificateObject.publicKey",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Публичный ключ",
                          "paramName": "certificateObject.publicKey",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "signatureId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписания каталога, полученный на этапе формирования хэша.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/meta/hash",
      "method": "get",
      "methodDesc": "Получение хэша текущего значения метаданных каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "signatureId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор процесса подписания",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор процесса подписания",
                      "paramName": "signatureId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор процесса подписания",
                          "paramName": "signatureId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Хэш подписания",
                  "required": true,
                  "schema": {
                      "description": "Хэш подписания",
                      "paramName": "hash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Хэш подписания",
                          "paramName": "hash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/signHistory",
      "method": "post",
      "methodDesc": "Получение истории подписаний каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор подписания каталога заполнения",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор подписания каталога заполнения",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор подписания каталога заполнения",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата начала подписания каталога заполнения",
                  "required": true,
                  "schema": {
                      "description": "Дата начала подписания каталога заполнения",
                      "paramName": "dateStart",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Дата начала подписания каталога заполнения",
                          "paramName": "dateStart",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата окончания подписания каталога заполнения",
                  "required": false,
                  "schema": {
                      "description": "Дата окончания подписания каталога заполнения",
                      "paramName": "dateEnd",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата окончания подписания каталога заполнения",
                          "paramName": "dateEnd",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "signingType",
                  "paramType": "unknown param type",
                  "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                  "required": false,
                  "schema": {
                      "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                      "paramName": "signingType",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                          "paramName": "signingType",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "userName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ФИО пользователя, запустившего подписание",
                  "required": true,
                  "schema": {
                      "description": "ФИО пользователя, запустившего подписание",
                      "paramName": "userName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "ФИО пользователя, запустившего подписание",
                          "paramName": "userName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countInWorkObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов, взятых в работу при запуске процесса подписания",
                  "required": false,
                  "schema": {
                      "description": "Количество объектов, взятых в работу при запуске процесса подписания",
                      "paramName": "countInWorkObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество объектов, взятых в работу при запуске процесса подписания",
                          "paramName": "countInWorkObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "countSignedObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество подписанных объектов (по окончании процесса подписания)",
                  "required": false,
                  "schema": {
                      "description": "Количество подписанных объектов (по окончании процесса подписания)",
                      "paramName": "countSignedObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество подписанных объектов (по окончании процесса подписания)",
                          "paramName": "countSignedObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "countAllObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество объектов каталога заполнения",
                  "required": false,
                  "schema": {
                      "description": "Общее количество объектов каталога заполнения",
                      "paramName": "countAllObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Общее количество объектов каталога заполнения",
                          "paramName": "countAllObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "signLog",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ссылка на файл лога",
                  "required": false,
                  "schema": {
                      "description": "Ссылка на файл лога",
                      "paramName": "signLog",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Ссылка на файл лога",
                          "paramName": "signLog",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "status",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "status",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "status.id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "status.id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "status.id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Название статуса подписания в истории подписаний каталога заполнения",
                  "required": false,
                  "schema": {
                      "description": "Название статуса подписания в истории подписаний каталога заполнения",
                      "paramName": "status.name",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Название статуса подписания в истории подписаний каталога заполнения",
                          "paramName": "status.name",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status.tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Технчиеское навзание статуса подписания в истории подписаний каталога заполнения\n  - `inWork` - В работе, \n  - `finished` - Подписание каталога завершено, \n  - `error` - Ошибка подписания, \n  - `hashGen` - Формирование хэша подписи, \n  - `canceled` - Подписание отменено пользователем,\n  - `fillQueue` - Наполнение очереди объектов",
                  "required": false,
                  "schema": {
                      "description": "Технчиеское навзание статуса подписания в истории подписаний каталога заполнения\n  - `inWork` - В работе, \n  - `finished` - Подписание каталога завершено, \n  - `error` - Ошибка подписания, \n  - `hashGen` - Формирование хэша подписи, \n  - `canceled` - Подписание отменено пользователем,\n  - `fillQueue` - Наполнение очереди объектов",
                      "paramName": "status.tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Технчиеское навзание статуса подписания в истории подписаний каталога заполнения\n  - `inWork` - В работе, \n  - `finished` - Подписание каталога завершено, \n  - `error` - Ошибка подписания, \n  - `hashGen` - Формирование хэша подписи, \n  - `canceled` - Подписание отменено пользователем,\n  - `fillQueue` - Наполнение очереди объектов",
                          "paramName": "status.tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку историй подписания",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "signingTypes[index]",
                  "paramType": "unknown param type",
                  "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                  "required": false,
                  "schema": {
                      "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                      "paramName": "signingTypes[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                          "paramName": "signingTypes[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов списка историй подписания (число от `1` до `1000`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/signatures/{catalogId}/status",
      "method": "get",
      "methodDesc": "Получение информации о статусе подписания данных каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "lastSign",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "lastSign",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "lastSign",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "lastSign.date",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата последнего подписания объектов каталога или подписания отсутствия изменений в объектах",
                  "required": true,
                  "schema": {
                      "description": "Дата последнего подписания объектов каталога или подписания отсутствия изменений в объектах",
                      "paramName": "lastSign.date",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата последнего подписания объектов каталога или подписания отсутствия изменений в объектах",
                          "paramName": "lastSign.date",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "lastSign.subjectName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "ФИО владельца сертификата или краткое наименование системы",
                  "required": true,
                  "schema": {
                      "description": "ФИО владельца сертификата или краткое наименование системы",
                      "paramName": "lastSign.subjectName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "ФИО владельца сертификата или краткое наименование системы",
                          "paramName": "lastSign.subjectName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "lastSign.signingType",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                  "required": false,
                  "schema": {
                      "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                      "paramName": "lastSign.signingType",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название типа подписания информации каталога заполнения:\n  - `allObjects` - подписание всех неподписанных объектов каталога, \n  - `selectedObjects` - подписание выбранных объектов каталога, \n  - `metadata` - подписание метаданных каталога, \n  - `confirmSign` - подписание отсутствия изменений в каталоге",
                          "paramName": "lastSign.signingType",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dateNextUpdate",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Рассчитанная дата следующего обновления каталога, исходя из последней подписи/обновления и периодичности обновления",
                  "required": true,
                  "schema": {
                      "description": "Рассчитанная дата следующего обновления каталога, исходя из последней подписи/обновления и периодичности обновления",
                      "paramName": "dateNextUpdate",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Рассчитанная дата следующего обновления каталога, исходя из последней подписи/обновления и периодичности обновления",
                          "paramName": "dateNextUpdate",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "statusSignObjects",
                  "paramType": "unknown param type",
                  "description": "Техническое название статуса данных каталога заполнения:\n  - `signed` - подписано,\n  - `unsigned` - не подписано,\n  - `archive` - архив.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название статуса данных каталога заполнения:\n  - `signed` - подписано,\n  - `unsigned` - не подписано,\n  - `archive` - архив.",
                      "paramName": "statusSignObjects",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое название статуса данных каталога заполнения:\n  - `signed` - подписано,\n  - `unsigned` - не подписано,\n  - `archive` - архив.",
                          "paramName": "statusSignObjects",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "statusSignMetadata",
                  "paramType": "unknown param type",
                  "description": "Техническое название статуса подписания метаданных каталога заполнения:\n  - `signed` - метаданные подписаны;\n  - `unsigned` - метаданные не подписаны;\n  - `archive` - архив.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название статуса подписания метаданных каталога заполнения:\n  - `signed` - метаданные подписаны;\n  - `unsigned` - метаданные не подписаны;\n  - `archive` - архив.",
                      "paramName": "statusSignMetadata",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое название статуса подписания метаданных каталога заполнения:\n  - `signed` - метаданные подписаны;\n  - `unsigned` - метаданные не подписаны;\n  - `archive` - архив.",
                          "paramName": "statusSignMetadata",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "countUnsignedObjects",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество неподписанных объектов, оставшихся после последнего подписания",
                  "required": true,
                  "schema": {
                      "description": "Количество неподписанных объектов, оставшихся после последнего подписания",
                      "paramName": "countUnsignedObjects",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество неподписанных объектов, оставшихся после последнего подписания",
                          "paramName": "countUnsignedObjects",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countActiveObjects",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество активных объектов в каталоге",
                  "required": true,
                  "schema": {
                      "description": "Количество активных объектов в каталоге",
                      "paramName": "countActiveObjects",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество активных объектов в каталоге",
                          "paramName": "countActiveObjects",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/signatures/catalogObjects",
      "method": "post",
      "methodDesc": "Подписание выбранных объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса со списком объектов, сгрупированных по статусам. Данные о цифровой подписи передаются в поле `digitalSignatureParams`",
          "schema": [
              {
                  "paramName": "digitalSignatureParams",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "digitalSignatureParams",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "digitalSignatureParams",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.unsignedHash",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Неподписанный хэш от бэкенда",
                  "required": true,
                  "schema": {
                      "description": "Неподписанный хэш от бэкенда",
                      "paramName": "digitalSignatureParams.unsignedHash",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Неподписанный хэш от бэкенда",
                          "paramName": "digitalSignatureParams.unsignedHash",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.signedHash",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Подписанный хэш от КриптоПро",
                  "required": true,
                  "schema": {
                      "description": "Подписанный хэш от КриптоПро",
                      "paramName": "digitalSignatureParams.signedHash",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Подписанный хэш от КриптоПро",
                          "paramName": "digitalSignatureParams.signedHash",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "digitalSignatureParams.certificateObject",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "digitalSignatureParams.certificateObject",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject.subjectName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о сертификате подписи",
                  "required": true,
                  "schema": {
                      "description": "Информация о сертификате подписи",
                      "paramName": "digitalSignatureParams.certificateObject.subjectName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о сертификате подписи",
                          "paramName": "digitalSignatureParams.certificateObject.subjectName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject.issuerName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о том, кто выпустил сертификат",
                  "required": true,
                  "schema": {
                      "description": "Информация о том, кто выпустил сертификат",
                      "paramName": "digitalSignatureParams.certificateObject.issuerName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о том, кто выпустил сертификат",
                          "paramName": "digitalSignatureParams.certificateObject.issuerName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject.validFromDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата начала валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата начала валидации подписи",
                      "paramName": "digitalSignatureParams.certificateObject.validFromDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата начала валидации подписи",
                          "paramName": "digitalSignatureParams.certificateObject.validFromDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject.validToDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата окончания валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания валидации подписи",
                      "paramName": "digitalSignatureParams.certificateObject.validToDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания валидации подписи",
                          "paramName": "digitalSignatureParams.certificateObject.validToDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject.serialNumber",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Серийный номер",
                  "required": true,
                  "schema": {
                      "description": "Серийный номер",
                      "paramName": "digitalSignatureParams.certificateObject.serialNumber",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Серийный номер",
                          "paramName": "digitalSignatureParams.certificateObject.serialNumber",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "digitalSignatureParams.certificateObject.publicKey",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Публичный ключ",
                  "required": true,
                  "schema": {
                      "description": "Публичный ключ",
                      "paramName": "digitalSignatureParams.certificateObject.publicKey",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Публичный ключ",
                          "paramName": "digitalSignatureParams.certificateObject.publicKey",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signatureId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор подписания каталога, полученный на этапе формирования хэша.",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор подписания каталога, полученный на этапе формирования хэша.",
                      "paramName": "signatureId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор подписания каталога, полученный на этапе формирования хэша.",
                          "paramName": "signatureId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога заполнения",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога заполнения",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога заполнения",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование статуса объекта",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование статуса объекта",
                      "paramName": "status",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование статуса объекта",
                          "paramName": "status",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Глобальные идентификаторы подписываемых объектов",
                  "required": false,
                  "schema": {
                      "description": "Глобальные идентификаторы подписываемых объектов",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Глобальные идентификаторы подписываемых объектов",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "dateOpen",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата открытия страницы. Используется для проверки, что объекты не были изменены другим пользователем перед подписанием",
                  "required": true,
                  "schema": {
                      "description": "Дата открытия страницы. Используется для проверки, что объекты не были изменены другим пользователем перед подписанием",
                      "paramName": "dateOpen",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Дата открытия страницы. Используется для проверки, что объекты не были изменены другим пользователем перед подписанием",
                          "paramName": "dateOpen",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/signatures/catalogObjects/check",
      "method": "get",
      "methodDesc": "Запуск проверок для объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование статуса результата проверки",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование статуса результата проверки",
                      "paramName": "status",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование статуса результата проверки",
                          "paramName": "status",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "signCheckId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор блокировки, которая будет применяться к каталогу",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор блокировки, которая будет применяться к каталогу",
                      "paramName": "signCheckId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор блокировки, которая будет применяться к каталогу",
                          "paramName": "signCheckId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Сообщения с результатом проверки",
                  "required": false,
                  "schema": {
                      "description": "Сообщения с результатом проверки",
                      "paramName": "message",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Сообщения с результатом проверки",
                          "paramName": "message",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "objectIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов объектов каталога.\n\nЧисло элементов в списке от `1` до `500`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/signatures/catalogObjects/hash",
      "method": "get",
      "methodDesc": "Получение хэша выбранных объектов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "signatureId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор процесса подписания",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор процесса подписания",
                      "paramName": "signatureId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор процесса подписания",
                          "paramName": "signatureId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Хэш подписания",
                  "required": true,
                  "schema": {
                      "description": "Хэш подписания",
                      "paramName": "hash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Хэш подписания",
                          "paramName": "hash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "objectIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов объектов каталога.\n\nЧисло элементов в списке от `1` до `500`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/signatures/cancelCatalogSigning",
      "method": "post",
      "methodDesc": "Отмена фонового подписания объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "signatureId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписания каталога, полученный на этапе формирования хэша.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "type",
              "paramIn": "query",
              "paramType": "string[\nuserReq,\nsysError\n]",
              "description": "Тип отмены подписания: \n  - `userReq` - отмена подписания, вызванная пользователем. \n  - `sysError`- отмена подписания, вызванная системной ошибкой. Может произойти, если во время получения подписанного хэша возникли ошибки и дальнейшее подписание не может быть запущено. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nuserReq,\nsysError\n]"
              }
          }
      ]
  },
  {
      "path": "/signatures/validate",
      "method": "post",
      "methodDesc": "Проверка валидности подписи",
      "responses": {
          "description": "Успешный ответ            ",
          "schema": []
      },
      "requests": {
          "description": "Запрос к методу валидации",
          "schema": {
              "description": "Запрос к методу валидации электронной подписи.\n`json` используется при вызове метода внешнего REST API. `xml` - при вызове из SOAP API.",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Запрос к методу валидации электронной подписи.\n`json` используется при вызове метода внешнего REST API. `xml` - при вызове из SOAP API.",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": []
  },
  {
      "path": "/publication/queue/search",
      "method": "post",
      "methodDesc": "Поиск по списку каталогов, находящихся в очереди публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование каталога",
                      "paramName": "catalogName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование каталога",
                          "paramName": "catalogName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "priority",
                  "paramType": "unknown param type",
                  "description": "Приоритет публикации каталога",
                  "required": true,
                  "schema": {
                      "description": "Приоритет публикации каталога",
                      "paramName": "priority",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Приоритет публикации каталога",
                          "paramName": "priority",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "newCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов каталога, ожидающих обработки",
                  "required": true,
                  "schema": {
                      "description": "Количество объектов каталога, ожидающих обработки",
                      "paramName": "newCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество объектов каталога, ожидающих обработки",
                          "paramName": "newCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "inWorkCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов каталога, находящихся в обработке",
                  "required": true,
                  "schema": {
                      "description": "Количество объектов каталога, находящихся в обработке",
                      "paramName": "inWorkCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество объектов каталога, находящихся в обработке",
                          "paramName": "inWorkCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "publishedCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество успешно опубликованных (в первый раз) объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество успешно опубликованных (в первый раз) объектов каталога",
                      "paramName": "publishedCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество успешно опубликованных (в первый раз) объектов каталога",
                          "paramName": "publishedCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "updatedCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество успешно обновленных в публикации объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество успешно обновленных в публикации объектов каталога",
                      "paramName": "updatedCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество успешно обновленных в публикации объектов каталога",
                          "paramName": "updatedCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "deletedCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество успешно удаленных из публикации объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество успешно удаленных из публикации объектов каталога",
                      "paramName": "deletedCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество успешно удаленных из публикации объектов каталога",
                          "paramName": "deletedCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "restoredCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество успешно восстановленных в публикации объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество успешно восстановленных в публикации объектов каталога",
                      "paramName": "restoredCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество успешно восстановленных в публикации объектов каталога",
                          "paramName": "restoredCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "passedCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество успешно обработанных объектов каталога, которые не были удалены или изменены в БД публикации",
                  "required": true,
                  "schema": {
                      "description": "Количество успешно обработанных объектов каталога, которые не были удалены или изменены в БД публикации",
                      "paramName": "passedCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество успешно обработанных объектов каталога, которые не были удалены или изменены в БД публикации",
                          "paramName": "passedCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "errorCnt",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов каталога, не обработанных из-за ошибок",
                  "required": true,
                  "schema": {
                      "description": "Количество объектов каталога, не обработанных из-за ошибок",
                      "paramName": "errorCnt",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество объектов каталога, не обработанных из-за ошибок",
                          "paramName": "errorCnt",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов в очереди публикации",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов в очереди.\nПоиск производится по идентификатору `catalogId` и наисменованию каталога `catalogName`.\n\nЗапрос со значением `12` вернет все каталога, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\ncatalogId,\ncatalogName,\npriority,\nnewCnt,\ninWorkCnt,\npublishedCnt,\nupdatedCnt,\ndeletedCnt,\nrestoredCnt,\npassedCnt,\nerrorCnt\n]",
              "description": "Поле, по которому производится сортировка списка. Допустимые значения: `catalogId`, `catalogName`, `priority`,\n`newCnt`, `inWorkCnt`, `publishedCnt`, `updatedCnt`, `deletedCnt`, `restoredCnt`, `passedCnt`, `errorCnt`.\n\nПо умолчанию: `priority`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\ncatalogId,\ncatalogName,\npriority,\nnewCnt,\ninWorkCnt,\npublishedCnt,\nupdatedCnt,\ndeletedCnt,\nrestoredCnt,\npassedCnt,\nerrorCnt\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `desc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/publication/queue/setPriority",
      "method": "post",
      "methodDesc": "Изменение приоритета публикации каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса для изменения приоритета публикации каталогов",
          "schema": [
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "priority",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Обновленное значение приоритета",
                  "required": true,
                  "schema": {
                      "description": "Обновленное значение приоритета",
                      "paramName": "priority",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Обновленное значение приоритета",
                          "paramName": "priority",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/publication/queue/fill",
      "method": "get",
      "methodDesc": "Запуск наполнения очереди публикации для каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "version",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Номер версии каталога публикаци.\n\nПо умолчанию возвращается последняя версия.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "reason",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Причина публикации объектов каталога публикации",
              "required": true,
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          }
      ]
  },
  {
      "path": "/files",
      "method": "post",
      "methodDesc": "Сохранение файла и его описания",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентифкатор файла (uuid)",
                  "required": true,
                  "schema": {
                      "description": "Идентифкатор файла (uuid)",
                      "paramName": "id",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентифкатор файла (uuid)",
                          "paramName": "id",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "code",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "code",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "code",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "messageType",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "messageType",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "messageType",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "message",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Текст ответа",
                  "required": true,
                  "schema": {
                      "description": "Текст ответа",
                      "paramName": "message",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Текст ответа",
                          "paramName": "message",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/files",
      "method": "delete",
      "methodDesc": "Удаление файла",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив uuid",
                  "required": false,
                  "schema": {
                      "description": "Массив uuid",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив uuid",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/files/getFilesInfo",
      "method": "post",
      "methodDesc": "Получение информации об одном или нескольких файлах",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "uuid",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор uuid файла",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор uuid файла",
                      "paramName": "uuid",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор uuid файла",
                          "paramName": "uuid",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "file",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Файл с содержимым",
                  "required": true,
                  "schema": {
                      "description": "Файл с содержимым",
                      "paramName": "file",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Файл с содержимым",
                          "paramName": "file",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Имя файла (без расширения)",
                  "required": true,
                  "schema": {
                      "description": "Имя файла (без расширения)",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Имя файла (без расширения)",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "extension",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Расширение файла, включая точку",
                  "required": true,
                  "schema": {
                      "description": "Расширение файла, включая точку",
                      "paramName": "extension",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Расширение файла, включая точку",
                          "paramName": "extension",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileProcessType",
                  "paramType": "unknown param type",
                  "description": "Техническое название типа файла:\n  - `import` - файл импорта, \n  - `export` - файл экспорта, \n  - `catalog-object` - файл объекта каталога, \n  - `soap-api` - файл SOAP API\n  - `background` - файл фоновой проверки\n  - `thematic-category` - файл иконки тематической категории\n  - `cert-subscription` - файл сертификата подписки на push уведомления\n  - `accum-catalog` - файл выгрузки для сборного каталога\n  - `dictionary-export` - файл экспорта справочника",
                  "required": false,
                  "schema": {
                      "description": "Техническое название типа файла:\n  - `import` - файл импорта, \n  - `export` - файл экспорта, \n  - `catalog-object` - файл объекта каталога, \n  - `soap-api` - файл SOAP API\n  - `background` - файл фоновой проверки\n  - `thematic-category` - файл иконки тематической категории\n  - `cert-subscription` - файл сертификата подписки на push уведомления\n  - `accum-catalog` - файл выгрузки для сборного каталога\n  - `dictionary-export` - файл экспорта справочника",
                      "paramName": "fileProcessType",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Техническое название типа файла:\n  - `import` - файл импорта, \n  - `export` - файл экспорта, \n  - `catalog-object` - файл объекта каталога, \n  - `soap-api` - файл SOAP API\n  - `background` - файл фоновой проверки\n  - `thematic-category` - файл иконки тематической категории\n  - `cert-subscription` - файл сертификата подписки на push уведомления\n  - `accum-catalog` - файл выгрузки для сборного каталога\n  - `dictionary-export` - файл экспорта справочника",
                          "paramName": "fileProcessType",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "size",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Размер файла",
                  "required": true,
                  "schema": {
                      "description": "Размер файла",
                      "paramName": "size",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Размер файла",
                          "paramName": "size",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "mimeType",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип файла, формат MIME-типа",
                  "required": true,
                  "schema": {
                      "description": "Тип файла, формат MIME-типа",
                      "paramName": "mimeType",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип файла, формат MIME-типа",
                          "paramName": "mimeType",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога, к которому привязывается файл",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор каталога, к которому привязывается файл",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор каталога, к которому привязывается файл",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив uuid",
                  "required": false,
                  "schema": {
                      "description": "Массив uuid",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив uuid",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/files/{fileId}/download",
      "method": "get",
      "methodDesc": "Скачивание файла",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "fileId",
              "paramIn": "path",
              "paramType": "string",
              "description": "Идентификатор uuid файла.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/files/{fileId}/show",
      "method": "get",
      "methodDesc": "Отображение изображения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "fileId",
              "paramIn": "path",
              "paramType": "string",
              "description": "Идентификатор uuid файла.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "fileSizeMode",
              "paramIn": "query",
              "paramType": "string[\noriginal,\nthumbnail\n]",
              "description": "Размер изображения для отображения. \n\nДоступные значения:\n - `original` - оригинал изображения\n - `thumbnail` - миниатюра изображения",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\noriginal,\nthumbnail\n]"
              }
          }
      ]
  },
  {
      "path": "/files/textToFile",
      "method": "post",
      "methodDesc": "Получение файла, сформированного на основе текстовых данных",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса",
          "schema": [
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название файла.",
                  "required": true,
                  "schema": {
                      "description": "Название файла.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название файла.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "extension",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Расширение файла, включая точку",
                  "required": true,
                  "schema": {
                      "description": "Расширение файла, включая точку",
                      "paramName": "extension",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Расширение файла, включая точку",
                          "paramName": "extension",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "content",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Текстовые данные, которые необходимо записать в файл.",
                  "required": true,
                  "schema": {
                      "description": "Текстовые данные, которые необходимо записать в файл.",
                      "paramName": "content",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Текстовые данные, которые необходимо записать в файл.",
                          "paramName": "content",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/files/fileToText",
      "method": "post",
      "methodDesc": "Получение содержимого текстовых файлов в виде строк.",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название файла.",
                  "required": true,
                  "schema": {
                      "description": "Название файла.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название файла.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "extension",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Расширение файла, включая точку",
                  "required": true,
                  "schema": {
                      "description": "Расширение файла, включая точку",
                      "paramName": "extension",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Расширение файла, включая точку",
                          "paramName": "extension",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "content",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Текстовые данные, которые необходимо записать в файл.",
                  "required": true,
                  "schema": {
                      "description": "Текстовые данные, которые необходимо записать в файл.",
                      "paramName": "content",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Текстовые данные, которые необходимо записать в файл.",
                          "paramName": "content",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/locks/search",
      "method": "post",
      "methodDesc": "Получение списка блокировок",
      "responses": {
          "description": "Успешный ответ. \nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку блокировок",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых блокировок (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке блокировок. Поиск производится по атрибутам `id`, `catalogId`, `catalogName`",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "catalogIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов каталогов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "lockType",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Фильтр по типу блокировки. Если не указан, возвращаются любые. В параметре передается техническое наименование.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Тип блокировки:\n  - `signatures` - Подписание\n  - `imports` - Импорт\n  - `backgroundChecks` - Фоновые проверки каталогов\n  - `exports` - Экспорт каталога заполнения",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nsignatures,\nimports,\nbackgroundChecks,\nexports\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\ncatalogId,\ncatalogName,\nuserId,\nuserLogin,\nsystemId,\nsystemLogin,\ndateTimeCreated,\ndateTimeExpired\n]",
              "description": "Поле, по которому производится сортировка.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\ncatalogId,\ncatalogName,\nuserId,\nuserLogin,\nsystemId,\nsystemLogin,\ndateTimeCreated,\ndateTimeExpired\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/locks",
      "method": "get",
      "methodDesc": "Получение блокировок по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "lockIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов блокировок.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/locks",
      "method": "post",
      "methodDesc": "Создание блокировки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/locks",
      "method": "delete",
      "methodDesc": "Удаление блокировки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "lockIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов блокировок.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/imports/uploadCSV",
      "method": "post",
      "methodDesc": "Загрузка и обработка файла импорта формата .csv",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "fileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid)",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла (uuid)",
                      "paramName": "fileId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла (uuid)",
                          "paramName": "fileId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileColumns[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Массив колонок файла",
                  "required": false,
                  "schema": {
                      "description": "Массив колонок файла",
                      "paramName": "fileColumns[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Массив колонок файла",
                          "paramName": "fileColumns[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "fileColumns[index].fileColumnName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование колонки файла (пользовательское)",
                  "required": true,
                  "schema": {
                      "description": "Наименование колонки файла (пользовательское)",
                      "paramName": "fileColumns[index].fileColumnName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование колонки файла (пользовательское)",
                          "paramName": "fileColumns[index].fileColumnName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileColumns[index].fileColumnTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование колонки файла, задается на бэке. Нужно, чтобы оперировать данными внутри методов/функций",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование колонки файла, задается на бэке. Нужно, чтобы оперировать данными внутри методов/функций",
                      "paramName": "fileColumns[index].fileColumnTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование колонки файла, задается на бэке. Нужно, чтобы оперировать данными внутри методов/функций",
                          "paramName": "fileColumns[index].fileColumnTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/imports",
      "method": "post",
      "methodDesc": "Запуск процесса импорта",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с данными импорта",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор импорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор импорта",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор импорта",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование загрузки",
                  "required": true,
                  "schema": {
                      "description": "Наименование загрузки",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование загрузки",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога для импорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога для импорта",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога для импорта",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "encoding",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Кодировка",
                  "required": true,
                  "schema": {
                      "description": "Кодировка",
                      "paramName": "encoding",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Кодировка",
                          "paramName": "encoding",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "separator",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Разделитель",
                  "required": true,
                  "schema": {
                      "description": "Разделитель",
                      "paramName": "separator",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Разделитель",
                          "paramName": "separator",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "textLimiter",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ограничитель текста",
                  "required": true,
                  "schema": {
                      "description": "Ограничитель текста",
                      "paramName": "textLimiter",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Ограничитель текста",
                          "paramName": "textLimiter",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "preparatoryDeletion",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Предварительное удаление записей",
                  "required": false,
                  "schema": {
                      "description": "Предварительное удаление записей",
                      "paramName": "preparatoryDeletion",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Предварительное удаление записей",
                          "paramName": "preparatoryDeletion",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "deleteOutdated",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Удалить неактуальные записи",
                  "required": false,
                  "schema": {
                      "description": "Удалить неактуальные записи",
                      "paramName": "deleteOutdated",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Удалить неактуальные записи",
                          "paramName": "deleteOutdated",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogFileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid) для импорта в каталог",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла (uuid) для импорта в каталог",
                      "paramName": "catalogFileId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла (uuid) для импорта в каталог",
                          "paramName": "catalogFileId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogFileName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование файла для импорта в каталог",
                  "required": true,
                  "schema": {
                      "description": "Наименование файла для импорта в каталог",
                      "paramName": "catalogFileName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование файла для импорта в каталог",
                          "paramName": "catalogFileName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogFileArchiveId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"",
                      "paramName": "catalogFileArchiveId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"",
                          "paramName": "catalogFileArchiveId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogFileArchiveName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"",
                  "required": false,
                  "schema": {
                      "description": "Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"",
                      "paramName": "catalogFileArchiveName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"",
                          "paramName": "catalogFileArchiveName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Сопоставление колонок файла с атрибутами каталога",
                  "required": false,
                  "schema": {
                      "description": "Сопоставление колонок файла с атрибутами каталога",
                      "paramName": "columnsMatching[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Сопоставление колонок файла с атрибутами каталога",
                          "paramName": "columnsMatching[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].fileColumnName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование колонки файла, является уникальным идентификатором",
                  "required": true,
                  "schema": {
                      "description": "Наименование колонки файла, является уникальным идентификатором",
                      "paramName": "columnsMatching[index].fileColumnName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование колонки файла, является уникальным идентификатором",
                          "paramName": "columnsMatching[index].fileColumnName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].fileColumnTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                      "paramName": "columnsMatching[index].fileColumnTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                          "paramName": "columnsMatching[index].fileColumnTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].attributeId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога",
                      "paramName": "columnsMatching[index].attributeId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога",
                          "paramName": "columnsMatching[index].attributeId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].attributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование атрибута каталога",
                      "paramName": "columnsMatching[index].attributeTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование атрибута каталога",
                          "paramName": "columnsMatching[index].attributeTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].dictAttributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                      "paramName": "columnsMatching[index].dictAttributeTechName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                          "paramName": "columnsMatching[index].dictAttributeTechName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Информация об импорте для вложенных атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Информация об импорте для вложенных атрибутов каталога",
                      "paramName": "childCatalogImportInfo[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Информация об импорте для вложенных атрибутов каталога",
                          "paramName": "childCatalogImportInfo[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута, содержащего вложенный каталог",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута, содержащего вложенный каталог",
                      "paramName": "childCatalogImportInfo[index].childCatalogId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута, содержащего вложенный каталог",
                          "paramName": "childCatalogImportInfo[index].childCatalogId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование атрибута, содержащего вложенный каталог",
                  "required": false,
                  "schema": {
                      "description": "Наименование атрибута, содержащего вложенный каталог",
                      "paramName": "childCatalogImportInfo[index].childCatalogName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наименование атрибута, содержащего вложенный каталог",
                          "paramName": "childCatalogImportInfo[index].childCatalogName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogFileId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid) для импорта вложенного каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла (uuid) для импорта вложенного каталога",
                      "paramName": "childCatalogImportInfo[index].childCatalogFileId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла (uuid) для импорта вложенного каталога",
                          "paramName": "childCatalogImportInfo[index].childCatalogFileId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogFileName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование файла для импорта вложенного каталога",
                  "required": false,
                  "schema": {
                      "description": "Наименование файла для импорта вложенного каталога",
                      "paramName": "childCatalogImportInfo[index].childCatalogFileName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наименование файла для импорта вложенного каталога",
                          "paramName": "childCatalogImportInfo[index].childCatalogFileName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Сопоставление колонок файла с атрибутами вложенного каталога",
                  "required": false,
                  "schema": {
                      "description": "Сопоставление колонок файла с атрибутами вложенного каталога",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Сопоставление колонок файла с атрибутами вложенного каталога",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование колонки файла, является уникальным идентификатором",
                  "required": true,
                  "schema": {
                      "description": "Наименование колонки файла, является уникальным идентификатором",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование колонки файла, является уникальным идентификатором",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование атрибута каталога",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование атрибута каталога",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].dictAttributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].dictAttributeTechName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].dictAttributeTechName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/imports",
      "method": "get",
      "methodDesc": "Получение параметров выбранных импортов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор импорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор импорта",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор импорта",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование загрузки",
                  "required": true,
                  "schema": {
                      "description": "Наименование загрузки",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование загрузки",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога для импорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога для импорта",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога для импорта",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "encoding",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Кодировка",
                  "required": true,
                  "schema": {
                      "description": "Кодировка",
                      "paramName": "encoding",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Кодировка",
                          "paramName": "encoding",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "separator",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Разделитель",
                  "required": true,
                  "schema": {
                      "description": "Разделитель",
                      "paramName": "separator",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Разделитель",
                          "paramName": "separator",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "textLimiter",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ограничитель текста",
                  "required": true,
                  "schema": {
                      "description": "Ограничитель текста",
                      "paramName": "textLimiter",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Ограничитель текста",
                          "paramName": "textLimiter",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "preparatoryDeletion",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Предварительное удаление записей",
                  "required": false,
                  "schema": {
                      "description": "Предварительное удаление записей",
                      "paramName": "preparatoryDeletion",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Предварительное удаление записей",
                          "paramName": "preparatoryDeletion",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "deleteOutdated",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Удалить неактуальные записи",
                  "required": false,
                  "schema": {
                      "description": "Удалить неактуальные записи",
                      "paramName": "deleteOutdated",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Удалить неактуальные записи",
                          "paramName": "deleteOutdated",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogFileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid) для импорта в каталог",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла (uuid) для импорта в каталог",
                      "paramName": "catalogFileId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла (uuid) для импорта в каталог",
                          "paramName": "catalogFileId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogFileName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование файла для импорта в каталог",
                  "required": true,
                  "schema": {
                      "description": "Наименование файла для импорта в каталог",
                      "paramName": "catalogFileName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование файла для импорта в каталог",
                          "paramName": "catalogFileName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogFileArchiveId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"",
                      "paramName": "catalogFileArchiveId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"",
                          "paramName": "catalogFileArchiveId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogFileArchiveName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"",
                  "required": false,
                  "schema": {
                      "description": "Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"",
                      "paramName": "catalogFileArchiveName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"",
                          "paramName": "catalogFileArchiveName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Сопоставление колонок файла с атрибутами каталога",
                  "required": false,
                  "schema": {
                      "description": "Сопоставление колонок файла с атрибутами каталога",
                      "paramName": "columnsMatching[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Сопоставление колонок файла с атрибутами каталога",
                          "paramName": "columnsMatching[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].fileColumnName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование колонки файла, является уникальным идентификатором",
                  "required": true,
                  "schema": {
                      "description": "Наименование колонки файла, является уникальным идентификатором",
                      "paramName": "columnsMatching[index].fileColumnName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование колонки файла, является уникальным идентификатором",
                          "paramName": "columnsMatching[index].fileColumnName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].fileColumnTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                      "paramName": "columnsMatching[index].fileColumnTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                          "paramName": "columnsMatching[index].fileColumnTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].attributeId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога",
                      "paramName": "columnsMatching[index].attributeId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога",
                          "paramName": "columnsMatching[index].attributeId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].attributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование атрибута каталога",
                      "paramName": "columnsMatching[index].attributeTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование атрибута каталога",
                          "paramName": "columnsMatching[index].attributeTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "columnsMatching[index].dictAttributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                      "paramName": "columnsMatching[index].dictAttributeTechName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                          "paramName": "columnsMatching[index].dictAttributeTechName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Информация об импорте для вложенных атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Информация об импорте для вложенных атрибутов каталога",
                      "paramName": "childCatalogImportInfo[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Информация об импорте для вложенных атрибутов каталога",
                          "paramName": "childCatalogImportInfo[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута, содержащего вложенный каталог",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута, содержащего вложенный каталог",
                      "paramName": "childCatalogImportInfo[index].childCatalogId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута, содержащего вложенный каталог",
                          "paramName": "childCatalogImportInfo[index].childCatalogId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование атрибута, содержащего вложенный каталог",
                  "required": false,
                  "schema": {
                      "description": "Наименование атрибута, содержащего вложенный каталог",
                      "paramName": "childCatalogImportInfo[index].childCatalogName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наименование атрибута, содержащего вложенный каталог",
                          "paramName": "childCatalogImportInfo[index].childCatalogName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogFileId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid) для импорта вложенного каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла (uuid) для импорта вложенного каталога",
                      "paramName": "childCatalogImportInfo[index].childCatalogFileId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла (uuid) для импорта вложенного каталога",
                          "paramName": "childCatalogImportInfo[index].childCatalogFileId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].childCatalogFileName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование файла для импорта вложенного каталога",
                  "required": false,
                  "schema": {
                      "description": "Наименование файла для импорта вложенного каталога",
                      "paramName": "childCatalogImportInfo[index].childCatalogFileName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наименование файла для импорта вложенного каталога",
                          "paramName": "childCatalogImportInfo[index].childCatalogFileName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index]",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Сопоставление колонок файла с атрибутами вложенного каталога",
                  "required": false,
                  "schema": {
                      "description": "Сопоставление колонок файла с атрибутами вложенного каталога",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index]",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Сопоставление колонок файла с атрибутами вложенного каталога",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index]",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование колонки файла, является уникальным идентификатором",
                  "required": true,
                  "schema": {
                      "description": "Наименование колонки файла, является уникальным идентификатором",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование колонки файла, является уникальным идентификатором",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование колонки файла, полученное из метода /imports/uploadCSV",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].fileColumnTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута каталога",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута каталога",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование атрибута каталога",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeTechName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование атрибута каталога",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].attributeTechName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "childCatalogImportInfo[index].columnsMatching[index].dictAttributeTechName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                      "paramName": "childCatalogImportInfo[index].columnsMatching[index].dictAttributeTechName",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов",
                          "paramName": "childCatalogImportInfo[index].columnsMatching[index].dictAttributeTechName",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "importIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов импортов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/imports/{importId}/cancel",
      "method": "get",
      "methodDesc": "Отмена импорта объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "importId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор импорта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/imports/history",
      "method": "post",
      "methodDesc": "Получение истории импортов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор импорта каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор импорта каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор импорта каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "importName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование загрузки",
                  "required": true,
                  "schema": {
                      "description": "Наименование загрузки",
                      "paramName": "importName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование загрузки",
                          "paramName": "importName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramType": "unknown param type",
                  "description": "Дата старта импорта каталога",
                  "required": true,
                  "schema": {
                      "description": "Дата старта импорта каталога",
                      "paramName": "dateStart",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата старта импорта каталога",
                          "paramName": "dateStart",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramType": "unknown param type",
                  "description": "Дата окончания импорта каталога",
                  "required": false,
                  "schema": {
                      "description": "Дата окончания импорта каталога",
                      "paramName": "dateEnd",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата окончания импорта каталога",
                          "paramName": "dateEnd",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "userName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ФИО пользователя, запустившего импорт",
                  "required": true,
                  "schema": {
                      "description": "ФИО пользователя, запустившего импорт",
                      "paramName": "userName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "ФИО пользователя, запустившего импорт",
                          "paramName": "userName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countInWorkObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов, взятых в работу при запуске импорта",
                  "required": false,
                  "schema": {
                      "description": "Количество объектов, взятых в работу при запуске импорта",
                      "paramName": "countInWorkObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество объектов, взятых в работу при запуске импорта",
                          "paramName": "countInWorkObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "countImportedObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество импортированных объектов (по окончании процесса импорта)",
                  "required": false,
                  "schema": {
                      "description": "Количество импортированных объектов (по окончании процесса импорта)",
                      "paramName": "countImportedObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество импортированных объектов (по окончании процесса импорта)",
                          "paramName": "countImportedObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "importLogFileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла лога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор файла лога",
                      "paramName": "importLogFileId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор файла лога",
                          "paramName": "importLogFileId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "status",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "status",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "status.id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "status.id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "status.id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Название статуса импорта в истории импортов каталога заполнения",
                  "required": false,
                  "schema": {
                      "description": "Название статуса импорта в истории импортов каталога заполнения",
                      "paramName": "status.name",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Название статуса импорта в истории импортов каталога заполнения",
                          "paramName": "status.name",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status.tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Технчиеское навзание статуса импорта в истории импортов каталога заполнения\n  - `new` - Новый, \n  - `inWork` - В работе, \n  - `errorQueue` - Ошибка отправки в брокер, \n  - `errorImport` - Ошибка в процессе импорта, \n  - `canceled` - Импорт отменен пользователем,\n  - `finished` - Импорт объектов завершен.",
                  "required": false,
                  "schema": {
                      "description": "Технчиеское навзание статуса импорта в истории импортов каталога заполнения\n  - `new` - Новый, \n  - `inWork` - В работе, \n  - `errorQueue` - Ошибка отправки в брокер, \n  - `errorImport` - Ошибка в процессе импорта, \n  - `canceled` - Импорт отменен пользователем,\n  - `finished` - Импорт объектов завершен.",
                      "paramName": "status.tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Технчиеское навзание статуса импорта в истории импортов каталога заполнения\n  - `new` - Новый, \n  - `inWork` - В работе, \n  - `errorQueue` - Ошибка отправки в брокер, \n  - `errorImport` - Ошибка в процессе импорта, \n  - `canceled` - Импорт отменен пользователем,\n  - `finished` - Импорт объектов завершен.",
                          "paramName": "status.tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку истории импорта",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов списка истории импорта (число от `1` до `1000`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/exports",
      "method": "post",
      "methodDesc": "Запуск экспорта каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "attributes",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                      "paramName": "attributes",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                          "paramName": "attributes",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "type",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Тип экспорта. По умолчанию используется тип 'csv', который инициирует добавление в очередь экспорта в формате csv.",
              "required": false,
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          },
          {
              "paramName": "onlyRootCatalog",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий, что необходимо произвести экспорт только основного каталога, без вложенных.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых объектов, используется для фильтрации по статусу объекта.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "string[\nEPSG:4326,\ndefault\n]",
              "description": "Признак, указывающий на включение в экспорт каталога заполнения геоданных объектов в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объекты возвращаются без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nEPSG:4326,\ndefault\n]"
              }
          }
      ]
  },
  {
      "path": "/exports/history",
      "method": "post",
      "methodDesc": "Получение истории экспортов каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор экспорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор экспорта",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор экспорта",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                  "required": true,
                  "schema": {
                      "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramType": "unknown param type",
                  "description": "Дата и время запроса экспорта",
                  "required": true,
                  "schema": {
                      "description": "Дата и время запроса экспорта",
                      "paramName": "dateStart",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата и время запроса экспорта",
                          "paramName": "dateStart",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramType": "unknown param type",
                  "description": "Дата и время окончания экспорта",
                  "required": false,
                  "schema": {
                      "description": "Дата и время окончания экспорта",
                      "paramName": "dateEnd",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата и время окончания экспорта",
                          "paramName": "dateEnd",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "userName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ФИО пользователя, запустившего экспорт",
                  "required": true,
                  "schema": {
                      "description": "ФИО пользователя, запустившего экспорт",
                      "paramName": "userName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "ФИО пользователя, запустившего экспорт",
                          "paramName": "userName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countAllObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество объектов в экспорте",
                  "required": false,
                  "schema": {
                      "description": "Общее количество объектов в экспорте",
                      "paramName": "countAllObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Общее количество объектов в экспорте",
                          "paramName": "countAllObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа файла экспорта",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование типа файла экспорта",
                      "paramName": "type",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование типа файла экспорта",
                          "paramName": "type",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                      "paramName": "fileId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                          "paramName": "fileId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "status",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "status",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hasSettings",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Указывает на применение настроек к файлу экспорта.",
                  "required": true,
                  "schema": {
                      "description": "Указывает на применение настроек к файлу экспорта.",
                      "paramName": "hasSettings",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Указывает на применение настроек к файлу экспорта.",
                          "paramName": "hasSettings",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку экспортов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов списка историй экспортов (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/exports/{exportId}/cancel",
      "method": "get",
      "methodDesc": "Отменяет выполнение экспорта",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "exportId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор экспорта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/exports/{exportId}/settings",
      "method": "get",
      "methodDesc": "Получение настроек экспорта",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                  "required": true,
                  "schema": {
                      "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа файла экспорта",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование типа файла экспорта",
                      "paramName": "type",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование типа файла экспорта",
                          "paramName": "type",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                      "paramName": "fileId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                          "paramName": "fileId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "onlyRootCatalog",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что был получен экспорт только с данными корневого каталога",
                  "required": false,
                  "schema": {
                      "description": "Признак, что был получен экспорт только с данными корневого каталога",
                      "paramName": "onlyRootCatalog",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что был получен экспорт только с данными корневого каталога",
                          "paramName": "onlyRootCatalog",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Статусы объекта, которые учитывались при формировании файла экспорта",
                  "required": false,
                  "schema": {
                      "description": "Статусы объекта, которые учитывались при формировании файла экспорта",
                      "paramName": "objectStatuses[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Статусы объекта, которые учитывались при формировании файла экспорта",
                          "paramName": "objectStatuses[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index].id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "objectStatuses[index].id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "objectStatuses[index].id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index].name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование статуса объекта",
                  "required": false,
                  "schema": {
                      "description": "Наименование статуса объекта",
                      "paramName": "objectStatuses[index].name",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наименование статуса объекта",
                          "paramName": "objectStatuses[index].name",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index].tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование статуса объекта",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование статуса объекта",
                      "paramName": "objectStatuses[index].tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование статуса объекта",
                          "paramName": "objectStatuses[index].tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                  "required": false,
                  "schema": {
                      "description": "Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                  "required": false,
                  "schema": {
                      "description": "Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "attributes",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                      "paramName": "attributes",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                          "paramName": "attributes",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fetchGeodata",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Признак, указывающий на включение в экспорт каталога заполнения геоданных объектов в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объекты возвращаются без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
                  "required": false,
                  "schema": {
                      "description": "Признак, указывающий на включение в экспорт каталога заполнения геоданных объектов в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объекты возвращаются без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
                      "paramName": "fetchGeodata",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Признак, указывающий на включение в экспорт каталога заполнения геоданных объектов в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объекты возвращаются без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
                          "paramName": "fetchGeodata",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "exportId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор экспорта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationExports",
      "method": "post",
      "methodDesc": "Запуск экспорта каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с фильтрами и сортировками по списку объектов",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Для случая, если в запросе передаются фильтры и массив атрибутов, при этом в фильтрах указан атрибут, которого нет в массиве атрибутов, то такой фильтр должен игнорироваться и не применяться к выборке.",
                  "required": false,
                  "schema": {
                      "description": "Для случая, если в запросе передаются фильтры и массив атрибутов, при этом в фильтрах указан атрибут, которого нет в массиве атрибутов, то такой фильтр должен игнорироваться и не применяться к выборке.",
                      "paramName": "filters[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Для случая, если в запросе передаются фильтры и массив атрибутов, при этом в фильтрах указан атрибут, которого нет в массиве атрибутов, то такой фильтр должен игнорироваться и не применяться к выборке.",
                          "paramName": "filters[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "filters[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "filters[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "filters[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "filters[index].operator",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Оператор фильтрации:\n  - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n  Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n  Значения передаются через точку с запятой `;`.\n  - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  В `value` передается идентификатор регулярного выражения.\n  - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n  В `value` передается список идентификаторов элементов справочника.",
                  "required": true,
                  "schema": {
                      "description": "Оператор фильтрации:\n  - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n  Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n  Значения передаются через точку с запятой `;`.\n  - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  В `value` передается идентификатор регулярного выражения.\n  - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n  В `value` передается список идентификаторов элементов справочника.",
                      "paramName": "filters[index].operator",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Оператор фильтрации:\n  - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n  Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n  Значения передаются через точку с запятой `;`.\n  - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  В `value` передается идентификатор регулярного выражения.\n  - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n  В `value` передается список идентификаторов элементов справочника.",
                          "paramName": "filters[index].operator",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "filters[index].value",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Значение для сравнения со значением атрибута при применении оператора",
                  "required": false,
                  "schema": {
                      "description": "Значение для сравнения со значением атрибута при применении оператора",
                      "paramName": "filters[index].value",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Значение для сравнения со значением атрибута при применении оператора",
                          "paramName": "filters[index].value",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "attributes",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                      "paramName": "attributes",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                          "paramName": "attributes",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "type",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Тип экспорта. По умолчанию используется тип 'csv', который инициирует добавление в очередь экспорта в формате csv.",
              "required": false,
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых объектов каталога публикации, используется для фильтрации по статусу объекта.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "onlyRootCatalog",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий, что необходимо произвести экспорт только основного каталога, без вложенных.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, указывающий на включение в экспорт каталога публикации геоданных объектов.\nВ каталоге публикации геоданные возвращаются в системе координат WGS84.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/publicationExports/history",
      "method": "post",
      "methodDesc": "Получение истории экспортов каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор экспорта",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор экспорта",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор экспорта",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                  "required": true,
                  "schema": {
                      "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramType": "unknown param type",
                  "description": "Дата и время запроса экспорта",
                  "required": true,
                  "schema": {
                      "description": "Дата и время запроса экспорта",
                      "paramName": "dateStart",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата и время запроса экспорта",
                          "paramName": "dateStart",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramType": "unknown param type",
                  "description": "Дата и время окончания экспорта",
                  "required": false,
                  "schema": {
                      "description": "Дата и время окончания экспорта",
                      "paramName": "dateEnd",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата и время окончания экспорта",
                          "paramName": "dateEnd",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "userName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ФИО пользователя, запустившего экспорт",
                  "required": true,
                  "schema": {
                      "description": "ФИО пользователя, запустившего экспорт",
                      "paramName": "userName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "ФИО пользователя, запустившего экспорт",
                          "paramName": "userName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countAllObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Общее количество объектов в экспорте",
                  "required": false,
                  "schema": {
                      "description": "Общее количество объектов в экспорте",
                      "paramName": "countAllObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Общее количество объектов в экспорте",
                          "paramName": "countAllObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа файла экспорта",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование типа файла экспорта",
                      "paramName": "type",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование типа файла экспорта",
                          "paramName": "type",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                      "paramName": "fileId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор (uuid) файла экспорта в файловом хранилище",
                          "paramName": "fileId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": true,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "status",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "status",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "hasSettings",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Указывает на применение настроек к файлу экспорта.",
                  "required": true,
                  "schema": {
                      "description": "Указывает на применение настроек к файлу экспорта.",
                      "paramName": "hasSettings",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Указывает на применение настроек к файлу экспорта.",
                          "paramName": "hasSettings",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку экспортов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов списка историй экспортов (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationExports/{exportId}/cancel",
      "method": "get",
      "methodDesc": "Отменяет выполнение экспорта",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "exportId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор экспорта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/publicationExports/{exportId}/settings",
      "method": "get",
      "methodDesc": "Получение настроек экспорта каталога публикации",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты, на которую берётся срез данных(epoch) . Формат названия описан в вики.",
                  "required": true,
                  "schema": {
                      "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты, на которую берётся срез данных(epoch) . Формат названия описан в вики.",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты, на которую берётся срез данных(epoch) . Формат названия описан в вики.",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование типа файла экспорта",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование типа файла экспорта",
                      "paramName": "type",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование типа файла экспорта",
                          "paramName": "type",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла экспорта в файловом хранилище (uuid)",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла экспорта в файловом хранилище (uuid)",
                      "paramName": "fileId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла экспорта в файловом хранилище (uuid)",
                          "paramName": "fileId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "onlyRootCatalog",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что был получен экспорт только с данными корневого каталога",
                  "required": false,
                  "schema": {
                      "description": "Признак, что был получен экспорт только с данными корневого каталога",
                      "paramName": "onlyRootCatalog",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что был получен экспорт только с данными корневого каталога",
                          "paramName": "onlyRootCatalog",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Статусы объектов, примененные к файлу экспорта",
                  "required": false,
                  "schema": {
                      "description": "Статусы объектов, примененные к файлу экспорта",
                      "paramName": "objectStatuses[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Статусы объектов, примененные к файлу экспорта",
                          "paramName": "objectStatuses[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index].id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "objectStatuses[index].id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "objectStatuses[index].id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index].name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование статуса объекта каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Наименование статуса объекта каталога публикации",
                      "paramName": "objectStatuses[index].name",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Наименование статуса объекта каталога публикации",
                          "paramName": "objectStatuses[index].name",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "objectStatuses[index].tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование статуса объекта каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Техническое наименование статуса объекта каталога публикации",
                      "paramName": "objectStatuses[index].tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое наименование статуса объекта каталога публикации",
                          "paramName": "objectStatuses[index].tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "filters[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                  "required": false,
                  "schema": {
                      "description": "Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                      "paramName": "filters[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                          "paramName": "filters[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "filters[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "filters[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "filters[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "filters[index].operator",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Оператор фильтрации:\n  - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n  Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n  Значения передаются через точку с запятой `;`.\n  - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  В `value` передается идентификатор регулярного выражения.\n  - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n  В `value` передается список идентификаторов элементов справочника.",
                  "required": true,
                  "schema": {
                      "description": "Оператор фильтрации:\n  - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n  Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n  Значения передаются через точку с запятой `;`.\n  - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  В `value` передается идентификатор регулярного выражения.\n  - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n  В `value` передается список идентификаторов элементов справочника.",
                      "paramName": "filters[index].operator",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Оператор фильтрации:\n  - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n  Для данного оператора не передаётся поле `value`.\n  - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n  Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n  Значения передаются через точку с запятой `;`.\n  - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n  - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n  - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n  Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n  В `value` передается идентификатор регулярного выражения.\n  - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n  В `value` передается список идентификаторов элементов справочника.",
                          "paramName": "filters[index].operator",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "filters[index].value",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Значение для сравнения со значением атрибута при применении оператора",
                  "required": false,
                  "schema": {
                      "description": "Значение для сравнения со значением атрибута при применении оператора",
                      "paramName": "filters[index].value",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Значение для сравнения со значением атрибута при применении оператора",
                          "paramName": "filters[index].value",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                  "required": false,
                  "schema": {
                      "description": "Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название атрибута (столбца), по которому производится сортировка.",
                  "required": true,
                  "schema": {
                      "description": "Техническое название атрибута (столбца), по которому производится сортировка.",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое название атрибута (столбца), по которому производится сортировка.",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "attributes",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                      "paramName": "attributes",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога",
                          "paramName": "attributes",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fetchGeodata",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, указывающий на включение в экспорт каталога публикации геоданных объектов.\nВ каталоге публикации геоданные возвращаются в системе координат WGS84.",
                  "required": false,
                  "schema": {
                      "description": "Признак, указывающий на включение в экспорт каталога публикации геоданных объектов.\nВ каталоге публикации геоданные возвращаются в системе координат WGS84.",
                      "paramName": "fetchGeodata",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, указывающий на включение в экспорт каталога публикации геоданных объектов.\nВ каталоге публикации геоданные возвращаются в системе координат WGS84.",
                          "paramName": "fetchGeodata",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "exportId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор экспорта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/search",
      "method": "post",
      "methodDesc": "Поиск по списку наборов данных",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор набора данных",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор набора данных",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор набора данных",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование набора данных",
                  "required": false,
                  "schema": {
                      "description": "Полное наименование набора данных",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Полное наименование набора данных",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationStatus",
                  "paramType": "unknown param type",
                  "description": "Наименование статуса публикации набора данных",
                  "required": false,
                  "schema": {
                      "description": "Наименование статуса публикации набора данных",
                      "paramName": "publicationStatus",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Наименование статуса публикации набора данных",
                          "paramName": "publicationStatus",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "lastReleaseDate",
                  "paramType": "unknown param type",
                  "description": "Primitive param description",
                  "required": false,
                  "schema": {
                      "description": "Primitive param description",
                      "paramName": "lastReleaseDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Primitive param description",
                          "paramName": "lastReleaseDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации, который связан с актуальной версией набора данных",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор каталога публикации, который связан с актуальной версией набора данных",
                      "paramName": "publicationCatalogId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор каталога публикации, который связан с актуальной версией набора данных",
                          "paramName": "publicationCatalogId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationCatalogHasNewVersion",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак наличия новых версий каталога публикации, которые были созданы после открытия версии набора данных.",
                  "required": false,
                  "schema": {
                      "description": "Признак наличия новых версий каталога публикации, которые были созданы после открытия версии набора данных.",
                      "paramName": "publicationCatalogHasNewVersion",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак наличия новых версий каталога публикации, которые были созданы после открытия версии набора данных.",
                          "paramName": "publicationCatalogHasNewVersion",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке наборов данных.\nПоиск производится по атрибутам `id`, `name`, `publicationCatalogId`.\nЗапрос со значением `12` вернет все наборы, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\npublicationStatus,\nlastReleaseDate,\npublicationCatalogId,\npublicationCatalogHasNewVersion\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\npublicationStatus,\nlastReleaseDate,\npublicationCatalogId,\npublicationCatalogHasNewVersion\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "publicationStatuses",
              "paramIn": "query",
              "paramType": "string[\npublished,\narchive,\nunpublished\n]",
              "description": "Параметр для фильтрации по статусам наборов данных. Передается техническое наименование статуса.",
              "required": false,
              "schema": {
                  "description": "Статус публикации набора данных:\n  - `published` - опубликован\n  - `unpublished` - не опубликован\n  - `archive` - архивный",
                  "paramName": "primitive param name",
                  "paramType": "string[\npublished,\narchive,\nunpublished\n]"
              }
          }
      ]
  },
  {
      "path": "/datasets/lite/search",
      "method": "get",
      "methodDesc": "Поиск по списку наборов данных с минимальным набором свойств",
      "responses": {
          "description": "Успешный ответ. Если не было найдено соответствующих запросу записей, то возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор набора данных",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор набора данных",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор набора данных",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование набора данных",
                  "required": true,
                  "schema": {
                      "description": "Наименование набора данных",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование набора данных",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в наборе данных.\nПоиск производится по наименованию набора и является регистронезависимым.\nЗапрос со значением `тест` вернет все каталоги, полное наименование которых содержит подстроку `тест` независимо от регистра.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "isDict",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Признак, что нужно получить список наборов данных - справочников.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/datasets",
      "method": "get",
      "methodDesc": "Получение базовых настроек набора данных",
      "responses": {
          "description": "Базовые настройки набора данных",
          "schema": [
              {
                  "paramName": "publicationCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                      "paramName": "publicationCatalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                          "paramName": "publicationCatalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "seasonalityTagId",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "seasonalityTagId",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "seasonalityTagId",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "seasonality",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "seasonality",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "seasonality",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sefUrl",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                  "required": true,
                  "schema": {
                      "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                      "paramName": "sefUrl",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                          "paramName": "sefUrl",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "polygonsSortingTagId",
                  "paramType": "unknown param type",
                  "description": "Идентификатор сортировки полигональных объектов",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор сортировки полигональных объектов",
                      "paramName": "polygonsSortingTagId",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор сортировки полигональных объектов",
                          "paramName": "polygonsSortingTagId",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isClusteredByDistrict",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак наличия кластеризации по округам и районам",
                  "required": false,
                  "schema": {
                      "description": "Признак наличия кластеризации по округам и районам",
                      "paramName": "isClusteredByDistrict",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак наличия кластеризации по округам и районам",
                          "paramName": "isClusteredByDistrict",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isIsoIndicatorsDataset",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                  "required": false,
                  "schema": {
                      "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                      "paramName": "isIsoIndicatorsDataset",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                          "paramName": "isIsoIndicatorsDataset",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isAvailableDataset",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                  "required": false,
                  "schema": {
                      "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                      "paramName": "isAvailableDataset",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                          "paramName": "isAvailableDataset",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "forumLink",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ссылка на обсуждение в социальных сетях",
                  "required": false,
                  "schema": {
                      "description": "Ссылка на обсуждение в социальных сетях",
                      "paramName": "forumLink",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Ссылка на обсуждение в социальных сетях",
                          "paramName": "forumLink",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isDict",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                  "required": false,
                  "schema": {
                      "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                      "paramName": "isDict",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                          "paramName": "isDict",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictTypeTagId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "dictTypeTagId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "dictTypeTagId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isManualRelease",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что релизы набора данных выпускаются вручную",
                  "required": false,
                  "schema": {
                      "description": "Признак, что релизы набора данных выпускаются вручную",
                      "paramName": "isManualRelease",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что релизы набора данных выпускаются вручную",
                          "paramName": "isManualRelease",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "useAsDictDatasets",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                  "required": false,
                  "schema": {
                      "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                      "paramName": "useAsDictDatasets",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                          "paramName": "useAsDictDatasets",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов наборов данных.\n\nЧисло элементов в списке от `1` до `500`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/datasets",
      "method": "post",
      "methodDesc": "Создание набора данных",
      "responses": {
          "description": "Успешный ответ, о создании набора данных.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "publicationCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                      "paramName": "publicationCatalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                          "paramName": "publicationCatalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "seasonalityTagId",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "seasonalityTagId",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "seasonalityTagId",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "seasonality",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "seasonality",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "seasonality",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sefUrl",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                  "required": true,
                  "schema": {
                      "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                      "paramName": "sefUrl",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                          "paramName": "sefUrl",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "polygonsSortingTagId",
                  "paramType": "unknown param type",
                  "description": "Идентификатор сортировки полигональных объектов",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор сортировки полигональных объектов",
                      "paramName": "polygonsSortingTagId",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор сортировки полигональных объектов",
                          "paramName": "polygonsSortingTagId",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isClusteredByDistrict",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак наличия кластеризации по округам и районам",
                  "required": false,
                  "schema": {
                      "description": "Признак наличия кластеризации по округам и районам",
                      "paramName": "isClusteredByDistrict",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак наличия кластеризации по округам и районам",
                          "paramName": "isClusteredByDistrict",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isIsoIndicatorsDataset",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                  "required": false,
                  "schema": {
                      "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                      "paramName": "isIsoIndicatorsDataset",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                          "paramName": "isIsoIndicatorsDataset",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isAvailableDataset",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                  "required": false,
                  "schema": {
                      "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                      "paramName": "isAvailableDataset",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                          "paramName": "isAvailableDataset",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "forumLink",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ссылка на обсуждение в социальных сетях",
                  "required": false,
                  "schema": {
                      "description": "Ссылка на обсуждение в социальных сетях",
                      "paramName": "forumLink",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Ссылка на обсуждение в социальных сетях",
                          "paramName": "forumLink",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isDict",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                  "required": false,
                  "schema": {
                      "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                      "paramName": "isDict",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                          "paramName": "isDict",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictTypeTagId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "dictTypeTagId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "dictTypeTagId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isManualRelease",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что релизы набора данных выпускаются вручную",
                  "required": false,
                  "schema": {
                      "description": "Признак, что релизы набора данных выпускаются вручную",
                      "paramName": "isManualRelease",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что релизы набора данных выпускаются вручную",
                          "paramName": "isManualRelease",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "useAsDictDatasets",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                  "required": false,
                  "schema": {
                      "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                      "paramName": "useAsDictDatasets",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                          "paramName": "useAsDictDatasets",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/datasets",
      "method": "delete",
      "methodDesc": "Отметка наборов данных удалёнными",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов наборов данных.\n\nЧисло элементов в списке от `1` до `500`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}",
      "method": "put",
      "methodDesc": "Изменение базовых настроек набора данных",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "publicationCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                      "paramName": "publicationCatalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации, с которым связывается набор данных",
                          "paramName": "publicationCatalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "seasonalityTagId",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "seasonalityTagId",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "seasonalityTagId",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "seasonality",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "seasonality",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "seasonality",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sefUrl",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                  "required": true,
                  "schema": {
                      "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                      "paramName": "sefUrl",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n{ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\nДопустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.",
                          "paramName": "sefUrl",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "polygonsSortingTagId",
                  "paramType": "unknown param type",
                  "description": "Идентификатор сортировки полигональных объектов",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор сортировки полигональных объектов",
                      "paramName": "polygonsSortingTagId",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор сортировки полигональных объектов",
                          "paramName": "polygonsSortingTagId",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isClusteredByDistrict",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак наличия кластеризации по округам и районам",
                  "required": false,
                  "schema": {
                      "description": "Признак наличия кластеризации по округам и районам",
                      "paramName": "isClusteredByDistrict",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак наличия кластеризации по округам и районам",
                          "paramName": "isClusteredByDistrict",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isIsoIndicatorsDataset",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                  "required": false,
                  "schema": {
                      "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                      "paramName": "isIsoIndicatorsDataset",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, содержит ли набор показатели ISO37120 и U4SSC",
                          "paramName": "isIsoIndicatorsDataset",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isAvailableDataset",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                  "required": false,
                  "schema": {
                      "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                      "paramName": "isAvailableDataset",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, относится ли набор данных к категории \"Доступная среда\"",
                          "paramName": "isAvailableDataset",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "forumLink",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ссылка на обсуждение в социальных сетях",
                  "required": false,
                  "schema": {
                      "description": "Ссылка на обсуждение в социальных сетях",
                      "paramName": "forumLink",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Ссылка на обсуждение в социальных сетях",
                          "paramName": "forumLink",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isDict",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                  "required": false,
                  "schema": {
                      "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                      "paramName": "isDict",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что набор данных раскрывается на ОПОД как справочник",
                          "paramName": "isDict",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictTypeTagId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "dictTypeTagId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "dictTypeTagId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isManualRelease",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что релизы набора данных выпускаются вручную",
                  "required": false,
                  "schema": {
                      "description": "Признак, что релизы набора данных выпускаются вручную",
                      "paramName": "isManualRelease",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что релизы набора данных выпускаются вручную",
                          "paramName": "isManualRelease",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив идентификаторов наборов данных - справочников, которые используются в текущем наборе данных.",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "useAsDictDatasets",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                  "required": false,
                  "schema": {
                      "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                      "paramName": "useAsDictDatasets",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Массив объектов из идентификаторов и наименований наборов данных - справочников, которые используются в текущем наборе данных.",
                          "paramName": "useAsDictDatasets",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}/versions",
      "method": "get",
      "methodDesc": "Получение версий набора данных",
      "responses": {
          "description": "Массив версий набора данных",
          "schema": [
              {
                  "paramName": "versionNum",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Номер версии набора данных",
                  "required": false,
                  "schema": {
                      "description": "Номер версии набора данных",
                      "paramName": "versionNum",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Номер версии набора данных",
                          "paramName": "versionNum",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "openDate",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "openDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "openDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isActual",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что версия является актуальной в ноборе данных",
                  "required": false,
                  "schema": {
                      "description": "Признак, что версия является актуальной в ноборе данных",
                      "paramName": "isActual",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что версия является актуальной в ноборе данных",
                          "paramName": "isActual",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationCatalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации, который привязан к версии набора данных",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор каталога публикации, который привязан к версии набора данных",
                      "paramName": "publicationCatalogId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор каталога публикации, который привязан к версии набора данных",
                          "paramName": "publicationCatalogId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "publicationCatalogVersionNum",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Номер версии каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Номер версии каталога публикации",
                      "paramName": "publicationCatalogVersionNum",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Номер версии каталога публикации",
                          "paramName": "publicationCatalogVersionNum",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "attributeSettings",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "attributeSettings",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "attributeSettings",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}/versions",
      "method": "post",
      "methodDesc": "Создание версии набора данных",
      "responses": {
          "description": "Успешное создание версии.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "publicationCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор каталога публикации, с которым будет связана новая версия, соответственно и набор данных в дальнейшем.\nЕсли передаётся идентификатор каталога, с которым уже связан набор данных, то оставлять текущую связь.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}/versions/{versionNum}",
      "method": "put",
      "methodDesc": "Открытие версии набора данных",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "versionNum",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Номер версии набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}/versions/{versionNum}/releases",
      "method": "get",
      "methodDesc": "Получение релизов версии набора данных",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "releaseNum",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Релиз набора данных",
                  "required": false,
                  "schema": {
                      "description": "Релиз набора данных",
                      "paramName": "releaseNum",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Релиз набора данных",
                          "paramName": "releaseNum",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "createDate",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "createDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "createDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "openDate",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "openDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "openDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isActual",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что релиз является актуальным в ноборе данных",
                  "required": false,
                  "schema": {
                      "description": "Признак, что релиз является актуальным в ноборе данных",
                      "paramName": "isActual",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что релиз является актуальным в ноборе данных",
                          "paramName": "isActual",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isOpen",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, что релиз доступен пользователям ОПОД",
                  "required": false,
                  "schema": {
                      "description": "Признак, что релиз доступен пользователям ОПОД",
                      "paramName": "isOpen",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, что релиз доступен пользователям ОПОД",
                          "paramName": "isOpen",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "cntObjects",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов в релизе",
                  "required": false,
                  "schema": {
                      "description": "Количество объектов в релизе",
                      "paramName": "cntObjects",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество объектов в релизе",
                          "paramName": "cntObjects",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "versionNum",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Номер версии набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых релизов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}/versions/{versionNum}/releases/{releaseNum}",
      "method": "put",
      "methodDesc": "Назначение релиза актуальным",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "versionNum",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Номер версии набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "releaseNum",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Номер релиза набора данных в рамках конкретной версии",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/datasets/{datasetId}/versions/{versionNum}/releases/{releaseNum}",
      "method": "delete",
      "methodDesc": "Удаление релиза",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "datasetId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "versionNum",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Номер версии набора данных",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "releaseNum",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Номер релиза набора данных в рамках конкретной версии",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/fillrest/dictionaries",
      "method": "get",
      "methodDesc": "Получение общей информации справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "paramName": "array",
              "paramType": "Не найден тип",
              "description": "Справочник",
              "required": false,
              "schema": []
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых справочников (число от `1` до `1000`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/fillrest/dictionaryElements",
      "method": "get",
      "methodDesc": "Поиск по списку элементов справочника",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dictionaryId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор справочника.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов справочника (число от `1` до `500`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "dictionaryElementStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы элементов справочника.\n\nИспользуется для фильтрации.\nВ параметре передается массив строк, строка представляет собой ключевое слово.\nНе может передаваться пустой массив.\n\nДопустимые значения:\n  - `active` - активный;\n  - `deleted` - удаленный.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку элементов справочника. Поиск производится по идентификатору и наименованию.\n\nЗапрос со значением `123` вернет все элементы справочника, идентификатор или наименование которых содержит подстроку `123`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogs",
      "method": "get",
      "methodDesc": "Поиск по списку каталогов заполнения",
      "responses": {
          "description": "Успешный ответ. \nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. \nЕсли у системы-потребителя отсутствует доступ к каким-либо каталогам, то также возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `1000`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName,\nobjectCategories,\nthematicCategory,\noivs,\nperiodUpdate,\nsystemsConsumers,\nsystemsSuppliers,\nresponsiblePerson,\ncountActiveObjects,\ncountUnsignedObjects,\ncountObjects,\ndateLastSign,\ndateNextUpdate,\nstatusSignObjects,\nstatusSignMetadata\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName,\nobjectCategories,\nthematicCategory,\noivs,\nperiodUpdate,\nsystemsConsumers,\nsystemsSuppliers,\nresponsiblePerson,\ncountActiveObjects,\ncountUnsignedObjects,\ncountObjects,\ndateLastSign,\ndateNextUpdate,\nstatusSignObjects,\nstatusSignMetadata\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogs/{catalogId}/attributes",
      "method": "get",
      "methodDesc": "Получение атрибутов каталога заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": {
              "description": "Нет описания",
              "paramName": "Array[undefined]",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Array[undefined]",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogs/{catalogId}/count",
      "method": "get",
      "methodDesc": "Получение статистики по каталогу заполнения",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "countActiveObjects",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество подписанных неудаленных объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество подписанных неудаленных объектов каталога",
                      "paramName": "countActiveObjects",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество подписанных неудаленных объектов каталога",
                          "paramName": "countActiveObjects",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countDelObjects",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество удаленных объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество удаленных объектов каталога",
                      "paramName": "countDelObjects",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество удаленных объектов каталога",
                          "paramName": "countDelObjects",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countUnsignedObjects",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество неподписанных объектов каталога",
                  "required": true,
                  "schema": {
                      "description": "Количество неподписанных объектов каталога",
                      "paramName": "countUnsignedObjects",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество неподписанных объектов каталога",
                          "paramName": "countUnsignedObjects",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countError",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов каталога с ошибками",
                  "required": true,
                  "schema": {
                      "description": "Количество объектов каталога с ошибками",
                      "paramName": "countError",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество объектов каталога с ошибками",
                          "paramName": "countError",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countGeoError",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов каталогас ошибками геоданных",
                  "required": true,
                  "schema": {
                      "description": "Количество объектов каталогас ошибками геоданных",
                      "paramName": "countGeoError",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество объектов каталогас ошибками геоданных",
                          "paramName": "countGeoError",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogObjects/search",
      "method": "post",
      "methodDesc": "Поиск по списку объектов корневого каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами и сортировками по списку объектов",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "objectStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Статусы возвращаемых объектов, используется для фильтрации по статусу объекта.\n\nВ массиве передаются технические названия статусов. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "globalIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\nМожет использоваться для дополнительной фильтрации при работе со списком объектов ссылочного атрибута. Массив не может быть пустым.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "signedVersion",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить последние подписанные версии объектов.\nТакие версии есть у объектов во всех статусах, кроме new. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "fetchGeodata",
              "paramIn": "query",
              "paramType": "string[\nEPSG:4326,\nMSK:77,\ndefault\n]",
              "description": "Признак, указывающий на включение в ответ геоданных объекта в заданной системе координат.\nДоступны следующие варианты:\n  - `признак не передаётся` - объект возвращается без геоданных,\n  - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n  - `MSK:77` - геоданные объекта возвращаются в системе координат MSK77,\n  - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nEPSG:4326,\nMSK:77,\ndefault\n]"
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogObjects/child/search",
      "method": "post",
      "methodDesc": "Поиск по списку объектов вложенного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами и сортировками по списку объектов",
          "schema": [
              {
                  "paramName": "filters[index]",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "filters[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "",
                          "paramName": "filters[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sortings[index]",
                  "paramIn": "array",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "sortings[index]",
                      "paramIn": "array",
                      "schema": {
                          "description": "",
                          "paramName": "sortings[index]",
                          "paramIn": "array"
                      }
                  }
              },
              {
                  "paramName": "sortings[index].attribute",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                      "paramName": "sortings[index].attribute",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\nДля атрибутов каталога передается в следующем формате:\n  - \"field_{attrId}\" для каталога заполнения\n  - \"field_{catalogAttrId}\" для каталога публикации\n      - attrId - идентификатор атрибута в ЕХД\n      - catalogAttrId - идентификатор атрибута каталога",
                          "paramName": "sortings[index].attribute",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "sortings[index].order",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": {
                      "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                      "paramName": "sortings[index].order",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                          "paramName": "sortings[index].order",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "parentGlobalId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальный идентификатор родительского объекта.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "rootGlobalId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Глобальный идентификатор корневого объекта (объекта в корневом каталоге, которому принадлежат вложенные объекты).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "parentCatalogId",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Идентификатор родительского каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "rootCatalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор корневого каталога.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "signedVersion",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Указывает, что необходимо получить последние подписанные версии объектов.\nТакие версии есть у объектов во всех статусах, кроме new. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogObjects",
      "method": "post",
      "methodDesc": "Сохранение объекта",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для сохранения объекта в каталоге",
          "schema": [
              {
                  "paramName": "system_object_id",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор объекта в системе-поставщике",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор объекта в системе-поставщике",
                      "paramName": "system_object_id",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор объекта в системе-поставщике",
                          "paramName": "system_object_id",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "global_id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Глобальный идентификатор объекта",
                  "required": true,
                  "schema": {
                      "description": "Глобальный идентификатор объекта",
                      "paramName": "global_id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Глобальный идентификатор объекта",
                          "paramName": "global_id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "is_deleted",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Статус объекта:\n  - 0 - активен\n  - 1 - удален",
                  "required": true,
                  "schema": {
                      "description": "Статус объекта:\n  - 0 - активен\n  - 1 - удален",
                      "paramName": "is_deleted",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Статус объекта:\n  - 0 - активен\n  - 1 - удален",
                          "paramName": "is_deleted",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signature_date",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss",
                  "required": true,
                  "schema": {
                      "description": "Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss",
                      "paramName": "signature_date",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss",
                          "paramName": "signature_date",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "geoData",
                  "paramType": "unknown param type",
                  "description": "Геометрия объекта.",
                  "required": false,
                  "schema": {
                      "description": "Геометрия объекта.",
                      "paramName": "geoData",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Геометрия объекта.",
                          "paramName": "geoData",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Центроид геометрии объекта. Координата [x,y].",
                  "required": false,
                  "schema": {
                      "description": "Центроид геометрии объекта. Координата [x,y].",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Центроид геометрии объекта. Координата [x,y].",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "geoarea",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Площадь геометрии.",
                  "required": false,
                  "schema": {
                      "description": "Площадь геометрии.",
                      "paramName": "geoarea",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Площадь геометрии.",
                          "paramName": "geoarea",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/fillrest/catalogObjectsSign",
      "method": "post",
      "methodDesc": "Сохранение объекта с подписанием",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для сохранения объекта в каталоге с подписанием",
          "schema": {
              "description": "Массив объектов каталога с подписью",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Массив объектов каталога с подписью",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": []
  },
  {
      "path": "/fillrest/async/catalogObjects",
      "method": "post",
      "methodDesc": "Асинхронное сохранение объекта/части объекта",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для сохранения объекта в каталоге",
          "schema": [
              {
                  "paramName": "system_object_id",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор объекта в системе-поставщике",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор объекта в системе-поставщике",
                      "paramName": "system_object_id",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор объекта в системе-поставщике",
                          "paramName": "system_object_id",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "global_id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Глобальный идентификатор объекта",
                  "required": true,
                  "schema": {
                      "description": "Глобальный идентификатор объекта",
                      "paramName": "global_id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Глобальный идентификатор объекта",
                          "paramName": "global_id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "is_deleted",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Статус объекта:\n  - 0 - активен\n  - 1 - удален",
                  "required": true,
                  "schema": {
                      "description": "Статус объекта:\n  - 0 - активен\n  - 1 - удален",
                      "paramName": "is_deleted",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Статус объекта:\n  - 0 - активен\n  - 1 - удален",
                          "paramName": "is_deleted",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signature_date",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss",
                  "required": true,
                  "schema": {
                      "description": "Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss",
                      "paramName": "signature_date",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss",
                          "paramName": "signature_date",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "geoData",
                  "paramType": "unknown param type",
                  "description": "Геометрия объекта.",
                  "required": false,
                  "schema": {
                      "description": "Геометрия объекта.",
                      "paramName": "geoData",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Геометрия объекта.",
                          "paramName": "geoData",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Центроид геометрии объекта. Координата [x,y].",
                  "required": false,
                  "schema": {
                      "description": "Центроид геометрии объекта. Координата [x,y].",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Центроид геометрии объекта. Координата [x,y].",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "geoarea",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Площадь геометрии.",
                  "required": false,
                  "schema": {
                      "description": "Площадь геометрии.",
                      "paramName": "geoarea",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Площадь геометрии.",
                          "paramName": "geoarea",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/fillrest/async/catalogObjectsSign",
      "method": "post",
      "methodDesc": "Асинхронное сохранение объекта с подписанием",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для сохранения объекта в каталоге с подписанием",
          "schema": {
              "description": "Массив объектов каталога с подписью",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Массив объектов каталога с подписью",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": []
  },
  {
      "path": "/fillrest/async/{queueId}/status",
      "method": "get",
      "methodDesc": "Статус асинхронного запроса на сохранение объекта",
      "responses": {
          "description": "Ответ при успешной обработке запроса.",
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "queueId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор асинхронного запроса",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/fillrest/catalogSign/{catalogId}",
      "method": "post",
      "methodDesc": "Подписание метаданных каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Пример тела запроса с данными цифровой подписи",
          "schema": [
              {
                  "paramName": "unsignedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Неподписанный хэш от бэкенда",
                  "required": true,
                  "schema": {
                      "description": "Неподписанный хэш от бэкенда",
                      "paramName": "unsignedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Неподписанный хэш от бэкенда",
                          "paramName": "unsignedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "signedHash",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Подписанный хэш от КриптоПро",
                  "required": true,
                  "schema": {
                      "description": "Подписанный хэш от КриптоПро",
                      "paramName": "signedHash",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Подписанный хэш от КриптоПро",
                          "paramName": "signedHash",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "certificateObject",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "certificateObject",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "certificateObject.subjectName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о сертификате подписи",
                  "required": true,
                  "schema": {
                      "description": "Информация о сертификате подписи",
                      "paramName": "certificateObject.subjectName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о сертификате подписи",
                          "paramName": "certificateObject.subjectName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.issuerName",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Информация о том, кто выпустил сертификат",
                  "required": true,
                  "schema": {
                      "description": "Информация о том, кто выпустил сертификат",
                      "paramName": "certificateObject.issuerName",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Информация о том, кто выпустил сертификат",
                          "paramName": "certificateObject.issuerName",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validFromDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата начала валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата начала валидации подписи",
                      "paramName": "certificateObject.validFromDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата начала валидации подписи",
                          "paramName": "certificateObject.validFromDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.validToDate",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Дата окончания валидации подписи",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания валидации подписи",
                      "paramName": "certificateObject.validToDate",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания валидации подписи",
                          "paramName": "certificateObject.validToDate",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.serialNumber",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Серийный номер",
                  "required": true,
                  "schema": {
                      "description": "Серийный номер",
                      "paramName": "certificateObject.serialNumber",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Серийный номер",
                          "paramName": "certificateObject.serialNumber",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "certificateObject.publicKey",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Публичный ключ",
                  "required": true,
                  "schema": {
                      "description": "Публичный ключ",
                      "paramName": "certificateObject.publicKey",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Публичный ключ",
                          "paramName": "certificateObject.publicKey",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/list",
      "method": "post",
      "methodDesc": "Запрос спецификации каталогов публикации",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Массив идентификатаров каталогов публикации",
                  "required": false,
                  "schema": {
                      "description": "Массив идентификатаров каталогов публикации",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Массив идентификатаров каталогов публикации",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "epoch",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DD",
                  "required": false,
                  "schema": {
                      "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DD",
                      "paramName": "epoch",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DD",
                          "paramName": "epoch",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "timestamp",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                  "required": false,
                  "schema": {
                      "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                      "paramName": "timestamp",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                          "paramName": "timestamp",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "offset",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                  "required": false,
                  "schema": {
                      "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                      "paramName": "offset",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                          "paramName": "offset",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "limit",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Допустимое количество объектов в ответе.",
                  "required": false,
                  "schema": {
                      "description": "Допустимое количество объектов в ответе.",
                      "paramName": "limit",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Допустимое количество объектов в ответе.",
                          "paramName": "limit",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "projection",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Определяет поля отображаемые в ответе.",
                  "required": false,
                  "schema": {
                      "description": "Определяет поля отображаемые в ответе.",
                      "paramName": "projection",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Определяет поля отображаемые в ответе.",
                          "paramName": "projection",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/get",
      "method": "post",
      "methodDesc": "Запрос содержимого каталога публикации",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\nЕсли в теле запроса есть параметр paging=true, то возвращается объект CatalogGetResponsePaging",
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "criteria",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                  "required": false,
                  "schema": {
                      "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                      "paramName": "criteria",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                          "paramName": "criteria",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "epoch",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата, на которую структура данных была актуальна.\nФормат даты по умолчанию - YYYY-MM-DD.\nПо умолчанию - текущая дата.",
                  "required": false,
                  "schema": {
                      "description": "Дата, на которую структура данных была актуальна.\nФормат даты по умолчанию - YYYY-MM-DD.\nПо умолчанию - текущая дата.",
                      "paramName": "epoch",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата, на которую структура данных была актуальна.\nФормат даты по умолчанию - YYYY-MM-DD.\nПо умолчанию - текущая дата.",
                          "paramName": "epoch",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "timestamp",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                  "required": false,
                  "schema": {
                      "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                      "paramName": "timestamp",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                          "paramName": "timestamp",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "offset",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                  "required": false,
                  "schema": {
                      "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                      "paramName": "offset",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                          "paramName": "offset",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "limit",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Допустимое количество объектов в ответе.",
                  "required": false,
                  "schema": {
                      "description": "Допустимое количество объектов в ответе.",
                      "paramName": "limit",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Допустимое количество объектов в ответе.",
                          "paramName": "limit",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "paging",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.",
                  "required": false,
                  "schema": {
                      "description": "Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.",
                      "paramName": "paging",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.",
                          "paramName": "paging",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sorting",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Параметры сортировки.",
                  "required": false,
                  "schema": {
                      "description": "Параметры сортировки.",
                      "paramName": "sorting",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Параметры сортировки.",
                          "paramName": "sorting",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "translate",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                  "required": false,
                  "schema": {
                      "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                      "paramName": "translate",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                          "paramName": "translate",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "includeDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Учитывать ли в выборке удаленные объекты.",
                  "required": false,
                  "schema": {
                      "description": "Учитывать ли в выборке удаленные объекты.",
                      "paramName": "includeDeleted",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Учитывать ли в выборке удаленные объекты.",
                          "paramName": "includeDeleted",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictKeyMode",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Формат отображения значений справочников.\n  - `0` - отображение значения;\n  - `1` - отображения ключа;\n  - `2` - отображение ключа и значения",
                  "required": false,
                  "schema": {
                      "description": "Формат отображения значений справочников.\n  - `0` - отображение значения;\n  - `1` - отображения ключа;\n  - `2` - отображение ключа и значения",
                      "paramName": "dictKeyMode",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Формат отображения значений справочников.\n  - `0` - отображение значения;\n  - `1` - отображения ключа;\n  - `2` - отображение ключа и значения",
                          "paramName": "dictKeyMode",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fieldChanged",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени",
                  "required": false,
                  "schema": {
                      "description": "Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени",
                      "paramName": "fieldChanged",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени",
                          "paramName": "fieldChanged",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fetchGeodata",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Выдавать геолокационную информацию для объекта, если такая имеется.",
                  "required": false,
                  "schema": {
                      "description": "Выдавать геолокационную информацию для объекта, если такая имеется.",
                      "paramName": "fetchGeodata",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Выдавать геолокационную информацию для объекта, если такая имеется.",
                          "paramName": "fetchGeodata",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fetchGeodataCenter",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Получить центральную точку геометрии.",
                  "required": false,
                  "schema": {
                      "description": "Получить центральную точку геометрии.",
                      "paramName": "fetchGeodataCenter",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Получить центральную точку геометрии.",
                          "paramName": "fetchGeodataCenter",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "geoData",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                  "required": false,
                  "schema": {
                      "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                      "paramName": "geoData",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                          "paramName": "geoData",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Список полей, которые будут выдаваться в составе объектов набора данных.\nПоля вложенных объектов разделяются через \".\".\nЕсли список пуст или параметр не указан в запросе выдаются все поля.",
                  "required": false,
                  "schema": {
                      "description": "Список полей, которые будут выдаваться в составе объектов набора данных.\nПоля вложенных объектов разделяются через \".\".\nЕсли список пуст или параметр не указан в запросе выдаются все поля.",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Список полей, которые будут выдаваться в составе объектов набора данных.\nПоля вложенных объектов разделяются через \".\".\nЕсли список пуст или параметр не указан в запросе выдаются все поля.",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "useAntiProjection",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.",
                  "required": false,
                  "schema": {
                      "description": "При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.",
                      "paramName": "useAntiProjection",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.",
                          "paramName": "useAntiProjection",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/get/features",
      "method": "post",
      "methodDesc": "Запрос содержимого каталога публикации в формате GeoJSON",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `features`.",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "criteria",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                  "required": false,
                  "schema": {
                      "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                      "paramName": "criteria",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                          "paramName": "criteria",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "epoch",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата, на которую структура данных была актуальна.\nФормат даты по умолчанию - YYYY-MM-DD.\nПо умолчанию - текущая дата.",
                  "required": false,
                  "schema": {
                      "description": "Дата, на которую структура данных была актуальна.\nФормат даты по умолчанию - YYYY-MM-DD.\nПо умолчанию - текущая дата.",
                      "paramName": "epoch",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата, на которую структура данных была актуальна.\nФормат даты по умолчанию - YYYY-MM-DD.\nПо умолчанию - текущая дата.",
                          "paramName": "epoch",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "timestamp",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                  "required": false,
                  "schema": {
                      "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                      "paramName": "timestamp",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Определяет формат даты в параметре 'epoch'.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                          "paramName": "timestamp",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "offset",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                  "required": false,
                  "schema": {
                      "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                      "paramName": "offset",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                          "paramName": "offset",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "limit",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Допустимое количество объектов в ответе.",
                  "required": false,
                  "schema": {
                      "description": "Допустимое количество объектов в ответе.",
                      "paramName": "limit",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Допустимое количество объектов в ответе.",
                          "paramName": "limit",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "paging",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.",
                  "required": false,
                  "schema": {
                      "description": "Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.",
                      "paramName": "paging",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.",
                          "paramName": "paging",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sorting",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Параметры сортировки.",
                  "required": false,
                  "schema": {
                      "description": "Параметры сортировки.",
                      "paramName": "sorting",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Параметры сортировки.",
                          "paramName": "sorting",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "translate",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                  "required": false,
                  "schema": {
                      "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                      "paramName": "translate",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                          "paramName": "translate",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "includeDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Учитывать ли в выборке удаленные объекты.",
                  "required": false,
                  "schema": {
                      "description": "Учитывать ли в выборке удаленные объекты.",
                      "paramName": "includeDeleted",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Учитывать ли в выборке удаленные объекты.",
                          "paramName": "includeDeleted",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dictKeyMode",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Формат отображения значений справочников.\n  - `0` - отображение значения;\n  - `1` - отображения ключа;\n  - `2` - отображение ключа и значения",
                  "required": false,
                  "schema": {
                      "description": "Формат отображения значений справочников.\n  - `0` - отображение значения;\n  - `1` - отображения ключа;\n  - `2` - отображение ключа и значения",
                      "paramName": "dictKeyMode",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Формат отображения значений справочников.\n  - `0` - отображение значения;\n  - `1` - отображения ключа;\n  - `2` - отображение ключа и значения",
                          "paramName": "dictKeyMode",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fieldChanged",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени",
                  "required": false,
                  "schema": {
                      "description": "Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени",
                      "paramName": "fieldChanged",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени",
                          "paramName": "fieldChanged",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fetchGeodata",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Выдавать геолокационную информацию для объекта, если такая имеется.",
                  "required": false,
                  "schema": {
                      "description": "Выдавать геолокационную информацию для объекта, если такая имеется.",
                      "paramName": "fetchGeodata",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Выдавать геолокационную информацию для объекта, если такая имеется.",
                          "paramName": "fetchGeodata",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "fetchGeodataCenter",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Получить центральную точку геометрии.",
                  "required": false,
                  "schema": {
                      "description": "Получить центральную точку геометрии.",
                      "paramName": "fetchGeodataCenter",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Получить центральную точку геометрии.",
                          "paramName": "fetchGeodataCenter",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "geoData",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                  "required": false,
                  "schema": {
                      "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                      "paramName": "geoData",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                          "paramName": "geoData",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Список полей, которые будут выдаваться в составе объектов набора данных.\nПоля вложенных объектов разделяются через \".\".\nЕсли список пуст или параметр не указан в запросе выдаются все поля.",
                  "required": false,
                  "schema": {
                      "description": "Список полей, которые будут выдаваться в составе объектов набора данных.\nПоля вложенных объектов разделяются через \".\".\nЕсли список пуст или параметр не указан в запросе выдаются все поля.",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Список полей, которые будут выдаваться в составе объектов набора данных.\nПоля вложенных объектов разделяются через \".\".\nЕсли список пуст или параметр не указан в запросе выдаются все поля.",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "useAntiProjection",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.",
                  "required": false,
                  "schema": {
                      "description": "При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.",
                      "paramName": "useAntiProjection",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.",
                          "paramName": "useAntiProjection",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/changes",
      "method": "post",
      "methodDesc": "Получение измененных объектов в каталоге",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.",
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "from",
                  "paramType": "unknown param type",
                  "description": "Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                  "required": true,
                  "schema": {
                      "description": "Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                      "paramName": "from",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                          "paramName": "from",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "until",
                  "paramType": "unknown param type",
                  "description": "Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                      "paramName": "until",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                          "paramName": "until",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "offset",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                  "required": false,
                  "schema": {
                      "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                      "paramName": "offset",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                          "paramName": "offset",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "limit",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Допустимое количество объектов в ответе.",
                  "required": false,
                  "schema": {
                      "description": "Допустимое количество объектов в ответе.",
                      "paramName": "limit",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Допустимое количество объектов в ответе.",
                          "paramName": "limit",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "state",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип изменения объекта каталога:\n  - `CREATED` - создание (Параметр `includeDeleted` не влияет на выдачу, 1-ая версия объекта и id_deleted=0)\n  - 'UPDATED' - обновление (Параметр `includeDeleted` не влияет на выдачу, версия больше 1 и id_deleted=0)\n  - 'DELETED' - удаление (Параметр `includeDeleted` влияет на выдачу. С параметром `includeDeleted` выводит с id_deleted=1)\n  - 'CHANGED' - изменение (Параметр `includeDeleted` влияет на выдачу. Без параметра выводятся объекты с id_deleted=0, с параметром выводятся все объекты с id_deleted=0 и с id_deleted=1)",
                  "required": true,
                  "schema": {
                      "description": "Тип изменения объекта каталога:\n  - `CREATED` - создание (Параметр `includeDeleted` не влияет на выдачу, 1-ая версия объекта и id_deleted=0)\n  - 'UPDATED' - обновление (Параметр `includeDeleted` не влияет на выдачу, версия больше 1 и id_deleted=0)\n  - 'DELETED' - удаление (Параметр `includeDeleted` влияет на выдачу. С параметром `includeDeleted` выводит с id_deleted=1)\n  - 'CHANGED' - изменение (Параметр `includeDeleted` влияет на выдачу. Без параметра выводятся объекты с id_deleted=0, с параметром выводятся все объекты с id_deleted=0 и с id_deleted=1)",
                      "paramName": "state",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип изменения объекта каталога:\n  - `CREATED` - создание (Параметр `includeDeleted` не влияет на выдачу, 1-ая версия объекта и id_deleted=0)\n  - 'UPDATED' - обновление (Параметр `includeDeleted` не влияет на выдачу, версия больше 1 и id_deleted=0)\n  - 'DELETED' - удаление (Параметр `includeDeleted` влияет на выдачу. С параметром `includeDeleted` выводит с id_deleted=1)\n  - 'CHANGED' - изменение (Параметр `includeDeleted` влияет на выдачу. Без параметра выводятся объекты с id_deleted=0, с параметром выводятся все объекты с id_deleted=0 и с id_deleted=1)",
                          "paramName": "state",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "includeDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Учитывать ли в выборке удаленные объекты.",
                  "required": false,
                  "schema": {
                      "description": "Учитывать ли в выборке удаленные объекты.",
                      "paramName": "includeDeleted",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Учитывать ли в выборке удаленные объекты.",
                          "paramName": "includeDeleted",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "criteria",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра `geoData` используются функциях near и inside",
                  "required": false,
                  "schema": {
                      "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра `geoData` используются функциях near и inside",
                      "paramName": "criteria",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра `geoData` используются функциях near и inside",
                          "paramName": "criteria",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "translate",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                  "required": false,
                  "schema": {
                      "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                      "paramName": "translate",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                          "paramName": "translate",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sorting",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Параметры сортировки.",
                  "required": false,
                  "schema": {
                      "description": "Параметры сортировки.",
                      "paramName": "sorting",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Параметры сортировки.",
                          "paramName": "sorting",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/object/changes",
      "method": "post",
      "methodDesc": "Получение изменений объекта",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "global_id объекта каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "global_id объекта каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "global_id объекта каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalog",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "catalog",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "catalog",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "from",
                  "paramType": "unknown param type",
                  "description": "Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                  "required": true,
                  "schema": {
                      "description": "Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                      "paramName": "from",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                          "paramName": "from",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "until",
                  "paramType": "unknown param type",
                  "description": "Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                  "required": true,
                  "schema": {
                      "description": "Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                      "paramName": "until",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss",
                          "paramName": "until",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "translate",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                  "required": false,
                  "schema": {
                      "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                      "paramName": "translate",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n  - null – выдаются обе версии",
                          "paramName": "translate",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/count",
      "method": "post",
      "methodDesc": "Запрос количества элементов в каталоге",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается значение `0`.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "criteria",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                  "required": false,
                  "schema": {
                      "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                      "paramName": "criteria",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях near и inside",
                          "paramName": "criteria",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "geoData",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                  "required": false,
                  "schema": {
                      "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                      "paramName": "geoData",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\nКоординаты точки или полигона указываются в формате GeoJSON.",
                          "paramName": "geoData",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "epoch",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата, на которую структура данных была актуальна.\nФормат даты - YYYY-MM-DD\nПо умолчанию - текущая дата.",
                  "required": false,
                  "schema": {
                      "description": "Дата, на которую структура данных была актуальна.\nФормат даты - YYYY-MM-DD\nПо умолчанию - текущая дата.",
                      "paramName": "epoch",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата, на которую структура данных была актуальна.\nФормат даты - YYYY-MM-DD\nПо умолчанию - текущая дата.",
                          "paramName": "epoch",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "timestamp",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Определяет формат даты в параметре `epoch`.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                  "required": false,
                  "schema": {
                      "description": "Определяет формат даты в параметре `epoch`.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                      "paramName": "timestamp",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Определяет формат даты в параметре `epoch`.\n  - `0` - формат YYYY-MM-DD;\n  - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.",
                          "paramName": "timestamp",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "includeDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Учитывать ли в выборке удаленные объекты.",
                  "required": false,
                  "schema": {
                      "description": "Учитывать ли в выборке удаленные объекты.",
                      "paramName": "includeDeleted",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Учитывать ли в выборке удаленные объекты.",
                          "paramName": "includeDeleted",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/dictionary/get",
      "method": "post",
      "methodDesc": "Запрос содержимого справочников",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор запрашиваемого справочника.",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор запрашиваемого справочника.",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор запрашиваемого справочника.",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "offset",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                  "required": false,
                  "schema": {
                      "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                      "paramName": "offset",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Смещение окна выдачи.\nПозиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\nПо умолчанию `0`.",
                          "paramName": "offset",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "limit",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество возвращаемых элементов справочника (число от `1` до `999999`). По умолчанию `999999`.",
                  "required": false,
                  "schema": {
                      "description": "Количество возвращаемых элементов справочника (число от `1` до `999999`). По умолчанию `999999`.",
                      "paramName": "limit",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество возвращаемых элементов справочника (число от `1` до `999999`). По умолчанию `999999`.",
                          "paramName": "limit",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/MEDIA/getFile",
      "method": "get",
      "methodDesc": "Скачивание файла",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "id",
              "paramIn": "query",
              "paramType": "string",
              "description": "Uuid вложения, размещенного в ЕХД.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/MEDIA/showFile",
      "method": "get",
      "methodDesc": "Отображение изображения, вложенного в объект",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "id",
              "paramIn": "query",
              "paramType": "string",
              "description": "Uuid вложения, размещенного в ЕХД.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "size",
              "paramIn": "query",
              "paramType": "string",
              "description": "Указать `thumbnail` если изображение в уменьшенном виде",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/export",
      "method": "post",
      "methodDesc": "Запрос на формирование файла экспорта с содержимым каталога",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "format",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Формат запрашиваемого файла. Если `null`, то возвращаются все форматы.",
                  "required": false,
                  "schema": {
                      "description": "Формат запрашиваемого файла. Если `null`, то возвращаются все форматы.",
                      "paramName": "format",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Формат запрашиваемого файла. Если `null`, то возвращаются все форматы.",
                          "paramName": "format",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "translate",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n\nЕсли `null`, то возвращается обе версии.",
                  "required": false,
                  "schema": {
                      "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n\nЕсли `null`, то возвращается обе версии.",
                      "paramName": "translate",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Управление выдачей переводов полей.\n  - false – выдаются русскоязычные поля\n  - true – выдача англоязычных полей\n\nЕсли `null`, то возвращается обе версии.",
                          "paramName": "translate",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "epoch",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DDThh:mm:ss.sTZD\nДля запроса статуса формирования файлов необходимо передать в параметре epoch полученное значение из поля 'createDate'.",
                  "required": false,
                  "schema": {
                      "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DDThh:mm:ss.sTZD\nДля запроса статуса формирования файлов необходимо передать в параметре epoch полученное значение из поля 'createDate'.",
                      "paramName": "epoch",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DDThh:mm:ss.sTZD\nДля запроса статуса формирования файлов необходимо передать в параметре epoch полученное значение из поля 'createDate'.",
                          "paramName": "epoch",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/export/get",
      "method": "get",
      "methodDesc": "Скачивание файла экспорта",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "id",
              "paramIn": "query",
              "paramType": "string",
              "description": "Идентификатор файла экспорта, который получен методом POST /publrest/catalog/export",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/soap/getCatalogList",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/getCatalogSpec",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/getCatalogItems",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/getCatalogStats",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/getAllDict",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/getDictItem",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/setSignatureCatalog",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/soap/setDataIn",
      "method": "$ref",
      "responses": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/backgroundChecks",
      "method": "post",
      "methodDesc": "Запуск фоновой проверки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор фоновой проверки",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор фоновой проверки",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор фоновой проверки",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога для фоновой проверки",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога для фоновой проверки",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога для фоновой проверки",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "email",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "E-mail, на который высылаются результаты фоновой проверки",
                  "required": false,
                  "schema": {
                      "description": "E-mail, на который высылаются результаты фоновой проверки",
                      "paramName": "email",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "E-mail, на который высылаются результаты фоновой проверки",
                          "paramName": "email",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "condition",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                  "required": false,
                  "schema": {
                      "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                      "paramName": "condition",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                          "paramName": "condition",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isFullBackgroundCheck",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Полная фоновая проверка",
                  "required": true,
                  "schema": {
                      "description": "Полная фоновая проверка",
                      "paramName": "isFullBackgroundCheck",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Полная фоновая проверка",
                          "paramName": "isFullBackgroundCheck",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "checkAttributes",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Проверка свойств атрибутов",
                  "required": true,
                  "schema": {
                      "description": "Проверка свойств атрибутов",
                      "paramName": "checkAttributes",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Проверка свойств атрибутов",
                          "paramName": "checkAttributes",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "checkRegexps",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Проверка регулярных выражений",
                  "required": true,
                  "schema": {
                      "description": "Проверка регулярных выражений",
                      "paramName": "checkRegexps",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Проверка регулярных выражений",
                          "paramName": "checkRegexps",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "checkSearchIndex",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Проверка поискового индекса",
                  "required": true,
                  "schema": {
                      "description": "Проверка поискового индекса",
                      "paramName": "checkSearchIndex",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Проверка поискового индекса",
                          "paramName": "checkSearchIndex",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "launchMainProcess",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Запуск главного процесса конструктора проверок",
                  "required": false,
                  "schema": {
                      "description": "Запуск главного процесса конструктора проверок",
                      "paramName": "launchMainProcess",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Запуск главного процесса конструктора проверок",
                          "paramName": "launchMainProcess",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "constructorPackage",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета",
                  "required": false,
                  "schema": {
                      "description": "Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета",
                      "paramName": "constructorPackage",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета",
                          "paramName": "constructorPackage",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "manageChangingObjects",
                  "paramType": "unknown param type",
                  "description": "Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n  - `logOnly` - Формировать лог фоновой проверки, \n  - `logErrors` - Формировать лог и помечать объекты ошибочными, \n  - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.",
                  "required": false,
                  "schema": {
                      "description": "Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n  - `logOnly` - Формировать лог фоновой проверки, \n  - `logErrors` - Формировать лог и помечать объекты ошибочными, \n  - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.",
                      "paramName": "manageChangingObjects",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n  - `logOnly` - Формировать лог фоновой проверки, \n  - `logErrors` - Формировать лог и помечать объекты ошибочными, \n  - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.",
                          "paramName": "manageChangingObjects",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/backgroundChecks",
      "method": "get",
      "methodDesc": "Получение параметров выбранных фоновых проверок",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор фоновой проверки",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор фоновой проверки",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор фоновой проверки",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога для фоновой проверки",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога для фоновой проверки",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога для фоновой проверки",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "email",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "E-mail, на который высылаются результаты фоновой проверки",
                  "required": false,
                  "schema": {
                      "description": "E-mail, на который высылаются результаты фоновой проверки",
                      "paramName": "email",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "E-mail, на который высылаются результаты фоновой проверки",
                          "paramName": "email",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "condition",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                  "required": false,
                  "schema": {
                      "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                      "paramName": "condition",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                          "paramName": "condition",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isFullBackgroundCheck",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Полная фоновая проверка",
                  "required": true,
                  "schema": {
                      "description": "Полная фоновая проверка",
                      "paramName": "isFullBackgroundCheck",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Полная фоновая проверка",
                          "paramName": "isFullBackgroundCheck",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "checkAttributes",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Проверка свойств атрибутов",
                  "required": true,
                  "schema": {
                      "description": "Проверка свойств атрибутов",
                      "paramName": "checkAttributes",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Проверка свойств атрибутов",
                          "paramName": "checkAttributes",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "checkRegexps",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Проверка регулярных выражений",
                  "required": true,
                  "schema": {
                      "description": "Проверка регулярных выражений",
                      "paramName": "checkRegexps",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Проверка регулярных выражений",
                          "paramName": "checkRegexps",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "checkSearchIndex",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Проверка поискового индекса",
                  "required": true,
                  "schema": {
                      "description": "Проверка поискового индекса",
                      "paramName": "checkSearchIndex",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Проверка поискового индекса",
                          "paramName": "checkSearchIndex",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "launchMainProcess",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Запуск главного процесса конструктора проверок",
                  "required": false,
                  "schema": {
                      "description": "Запуск главного процесса конструктора проверок",
                      "paramName": "launchMainProcess",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Запуск главного процесса конструктора проверок",
                          "paramName": "launchMainProcess",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "constructorPackage",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета",
                  "required": false,
                  "schema": {
                      "description": "Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета",
                      "paramName": "constructorPackage",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета",
                          "paramName": "constructorPackage",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "manageChangingObjects",
                  "paramType": "unknown param type",
                  "description": "Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n  - `logOnly` - Формировать лог фоновой проверки, \n  - `logErrors` - Формировать лог и помечать объекты ошибочными, \n  - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.",
                  "required": false,
                  "schema": {
                      "description": "Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n  - `logOnly` - Формировать лог фоновой проверки, \n  - `logErrors` - Формировать лог и помечать объекты ошибочными, \n  - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.",
                      "paramName": "manageChangingObjects",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n  - `logOnly` - Формировать лог фоновой проверки, \n  - `logErrors` - Формировать лог и помечать объекты ошибочными, \n  - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.",
                          "paramName": "manageChangingObjects",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "backgroundCheckIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов фоновых проверок.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/backgroundChecks/validate",
      "method": "post",
      "methodDesc": "Валидация условия ограничения выборки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "condition",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                  "required": true,
                  "schema": {
                      "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                      "paramName": "condition",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.",
                          "paramName": "condition",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога для получения атрибутов и проверки их использования в условии",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога для получения атрибутов и проверки их использования в условии",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога для получения атрибутов и проверки их использования в условии",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/backgroundChecks/{backgroundCheckId}/cancel",
      "method": "get",
      "methodDesc": "Отмена фоновой проверки объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "backgroundCheckId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор фоновой проверки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/backgroundChecks/reset",
      "method": "get",
      "methodDesc": "Сброс ошибок фоновых проверок с объектов каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/backgroundChecks/history",
      "method": "post",
      "methodDesc": "Получение истории фоновых проверок каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор фоновой проверки каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор фоновой проверки каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор фоновой проверки каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "userName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Имя пользователя, запустившего проверку",
                  "required": false,
                  "schema": {
                      "description": "Имя пользователя, запустившего проверку",
                      "paramName": "userName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Имя пользователя, запустившего проверку",
                          "paramName": "userName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "action",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Действие, может принимать значения \"Запуск фоновой проверки\", \"Запуск периодической фоновой проверки\", \"Сброс ошибок фоновой проверки\".",
                  "required": true,
                  "schema": {
                      "description": "Действие, может принимать значения \"Запуск фоновой проверки\", \"Запуск периодической фоновой проверки\", \"Сброс ошибок фоновой проверки\".",
                      "paramName": "action",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Действие, может принимать значения \"Запуск фоновой проверки\", \"Запуск периодической фоновой проверки\", \"Сброс ошибок фоновой проверки\".",
                          "paramName": "action",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramType": "unknown param type",
                  "description": "Дата старта фоновой проверки каталога",
                  "required": true,
                  "schema": {
                      "description": "Дата старта фоновой проверки каталога",
                      "paramName": "dateStart",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата старта фоновой проверки каталога",
                          "paramName": "dateStart",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramType": "unknown param type",
                  "description": "Дата окончания фоновой проверки каталога",
                  "required": false,
                  "schema": {
                      "description": "Дата окончания фоновой проверки каталога",
                      "paramName": "dateEnd",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата окончания фоновой проверки каталога",
                          "paramName": "dateEnd",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "countInWorkObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество объектов, взятых в работу при запуске фоновой проверки",
                  "required": true,
                  "schema": {
                      "description": "Количество объектов, взятых в работу при запуске фоновой проверки",
                      "paramName": "countInWorkObj",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество объектов, взятых в работу при запуске фоновой проверки",
                          "paramName": "countInWorkObj",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countCheckedObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество проверенных объектов (по окончании процесса фоновой проверки)",
                  "required": true,
                  "schema": {
                      "description": "Количество проверенных объектов (по окончании процесса фоновой проверки)",
                      "paramName": "countCheckedObj",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Количество проверенных объектов (по окончании процесса фоновой проверки)",
                          "paramName": "countCheckedObj",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "countErrorObj",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Количество ошибочных объектов (по окончании процесса фоновой проверки)",
                  "required": false,
                  "schema": {
                      "description": "Количество ошибочных объектов (по окончании процесса фоновой проверки)",
                      "paramName": "countErrorObj",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Количество ошибочных объектов (по окончании процесса фоновой проверки)",
                          "paramName": "countErrorObj",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "logFileId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор (uuid) файла лога",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор (uuid) файла лога",
                      "paramName": "logFileId",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор (uuid) файла лога",
                          "paramName": "logFileId",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "status",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "status",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "status.id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "status.id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "status.id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Название статуса в истории фоновых проверок каталога заполнения",
                  "required": false,
                  "schema": {
                      "description": "Название статуса в истории фоновых проверок каталога заполнения",
                      "paramName": "status.name",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Название статуса в истории фоновых проверок каталога заполнения",
                          "paramName": "status.name",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "status.tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Технчиеское наименование статуса фоновой проверки в истории фоновых проверок каталога заполнения\n  - `new` - Новый, \n  - `inWork` - В работе, \n  - `canceled` - Проверка отменена пользователем,\n  - `error` - Проверка не завершена: системная ошибка, \n  - `finishedSuccess` - Проверка завершена успешно,\n  - `finishedError` - Проверка завершена с ошибками.",
                  "required": false,
                  "schema": {
                      "description": "Технчиеское наименование статуса фоновой проверки в истории фоновых проверок каталога заполнения\n  - `new` - Новый, \n  - `inWork` - В работе, \n  - `canceled` - Проверка отменена пользователем,\n  - `error` - Проверка не завершена: системная ошибка, \n  - `finishedSuccess` - Проверка завершена успешно,\n  - `finishedError` - Проверка завершена с ошибками.",
                      "paramName": "status.tagId",
                      "paramIn": "unknown param type",
                      "required": false,
                      "schema": {
                          "description": "Технчиеское наименование статуса фоновой проверки в истории фоновых проверок каталога заполнения\n  - `new` - Новый, \n  - `inWork` - В работе, \n  - `canceled` - Проверка отменена пользователем,\n  - `error` - Проверка не завершена: системная ошибка, \n  - `finishedSuccess` - Проверка завершена успешно,\n  - `finishedError` - Проверка завершена с ошибками.",
                          "paramName": "status.tagId",
                          "paramIn": "unknown param type",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых элементов списка истории фоновых проверок (число от `1` до `1000`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/search",
      "method": "get",
      "methodDesc": "Поиск по списку сборных каталогов",
      "responses": {
          "description": "Успешный ответ. \nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. \nЕсли переданы несуществующие идентификаторы периодичности, статуса, то также возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор сборного каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор сборного каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование сборного каталога",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование сборного каталога",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Идентификаторы каталогов заполнения, которые являются источниками сборного каталога",
                  "required": false,
                  "schema": {
                      "description": "Идентификаторы каталогов заполнения, которые являются источниками сборного каталога",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Идентификаторы каталогов заполнения, которые являются источниками сборного каталога",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              },
              {
                  "paramName": "periodicity",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "periodicity",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "periodicity",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "periodicity.id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "periodicity.id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "periodicity.id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "periodicity.name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование периодичности обновления сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование периодичности обновления сборного каталога",
                      "paramName": "periodicity.name",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование периодичности обновления сборного каталога",
                          "paramName": "periodicity.name",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "periodicity.tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование периодичности обновления сборного каталога\n  - `daily` - Ежедневно\n  - `weekly` - Еженедельно",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование периодичности обновления сборного каталога\n  - `daily` - Ежедневно\n  - `weekly` - Еженедельно",
                      "paramName": "periodicity.tagId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование периодичности обновления сборного каталога\n  - `daily` - Ежедневно\n  - `weekly` - Еженедельно",
                          "paramName": "periodicity.tagId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "status",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "status",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "status.id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "status.id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "status.id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование cтатуса сборного каталога\n  - `inactive` - Неактивный\n  - `active` - Активный",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование cтатуса сборного каталога\n  - `inactive` - Неактивный\n  - `active` - Активный",
                      "paramName": "status.name",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование cтатуса сборного каталога\n  - `inactive` - Неактивный\n  - `active` - Активный",
                          "paramName": "status.name",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование статуса сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование статуса сборного каталога",
                      "paramName": "status.tagId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование статуса сборного каталога",
                          "paramName": "status.tagId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "lastRun",
                  "paramType": "unknown param type",
                  "description": "Дата последнего обновления сборного каталога. Если нет, возвращается пустая строка",
                  "required": true,
                  "schema": {
                      "description": "Дата последнего обновления сборного каталога. Если нет, возвращается пустая строка",
                      "paramName": "lastRun",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата последнего обновления сборного каталога. Если нет, возвращается пустая строка",
                          "paramName": "lastRun",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "nextRun",
                  "paramType": "unknown param type",
                  "description": "Дата следующего запуска сборного каталога. Если нет, возвращается пустая строка",
                  "required": true,
                  "schema": {
                      "description": "Дата следующего запуска сборного каталога. Если нет, возвращается пустая строка",
                      "paramName": "nextRun",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата следующего запуска сборного каталога. Если нет, возвращается пустая строка",
                          "paramName": "nextRun",
                          "paramIn": "",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `200`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке каталогов.\nПоиск производится по идентификатору и наименованию каталога.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname,\nlastRun,\nnextRun\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname,\nlastRun,\nnextRun\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `desc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          },
          {
              "paramName": "periodicity",
              "paramIn": "query",
              "paramType": "string[\ndaily,\nweekly\n]",
              "description": "Фильтр по периодичности обновления сборного каталога. Передается техническое наименование (тэг) периодичности.\nЕсли параметр не указан, возвращаются каталоги с любым значением периодичности обновления.",
              "required": false,
              "schema": {
                  "description": "Техническое наименование периодичности обновления сборного каталога\n  - `daily` - Ежедневно\n  - `weekly` - Еженедельно",
                  "paramName": "primitive param name",
                  "paramType": "string[\ndaily,\nweekly\n]"
              }
          },
          {
              "paramName": "status",
              "paramIn": "query",
              "paramType": "string[\ninactive,\nactive\n]",
              "description": "Фильтр по статусу сборного каталога. Передается техническое наименование (тэг) статуса.\nЕсли параметр не указан, возвращаются каталоги, находящиеся в любом статусе.",
              "required": false,
              "schema": {
                  "description": "Техническое наименование cтатуса сборного каталога\n  - `inactive` - Неактивный\n  - `active` - Активный",
                  "paramName": "primitive param name",
                  "paramType": "string[\ninactive,\nactive\n]"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs",
      "method": "post",
      "methodDesc": "Создание сборного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": [
          {
              "paramName": "settings",
              "paramIn": "string",
              "paramType": "unknown param type",
              "description": "Настройки сборного каталога в формате TOML",
              "required": true,
              "schema": {
                  "description": "Настройки сборного каталога в формате TOML",
                  "paramName": "settings",
                  "paramIn": "string",
                  "required": true,
                  "schema": {
                      "description": "Настройки сборного каталога в формате TOML",
                      "paramName": "settings",
                      "paramIn": "string",
                      "required": true
                  }
              }
          },
          {
              "paramName": "array",
              "paramType": "unknown param type",
              "description": "Информация о кастомных файлах-источниках",
              "required": false,
              "schema": {
                  "description": "Информация о кастомных файлах-источниках",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Информация о кастомных файлах-источниках",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          }
      ],
      "inputParams": []
  },
  {
      "path": "/accumulatedCatalogs/{catalogId}",
      "method": "put",
      "methodDesc": "Изменение настроек сборного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": [
          {
              "paramName": "settings",
              "paramIn": "string",
              "paramType": "unknown param type",
              "description": "Настройки сборного каталога в формате TOML",
              "required": true,
              "schema": {
                  "description": "Настройки сборного каталога в формате TOML",
                  "paramName": "settings",
                  "paramIn": "string",
                  "required": true,
                  "schema": {
                      "description": "Настройки сборного каталога в формате TOML",
                      "paramName": "settings",
                      "paramIn": "string",
                      "required": true
                  }
              }
          },
          {
              "paramName": "array",
              "paramType": "unknown param type",
              "description": "Информация о кастомных файлах-источниках",
              "required": false,
              "schema": {
                  "description": "Информация о кастомных файлах-источниках",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Информация о кастомных файлах-источниках",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          }
      ],
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/{catalogId}/settings",
      "method": "get",
      "methodDesc": "Получение сборных каталогов по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "settings",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Настройки сборного каталога в формате TOML",
                  "required": true,
                  "schema": {
                      "description": "Настройки сборного каталога в формате TOML",
                      "paramName": "settings",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Настройки сборного каталога в формате TOML",
                          "paramName": "settings",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Информация о кастомных файлах-источниках",
                  "required": false,
                  "schema": {
                      "description": "Информация о кастомных файлах-источниках",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Информация о кастомных файлах-источниках",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/validate",
      "method": "post",
      "methodDesc": "Валидация настроек сборного каталога",
      "responses": {
          "description": "Ошибки валидации сборного каталога",
          "schema": {
              "description": "Массив ошибок, обнаруженных при валидации сборного каталога",
              "paramName": "primitive param name",
              "paramType": "string"
          }
      },
      "requests": [
          {
              "paramName": "settings",
              "paramIn": "string",
              "paramType": "unknown param type",
              "description": "Настройки сборного каталога в формате TOML",
              "required": true,
              "schema": {
                  "description": "Настройки сборного каталога в формате TOML",
                  "paramName": "settings",
                  "paramIn": "string",
                  "required": true,
                  "schema": {
                      "description": "Настройки сборного каталога в формате TOML",
                      "paramName": "settings",
                      "paramIn": "string",
                      "required": true
                  }
              }
          },
          {
              "paramName": "array",
              "paramType": "unknown param type",
              "description": "Информация о кастомных файлах-источниках",
              "required": false,
              "schema": {
                  "description": "Информация о кастомных файлах-источниках",
                  "paramName": "Нет имени",
                  "paramIn": "",
                  "schema": {
                      "description": "Информация о кастомных файлах-источниках",
                      "paramName": "Нет имени",
                      "paramIn": ""
                  }
              }
          }
      ],
      "inputParams": []
  },
  {
      "path": "/accumulatedCatalogs/{catalogId}/history",
      "method": "get",
      "methodDesc": "Получение истории обновлений сборного каталога",
      "responses": {
          "description": "Успешный ответ. Если истории по переданному каталогу нет, возвращается пустой массив",
          "schema": [
              {
                  "paramName": "jobId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор процесса обновления",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор процесса обновления",
                      "paramName": "jobId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор процесса обновления",
                          "paramName": "jobId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateStart",
                  "paramType": "unknown param type",
                  "description": "Дата и время начала обновления каталога",
                  "required": true,
                  "schema": {
                      "description": "Дата и время начала обновления каталога",
                      "paramName": "dateStart",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Дата и время начала обновления каталога",
                          "paramName": "dateStart",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "dateEnd",
                  "paramType": "unknown param type",
                  "description": "Дата и время завершения обновления каталога",
                  "required": false,
                  "schema": {
                      "description": "Дата и время завершения обновления каталога",
                      "paramName": "dateEnd",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата и время завершения обновления каталога",
                          "paramName": "dateEnd",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "id",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор файла (uuid)",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор файла (uuid)",
                      "paramName": "id",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор файла (uuid)",
                          "paramName": "id",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "channelId",
                  "paramType": "unknown param type",
                  "description": "Идентификатор выхода сборного каталога.\n\nФормируется на основе технического наименования секции, описывающей выход в TOML-спецификации сборного каталога,\nа также на основе типа выхода (snapshot, delta).",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор выхода сборного каталога.\n\nФормируется на основе технического наименования секции, описывающей выход в TOML-спецификации сборного каталога,\nа также на основе типа выхода (snapshot, delta).",
                      "paramName": "channelId",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор выхода сборного каталога.\n\nФормируется на основе технического наименования секции, описывающей выход в TOML-спецификации сборного каталога,\nа также на основе типа выхода (snapshot, delta).",
                          "paramName": "channelId",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "",
                  "required": false,
                  "schema": {
                      "description": "",
                      "paramName": "status",
                      "paramIn": "object",
                      "schema": {
                          "description": "",
                          "paramName": "status",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "status.id",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Идентификатор статуса",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор статуса",
                      "paramName": "status.id",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор статуса",
                          "paramName": "status.id",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.name",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Наименование статуса обновления сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование статуса обновления сборного каталога",
                      "paramName": "status.name",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Наименование статуса обновления сборного каталога",
                          "paramName": "status.name",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "status.tagId",
                  "paramIn": "unknown param type",
                  "paramType": "unknown param type",
                  "description": "Техническое наименование статуса обновления сборного каталога\n  - `waiting` - Подготовка данных\n  - `loading` - Загрузка данных\n  - `processing` - Обработка объектов\n  - `resultUploading` - Подготовка итогового файла\n  - `finished` - Завершено\n  - `error` - Ошибка",
                  "required": true,
                  "schema": {
                      "description": "Техническое наименование статуса обновления сборного каталога\n  - `waiting` - Подготовка данных\n  - `loading` - Загрузка данных\n  - `processing` - Обработка объектов\n  - `resultUploading` - Подготовка итогового файла\n  - `finished` - Завершено\n  - `error` - Ошибка",
                      "paramName": "status.tagId",
                      "paramIn": "unknown param type",
                      "required": true,
                      "schema": {
                          "description": "Техническое наименование статуса обновления сборного каталога\n  - `waiting` - Подготовка данных\n  - `loading` - Загрузка данных\n  - `processing` - Обработка объектов\n  - `resultUploading` - Подготовка итогового файла\n  - `finished` - Завершено\n  - `error` - Ошибка",
                          "paramName": "status.tagId",
                          "paramIn": "unknown param type",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer",
              "description": "Количество возвращаемых элементов списка истории (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/{catalogId}/sourceExports",
      "method": "get",
      "methodDesc": "Получение истории выгрузок каталогов заполенения для сборного каталога",
      "responses": {
          "description": "Успешный ответ. Если истории по переданному каталогу нет, возвращается пустой массив",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer",
              "description": "Количество возвращаемых элементов списка истории (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/{catalogId}/status",
      "method": "put",
      "methodDesc": "Изменение статуса сборного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для изменения статуса сборного каталога",
          "schema": [
              {
                  "paramName": "status",
                  "paramType": "unknown param type",
                  "description": "Новый статус сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Новый статус сборного каталога",
                      "paramName": "status",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Новый статус сборного каталога",
                          "paramName": "status",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "periodicity",
                  "paramType": "unknown param type",
                  "description": "Новая периодичность обновления сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Новая периодичность обновления сборного каталога",
                      "paramName": "periodicity",
                      "paramIn": "",
                      "required": true,
                      "schema": {
                          "description": "Новая периодичность обновления сборного каталога",
                          "paramName": "periodicity",
                          "paramIn": "",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "nextRunDate",
                  "paramType": "unknown param type",
                  "description": "Плановая дата следующего обновления сборного каталога\n\nОбязательное поле, если новый статус - активный",
                  "required": false,
                  "schema": {
                      "description": "Плановая дата следующего обновления сборного каталога\n\nОбязательное поле, если новый статус - активный",
                      "paramName": "nextRunDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Плановая дата следующего обновления сборного каталога\n\nОбязательное поле, если новый статус - активный",
                          "paramName": "nextRunDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "run",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Необходим ли запуск построения сборного каталога после изменения статуса\n\nНе может быть true, если новый статус - неактивный",
                  "required": true,
                  "schema": {
                      "description": "Необходим ли запуск построения сборного каталога после изменения статуса\n\nНе может быть true, если новый статус - неактивный",
                      "paramName": "run",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Необходим ли запуск построения сборного каталога после изменения статуса\n\nНе может быть true, если новый статус - неактивный",
                          "paramName": "run",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/{catalogId}/run",
      "method": "get",
      "methodDesc": "Разовое построение сборного каталога для отладки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/accumulatedCatalogs/jobs",
      "method": "post",
      "methodDesc": "Создание процесса обновления сборного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса для регистрации процесса обновления сборного каталога.",
          "schema": [
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор сборного каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор сборного каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор сборного каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "jobId",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Идентификатор процесса обновления",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор процесса обновления",
                      "paramName": "jobId",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор процесса обновления",
                          "paramName": "jobId",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/accumulatedCatalogs/jobs/{jobId}",
      "method": "put",
      "methodDesc": "Регистрация выходных файлов по процессу обновления сборного каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Тело запроса с информацией о выходных файлах сборного каталога",
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": [
          {
              "paramName": "jobId",
              "paramIn": "path",
              "paramType": "string",
              "description": "Идентифкатор процесса обновления",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/auth/authUrl",
      "method": "get",
      "methodDesc": "Получение url страницы авторизации (в KeyCloack)",
      "responses": {
          "description": "Успешный ответ.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "redirectUrl",
              "paramIn": "query",
              "paramType": "string",
              "description": "Возвратный url (раздел, из которого пользователь запросил аутентификацию)",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/auth/token",
      "method": "get",
      "methodDesc": "Получение JWT-токена доступа ЕХД по коду авторизации KeyCloak",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "accessToken",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "JWT-токен",
                  "required": false,
                  "schema": {
                      "description": "JWT-токен",
                      "paramName": "accessToken",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "JWT-токен",
                          "paramName": "accessToken",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "refreshToken",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "JWT-токен",
                  "required": false,
                  "schema": {
                      "description": "JWT-токен",
                      "paramName": "refreshToken",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "JWT-токен",
                          "paramName": "refreshToken",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "authCode",
              "paramIn": "query",
              "paramType": "string",
              "description": "Код авторизации KeyCloack",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "redirectUrl",
              "paramIn": "query",
              "paramType": "string",
              "description": "Возвратный url (раздел, из которого пользователь запросил аутентификацию)",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/auth/refreshToken",
      "method": "post",
      "methodDesc": "Получение нового access- и refresh-токена доступа ЕХД по refresh-токену.",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "accessToken",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "JWT-токен",
                  "required": false,
                  "schema": {
                      "description": "JWT-токен",
                      "paramName": "accessToken",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "JWT-токен",
                          "paramName": "accessToken",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "refreshToken",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "JWT-токен",
                  "required": false,
                  "schema": {
                      "description": "JWT-токен",
                      "paramName": "refreshToken",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "JWT-токен",
                          "paramName": "refreshToken",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/auth/sessionCancel",
      "method": "get",
      "methodDesc": "Прекращение сеанса доступа пользователя из таблицы активных сессий",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "accessJwtIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов пользователей.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/auth/logout",
      "method": "get",
      "methodDesc": "Отзыв JWT-токена пользователя",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/auth/sessions/search",
      "method": "post",
      "methodDesc": "Получение активных сеансов пользователей",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке сеансов. Поиск производится по атрибутам `Логин`, `Фамилия`, `Имя`, `Отчество` и `e-mail`. Запрос со значением `Iva` вернет всех сессии пользователей, атрибуты которых содержат подстроку `Iva`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nlastName,\nfirstName,\npathroName,\nlogin,\nemail\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `firstName`, `lastName`, `pathroName` `login`, `email`.\n\nПо умолчанию: `login`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nlastName,\nfirstName,\npathroName,\nlogin,\nemail\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/auth/securityEvents/search",
      "method": "post",
      "methodDesc": "Поиск по логу событий безопасности",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": [
              {
                  "paramName": "userId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор пользователя, связанного с событием безопасности",
                  "required": false,
                  "schema": {
                      "description": "Идентификатор пользователя, связанного с событием безопасности",
                      "paramName": "userId",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Идентификатор пользователя, связанного с событием безопасности",
                          "paramName": "userId",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "login",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Логин пользователя, связанного с событием безопасности",
                  "required": false,
                  "schema": {
                      "description": "Логин пользователя, связанного с событием безопасности",
                      "paramName": "login",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Логин пользователя, связанного с событием безопасности",
                          "paramName": "login",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "lastName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Фамилия пользователя, связанного с событием безопасности",
                  "required": false,
                  "schema": {
                      "description": "Фамилия пользователя, связанного с событием безопасности",
                      "paramName": "lastName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Фамилия пользователя, связанного с событием безопасности",
                          "paramName": "lastName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "firstName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Имя пользователя, связанного с событием безопасности",
                  "required": false,
                  "schema": {
                      "description": "Имя пользователя, связанного с событием безопасности",
                      "paramName": "firstName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Имя пользователя, связанного с событием безопасности",
                          "paramName": "firstName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "pathroName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Отчество пользователя, связанного с событием безопасности",
                  "required": false,
                  "schema": {
                      "description": "Отчество пользователя, связанного с событием безопасности",
                      "paramName": "pathroName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Отчество пользователя, связанного с событием безопасности",
                          "paramName": "pathroName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "email",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Email пользователя, связанного с событием безопасности",
                  "required": false,
                  "schema": {
                      "description": "Email пользователя, связанного с событием безопасности",
                      "paramName": "email",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Email пользователя, связанного с событием безопасности",
                          "paramName": "email",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "eventDate",
                  "paramType": "unknown param type",
                  "description": "Дата и время события безопасности",
                  "required": false,
                  "schema": {
                      "description": "Дата и время события безопасности",
                      "paramName": "eventDate",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Дата и время события безопасности",
                          "paramName": "eventDate",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "eventTypeName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование типа события безопасности",
                  "required": false,
                  "schema": {
                      "description": "Наименование типа события безопасности",
                      "paramName": "eventTypeName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Наименование типа события безопасности",
                          "paramName": "eventTypeName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isAdmin",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Является ли пользователя администратором ЕХД",
                  "required": false,
                  "schema": {
                      "description": "Является ли пользователя администратором ЕХД",
                      "paramName": "isAdmin",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Является ли пользователя администратором ЕХД",
                          "paramName": "isAdmin",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "changedUser",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Информация об измененном пользователе.\nВозвращается для событий:\n  - `userCreate` - создание пользователя\n  - `userAccessChange` - изменение прав доступа пользователя\n  - `userBlock` - блокировка пользователя\n  - `userUnblock` - разблокировка пользователя\n  - `userDelete` - удаление пользователя\n  - `userRestore` - восстановление пользователя",
                  "required": false,
                  "schema": {
                      "description": "Информация об измененном пользователе.\nВозвращается для событий:\n  - `userCreate` - создание пользователя\n  - `userAccessChange` - изменение прав доступа пользователя\n  - `userBlock` - блокировка пользователя\n  - `userUnblock` - разблокировка пользователя\n  - `userDelete` - удаление пользователя\n  - `userRestore` - восстановление пользователя",
                      "paramName": "changedUser",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Информация об измененном пользователе.\nВозвращается для событий:\n  - `userCreate` - создание пользователя\n  - `userAccessChange` - изменение прав доступа пользователя\n  - `userBlock` - блокировка пользователя\n  - `userUnblock` - разблокировка пользователя\n  - `userDelete` - удаление пользователя\n  - `userRestore` - восстановление пользователя",
                          "paramName": "changedUser",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "accessChanges",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Изменения прав учетной записи пользователя, указанного в `changedUser`.\nВозвращается для события `userAccessChange` - изменение прав доступа пользователя.",
                  "required": false,
                  "schema": {
                      "description": "Изменения прав учетной записи пользователя, указанного в `changedUser`.\nВозвращается для события `userAccessChange` - изменение прав доступа пользователя.",
                      "paramName": "accessChanges",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Изменения прав учетной записи пользователя, указанного в `changedUser`.\nВозвращается для события `userAccessChange` - изменение прав доступа пользователя.",
                          "paramName": "accessChanges",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "dateFrom",
              "paramIn": "query",
              "paramType": "string",
              "description": "Дата начала периода, за который возвращаются события безопасности (формат dd.MM.YYYY).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "dateUntil",
              "paramIn": "query",
              "paramType": "string",
              "description": "Дата конца периода, за который возвращаются события безопасности (формат dd.MM.YYYY).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых событий (от `1` до `500`).",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "login",
              "paramIn": "query",
              "paramType": "string",
              "description": "Поиск по логину пользователя.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "eventType",
              "paramIn": "query",
              "paramType": "string[\nloginAttempt,\nlogin,\nlogout,\npasswordReset,\nsessionCancel,\nuserCreate,\nuserAccessChange,\nuserBlock,\nuserUnblock,\nuserDelete,\nuserRestore\n]",
              "description": "Фильтр по типам событий безопасности:\n  - `loginAttempt` - попытка входа\n  - `login` - вход в систему\n  - `logout` - выход из системы\n  - `passwordReset` - сброс пароля\n  - `sessionCancel` - системное преркащение сеанса\n  - `userCreate` - создание пользователя\n  - `userAccessChange` - изменение прав доступа пользователя\n  - `userBlock` - блокировка пользователя\n  - `userUnblock` - разблокировка пользователя\n  - `userDelete` - удаление пользователя\n  - `userRestore` - восстановление пользователя\n\nЕсли параметр не передан, возвращаются любые события.",
              "required": false,
              "schema": {
                  "description": "Техническое наименование типа события безопасности:\n  - `loginAttempt` - попытка входа\n  - `login` - вход в систему\n  - `logout` - выход из системы\n  - `passwordReset` - сброс пароля\n  - `sessionCancel` - системное преркащение сеанса\n  - `userCreate` - создание пользователя\n  - `userAccessChange` - изменение прав доступа пользователя\n  - `userBlock` - блокировка пользователя\n  - `userUnblock` - разблокировка пользователя\n  - `userDelete` - удаление пользователя\n  - `userRestore` - восстановление пользователя",
                  "paramName": "primitive param name",
                  "paramType": "string[\nloginAttempt,\nlogin,\nlogout,\npasswordReset,\nsessionCancel,\nuserCreate,\nuserAccessChange,\nuserBlock,\nuserUnblock,\nuserDelete,\nuserRestore\n]"
              }
          }
      ]
  },
  {
      "path": "/pushsubs/search",
      "method": "post",
      "methodDesc": "Получение списка подписок систем",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых подписок (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке подписок. Поиск производится по атрибутам `id`, `systemName`, `systemLogin` и `url`. ",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nsystemName,\nsystemLogin,\nurl\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `systemName`, `systemLogin` и `url`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nsystemName,\nsystemLogin,\nurl\n]"
              }
          },
          {
              "paramName": "status",
              "paramIn": "query",
              "paramType": "string[\ninactive,\nactive,\ntmpBlocked\n]",
              "description": "Фильтр по статусу подписки. Передается техническое наименование (тэг) статуса.\nЕсли параметр не указан, возвращаются подписки, находящиеся в любом статусе.",
              "required": false,
              "schema": {
                  "description": "Статус подписки:\n  - `active` - Активна\n  - `inactive` - Неактивна\n  - `tmpBlocked` - Временно заблокирована",
                  "paramName": "primitive param name",
                  "paramType": "string[\ninactive,\nactive,\ntmpBlocked\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/pushsubs",
      "method": "post",
      "methodDesc": "Создание подписки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/pushsubs",
      "method": "get",
      "methodDesc": "Получение подписок по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "subscriptionIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов подписок.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/pushsubs",
      "method": "delete",
      "methodDesc": "Удаление подписки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "subscriptionIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов подписок.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/pushsubs/{subscriptionId}",
      "method": "put",
      "methodDesc": "Изменение данных подписки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "subscriptionId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/pushsubs/{subscriptionId}/status",
      "method": "put",
      "methodDesc": "Изменение статуса подписки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "subscriptionId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "status",
              "paramIn": "query",
              "paramType": "string[\nactive,\ninactive\n]",
              "description": "Обновленный статус подписки",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nactive,\ninactive\n]"
              }
          }
      ]
  },
  {
      "path": "/pushsubs/{subscriptionId}/catalogs/search",
      "method": "post",
      "methodDesc": "Получение списка каталогов, входящих в подписку",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "subscriptionId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `100`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос в списке каталогов.             \nПоиск производится по полям `id`, `fullName`. \nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `id`, `fullName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "status",
              "paramIn": "query",
              "paramType": "string[\nactive,\ninactive\n]",
              "description": "Фильтр по статусу подписки каталога. Передается техническое наименование (тэг) статуса.\nЕсли параметр не указан, возвращаются каталоги, находящиеся в любом статусе.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nactive,\ninactive\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/pushsubs/{subscriptionId}/catalogs",
      "method": "post",
      "methodDesc": "Добавление каталогов в подписку",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Массив идентификаторов каталогов",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "subscriptionId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/pushsubs/{subscriptionId}/catalogs",
      "method": "delete",
      "methodDesc": "Удаление каталогов из подписки",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Массив идентификаторов каталогов",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "subscriptionId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/pushsubs/{subscriptionId}/catalogs/status",
      "method": "put",
      "methodDesc": "Изменение статуса подписки каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Primitive param description",
              "paramName": "primitive param name",
              "paramType": "integer"
          }
      },
      "inputParams": [
          {
              "paramName": "subscriptionId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписки.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "status",
              "paramIn": "query",
              "paramType": "string[\nactive,\ninactive\n]",
              "description": "Обновленный статус подписки каталогов. \nДля пользователя возможна установка статусов:\n\n- `inactive` - Неактивна\n- `active` - Активна",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nactive,\ninactive\n]"
              }
          }
      ]
  },
  {
      "path": "/geodata/validate",
      "method": "post",
      "methodDesc": "(внутр.) Первичная валидация геоданных объекта.",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "isValid",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, обозначающий результат валидации геоданных",
                  "required": true,
                  "schema": {
                      "description": "Признак, обозначающий результат валидации геоданных",
                      "paramName": "isValid",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Признак, обозначающий результат валидации геоданных",
                          "paramName": "isValid",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "typeGeo",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "typeGeo",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "typeGeo",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "reason",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Причина невалидности геоданных. Указывается строка, которую вернула функция ST_IsValidDetail",
                  "required": true,
                  "schema": {
                      "description": "Причина невалидности геоданных. Указывается строка, которую вернула функция ST_IsValidDetail",
                      "paramName": "reason",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Причина невалидности геоданных. Указывается строка, которую вернула функция ST_IsValidDetail",
                          "paramName": "reason",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "location",
                  "paramType": "unknown param type",
                  "description": "Местоположение (точка), в которой геоданные являются невалидными.",
                  "required": false,
                  "schema": {
                      "description": "Местоположение (точка), в которой геоданные являются невалидными.",
                      "paramName": "location",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Местоположение (точка), в которой геоданные являются невалидными.",
                          "paramName": "location",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "type",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                  "required": true,
                  "schema": {
                      "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                      "paramName": "type",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                          "paramName": "type",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "properties",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Дополнительные свойства для геоданных объекта",
                  "required": true,
                  "schema": {
                      "description": "Дополнительные свойства для геоданных объекта",
                      "paramName": "properties",
                      "paramIn": "object",
                      "schema": {
                          "description": "Дополнительные свойства для геоданных объекта",
                          "paramName": "properties",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "geometry",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Описание геометрии объекта",
                  "required": true,
                  "schema": {
                      "description": "Описание геометрии объекта",
                      "paramName": "geometry",
                      "paramIn": "object",
                      "schema": {
                          "description": "Описание геометрии объекта",
                          "paramName": "geometry",
                          "paramIn": "object"
                      }
                  }
              }
          ]
      },
      "inputParams": []
  },
  {
      "path": "/geodata/reprojection",
      "method": "post",
      "methodDesc": "(внутр.) Перепроецирование координат",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "type",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                  "required": true,
                  "schema": {
                      "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                      "paramName": "type",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                          "paramName": "type",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "properties",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Дополнительные свойства для геоданных объекта",
                  "required": true,
                  "schema": {
                      "description": "Дополнительные свойства для геоданных объекта",
                      "paramName": "properties",
                      "paramIn": "object",
                      "schema": {
                          "description": "Дополнительные свойства для геоданных объекта",
                          "paramName": "properties",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "geometry",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Описание геометрии объекта",
                  "required": true,
                  "schema": {
                      "description": "Описание геометрии объекта",
                      "paramName": "geometry",
                      "paramIn": "object",
                      "schema": {
                          "description": "Описание геометрии объекта",
                          "paramName": "geometry",
                          "paramIn": "object"
                      }
                  }
              }
          ]
      },
      "requests": {
          "schema": [
              {
                  "paramName": "type",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                  "required": true,
                  "schema": {
                      "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                      "paramName": "type",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Тип объекта GeoJSON. Всегда принимает значение Feature.",
                          "paramName": "type",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "properties",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Дополнительные свойства для геоданных объекта",
                  "required": true,
                  "schema": {
                      "description": "Дополнительные свойства для геоданных объекта",
                      "paramName": "properties",
                      "paramIn": "object",
                      "schema": {
                          "description": "Дополнительные свойства для геоданных объекта",
                          "paramName": "properties",
                          "paramIn": "object"
                      }
                  }
              },
              {
                  "paramName": "geometry",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Описание геометрии объекта",
                  "required": true,
                  "schema": {
                      "description": "Описание геометрии объекта",
                      "paramName": "geometry",
                      "paramIn": "object",
                      "schema": {
                          "description": "Описание геометрии объекта",
                          "paramName": "geometry",
                          "paramIn": "object"
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "sourceSrs",
              "paramIn": "query",
              "paramType": "string[\nEPSG:4326,\nMSK:77\n]",
              "description": "Входящая СК",
              "required": false,
              "schema": {
                  "description": "Система координат (пространственная система отсчёта - spatial reference system)",
                  "paramName": "primitive param name",
                  "paramType": "string[\nEPSG:4326,\nMSK:77\n]"
              }
          },
          {
              "paramName": "targetSrs",
              "paramIn": "query",
              "paramType": "string[\nEPSG:4326,\nMSK:77\n]",
              "description": "Исходящая СК",
              "required": false,
              "schema": {
                  "description": "Система координат (пространственная система отсчёта - spatial reference system)",
                  "paramName": "primitive param name",
                  "paramType": "string[\nEPSG:4326,\nMSK:77\n]"
              }
          }
      ]
  },
  {
      "path": "/geodata/tileEGKO/{z}/{x}/{y}.png",
      "method": "get",
      "methodDesc": "Получение тайлов ЕГКО",
      "responses": {
          "description": "Успешное получение тайла.",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "z",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Уровень масштабирования или зум. Доступно от 0 до 19.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "x",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Координата тайла по горизонтали (осевая координата).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          },
          {
              "paramName": "y",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Координата тайла по вертикали (осевая координата).",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/objectCategories/search",
      "method": "post",
      "methodDesc": "Поиск по списку категорий объектов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор категории объектов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор категории объектов",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор категории объектов",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "rusName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                      "paramName": "rusName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                          "paramName": "rusName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "enName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Англоязычное наименование категории объектов",
                  "required": false,
                  "schema": {
                      "description": "Англоязычное наименование категории объектов",
                      "paramName": "enName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Англоязычное наименование категории объектов",
                          "paramName": "enName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку категорий объектов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых категорий (число от `1` до `100`). По умолчанию `50`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "notUsedOnly",
              "paramIn": "query",
              "paramType": "boolean",
              "description": "Параметр, определяющий будут ли возвращены только те категории, которые не используются в других каталогах. По умолчанию: `false`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "boolean"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку категорий. Поиск производится по идентификатору `id` и наименованиям `rusName`, `enName`.\n\nЗапрос со значением `12` вернет все категории, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nrusName,\nenName\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `rusName`, `enName`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nrusName,\nenName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/objectCategories",
      "method": "get",
      "methodDesc": "Получение категорий объектов по идентификаторам",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор категории объектов",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор категории объектов",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор категории объектов",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "rusName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                      "paramName": "rusName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование категории объектов, должно быть уникальным",
                          "paramName": "rusName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "enName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Англоязычное наименование категории объектов",
                  "required": false,
                  "schema": {
                      "description": "Англоязычное наименование категории объектов",
                      "paramName": "enName",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Англоязычное наименование категории объектов",
                          "paramName": "enName",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "categoryIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов категорий объектов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/objectCategories",
      "method": "post",
      "methodDesc": "Создание категории объектов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": []
  },
  {
      "path": "/objectCategories",
      "method": "delete",
      "methodDesc": "Удаление категорий объектов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "categoryIds",
              "paramIn": "query",
              "paramType": "array",
              "description": "Список идентификаторов категорий объектов.\n\nЧисло элементов в списке от `1` до `100`.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          }
      ]
  },
  {
      "path": "/objectCategories/{categoryId}",
      "method": "put",
      "methodDesc": "Изменение информации о категории объектов",
      "responses": {
          "description": "Успешный ответ",
          "schema": []
      },
      "requests": {
          "description": "Some reference type",
          "paramName": "Unknown reference type param"
      },
      "inputParams": [
          {
              "paramName": "categoryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор категории объектов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          }
      ]
  },
  {
      "path": "/objectCategories/{categoryId}/catalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах, в которых используется категория объектов",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "catalogId",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "catalogId",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "catalogId",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "catalogName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Наименование каталога",
                      "paramName": "catalogName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Наименование каталога",
                          "paramName": "catalogName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "isCatalogDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Удален ли каталог",
                  "required": true,
                  "schema": {
                      "description": "Удален ли каталог",
                      "paramName": "isCatalogDeleted",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Удален ли каталог",
                          "paramName": "isCatalogDeleted",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых используется категория объектов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "categoryId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор категории объектов.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `catalogId` и `catalogName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор, наименование или название атрибута в которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "dataModes",
              "paramIn": "query",
              "paramType": "string",
              "description": "Технические наименования режимов работы с данными возвращаемых каталогов.\n\nИспользуется для фильтрации.\nВ параметре передается строка. Не может передаваться пустая строка.\n\nДопустимые значения:\n  - `filling` - заполнение;\n  - `publication` - публикация.\n\nПо умолчанию `filling`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "catalogStatuses",
              "paramIn": "query",
              "paramType": "array",
              "description": "Технические статусы возвращаемых каталогов.\n\nИспользуется для фильтрации.\nВ параметре передается массив строк, строка представляет собой ключевое слово.\nНе может передаваться пустой массив.\n\nДопустимые значения:\n  - `active` - активный;\n  - `deleted` - удаленный.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "array"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\ncatalogId,\ncatalogName\n]",
              "description": "Поле, по которому производится сортировка.\nДопустимые значения: `catalogId` и `catalogName`.\n\nПо умолчанию: `catalogId`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\ncatalogId,\ncatalogName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/oivs/{oivId}/NEWcatalogs/search",
      "method": "post",
      "methodDesc": "Получение информации о каталогах заполнения, в которых указана ОИВ",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "fullName",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Полное наименование каталога",
                  "required": true,
                  "schema": {
                      "description": "Полное наименование каталога",
                      "paramName": "fullName",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Полное наименование каталога",
                          "paramName": "fullName",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку каталогов, в которых указана ОИВ",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "oivId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор ОИВ.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку каталогов.\nПоиск производится по полям `id` и `fullName`.\nВ ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nfullName\n]",
              "description": "Поле, по которому производится сортировка.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nfullName\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/regexps/{regexId}/NEWattributes/search",
      "method": "post",
      "methodDesc": "Получение информации об атрибутах, в которых используется регулярное выражение",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор атрибута ЕХД",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор атрибута ЕХД",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор атрибута ЕХД",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "name",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Русскоязычное наименование атрибута",
                  "required": true,
                  "schema": {
                      "description": "Русскоязычное наименование атрибута",
                      "paramName": "name",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Русскоязычное наименование атрибута",
                          "paramName": "name",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "Пример тела запроса с фильтрами по списку атрибутов",
          "schema": [
              {
                  "paramName": "array",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "Нет имени",
                      "paramIn": "",
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "Нет имени",
                          "paramIn": ""
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "regexId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор регулярного выражения.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "limit",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "offset",
              "paramIn": "query",
              "paramType": "integer($int32)",
              "description": "Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\nПо умолчанию `0`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "search",
              "paramIn": "query",
              "paramType": "string",
              "description": "Текстовый поисковый запрос по списку атрибутов.\nПоиск производится по полям `id` и `name`.\nВ ответе будут представлены только те атрибуты, в указанных полях которых содержится поисковое значение.\n\nЗапрос со значением `12` вернет все атрибуты, идентификатор или наименование которых содержит подстроку `12`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          },
          {
              "paramName": "sortBy",
              "paramIn": "query",
              "paramType": "string[\nid,\nname\n]",
              "description": "Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n\nПо умолчанию: `id`.",
              "required": false,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string[\nid,\nname\n]"
              }
          },
          {
              "paramName": "orderBy",
              "paramIn": "query",
              "paramType": "Не найден тип",
              "description": "Порядок сортировки. Допустимые значения:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.\n\nПо умолчанию: `asc`.",
              "required": false,
              "schema": {
                  "paramName": "array",
                  "paramType": "Не найден тип",
                  "description": "Техническое название порядка сортировки:\n  - `asc` - по возрастанию;\n  - `desc` - по убыванию.",
                  "required": false,
                  "schema": [
                      {
                          "description": "Primitive param description",
                          "paramName": "primitive param name",
                          "paramType": "string[\nasc,\ndesc\n]"
                      }
                  ]
              }
          }
      ]
  },
  {
      "path": "/publicationCatalog/{catalogId}/versions",
      "method": "get",
      "methodDesc": "Получение версий каталога публикации",
      "responses": {
          "description": "Успешный ответ.",
          "schema": [
              {
                  "paramName": "versionNum",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Номер версии настроек каталога публикации",
                  "required": false,
                  "schema": {
                      "description": "Номер версии настроек каталога публикации",
                      "paramName": "versionNum",
                      "paramIn": "integer",
                      "required": false,
                      "schema": {
                          "description": "Номер версии настроек каталога публикации",
                          "paramName": "versionNum",
                          "paramIn": "integer",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dateFrom",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "dateFrom",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "dateFrom",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "dateUntil",
                  "paramType": "unknown param type",
                  "description": "Нет описания",
                  "required": false,
                  "schema": {
                      "description": "Нет описания",
                      "paramName": "dateUntil",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Нет описания",
                          "paramName": "dateUntil",
                          "paramIn": "",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/signatures/{signatureId}/log",
      "method": "get",
      "methodDesc": "Получение лога подписания каталога",
      "responses": {
          "description": "Успешный ответ",
          "schema": [
              {
                  "paramName": "log",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "ссылка на лог или csv файл (TODO)",
                  "required": true,
                  "schema": {
                      "description": "ссылка на лог или csv файл (TODO)",
                      "paramName": "log",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "ссылка на лог или csv файл (TODO)",
                          "paramName": "log",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "signatureId",
              "paramIn": "path",
              "paramType": "integer($int32)",
              "description": "Идентификатор подписания каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int32)"
              }
          },
          {
              "paramName": "catalogId",
              "paramIn": "query",
              "paramType": "integer($int64)",
              "description": "Идентификатор каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer($int64)"
              }
          }
      ]
  },
  {
      "path": "/fillerst/catalogs/{catalogId}/map",
      "method": "get",
      "methodDesc": "Получение настроек карты каталога заполнения",
      "responses": {
          "description": "Успешный ответ.",
          "schema": [
              {
                  "paramName": "hasGeo",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Наличие геопривязки в каталоге",
                  "required": true,
                  "schema": {
                      "description": "Наличие геопривязки в каталоге",
                      "paramName": "hasGeo",
                      "paramIn": "boolean",
                      "required": true,
                      "schema": {
                          "description": "Наличие геопривязки в каталоге",
                          "paramName": "hasGeo",
                          "paramIn": "boolean",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "typeGeoTagIds[index]",
                  "paramType": "unknown param type",
                  "description": "Типы геометрии в geojson",
                  "required": false,
                  "schema": {
                      "description": "Типы геометрии в geojson",
                      "paramName": "typeGeoTagIds[index]",
                      "paramIn": "",
                      "required": false,
                      "schema": {
                          "description": "Типы геометрии в geojson",
                          "paramName": "typeGeoTagIds[index]",
                          "paramIn": "",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isWGS84",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                  "required": false,
                  "schema": {
                      "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                      "paramName": "isWGS84",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n  - true, то СК - WGS84\n  - false, то СК - MSK77",
                          "paramName": "isWGS84",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isReq",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Обязательность геопривязки",
                  "required": false,
                  "schema": {
                      "description": "Обязательность геопривязки",
                      "paramName": "isReq",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Обязательность геопривязки",
                          "paramName": "isReq",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isOneTypeGeoForObj",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                  "required": false,
                  "schema": {
                      "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                      "paramName": "isOneTypeGeoForObj",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Признак, указывающий, что объект может иметь только один тип геометрии",
                          "paramName": "isOneTypeGeoForObj",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "isNotReqGeoForService",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Необязательность геометрии при загрузке через сервис",
                  "required": false,
                  "schema": {
                      "description": "Необязательность геометрии при загрузке через сервис",
                      "paramName": "isNotReqGeoForService",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Необязательность геометрии при загрузке через сервис",
                          "paramName": "isNotReqGeoForService",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": [
          {
              "paramName": "catalogId",
              "paramIn": "path",
              "paramType": "integer",
              "description": "Идентификатор сборного каталога.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "integer"
              }
          }
      ]
  },
  {
      "path": "/publrest/catalog/aggregate",
      "method": "post",
      "methodDesc": "Выполнение агрегирующего запроса",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.",
          "schema": []
      },
      "requests": {
          "schema": [
              {
                  "paramName": "id",
                  "paramIn": "integer",
                  "paramType": "unknown param type",
                  "description": "Идентификатор каталога публикации",
                  "required": true,
                  "schema": {
                      "description": "Идентификатор каталога публикации",
                      "paramName": "id",
                      "paramIn": "integer",
                      "required": true,
                      "schema": {
                          "description": "Идентификатор каталога публикации",
                          "paramName": "id",
                          "paramIn": "integer",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "aggregation",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Название агрегирующего запроса:\n  - CadastralCostSum - сумма кадастровой стоимости\n  - AreaSum - суммарная площадь\n  - CadastralCostAndAreaSum -  и сумма кадастровой стоимости и суммарная площадь",
                  "required": true,
                  "schema": {
                      "description": "Название агрегирующего запроса:\n  - CadastralCostSum - сумма кадастровой стоимости\n  - AreaSum - суммарная площадь\n  - CadastralCostAndAreaSum -  и сумма кадастровой стоимости и суммарная площадь",
                      "paramName": "aggregation",
                      "paramIn": "string",
                      "required": true,
                      "schema": {
                          "description": "Название агрегирующего запроса:\n  - CadastralCostSum - сумма кадастровой стоимости\n  - AreaSum - суммарная площадь\n  - CadastralCostAndAreaSum -  и сумма кадастровой стоимости и суммарная площадь",
                          "paramName": "aggregation",
                          "paramIn": "string",
                          "required": true
                      }
                  }
              },
              {
                  "paramName": "criteria",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях `near` и `inside`.",
                  "required": false,
                  "schema": {
                      "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях `near` и `inside`.",
                      "paramName": "criteria",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Условие для выборка элементов набора данных на языке запросов к ЕХД.\nДля параметра geoData используются функциях `near` и `inside`.",
                          "paramName": "criteria",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "epoch",
                  "paramIn": "string",
                  "paramType": "unknown param type",
                  "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DD",
                  "required": false,
                  "schema": {
                      "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DD",
                      "paramName": "epoch",
                      "paramIn": "string",
                      "required": false,
                      "schema": {
                          "description": "Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\nФормат даты - YYYY-MM-DD",
                          "paramName": "epoch",
                          "paramIn": "string",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "sorting",
                  "paramIn": "object",
                  "paramType": "unknown param type",
                  "description": "Параметры сортировки.",
                  "required": false,
                  "schema": {
                      "description": "Параметры сортировки.",
                      "paramName": "sorting",
                      "paramIn": "object",
                      "required": false,
                      "schema": {
                          "description": "Параметры сортировки.",
                          "paramName": "sorting",
                          "paramIn": "object",
                          "required": false
                      }
                  }
              },
              {
                  "paramName": "includeDeleted",
                  "paramIn": "boolean",
                  "paramType": "unknown param type",
                  "description": "Учитывать ли в выборке удаленные объекты.",
                  "required": false,
                  "schema": {
                      "description": "Учитывать ли в выборке удаленные объекты.",
                      "paramName": "includeDeleted",
                      "paramIn": "boolean",
                      "required": false,
                      "schema": {
                          "description": "Учитывать ли в выборке удаленные объекты.",
                          "paramName": "includeDeleted",
                          "paramIn": "boolean",
                          "required": false
                      }
                  }
              }
          ]
      },
      "inputParams": [
          {
              "paramName": "ehd-system",
              "paramIn": "header",
              "paramType": "string",
              "description": "Логин информационной системы.",
              "required": true,
              "schema": {
                  "description": "Primitive param description",
                  "paramName": "primitive param name",
                  "paramType": "string"
              }
          }
      ]
  },
  {
      "path": "/getCatalogList",
      "method": "post",
      "methodDesc": "Получение списка каталогов заполнения",
      "responses": {
          "description": "Успешный ответ.\nПри отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n\nЕсли у системы-потребителя отсутствует доступ к каким-либо каталогам, то также возвращается пустой массив.   ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/getCatalogSpec",
      "method": "post",
      "methodDesc": "Получение спецификации каталога заполнения",
      "responses": {
          "description": "Успешный ответ           ",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/getCatalogItems",
      "method": "post",
      "methodDesc": "Получение данных каталога заполнения",
      "responses": {
          "description": "Список id каталогов с общими данными",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/getCatalogStats",
      "method": "post",
      "methodDesc": "Получение статистики по каталогу заполнения",
      "responses": {
          "description": "Возможные варианты ответа:\n- Успешный ответ\n- Доступ к каталогу запрещен\n- Каталог не существует",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/getAllDict",
      "method": "post",
      "methodDesc": "Получение списка справочников",
      "responses": {
          "description": "Список id справочников с общими данными",
          "schema": []
      },
      "requests": {
          "description": "No description",
          "paramName": "No param name",
          "paramType": "No param type",
          "required": false,
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/getDictItem",
      "method": "post",
      "methodDesc": "Получение данных справочника",
      "responses": {
          "description": "Список значений справочника",
          "schema": []
      },
      "requests": {
          "schema": []
      },
      "inputParams": []
  },
  {
      "path": "/setSignatureCatalog",
      "method": "post",
      "methodDesc": "Подписание метаданных каталога",
      "responses": {
          "description": "Успешный ответ на запрос",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": []
  },
  {
      "path": "/setDataIn",
      "method": "post",
      "methodDesc": "Сохранение данных каталога",
      "responses": {
          "description": "Ответ при успешной обработке запроса",
          "schema": []
      },
      "requests": {
          "schema": {
              "description": "Нет описания",
              "paramName": "Нет имени",
              "paramIn": "",
              "schema": {
                  "description": "Нет описания",
                  "paramName": "Нет имени",
                  "paramIn": ""
              }
          }
      },
      "inputParams": []
  }
]