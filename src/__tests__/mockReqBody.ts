export const mockReqBody = [
  {
    "text": "# #TODO\n# Продумать описание примеров (для схем и ошибок)\n# Дополнить описание рекурсивных схем, добавить указание на название схемы (не отображается в браузере)\n# Зарефакторить параметры, тела запросов, примеры ошибок\n# Описать правила в readme\n# Разбить сложные объекты на отдельные схемы\n# Вынести неявные схемы в запросах в schemas\n\nopenapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов бэкэнда ЕХД 2.0.\n  version: 1.0.0\n\nservers:\n  - url: https://op-v2-test.mos.ru/api/v2\n  - url: https://op-v2-stage.mos.ru/api/v2\n  - url: https://op-v2.mos.ru/api/v2\n  - url: https://data-v2-test.mos.ru\n  - url: https://data-v2-stage.mos.ru\n  - url: https://data-v2.mos.ru\n\ncomponents:\n  securitySchemes:\n    basicAuth:\n      type: http\n      scheme: basic\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n\nsecurity:\n  - basicAuth: []\n  - bearerAuth: []\n\ntags:\n  - name: Общие ошибки API\n    description: Описание общих ошибок (не является методом)\n  - name: catalogs\n    description: Методы работы с каталогами заполнения\n  - name: publicationCatalogs\n    description: Методы работы с каталогами публикации\n  - name: catalogObjects\n    description: Методы работы с объектами и списком объектов каталогов заполнения\n  - name: publicationObjects\n    description: Методы работы с объектами и списком объектов каталогов публикации\n  - name: catalogGroups\n    description: Методы работы с группами каталогов\n  - name: attributes\n    description: Методы работы с атрибутами\n  - name: dictionaries\n    description: Методы работы со справочниками\n  - name: dictionaryElements\n    description: Методы работы с элементами справочника\n  - name: dictionaryExports\n    description: Методы работы с экспортами справочника\n  - name: regexps\n    description: Методы работы с регулярными выражениями\n  - name: searchIndexes\n    description: Методы работы с поисковыми индексами\n  - name: oivs\n    description: Методы работы с организациями/ОИВ, добавленными в ЕХД\n  - name: users\n    description: Методы работы с пользователями ЕХД\n  - name: thematicCategories\n    description: Методы работы с тематическими категориями, добавленными в ЕХД\n  - name: systems\n    description: Методы работы с системами, добавленными в ЕХД\n  - name: accumulatedCatalogs\n    description: Методы работы со сборными каталогами\n  - name: signatures\n    description: Методы работы с подписанием объектов и метаданных каталога\n  - name: publication\n    description: Методы работы с публикацией объектов\n  - name: files\n    description: Методы работы с файлами\n  - name: locks\n    description: Методы работы с блокировками\n  - name: imports\n    description: Методы работы с импортами каталогов заполнения\n  - name: exports\n    description: Методы работы с экспортами каталогов заполнения\n  - name: publicationExports\n    description: Методы работы с экспортами каталогов публикации\n  - name: datasets\n    description: Методы для работы с наборами данных\n  - name: fillrest\n    description: Методы внешнего REST API для работы с каталогами заполнения\n  - name: publrest\n    description: Методы внешнего REST API для работы с каталогами публикации\n  - name: auth\n    description: Методы GateWay для аутентификации пользователей\n  - name: soap\n    description: Методы внешнего SOAP API для работы с каталогами заполнения\n# Методы\npaths:\n\n  # Псевдо-методы\n  /Общие ошибки API:\n    $ref: './domains/_common.yaml#/paths/~1Общие ошибки API'\n\n  # Каталоги заполнения\n  /catalogs/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1search'\n\n  /catalogs/lite/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1lite~1search'\n\n  /catalogs:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs'\n\n  /catalogs/{catalogId}:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}'\n\n  /catalogs/{catalogId}/generalInfo:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1generalInfo'\n\n  /catalogs/{catalogId}/attributes:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1attributes'\n\n  /catalogs/{catalogId}/meta:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1meta'\n\n  /catalogs/lite/{catalogId}/attributes:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1lite~1{catalogId}~1attributes'\n\n  /catalogs/{catalogId}/userPrivileges:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1userPrivileges'\n\n  /catalogs/{catalogId}/constructor:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1constructor'\n\n  /catalogs/{catalogId}/constructorPackages:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1constructorPackages'\n\n  /catalogs/constructor/validate:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1constructor~1validate'\n\n  /catalogs/{catalogId}/conditionalUniq:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1conditionalUniq'\n\n  /catalogs/conditionalUniq/validate:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1conditionalUniq~1validate'\n\n  /catalogs/{catalogId}/groupUniq:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1groupUniq'\n\n  /catalogs/groupUniq/validate:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1groupUniq~1validate'\n\n  /catalogs/{catalogId}/map:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1map'\n\n  /catalogs/{catalogId}/status:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1status'\n\n  /catalogs/{catalogId}/refs:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1refs'\n\n  /catalogs/{catalogId}/catalogAttributes/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1catalogAttributes~1search'\n\n  /catalogs/{catalogId}/catalogPackages/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1catalogPackages~1search'\n\n  /catalogs/{catalogId}/catalogUniqs/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1catalogUniqs~1search'\n\n  /catalogs/{catalogId}/catalogGroups/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1catalogGroups~1search'\n\n  /catalogs/{catalogId}/publCatalogConditions/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1publCatalogConditions~1search'\n \n  /catalogs/{catalogId}/dictionaries/search:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1{catalogId}~1dictionaries~1search'\n\n  /catalogs/sequence:\n    $ref: './domains/catalogs.yaml#/paths/~1catalogs~1sequence'\n\n\n  # Каталоги публикации\n  /publicationCatalogs/search:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1search'\n\n  /publicationCatalogs/lite/search:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1lite~1search'\n\n  # /publicationCatalogs/duplicate:\n  #   $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1duplicate'\n\n  /publicationCatalogs:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs'\n\n  /publicationCatalogs/{catalogId}/checkConditionsChange:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1checkConditionsChange'\n\n  /publicationCatalogs/{catalogId}:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}'\n\n  /publicationCatalogs/{catalogId}/generalInfo:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1generalInfo'\n\n  /publicationCatalogs/{catalogId}/attributes:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1attributes'\n\n  /publicationCatalogs/lite/{catalogId}/attributes:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1lite~1{catalogId}~1attributes'\n\n  /publicationCatalogs/{catalogId}/userPrivileges:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1userPrivileges'\n\n  /publicationCatalogs/{catalogId}/meta:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1meta'\n\n  /publicationCatalogs/{catalogId}/systemPublicationSettings:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1systemPublicationSettings'\n\n  /publicationCatalogs/{catalogId}/sortings:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1sortings'\n\n  /publicationCatalogs/{catalogId}/publicationConditions:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1publicationConditions'\n\n  /publicationCatalogs/publicationConditions/validate:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1publicationConditions~1validate'\n\n  /publicationCatalogs/{catalogId}/map:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1map'\n\n  /publicationCatalogs/{catalogId}/status:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1status'\n\n  /publicationCatalogs/{catalogId}/access:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1access'\n\n  /publicationCatalogs/{catalogId}/publish:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1publish'\n\n  /publicationCatalogs/{catalogId}/versions:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1versions'\n\n  /publicationCatalogs/versions:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1versions'\n\n  /publicationCatalogs/syncProperties:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1syncProperties'\n  /publicationCatalogs/identNumber:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1identNumber'\n  /publicationCatalogs/{catalogId}/releases/search:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1releases~1search'\n  /publicationCatalogs/{catalogId}/releases:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1releases'\n  /publicationCatalogs/{catalogId}/releases/checkObjects:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1releases~1checkObjects'\n\n  /publicationCatalogs/{catalogId}/checkSettingsChange:\n    $ref: './domains/publicationCatalogs.yaml#/paths/~1publicationCatalogs~1{catalogId}~1checkSettingsChange'\n\n  # Объекты каталога заполнения\n  /catalogObjects/columns:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1columns'\n\n  /catalogObjects/search:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1search'\n\n  /catalogObjects/child/search:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1child~1search'\n\n  /catalogObjects:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects'\n\n  /catalogObjects/errors:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1errors'\n\n  /catalogObjects/editProperties:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1editProperties'\n\n  /catalogObjects/rollback:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1rollback'\n\n  /catalogObjects/recover:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1recover'\n\n  /catalogObjects/delete:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1delete'\n\n  /catalogObjects/clear:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1clear'\n\n  /catalogObjects/clear/{deletionId}/cancel:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1clear~1{deletionId}~1cancel'\n\n  /catalogObjects/clear/history:\n    $ref: './domains/catalogObjects.yaml#/paths/~1catalogObjects~1clear~1history'\n    \n  # Объекты каталога публикации\n  /publicationObjects/columns:\n    $ref: './domains/publicationObjects.yaml#/paths/~1publicationObjects~1columns'\n\n  /publicationObjects/search:\n    $ref: './domains/publicationObjects.yaml#/paths/~1publicationObjects~1search'\n\n  /publicationObjects/child/search:\n    $ref: './domains/publicationObjects.yaml#/paths/~1publicationObjects~1child~1search'\n\n  /publicationObjects:\n    $ref: './domains/publicationObjects.yaml#/paths/~1publicationObjects'\n\n  # Группы каталогов\n  /catalogGroups/search:\n    $ref: './domains/catalogGroups.yaml#/paths/~1catalogGroups~1search'\n\n  /catalogGroups:\n    $ref: './domains/catalogGroups.yaml#/paths/~1catalogGroups'\n\n  /catalogGroups/{catalogGroupId}:\n    $ref: './domains/catalogGroups.yaml#/paths/~1catalogGroups~1{catalogGroupId}'\n\n  /catalogGroups/{catalogGroupId}/catalogs/search:\n    $ref: './domains/catalogGroups.yaml#/paths/~1catalogGroups~1{catalogGroupId}~1catalogs~1search'\n\n  /catalogGroups/{catalogGroupId}/catalogs:\n    $ref: './domains/catalogGroups.yaml#/paths/~1catalogGroups~1{catalogGroupId}~1catalogs'\n\n  /catalogGroups/{catalogGroupId}/userSpecPrivileges/search:\n    $ref: './domains/catalogGroups.yaml#/paths/~1catalogGroups~1{catalogGroupId}~1userSpecPrivileges~1search'\n\n  # Атрибуты\n  /attributes/search:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1search'\n\n  /attributes:\n    $ref: './domains/attributes.yaml#/paths/~1attributes'\n\n  /attributes/{attributeId}:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1{attributeId}'\n\n  /attributes/{attributeId}/catalogs/search:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1{attributeId}~1catalogs~1search'\n\n  /attributes/{attributeId}/catalogAttributes/search:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1{attributeId}~1catalogAttributes~1search'\n\n  /attributes/{attributeId}/publicationCatalogAttributes/search:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1{attributeId}~1publicationCatalogAttributes~1search'\n\n  /attributes/groups:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1groups'\n\n  /attributes/groups/{groupId}:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1groups~1{groupId}'\n\n  /attributes/system/{systemId}:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1system~1{systemId}'\n\n  /attributes/types:\n    $ref: './domains/attributes.yaml#/paths/~1attributes~1types'\n\n\n  # Справочники\n  /dictionaries/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1search'\n\n  /dictionaries/aux/{auxDictTagId}:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1aux~1{auxDictTagId}'\n\n  /dictionaries/{dictionaryId}/columns:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1columns'\n\n  /dictionaries:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries'\n\n  /dictionaries/validate:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1validate'\n\n  /dictionaries/{dictionaryId}:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}'\n\n  /dictionaries/{dictionaryId}/attributes/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1attributes~1search'\n\n  /dictionaries/{dictionaryId}/catalogAttributes/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1catalogAttributes~1search'\n\n  /dictionaries/{dictionaryId}/publicationCatalogAttributes/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1publicationCatalogAttributes~1search'\n\n  /dictionaries/{dictionaryId}/searchIndexes/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1searchIndexes~1search'\n\n  /dictionaries/{dictionaryId}/childDictionaries/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1childDictionaries~1search'\n\n  /dictionaries/{dictionaryId}/catalogPackages/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1catalogPackages~1search'\n\n  /dictionaries/{dictionaryId}/catalogUniqs/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1catalogUniqs~1search'\n\n  /dictionaries/{dictionaryId}/publCatalogConditions/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaries~1{dictionaryId}~1publCatalogConditions~1search'\n\n  # Элементы справочников\n  /dictionaryElements/search:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryElements~1search'\n\n  /dictionaryElements/columns:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryElements~1columns'\n\n  /dictionaryElements:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryElements'\n\n  /dictionaryElements/{dictionaryElementId}:\n      $ref: './domains/dictionaries.yaml#/paths/~1dictionaryElements~1{dictionaryElementId}'\n\n  /dictionaryElements/recover:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryElements~1recover'\n\n  # Экспорты справочников\n  /dictionaryExports:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryExports'\n\n  /dictionaryExports/{exportId}/cancel:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryExports~1{exportId}~1cancel'\n\n  /dictionaryExports/history:\n    $ref: './domains/dictionaries.yaml#/paths/~1dictionaryExports~1history'\n\n  # Регулярные выражения\n  /regexps/search:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1search'\n\n  /regexps:\n    $ref: './domains/regexps.yaml#/paths/~1regexps'\n\n  /regexps/{regexId}:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}'\n\n  /regexps/{regexId}/attributes/search:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}~1attributes~1search'\n\n  /regexps/{regexId}/checkAttributes:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}~1checkAttributes'\n\n  /regexps/testString:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1testString'\n\n  /regexps/{regexId}/catalogAttributes/search:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}~1catalogAttributes~1search'\n\n  /regexps/{regexId}/catalogPackages/search:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}~1catalogPackages~1search'\n\n  /regexps/{regexId}/catalogUniqs/search:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}~1catalogUniqs~1search'\n\n  /regexps/{regexId}/publCatalogConditions/search:\n    $ref: './domains/regexps.yaml#/paths/~1regexps~1{regexId}~1publCatalogConditions~1search'\n\n  # Категории объектов\n  # /objectCategories/search:\n  #   $ref: './domains/objectCategories.yaml#/paths/~1objectCategories~1search'\n\n  # /objectCategories:\n  #   $ref: './domains/objectCategories.yaml#/paths/~1objectCategories'\n\n  # /objectCategories/{categoryId}:\n  #   $ref: './domains/objectCategories.yaml#/paths/~1objectCategories~1{categoryId}'\n\n  # /objectCategories/{categoryId}/catalogs/search:\n  #   $ref: './domains/objectCategories.yaml#/paths/~1objectCategories~1{categoryId}~1catalogs~1search'\n\n  # Поисковые индексы\n  /searchIndexes/search:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1search'\n\n  /searchIndexes:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes'\n\n  /searchIndexes/{indexId}:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1{indexId}'\n\n  /searchIndexes/{indexId}/catalogAttributes/search:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1{indexId}~1catalogAttributes~1search'\n\n  /searchIndexes/{indexId}/dictionary:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1{indexId}~1dictionary'\n\n  /searchIndexes/{indexId}/query:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1{indexId}~1query'\n\n  /searchIndexes/{indexId}/rebuild:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1{indexId}~1rebuild'\n\n  /searchIndexes/{indexId}/resendErrors:\n    $ref: './domains/searchIndexes.yaml#/paths/~1searchIndexes~1{indexId}~1resendErrors'\n\n  # ОИВы\n  /oivs/search:\n    $ref: './domains/oivs.yaml#/paths/~1oivs~1search'\n\n  /oivs:\n    $ref: './domains/oivs.yaml#/paths/~1oivs'\n\n  /oivs/{oivId}:\n    $ref: './domains/oivs.yaml#/paths/~1oivs~1{oivId}'\n\n  /oivs/{oivId}/catalogs/search:\n    $ref: './domains/oivs.yaml#/paths/~1oivs~1{oivId}~1catalogs~1search'\n\n  /oivs/{oivId}/publicationCatalogs/search:\n    $ref: './domains/oivs.yaml#/paths/~1oivs~1{oivId}~1publicationCatalogs~1search'\n\n  # /oivs/{oivId}/users/search:\n  #   $ref: './domains/oivs.yaml#/paths/~1oivs~1{oivId}~1users~1search'\n\n  /oivs/{oivId}/catalogGroups/search:\n    $ref: './domains/oivs.yaml#/paths/~1oivs~1{oivId}~1catalogGroups~1search'\n\n  /oivs/{oivId}/childOivs/search:\n    $ref: './domains/oivs.yaml#/paths/~1oivs~1{oivId}~1childOivs~1search'\n\n\n  # Пользователи\n  /users/search:\n    $ref: './domains/users.yaml#/paths/~1users~1search'\n\n  /users:\n    $ref: './domains/users.yaml#/paths/~1users'\n\n  /users/{userId}:\n    $ref: './domains/users.yaml#/paths/~1users~1{userId}'\n\n  /users/admins:\n    $ref: './domains/users.yaml#/paths/~1users~1admins'\n\n  /users/admins/{userId}:\n    $ref: './domains/users.yaml#/paths/~1users~1admins~1{userId}'\n\n  /users/block:\n    $ref: './domains/users.yaml#/paths/~1users~1block'\n\n  /users/recover:\n    $ref: './domains/users.yaml#/paths/~1users~1recover'\n\n  /users/{userId}/resetPassword:\n    $ref: './domains/users.yaml#/paths/~1users~1{userId}~1resetPassword'\n\n  /users/{userId}/specPrivileges/search:\n    $ref: './domains/users.yaml#/paths/~1users~1{userId}~1specPrivileges~1search'\n\n  /users/{userId}/specPrivileges:\n    $ref: './domains/users.yaml#/paths/~1users~1{userId}~1specPrivileges'\n\n  /users/specPrivileges:\n    $ref: './domains/users.yaml#/paths/~1users~1specPrivileges'\n\n  # Тематические категории\n  /thematicCategories/search:\n    $ref: './domains/thematicCategories.yaml#/paths/~1thematicCategories~1search'\n\n  /thematicCategories:\n    $ref: './domains/thematicCategories.yaml#/paths/~1thematicCategories'\n\n  /thematicCategories/{thematicCategoryId}:\n    $ref: './domains/thematicCategories.yaml#/paths/~1thematicCategories~1{thematicCategoryId}'\n\n  /thematicCategories/{thematicCategoryId}/catalogs/search:\n    $ref: './domains/thematicCategories.yaml#/paths/~1thematicCategories~1{thematicCategoryId}~1catalogs~1search'\n\n  /thematicCategories/{thematicCategoryId}/publicationCatalogs/search:\n    $ref: './domains/thematicCategories.yaml#/paths/~1thematicCategories~1{thematicCategoryId}~1publicationCatalogs~1search'\n\n  # Системы\n  /systems/search:\n    $ref: './domains/systems.yaml#/paths/~1systems~1search'\n\n  /systems:\n    $ref: './domains/systems.yaml#/paths/~1systems'\n\n  /systems/recover:\n    $ref: './domains/systems.yaml#/paths/~1systems~1recover'\n\n  /systems/{systemId}:\n    $ref: './domains/systems.yaml#/paths/~1systems~1{systemId}'\n\n  /systems/{systemId}/catalogs/search:\n    $ref: './domains/systems.yaml#/paths/~1systems~1{systemId}~1catalogs~1search'\n\n  /systems/{systemId}/publicationCatalogs/search:\n    $ref: './domains/systems.yaml#/paths/~1systems~1{systemId}~1publicationCatalogs~1search'\n\n  # Подписание\n  /signatures/{catalogId}/check:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}~1check'\n\n  /signatures/{catalogId}:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}'\n\n  /signatures/{catalogId}/hash:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}~1hash'\n\n  /signatures/{catalogId}/meta:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}~1meta'\n\n  /signatures/{catalogId}/meta/hash:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}~1meta~1hash'\n\n  /signatures/{catalogId}/signHistory:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}~1signHistory'\n\n  /signatures/{catalogId}/status:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1{catalogId}~1status'\n\n  /signatures/catalogObjects:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1catalogObjects'\n\n  /signatures/catalogObjects/check:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1catalogObjects~1check'\n\n  /signatures/catalogObjects/hash:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1catalogObjects~1hash'\n\n  /signatures/cancelCatalogSigning:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1cancelCatalogSigning'\n\n  /signatures/validate:\n    $ref: './domains/signatures.yaml#/paths/~1signatures~1validate'\n\n  # Публикация\n  /publication/queue/search:\n    $ref: './domains/publication.yaml#/paths/~1publication~1queue~1search'\n\n  /publication/queue/setPriority:\n    $ref: './domains/publication.yaml#/paths/~1publication~1queue~1setPriority'\n\n  /publication/queue/fill:\n    $ref: './domains/publication.yaml#/paths/~1publication~1queue~1fill'\n\n  # Файлы\n  /files:\n    $ref: './domains/files.yaml#/paths/~1files'\n\n  /files/getFilesInfo:\n    $ref: './domains/files.yaml#/paths/~1files~1getFilesInfo'\n\n  /files/{fileId}/download:\n    $ref: './domains/files.yaml#/paths/~1files~1{fileId}~1download'\n\n  /files/{fileId}/show:\n    $ref: './domains/files.yaml#/paths/~1files~1{fileId}~1show'\n\n  /files/textToFile:\n    $ref: './domains/files.yaml#/paths/~1files~1textToFile'\n\n  /files/fileToText:\n    $ref: './domains/files.yaml#/paths/~1files~1fileToText'\n\n  # Блокировки\n  /locks/search:\n    $ref: './domains/locks.yaml#/paths/~1locks~1search'\n\n  /locks:\n    $ref: './domains/locks.yaml#/paths/~1locks'\n\n  # Иипорты\n  /imports/uploadCSV:\n    $ref: './domains/imports.yaml#/paths/~1imports~1uploadCSV'\n\n  /imports:\n    $ref: './domains/imports.yaml#/paths/~1imports'\n\n  /imports/{importId}/cancel:\n    $ref: './domains/imports.yaml#/paths/~1imports~1{importId}~1cancel'\n\n  /imports/history:\n    $ref: './domains/imports.yaml#/paths/~1imports~1history'\n\n  # Экспорты\n  /exports:\n    $ref: './domains/exports.yaml#/paths/~1exports'\n  /exports/history:\n    $ref: './domains/exports.yaml#/paths/~1exports~1history'\n  /exports/{exportId}/cancel:\n    $ref: './domains/exports.yaml#/paths/~1exports~1{exportId}~1cancel'\n  /exports/{exportId}/settings:\n    $ref: './domains/exports.yaml#/paths/~1exports~1{exportId}~1settings'\n\n\n  /publicationExports:\n    $ref: './domains/publicationExports.yaml#/paths/~1publicationExports'\n  /publicationExports/history:\n    $ref: './domains/publicationExports.yaml#/paths/~1publicationExports~1history'\n  /publicationExports/{exportId}/cancel:\n    $ref: './domains/publicationExports.yaml#/paths/~1publicationExports~1{exportId}~1cancel'\n  /publicationExports/{exportId}/settings:\n    $ref: './domains/publicationExports.yaml#/paths/~1publicationExports~1{exportId}~1settings'\n\n  #Наборы данных\n  /datasets/search:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1search'\n  /datasets/lite/search:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1lite~1search'\n  /datasets:\n    $ref: './domains/datasets.yaml#/paths/~1datasets'\n  /datasets/{datasetId}/generalInfo: \n    $ref: './domains/datasets.yaml#/paths/~1datasets~1{datasetId}~1generalInfo'  \n  /datasets/{datasetId}:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1{datasetId}'\n  /datasets/{datasetId}/status:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1{datasetId}~1status'\n  /datasets/{datasetId}/versions:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1{datasetId}~1versions'\n  /datasets/{datasetId}/versions/{versionNum}/attributes:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1{datasetId}~1versions~1{versionNum}~1attributes'\n  /datasets/{datasetId}/versions/{versionNum}/releases:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1{datasetId}~1versions~1{versionNum}~1releases'\n  /datasets/season:\n    $ref: './domains/datasets.yaml#/paths/~1datasets~1season'\n\n\n  # Внешний REST\n  /fillrest/dictionaries:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1dictionaries'\n\n  /fillrest/dictionaryElements:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1dictionaryElements'\n\n  /fillrest/catalogs:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogs'\n\n  /fillrest/catalogs/{catalogId}/attributes:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogs~1{catalogId}~1attributes'\n\n  /fillrest/catalogs/{catalogId}/count:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogs~1{catalogId}~1count'\n\n  /fillrest/catalogObjects/search:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogObjects~1search'\n\n  /fillrest/catalogObjects/child/search:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogObjects~1child~1search'\n\n  /fillrest/catalogObjects:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogObjects'\n\n  /fillrest/catalogObjectsSign:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogObjectsSign'\n\n  /fillrest/async/catalogObjects:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1async~1catalogObjects'\n\n  /fillrest/async/catalogObjectsSign:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1async~1catalogObjectsSign'\n\n  /fillrest/async/{queueId}/status:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1async~1{queueId}~1status'\n\n  /fillrest/catalogSign/{catalogId}:\n    $ref: './domains/fillrest.yaml#/paths/~1fillrest~1catalogSign~1{catalogId}'\n\n  # REST API публикации\n  /publrest/catalog/list:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1list'\n  /publrest/catalog/get:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1get'\n  /publrest/catalog/get/features:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1get~1features'\n  /publrest/catalog/changes:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1changes'\n  /publrest/object/changes:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1object~1changes'\n  /publrest/catalog/count:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1count'\n  # /publrest/catalog/aggregate:\n  #   $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1aggregate'\n  /publrest/dictionary/get:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1dictionary~1get'\n  /publrest/MEDIA/getFile:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1MEDIA~1getFile'\n  /publrest/MEDIA/showFile:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1MEDIA~1showFile'\n  /publrest/catalog/export:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1export'\n  /publrest/catalog/export/get:\n    $ref: './domains/publrest.yaml#/paths/~1publrest~1catalog~1export~1get'\n\n   # SOAP API заполнения\n  /soap/getCatalogList:\n    $ref: './domains/soap.yaml#/paths/~1getCatalogList'\n  /soap/getCatalogSpec:\n    $ref: './domains/soap.yaml#/paths/~1getCatalogSpec'\n  /soap/getCatalogSpecNew:\n    $ref: './domains/soap.yaml#/paths/~1getCatalogSpecNew'\n  /soap/getCatalogItems:\n    $ref: './domains/soap.yaml#/paths/~1getCatalogItems'\n  /soap/getCatalogItemsNew:\n    $ref: './domains/soap.yaml#/paths/~1getCatalogItemsNew'\n  /soap/getCatalogStats:\n    $ref: './domains/soap.yaml#/paths/~1getCatalogStats'\n  /soap/getAllDict:\n    $ref: './domains/soap.yaml#/paths/~1getAllDict'\n  /soap/getDictItem:\n    $ref: './domains/soap.yaml#/paths/~1getDictItem'\n  /soap/getDictItemV2:\n    $ref: './domains/soap.yaml#/paths/~1getDictItemV2'\n  /soap/setSignatureCatalog:\n    $ref: './domains/soap.yaml#/paths/~1setSignatureCatalog'\n  /soap/setDataIn:\n    $ref: './domains/soap.yaml#/paths/~1setDataIn'\n\n  # Фоновые проверки\n  /backgroundChecks:\n    $ref: './domains/backgroundChecks.yaml#/paths/~1backgroundChecks'\n\n  /backgroundChecks/validate:\n    $ref: './domains/backgroundChecks.yaml#/paths/~1backgroundChecks~1validate'\n\n  /backgroundChecks/{backgroundCheckId}/cancel:\n    $ref: './domains/backgroundChecks.yaml#/paths/~1backgroundChecks~1{backgroundCheckId}~1cancel'\n\n  /backgroundChecks/reset:\n    $ref: './domains/backgroundChecks.yaml#/paths/~1backgroundChecks~1reset'\n\n  /backgroundChecks/history:\n    $ref: './domains/backgroundChecks.yaml#/paths/~1backgroundChecks~1history'\n\n\n  # Сборные каталоги\n  /accumulatedCatalogs/search:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1search'\n  /accumulatedCatalogs:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs'\n  /accumulatedCatalogs/{catalogId}:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}'\n  /accumulatedCatalogs/{catalogId}/settings:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1settings'\n  # /accumulatedCatalogs/{catalogId}/customCSV:\n  #   $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1customCSV'\n  /accumulatedCatalogs/validate:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1validate'\n  # /accumulatedCatalogs/uploadCSV:\n  #   $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1uploadCSV'\n  /accumulatedCatalogs/{catalogId}/history:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1history'\n  /accumulatedCatalogs/{catalogId}/sourceExports:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1sourceExports'\n  # /accumulatedCatalogs/{catalogId}/history/cancel:\n  #   $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1history~1cancel'\n  /accumulatedCatalogs/{catalogId}/status:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1status'\n  /accumulatedCatalogs/{catalogId}/run:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1run'\n  /accumulatedCatalogs/jobs:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1jobs'\n  /accumulatedCatalogs/jobs/{jobId}:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1jobs~1{jobId}'\n  /accumulatedCatalogs/sendPush:\n    $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1sendPush'\n  # /accumulatedCatalogs/{catalogId}/periodicity:\n  #   $ref: './domains/accumulatedCatalogs.yaml#/paths/~1accumulatedCatalogs~1{catalogId}~1periodicity'\n\n  # Аутентификация\n  /auth/authUrl:\n    $ref: './domains/auth.yaml#/paths/~1auth~1authUrl'\n  /auth/token:\n    $ref: './domains/auth.yaml#/paths/~1auth~1token'\n  /auth/refreshToken:\n    $ref: './domains/auth.yaml#/paths/~1auth~1refreshToken'\n  /auth/sessionCancel:\n    $ref: './domains/auth.yaml#/paths/~1auth~1sessionCancel'\n  /auth/logout:\n    $ref: './domains/auth.yaml#/paths/~1auth~1logout'\n  /auth/sessions/search:\n    $ref: './domains/auth.yaml#/paths/~1auth~1sessions~1search'\n  /auth/securityEvents/search:\n    $ref: './domains/auth.yaml#/paths/~1auth~1securityEvents~1search'\n  /auth/securityEvents/{eventId}/details:\n    $ref: './domains/auth.yaml#/paths/~1auth~1securityEvents~1{eventId}~1details'\n # Подписка на пуш-уведомления\n  /pushsubs/search:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs~1search'\n  /pushsubs:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs'\n  /pushsubs/{subscriptionId}:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs~1{subscriptionId}'\n  /pushsubs/{subscriptionId}/status:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs~1{subscriptionId}~1status'\n  /pushsubs/{subscriptionId}/catalogs/search:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs~1{subscriptionId}~1catalogs~1search'\n  /pushsubs/{subscriptionId}/catalogs:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs~1{subscriptionId}~1catalogs'\n  /pushsubs/{subscriptionId}/catalogs/status:\n    $ref: './domains/pushsubs.yaml#/paths/~1pushsubs~1{subscriptionId}~1catalogs~1status'\n\n  # Вспомогательные методы для работы с геоданными\n  /geodata/validate:\n    $ref: './domains/geodata.yaml#/paths/~1geodata~1validate'\n  /geodata/reprojection:\n    $ref: './domains/geodata.yaml#/paths/~1geodata~1reprojection'\n  /geodata/tileEGKO/{z}/{x}/{y}.png:\n    $ref: './domains/geodata.yaml#/paths/~1geodata~1tileEGKO~1{z}~1{x}~1{y}.png'  \n\n  # ОПОД - Отображение наборов данных\n  /odata/datasets/search:\n    $ref: './domains/odata.yaml#/paths/~1odata~1datasets~1search'\n  /odata/category/search:\n    $ref: './domains/odata.yaml#/paths/~1odata~1category~1search' \n  /odata/oiv/search:\n    $ref: './domains/odata.yaml#/paths/~1odata~1oiv~1search'\n  /odata/datasets/{datasetId}: \n    $ref: './domains/odata.yaml#/paths/~1odata~1datasets~1{datasetId}'\n  /odata/datasets/{datasetId}/versions:\n    $ref: './domains/odata.yaml#/paths/~1odata~1datasets~1{datasetId}~1versions'\n  /odata/datasets/{datasetId}/releases:\n    $ref: './domains/odata.yaml#/paths/~1odata~1datasets~1{datasetId}~1releases'  \n  /odata/datasets/{datasetId}/stat:\n    $ref: './domains/odata.yaml#/paths/~1odata~1datasets~1{datasetId}~1stat'\n  /odata/season:\n    $ref: './domains/odata.yaml#/paths/~1odata~1season'\n  /odata/sets:\n    $ref: './domains/odata.yaml#/paths/~1odata~1sets'\n  /odata/catalog/get:\n    $ref: './domains/odata.yaml#/paths/~1odata~1catalog~1get'\n  /odata/dictionary/get:\n    $ref: './domains/odata.yaml#/paths/~1odata~1dictionary~1get'                \n  /odata/MEDIA/showFile:\n    $ref: './domains/odata.yaml#/paths/~1odata~1MEDIA~1showFile'\n  /odata/MEDIA/getFile:\n    $ref: './domains/odata.yaml#/paths/~1odata~1MEDIA~1getFile'\n  /odata/files/getFilesInfo:\n    $ref: './domains/odata.yaml#/paths/~1odata~1files~1getFilesInfo'  \n\n  # Методы работы с внешними интеграциями\n  /integrations/history:\n    $ref: './domains/integrations.yaml#/paths/~1integrations~1history'\n  /integrations/{integrationId}/details:\n    $ref: './domains/integrations.yaml#/paths/~1integrations~1{integrationId}~1details'\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание общих компонентов\n  version: 1.0.0\n\n\npaths:\n  /Общие ошибки API:\n    get:\n      tags:\n        - Общие ошибки API\n      summary: Описание общих ошибок методов API\n      description: |-\n        Представленные ошибки являются общими и могут возникать во всех методах API.\n\n        В остальных методах описываются только ошибки бизнес-логики!\n      responses:\n        '400':\n          $ref: '#/components/responses/DefaultBadRequestResponse'\n        '405':\n          $ref: '#/components/responses/MethodNotAllowedResponse'\n        '408':\n          $ref: '#/components/responses/TimeoutResponse'\n        '500':\n          $ref: '#/components/responses/InternalServerErrorResponse'\n\n\ncomponents:\n\n  schemas:\n\n    # Общие форматы для схем по каталогам\n    # Формат dd.MM.YYYY\n    DateFormat:\n      type: string\n      pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n\n    # Формат dd.MM.YYYY hh:mm:ss\n    DateTimeFormat:\n      type: string\n      pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n\n    # Может содержать английские буквы, цифры и символы нижнего подчеркивания _. Должно начинаться с буквы\n    TechNameFormat:\n      type: string\n      pattern: '^[a-zA-Z][_a-zA-Z0-9]*$'\n\n    # Фильтры\n    BasicFilter:\n      description: Объект базового фильтра для запросов с фильтрацией по столбцам таблиц\n      type: object\n      properties:\n        attribute:\n          $ref: '#/components/schemas/FilterSortingAttribute'\n        operator:\n          description: |-\n            Оператор фильтрации:\n              - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n              Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник. Для дат сравнение просходит без учёта времени.\n              Значения передаются через точку с запятой `;`.\n              - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге. Для дат сравнение просходит без учёта времени.\n              - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат (без учёта времени).\n              - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат (без учёта времени).\n              - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат (без учёта времени).\n              - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат (без учёта времени).\n          allOf:\n            - $ref: '#/components/schemas/BasicFilterOperatorTagIdEnum'\n        value:\n          description: Значение для сравнения со значением атрибута при применении оператора\n          oneOf:\n            - type: string\n              description: Значение для фильтрации по строковому столбцу или дате\n            - type: integer\n              description: Значение для фильтрации по столбцу с целыми числами\n            - type: number\n              description: Значение для фильтрации по столбцу с дробными числами\n      required:\n        - attribute\n        - operator\n      example:\n        attribute: 'dateNextUpdate'\n        operator: 'greaterThan'\n        value: '01.02.2024 15:25:05'\n\n    Filter:\n      description: Объект расширенного фильтра для запросов с фильтрацией по столбцам таблиц\n      type: object\n      properties:\n        attribute:\n          $ref: '#/components/schemas/FilterSortingAttribute'\n        operator:\n          description: |-\n            Оператор фильтрации:\n              - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n              Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Для справочных атрибутов сравнение идет по выбранному столбцу справочника для вывода (defaultColDict), если такой атрибут не выбран, то по столбцу NAME.\n              - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n              Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник. Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Значения передаются через точку с запятой `;`.\n              - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n              Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Для справочных атрибутов сравнение идет по выбранному столбцу справочника для вывода (defaultColDict), если такой атрибут не выбран, то по столбцу NAME.\n              - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n              - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n              - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n              - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n              - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов. Является регистронезависимым.\n              Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Для справочных атрибутов сравнение идет по выбранному столбцу справочника для вывода (defaultColDict), если такой атрибут не выбран, то по столбцу NAME.\n              - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов. Является регистронезависимым.\n              Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Для справочных атрибутов сравнение идет по выбранному столбцу справочника для вывода (defaultColDict), если такой атрибут не выбран, то по столбцу NAME.\n              - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n              Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Для справочных атрибутов сравнение идет по выбранному столбцу справочника для вывода (defaultColDict), если такой атрибут не выбран, то по столбцу NAME.\n              - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n              Для ссылочных атрибутов сравнение идет по главному атрибуту ссылочного каталога.\n              Для справочных атрибутов сравнение идет по выбранному столбцу справочника для вывода (defaultColDict), если такой атрибут не выбран, то по столбцу NAME.\n              В `value` передается идентификатор регулярного выражения.\n              - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n              В `value` передается список идентификаторов элементов справочника.\n          allOf:\n            - $ref: '#/components/schemas/FilterOperatorTagIdEnum'\n        value:\n          description: Значение для сравнения со значением атрибута при применении оператора\n          oneOf:\n            - type: string\n              description: Значение для фильтрации по строковому столбцу или дате\n            - type: integer\n              description: Значение для фильтрации по столбцу с целыми числами\n            - type: number\n              description: Значение для фильтрации по столбцу с дробными числами\n            - type: array\n              description: Значение для фильтрации по идентификаторам в операторе `inDict`\n              items:\n                type: integer\n      required:\n        - attribute\n        - operator\n      example:\n        attribute: 'periodUpdate'\n        operator: 'greaterThan'\n        value: '01.02.2024 15:25:05'\n\n    FilterSortingAttribute:\n      description: |-\n        Техническое наименование столбца, по которому производится сортировка или фильтрация.\n\n        Для атрибутов каталога (при фильтрации по списку объектов) значение передается в следующем формате:\n          - \"field_{attrId}\" для каталога заполнения\n          - \"field_{catalogAttrId}\" для каталога публикации\n              - attrId - идентификатор атрибута в ЕХД\n              - catalogAttrId - идентификатор атрибута каталога\n      type: string\n\n    Sorting:\n      description: Объект сортировки, для запросов с многоуровневой сортировкой по таблице\n      type: object\n      properties:\n        attribute:\n          $ref: '#/components/schemas/FilterSortingAttribute'\n        order:\n          $ref: '#/components/schemas/SortingOrderTagIdEnum'\n      required:\n        - attribute\n        - order\n      example:\n        attribute: field_123\n        order: desc\n\n    # Схемы ответов\n    ApiResponse:\n      description: |-\n        Ответ на запрос в API\n\n        Используется для описания ошибок и базовых ответов (Ok, Created и пр.)\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: |-\n            Идентифкатор ресурса, для которого передан ответ\n\n            Возможные варианты использования:\n              - Идентификатор созданного ресурса в POST-запросе;\n              - Идентификатор ресурса, для которого возвращена ошибка.\n          type: integer\n          format: int32\n        code:\n          description: HTTP-код ошибки\n          type: integer\n          format: int32\n        messageType:\n          description: Тип ответа\n          type: string\n        message:\n          description: Текст ответа\n          type: string\n      required:\n        - code\n        - messageType\n        - message\n\n    OkResponse:\n      type: object\n      description: |-\n        Успешный ответ на запрос.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 200\n            messageType:\n              enum:\n                - Ok\n\n    CreatedResponse:\n      type: object\n      description: |-\n        Успешное создание объекта.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 201\n            messageType:\n              enum:\n                - Created\n\n    BadRequestError:\n      type: object\n      description: |-\n        Ошибка построения запроса или целостности переданных данных.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 400\n            messageType:\n              enum:\n                - Bad request\n\n    TooManyRequestsError:\n      type: object\n      description: |-\n        Превышен лимит запросов.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 400\n            messageType:\n              enum:\n                - Too Many Requests\n\n\n    UnauthorizedError:\n      type: object\n      description: |-\n        Ошибка аутентификации и/или авторизации.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 401\n            messageType:\n              enum:\n                - Unauthorized\n\n    ConflictError:\n      type: object\n      description: |-\n        Ошибка выполнения запроса из-за конфликта с состоянием данных на сервере.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 409\n            messageType:\n              enum:\n                - Conflict\n\n    MissingParamsError:\n      type: object\n      description: |-\n        Ошибка отсутствия обязательных параметров, заголовков или полей в запросе.\n\n        В тексте ошибки перечисляются названия обязательных параметров, заголовков или полей запроса.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n        - properties:\n            messageType:\n              enum:\n                - Missing parameter\n                - Missing header\n                - Missing request body fields\n\n    WrongTypeError:\n      type: object\n      description: |-\n        Неверный тип данных в параметрах, заголоках или полях запроса.\n\n        В тексте ошибки перечисляются названия параметров, заголовков или полей, для которых передано значение с неверным типом данных.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n        Текст ошибки также включает требуемый тип данных.\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n        - properties:\n            messageType:\n              enum:\n                - Parameter wrong type\n                - Header wrong type\n                - Request body field wrong type\n\n    OutOfScopeError:\n      type: object\n      description: |-\n        Переданное значение параметра, заголовка или поля не является допустимым.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны входить в список допустимых значений.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n\n        Возможные варианты возникновения ошибки:\n          - Параметр может принимать определенный перечень значений (enum'ы)\n          - Число должно принимать значение из интервала\n          - Дата должна принимать значение из интервала\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n        - properties:\n            messageType:\n              enum:\n                - Parameter field value out of scope\n                - Header value out of scope\n                - Request body field value out of scope\n                - Request body date value out of scope\n\n    WrongFormatError:\n      type: object\n      description: |-\n        Переданное значение параметра, заголовка или поля не соответствует формату.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны соответствовать определенному формату.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n\n        Возможные варианты возникновения ошибки:\n          - Строковое значение должно удовлетворять маске или регулярному выражению.\n          - Строковое значение должно быть определенной длины.\n          - Массив должен включать определенное число элементов.\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n        - properties:\n            messageType:\n              enum:\n                - Parameter format error\n                - Header format error\n                - Request body field format error\n\n    UniqueValueError:\n      type: object\n      description: |-\n        Ошибка уникальности значений поля.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны быть уникальными.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n      properties:\n        messageType:\n          enum:\n            - Unique value error\n\n    ResourceCannotBeDeletedError:\n      type: object\n      description: |-\n        Ресурс не может быть удален.\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n        - properties:\n            messageType:\n              enum:\n                - Resource cannot be deleted\n\n    ResourceCannotBeEditedError:\n      type: object\n      description: |-\n        Ресурс не может быть изменен.\n      allOf:\n        - $ref: '#/components/schemas/BadRequestError'\n        - properties:\n            messageType:\n              enum:\n                - Resource cannot be edited\n\n    NotFoundError:\n      type: object\n      description: |-\n        Запрошенный ресурс не найден.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 404\n            messageType:\n              enum:\n                - Resource not found\n                - Data not found\n\n    MethodNotAllowedError:\n      type: object\n      description: |-\n        Запрос не может быть выполнен с указанным методом.\n\n        В тексте ошибки перечисляются допустимые методы для запроса\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 405\n            messageType:\n              enum:\n                - Method not allowed\n\n    ForbiddenError:\n      type: object\n      description: |-\n        Нет прав на выполнение данного запроса.\n\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 403\n            messageType:\n              enum:\n                - Forbidden\n\n    TimeoutError:\n      type: object\n      description: |-\n        Истекло время ожидания ответа.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 408\n            messageType:\n              enum:\n                - Timeout\n\n    InternalServerError:\n      type: object\n      description: |-\n        Внутренняя ошибка сервера.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 500\n            messageType:\n              enum:\n                - Internal server error\n                - Database error\n\n\n    # Фильтры и сортировки\n    BasicFilterOperatorTagIdEnum:\n      description: Техническое название оператора базовой фильтрации\n      oneOf:\n        - type: string\n          enum:\n            - empty\n            - notEmpty\n            - contains\n            - inEnum\n            - equals\n            - greaterThan\n            - greaterOrEqualsThan\n            - lessThan\n            - lessOrEqualsThan\n\n    FilterOperatorTagIdEnum:\n      description: Техническое название оператора фильтрации\n      oneOf:\n        - type: string\n          enum:\n            - empty\n            - notEmpty\n            - contains\n            - inEnum\n            - equals\n            - greaterThan\n            - greaterOrEqualsThan\n            - lessThan\n            - lessOrEqualsThan\n            - startsWith\n            - endsWith\n            - matchesRegexStr\n            - matchesRegexId\n            - inDict\n\n    FilterOperatorNameEnum:\n      description: Название оператора фильтрации\n      oneOf:\n        - type: string\n          # enum:\n          #   - Только пустые значения\n          #   - Только непустые значения\n          #   - Содержит\n          #   - Перечисление (значения указываются через \";\" )\n          #   - Равно\n          #   - Больше\n          #   - Больше или равно\n          #   - Меньше\n          #   - Меньше или равно\n          #   - Начинается с\n          #   - Заканчивается на\n          #   - Соответствует регулярному выражению\n          #   - Соответствует регулярному выражению из списка\n          #   - Выбрать элементы\n\n    SortingOrderTagIdEnum:\n      description: |-\n        Техническое название порядка сортировки:\n          - `asc` - по возрастанию;\n          - `desc` - по убыванию.\n      oneOf:\n        - type: string\n          enum:\n            - asc\n            - desc\n\n\n\n  parameters:\n    offsetQueryParam:\n      name: offset\n      in: query\n      description: |-\n        Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n\n        По умолчанию `0`.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        default: 0\n        minimum: 0\n\n    orderByAscQueryParam:\n      name: orderBy\n      in: query\n      description: |-\n        Порядок сортировки. Допустимые значения:\n          - `asc` - по возрастанию;\n          - `desc` - по убыванию.\n\n        По умолчанию: `asc`.\n      required: false\n      schema:\n        default: asc\n        allOf:\n          - $ref: '#/components/schemas/SortingOrderTagIdEnum'\n\n    orderByDescQueryParam:\n      name: orderBy\n      in: query\n      description: |-\n        Порядок сортировки. Допустимые значения:\n          - `asc` - по возрастанию;\n          - `desc` - по убыванию.\n\n        По умолчанию: `desc`.\n      required: false\n      schema:\n        default: desc\n        allOf:\n          - $ref: '#/components/schemas/SortingOrderTagIdEnum'\n\n    filterOutIdsQueryParam:\n      name: filterOutIds\n      in: query\n      description: |-\n        Массив идентификаторов сущностей, которые необходимо исключить из общего списка.\n\n        Пример: окно со списком атрибутов ЕХД, доступных для добавления в каталог.\n        Необходимо исключить атрибуты, которые уже добавлены в каталог.\n\n        Число элементов в списке от `1` до `100`.\n      required: false\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n\n\n\n  responses:\n    DefaultBadRequestResponse:\n      description: |-\n        Ошибка построения запроса или целостности переданных данных.\n        Ошибка может быть в параметре, заголовке или полях тела запроса.\n        В зависимости от этого текст ошибки может отличаться.\n      content:\n        application/json:\n          schema:\n              oneOf:\n              - $ref: '#/components/schemas/MissingParamsError'\n              - $ref: '#/components/schemas/WrongTypeError'\n              - $ref: '#/components/schemas/OutOfScopeError'\n              - $ref: '#/components/schemas/WrongFormatError'\n          examples:\n            Не указан обязательный параметр:\n              $ref: '#/components/examples/MissingParameterError'\n            Неверный тип:\n              $ref: '#/components/examples/WrongTypeParameterError'\n            Значение не принадлежит определенному множеству:\n              $ref: '#/components/examples/OutOfScopeEnumError'\n            Значение не принадлежит определенному интервалу:\n              $ref: '#/components/examples/OutOfScopeMinMaxValueError'\n            Значение меньше минимального:\n              $ref: '#/components/examples/OutOfScopeMinValueError'\n            Значение больше максимального:\n              $ref: '#/components/examples/OutOfScopeMaxValueError'\n            Длина массива не соответсвует определенному интервалу:\n              $ref: '#/components/examples/WrongFormatMinMaxArrayLengthError'\n            Длина массива меньше минимального:\n              $ref: '#/components/examples/WrongFormatMinArrayLengthError'\n            Длина массива больше максимального:\n              $ref: '#/components/examples/WrongFormatMaxArrayLengthError'\n            Некорректный формат даты:\n              $ref: '#/components/examples/WrongFormatDateParameterError'\n\n\n    # Отрефакторить, когда появится система прав\n    MethodForbiddenResponse:\n      description: У пользователя нет прав на выполнение действия\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ForbiddenError'\n          examples:\n            Метод не может быть вызван:\n              $ref: '#/components/examples/ForbiddenError'\n\n    MethodNotAllowedResponse:\n      description: Запрос не может быть выполнен с указанным методом\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/MethodNotAllowedError'\n          examples:\n            Метод не может быть вызван:\n              $ref: '#/components/examples/MethodNotAllowedError'\n\n    TimeoutResponse:\n      description: Истекло время ожидания ответа.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/TimeoutError'\n          examples:\n            Таймаут:\n              $ref: '#/components/examples/TimeoutError'\n\n    InternalServerErrorResponse:\n      description: Внутренняя ошибка сервера\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/InternalServerError'\n          examples:\n            Внутренняя ошибка сервера:\n              $ref: '#/components/examples/InternalServerError'\n            Ошибка базы данных:\n              $ref: '#/components/examples/DatabaseError'\n\n    FilterBadRequestResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Переданный оператор не может быть применен для указанного атрибута (несоответствие типа).\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/OutOfScopeError'\n          examples:\n            Неверный оператор:\n              $ref: '#/components/examples/WrongFilterOperatorError'\n\n  examples:\n    MissingParameterError:\n      description: |-\n        Ошибка отсутствия обязательных параметров, заголовков или полей в запросе.\n\n        В тексте ошибки перечисляются названия обязательных параметров, заголовков или полей запроса.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Missing request body fields\n        message: >\n          В теле запроса отсутствует обязательное поле {fieldName}\n\n    WrongTypeParameterError:\n      description: |-\n        Неверный тип данных в параметрах, заголовках или полях запроса.\n\n        В тексте ошибки перечисляются названия параметров, заголовков или полей, для которых передано значение с неверным типом данных.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n        Текст ошибки также включает требуемый тип данных.\n      value:\n        code: 400\n        messageType: Request body field wrong type\n        message: >\n          Неверный тип данных в поле тела запроса {fieldName}. Поле {fieldName} должно иметь тип {dataType}.\n\n    OutOfScopeEnumError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не является допустимым.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны входить в список допустимых значений.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Parameter field value out of scope\n        message: >\n          Поле {parameterName} должно принимать одно из перечисленных значений: {enumLiterals}.\n\n    OutOfScopeMinMaxValueError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не является допустимым.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны входить в список допустимых значений.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          Поле {fieldName} должно принимать значение от {min} до {max} включительно.\n\n    OutOfScopeMinValueError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не является допустимым.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны входить в список допустимых значений.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          Поле {fieldName} не может быть меньше {min}.\n\n    OutOfScopeMaxValueError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не является допустимым.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны входить в список допустимых значений.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          Поле {fieldName} не может быть больше {max}.\n\n    WrongFormatMinMaxArrayLengthError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не соответствует формату.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны соответствовать определенному формату.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: >\n          Параметр {fieldName} должен содержать от {arrayMinLength} до {arrayMaxLength} элементов.\n\n    WrongFormatMinArrayLengthError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не соответствует формату.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны соответствовать определенному формату.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: >\n          Параметр {fieldName} не может содержать меньше {arrayMinLength} элементов.\n\n    WrongFormatMaxArrayLengthError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не соответствует формату.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны соответствовать определенному формату.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: >\n          Параметр {fieldName} не может содержать больше {arrayMaxLength} элементов.\n\n    WrongFormatDateParameterError:\n      description: |-\n        Переданное значение параметра, заголовка или поля не соответствует формату.\n\n        В тексте ошибки перечисляются названия полей, значения которых должны соответствовать определенному формату.\n        Название поля включает названия всех родительских объектов, если поле с ошибкой находится во вложенном объекте.\n        Для даты в тексте ошибки указывается допустимый один формат или пара DD.MM.YYYY или DD.MM.YYYY ЧЧ:ММ:СС\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: >\n          Неверный формат данных в параметре запроса {fieldName}. Значение должно представлять дату в формате DD.MM.YYYY\n\n    MethodNotAllowedError:\n      description: |-\n        Запрос не может быть выполнен с указанным методом. В тексте ошибки перечисляются допустимые методы для запроса.\n      value:\n        code: 405\n        messageType: Method not allowed\n        message: >\n          Метод {httpMethodName} недопустим. Допустимые методы: {allowedMethodNames}.\n\n    # Отрефакторить, когда появится система прав\n    ForbiddenError:\n      description: |-\n        Нет прав на выполнение данного запроса.\n      value:\n        code: 403\n        messageType: Forbidden\n        message: >\n          Метод {httpMethodName} недопустим.\n\n    TimeoutError:\n      description: |-\n        Истекло время ожидания ответа.\n      value:\n        code: 408\n        messageType: Timeout\n        message: >\n          Истекло время ожидания ответа.\n\n    InternalServerError:\n      description: |-\n        Внутренняя ошибка сервера. В тексте ошибки указывается подробная информация об ошибке с указанием возможного места проблемы.\n      value:\n        code: 500\n        messageType: Internal server error\n        message: >\n          Произошла ошибка при выполнении операции. Текст ошибки: {errorText}.\n\n    DatabaseError:\n      description: |-\n        Внутренняя ошибка сервера на стороне БД. В тексте ошибки указывается подробная информация об ошибке с указанием возможного места проблемы.\n      value:\n        code: 500\n        messageType: Database error\n        message: >\n          Произошла ошибка при выполнении операции в БД. Текст ошибки: {errorText}.\n\n    FilterSortingAttributeNotFoundError:\n      description: |-\n        Указанный в фильтре или сортировке атрибут не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Атрибут {attribute}, переданный в фильтре или сортировке, не существует в каталоге {catalogId}.\n\n    WrongFilterOperatorError:\n      description: |-\n        Переданный фильтр не может быть использован с атрибутом из-за несоответствия типов.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          Оператор фильтра {operator} не может быть использован с атрибутом {attribute}, так как он имеет тип {attributeType}. Данный оператор может быть использован с типами: {dataTypes}.\n\n\n\n\n  # Заголовки\n  headers:\n    X-Total-Count:\n      description: Общее число элементов, удовлетворяющих запросу, которые доступны через пагинацию\n      schema:\n        type: integer\n        format: int32\n        minimum: 0\n      required: true\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с каталогами заполнения\n  version: 1.0.0\n\n\npaths:\n  /catalogs/search:\n    post:\n      tags:\n      - catalogs\n      summary: Поиск по списку каталогов заполнения\n      description: |-\n        Возвращает список неудалённых каталогов, где по каждому каталогу содержится информация необходимая для отображения в разделах `Данные по ...`\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.\n            Поиск производится по атрибутам идентификатору и полному наименованию каталога.\n\n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - responsiblePerson\n              - countActiveObjects\n              - countUnsignedObjects\n              - countObjects\n              - dateLastSign\n              - dateNextUpdate\n              - statusSignObjects\n              - statusSignMetadata\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - name: statusSigning\n          in: query\n          required: false\n          description: |-\n            Статус подписания каталога. Может принимать следующие значения:\n              - `signed` - подписанный, изменения отсутствуют. Каталог имеет этот статус при выполнении условия:\n                statusSignObjects = signed И statusSignMetadata = signed\n              - `neverSigned` - ни разу не подписан. Каталог имеет этот статус при выполнении условия:\n                dateLastSign=null И statusSignObjects != archive\n              - `hasChange` - подписанный, имеются изменения. Каталог имеет этот статус при выполнении условия:\n                dateLastSign = {value} И (statusSignObjects = unsigned ИЛИ statusSignMetadata = unsigned)\n              - `archive` - в архиве. Каталог имеет этот статус при выполнении условия:\n                statusSignObjects = archive И statusSignMetadata = archive\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - signed\n                - neverSigned\n                - hasChange\n                - archive\n        - name: planSigning\n          in: query\n          required: false\n          description: |-\n            Статус просрочки подписания каталога. Может принимать следующие значения:\n              - `ok` - срок планового подписания не нарушен. Включает каталоги, для которых dateNextUpdate строго больше текущей даты ИЛИ является null.\n              - `less3Day` - до планового подписания менее 3-х дней. Вклячает каталоги, у которых dateNextUpdate меньше или равна текущей даты + 3 дня.\n              - `expired` - плановое подписание просрочено. Включает каталоги, для которых dateNextUpdate строго меньше текущей даты.\n          schema:\n            type: array\n            items:\n              type: string\n              enum:\n                - ok\n                - less3Day\n                - expired\n      requestBody:\n        $ref: '#/components/requestBodies/catalogListRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n            Если переданы несуществующие идентификаторы категории, ОИВ, системы-потребителя, то также возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FillingCatalogListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /catalogs/lite/search:\n    get:\n      tags:\n      - catalogs\n      summary: Поиск по списку каталогов заполнения с минимальным набором свойств\n      description: Возвращает список неудалённых каталогов заполнения с минимальным набором свойств (идентификатор и наименование)\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            default: 1000\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.\n            Поиск производится по полному наименованию каталога и является регистронезависимым.\n            Запрос со значением `тест` вернет все каталоги, полное наименование которых содержит подстроку `тест` независимо от регистра.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/forLinksCatalogQueryParam'\n        - $ref: '#/components/parameters/catalogGroupIdQueryParam'\n        - $ref: '#/components/parameters/userIdQueryParam'\n        - $ref: '#/components/parameters/subscriptionIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RefCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RefCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /catalogs:\n    post:\n      tags:\n        - catalogs\n      summary: Первичное сохранение каталога\n      description: |-\n        Метод используется при создании каталога заполнения.\n        При создании каталога необходимо обязательно заполнить общую информацию и атрибутивный состав.\n\n        Если при сохранении передаются настройки конструктора, условной или групповой уникальности,\n        то код проверок проходит валидацию.\n\n        В случае наличия ошибок в настройках каталога возвращается одна.\n\n        В результате сохранения каталога создаются соответствующие структуры для объектов каталога в БД заполнения.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FillingCatalogSettings'\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogSettingsRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogCreatedResponse'\n        '400':\n          $ref: '#/components/responses/FillingCatalogBadRequestErrors'\n        '404':\n          $ref: '#/components/responses/FillingCatalogEntitiesNotFoundError'\n    delete:\n      tags:\n        - catalogs\n      summary: Отметка каталога удалённым\n      description: |-\n        Метод используется для отметки удалёнными одного или нескольких каталогов.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogDeletedResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            Ошибка может быть в параметре, заголовке или полях тела запроса.\n            В зависимости от этого текст ошибки может отличаться.\n\n            ### Возможные ошибки бизнес-логики:\n              - Каталог находится в процессе импорта;\n              - Для каталога запущен процесс удаления всех объектов;\n              - Один или несколько из переданных каталогов используются в конструкторе проверок других каталогов заполнения;\n              - Один или несколько из переданных каталогов используются в настройках уникальности других каталогов заполнения;\n              - Один или несколько из переданных каталогов используются в ссылочных атрибутах других каталогов заполнения;\n              - Один или несколько из переданных каталогов используются в настройках ограничения выборки каталогов публикации;\n              - На основе одиного или нескольких из переданных каталогов созданы справочники.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Каталог находится в процессе импорта:\n                  $ref: '#/components/examples/CatalogInImportCantBeDeletedError'\n                Для каталога запущен процесс удаления всех объектов:\n                  $ref: '#/components/examples/CatalogInDeletionCantBeDeletedError'\n                Каталог используется в конструкторе проверок другого каталога заполнения:\n                  $ref: '#/components/examples/CatalogInCatalogPackagesCantBeDeletedError'\n                Каталог используется в настройках уникальностей другого каталога заполнения:\n                  $ref: '#/components/examples/CatalogInCatalogUniqCantBeDeletedError'\n                Каталог используется в ссылочном атрибуте другого каталога заполнения:\n                  $ref: '#/components/examples/CatalogInCatalogAttributesCantBeDeletedError'\n                Каталог используется в настройках ограничения выборки каталога публикации:\n                  $ref: '#/components/examples/CatalogInPublCatalogConditionsCantBeDeletedError'\n                На основе каталога создан справочник:\n                  $ref: '#/components/examples/CatalogInDictionaryCantBeDeletedError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует каталога с переданным идентификатором. Если передаётся массив каталогов, то ошибка выдаётся, если найден хотя бы 1 несуществующий каталог;\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Каталога не существует:\n                  $ref: '#/components/examples/FillingCatalogNotFoundError'\n\n  /catalogs/{catalogId}:\n    put:\n      tags:\n        - catalogs\n      summary: Изменение настроек каталога заполнения\n      description: |-\n        Изменяет настройки каталога заполения.\n\n        Настройки вкладок \"Общая информация\" и \"Атрибуты\" передаются всегда.\n        Остальные - только при изменении настроек.\n\n        Если при сохранении передаются настройки конструктора, условной или групповой уникальности,\n        то код проверок проходит валидацию.\n\n        В случае наличия ошибок в настройках каталога возвращается одна.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FillingCatalogSettings'\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogSettingsRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogEditedResponse'\n        '400':\n          $ref: '#/components/responses/FillingCatalogBadRequestErrors'\n        '404':\n          $ref: '#/components/responses/FillingCatalogEntitiesNotFoundError'\n\n  /catalogs/{catalogId}/generalInfo:\n    get:\n      tags:\n        - catalogs\n      summary: Получение общей информации каталога заполнения\n      description: |-\n        Возвращает общую информацию каталога заполнения для соответствующей вкладки в настройках каталога публикации.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FillingCatalogGeneralInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogGeneralInfoResponse'\n\n  /catalogs/{catalogId}/attributes:\n    get:\n      tags:\n        - catalogs\n      summary: Получение атрибутов каталога заполнения\n      description: |-\n        Возвращает атрибутивный состава каталога публикации для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FillingCatalogAttribute'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogAttributesResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/meta:\n    get:\n      tags:\n        - catalogs\n      summary: Получение метаданных каталога заполнения\n      description: |-\n        Возвращает метаданные каталога заполнения для соответствующей вкладки в настройках каталога заполнения.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FillingCatalogMetadata'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogMetadataResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n    put:\n      tags:\n        - catalogs\n      summary: Изменение метаданных каталога заполнения\n      description: |-\n        Изменяет метаданные каталога заполнения.\n\n        Используется для редактирования каталога пользователем, не являющимся суперпользователем.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/FillingCatalogMetadata'\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogMetadataRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Метаданные каталога изменены\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Email ответственного не прошел проверку на соответствие регулярному выражению;\n              - Каталог находится в процессе подписания;\n              - Каталог находится в процессе импорта;\n              - Для каталога запущен процесс удаления всех объектов.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Email ответственного не прошел проверку на соответствие регулярному выражению:\n                  $ref: '#/components/examples/InvalidRespPersonEmail'\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/SignedCatalogCannotBeEditedError'\n                Каталог находится в процессе импорта:\n                  $ref: '#/components/examples/CatalogInImportCantBeEditedError'\n                Для каталога запущен процесс удаления всех объектов:\n                  $ref: '#/components/examples/CatalogInDeletionCantBeEditedError'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n\n  /catalogs/lite/{catalogId}/attributes:\n    get:\n      tags:\n      - catalogs\n      summary: Получение списка атрибутов каталога заполенения с минимальным набором свойств\n      description: Возвращает список атрибутов заданного каталога заполнения с минимальным набором свойств (ответ включает только id и название).\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/forLinksCatalogAttributeQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ. Если атрибуты не найдены, например удовлетворяющие параметру forLinks, то отдаётся пустой список.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RefCatalogAttributeInfoWithAttrId'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RefCatalogAttributeInfoWithAttrIdArrayResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n\n  /catalogs/{catalogId}/userPrivileges:\n    get:\n      tags:\n      - catalogs\n      summary: Получение списка привилегий пользователя, доступных для данного каталога заполнения\n      description: Возвращает список технических наименований привилегий.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ. Если у пользователя нет доступа к каталогу, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                $ref: 'users.yaml#/components/schemas/UserPrivilegeFill'\n              examples:\n                Пример:\n                  value:\n                    canView : true\n                    canExport : true\n                    canEdit : true\n                    canSign : true\n                    canImport : true\n                    canEditMeta : true\n\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n\n  /catalogs/{catalogId}/constructor:\n    get:\n      tags:\n        - catalogs\n      summary: Получение настроек конструктора процессов каталога заполнения\n      description: |-\n        Возвращает настройки конструктора процессов в виде массива пакетов в форматах TOML и JSON.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConstructorPackageData'\n              # Добавить пример\n              # examples:\n              #   Пример:\n              #     $ref: 'constructor.yaml#/components/examples/ConstructorPackageDataResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/constructorPackages:\n    get:\n      tags:\n        - catalogs\n      summary: Получение пакетов конструктора процессов каталога заполнения\n      description: |-\n        Метод возвращает список пакетов конструктора каталога заполнения, включая главный пакет.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConstructorPackageCommonInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ConstructorPackageCommonInfoArrayResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n\n  /catalogs/constructor/validate:\n    post:\n      tags:\n        - catalogs\n      summary: Валидация настроек конструктора процессов\n      description: Производит валидацию настроек конструктора процессов, описанных в формате TOML\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                constructor:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ConstructorPackageData'\n                attributes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FillingCatalogAttributeForValidation'\n                map:\n                  type: object\n                  allOf:\n                    - $ref: '#/components/schemas/FillingCatalogMap'\n              required:\n                - constructor\n                - attributes\n                - map\n            examples:\n              Пример:\n                $ref: '#/components/examples/ConstructorValidationRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            Возвращаются настройки в формате json для работы с ними в веб-интерфейсе.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConstructorPackageData'\n        '400':\n          description: Ошибки валидации. В результате проверки должны быть найдены все ошибки, допущенные в описании настроек конструктора.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ConstructorValidationError'\n\n  /catalogs/{catalogId}/conditionalUniq:\n    get:\n      tags:\n        - catalogs\n      summary: Получение настроек условной уникальности каталога заполнения\n      description: |-\n        Возвращает настройки условной уникальности в виде строки с условием, составленным по правилам условий в конструкторе процессов  представленном в форматах TOML.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ. Если условие уникальности не настроено, то возвращается пустая строка\n          content:\n            text/plain:\n              schema:\n                description: Настройки условной уникальности в виде строки с условием, составленным по правилам условий в конструкторе процессов.\n                type: string\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogConditionalUniqResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n  /catalogs/conditionalUniq/validate:\n    post:\n      tags:\n        - catalogs\n      summary: Валидация настройки условной уникальности\n      description: |-\n        Производит валидацию условия описанного в настройках условной уникальности каталога.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                conditionalUniq:\n                  description: Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.\n                  type: string\n                attributes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FillingCatalogAttributeForValidation'\n              required:\n                - conditionalUniq\n                - attributes\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkFillingCatalogUniqValidateResponse'\n        '400':\n          description: Ошибки, обнаруженные при валидации настроек. В результате проверки должны быть найдены все ошибки, допущенные в описании настроек условной уникальности.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionalUniqValidationError'\n\n  /catalogs/{catalogId}/groupUniq:\n    get:\n      tags:\n        - catalogs\n      summary: Получение настроек групповой уникальности каталога заполнения\n      description: |-\n        Возвращает настройки условной уникальности в виде строки с условием, составленным по правилам условий в конструкторе процессов  представленном в форматах TOML.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ. Если настройка отсутствует, то возвращается пустой объект.\n          content:\n            text/plain:\n              schema:\n                  description: Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.\n                  type: string\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogGroupUniqTomlResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n  /catalogs/groupUniq/validate:\n    post:\n      tags:\n        - catalogs\n      summary: Валидация настройки групповой уникальности\n      description: |-\n        Производит валидацию настроек групповой уникальности каталога, описанных в формате toml.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                groupUniq:\n                  description: |-\n                    Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.\n                  type: string\n                attributes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/FillingCatalogAttributeForValidation'\n              required:\n                - groupUniq\n                - attributes\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkFillingCatalogUniqValidateResponse'\n        '400':\n          description: Ошибки, обнаруженные при валидации настроек. В результате проверки должны быть найдены все ошибки, допущенные в описании настроек групповой уникальности.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/GroupUniqValidationError'\n\n  /catalogs/{catalogId}/map:\n    get:\n      tags:\n        - catalogs\n      summary: Получение настроек карты каталога заполнения\n      description: |-\n        Возвращает настройки карты.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ.\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/FillingCatalogMap'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogMapResponse'\n        '404':\n          $ref: '#/components/responses/FillingCatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/status:\n    put:\n      tags:\n      - catalogs\n      summary: Изменение статуса каталога заполнения\n      description: Позволяет перевести каталог заполнения в архив или вывести из архива.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: archive\n          description: |-\n            Указывает на необходимость изменения статуса \"Архивный\" у каталога заполнения.\n              - `true` - присвоить каталогу статус \"Архивный\",\n              - `false` - убрать статус \"Архивный\" с каталога. Если в каталоге есть изменения в объектах или метаданных, то каталог переходит в статус \"Не подписано\". Если текущие данные каталога не имеют отличий от последних подписанных версий, то каталог переходит в статус \"Подписано\".\n          in: query\n          required: true\n          schema:\n            type: boolean\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Перевод в архив:\n                  $ref: '#/components/examples/FillingCatalogArchivedResponse'\n                Вывод из архива:\n                  $ref: '#/components/examples/FillingCatalogUnarchivedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Попытка перевести архивный каталог заполнения повторно в архив.\n              - Попытка вывести из архива неархивынй каталог.\n              - Попытка перевести в архив во время подписания каталога.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Перевод архивного каталога повторно в архив:\n                  $ref: '#/components/examples/FillingCatalogAlreadyArchivedError'\n                Вывод неархивного каталога из архива:\n                  $ref: '#/components/examples/FillingCatalogAlreadyUnarchivedError'\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/SignedFillingCatalogCannotBeArchivedError'\n\n  /catalogs/{catalogId}/refs:\n    post:\n      tags:\n      - catalogs\n      summary: Создание связи с каталогом публикации\n      description: Создает связную запись каталога заполнения с каталогом публикации.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - $ref: 'publicationCatalogs.yaml#/components/parameters/publicationCatalogIdQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogRef'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogRefRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Связь с каталогами создана\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n\n  # Связанные сущности каталога\n  /catalogs/{catalogId}/catalogAttributes/search:\n    post:\n      tags:\n        - catalogs\n      summary: Получение информации о каталогах и атрибутах, в которых используется каталог\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и атрибутах (ссылочных), в которых указан каталог заполнения.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n\n        Если атрибут используется в табличном атрибуте каталога, то выводится идентификатор и наименование основного каталога.\n        Остальные данные остаются неизменными (`attributeRusName`, `attributeEnName`).\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку атрибутов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется каталог заполнения\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'attributes.yaml#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogCatalogsAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/catalogPackages/search:\n    post:\n      tags:\n        - catalogs\n      summary: Получение информации о каталогах и конструкторах процессов, в которых используется каталог\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и конструкторах процессов, в которых используется каталог заполнения.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `fullName`, `packName`, `packTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `packName`, `packTechName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `packName`, `packTechName`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - packName\n              - packTechName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется каталог\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - packName\n                              - packTechName\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogPackageInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogCatalogPackageInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/catalogUniqs/search:\n    post:\n      tags:\n        - catalogs\n      summary: Получение информации о каталогах и настройках уникальностей, в которых используется каталог\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и настройках уникальностей, в которых используется каталог заполнения.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `fullName`, `uniqTypeTag`, `packTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - uniqTypeTag\n              - packTechName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых справочник используется в конструкторе проверок\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - uniqTypeTag\n                              - packTechName\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogUniqInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogCatalogUniqInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/catalogGroups/search:\n    post:\n      tags:\n        - catalogs\n      summary: Получение информации о группах каталогов, в которые входит каталог\n      description: |-\n        Возвращает информацию о неудаленных группах каталогов, в которые входит каталог заполнения.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id` и `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых групп каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку групп каталогов.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те группы каталогов, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все группы каталогов, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку групп каталогов, в которые входит каталог заполнения\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogCatalogGroupsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogGroups.yaml#/components/schemas/CommonCatalogGroupInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogCatalogGroupsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n\n  /catalogs/{catalogId}/publCatalogConditions/search:\n    post:\n      tags:\n        - catalogs\n      summary: Получение информации о каталогах публикации, в которых используется каталог\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации, в которых используется каталог в настройках ограничения выборки.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id` и `fullName`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов публикации, в которых используется каталог\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogPublCatalogConditionsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n  \n#  Метод на проверку - связанные сущности каталога заполнения - справочник на основе каталога\n  /catalogs/{catalogId}/dictionaries/search:\n    post:\n      tags:\n        - catalogs\n      summary: Получение информации о справочниках созданных на основе каталога\n      description: |-\n        Возвращает информацию о неудаленных справочниках, которые были созданы из выбранного каталога заполнения.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id` и `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых справочников (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку справочников.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те справочники, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все справочники, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id` и `name`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку справочников, созданных на основе каталога\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/FillingCatalogDictionariesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'dictionaries.yaml#/components/schemas/CommonDictionaryInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FillingCatalogDictionariesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogNotFoundResponse'\n\n\n  # Сборные каталоги\n  /catalogs/sequence:\n    get:\n      tags:\n        - catalogs\n      summary: Получение нового идентификатора каталога\n      description: |-\n        Возвращает незадействованных идентификатор каталога, метод необходим для работы сборных каталогов на стороне ПХОДД\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: integer\n              example:\n                241764\n\n\ncomponents:\n  schemas:\n    # Общее по каталогам\n    # ЗВС: вынес в заполнение, так как оно главнее\n    DataModeNameEnum:\n      description: Название режима работы с данными каталога\n      oneOf:\n        - type: string\n          # enum:\n          #   - Заполнение\n          #   - Публикация\n\n    DataModeTagIdEnum:\n      description: |-\n        Техническое наименование режима работы каталога:\n          - `filling` - Заполнение\n          - `publication` - Публикация\n      oneOf:\n        - type: string\n          enum:\n            - filling\n            - publication\n\n    CatalogTechStatusTagIdEnum:\n      description: |-\n        Технический статус каталога:\n          - `active` - Активный\n          - `deleted` - Удаленный\n      oneOf:\n        - type: string\n          enum:\n            - active\n            - deleted\n\n    CatalogKingNameEnum:\n      description: Название вида каталога\n      oneOf:\n        - type: string\n          # enum:\n          #   - Классификатор\n          #   - Справочник\n          #   - Перекодировочная таблица\n          #   - Реестр\n          #   - Номенклатура\n          #   - Перечень\n          #   - Список\n          #   - Словарь\n          #   - Тезаурус\n          #   - Рубрикатор\n          #   - Кодификатор\n          #   - Регистр\n          #   - Кадастр\n          #   - Иерархия\n          #   - Набор данных\n\n    CatalogTypeNameEnum:\n      description: Название типа каталога\n      oneOf:\n        - type: string\n          # enum:\n          #   - Городской межотраслевой (межведомственный)\n          #   - Городской отраслевой (ведомственный)\n          #   - Общегородской (общемосковский)\n          #   - Федеральный отраслевой (ведомственный)\n          #   - Общероссийский\n\n    BasicCatalogPeriodUpdateNameEnum:\n      description: Название периодичности обновления каталога\n      oneOf:\n        - type: string\n          # enum:\n          #   - Ежедневно\n          #   - Еженедельно\n          #   - Ежемесячно\n          #   - Ежеквартально\n          #   - Ежегодно\n\n    BasicCatalogPeriodUpdateTagIdEnum:\n      description: Техническое название периодичности обновления\n      oneOf:\n        - type: string\n          enum:\n            - daily\n            - weekly\n            - monthly\n            - quarterly\n            - yearly\n\n    CatalogPeriodUpdateNameEnum:\n      description: Название периодичности обновления каталога\n      oneOf:\n        - type: string\n          # enum:\n          #   - Ежедневно\n          #   - Еженедельно\n          #   - Ежемесячно\n          #   - Ежеквартально\n          #   - Ежегодно\n          #   - Ежеминутно\n          #   - Ежечасно\n          #   - Настраиваемая (произвольный срок)\n          #   - Настраиваемая (календарные дни)\n          #   - Множественная периодичность\n          #   - По мере поступления изменений из источников актуализации\n          #   - В режиме реального времени\n\n    CatalogPeriodUpdateTagIdEnum:\n      description: Техническое название периодичности обновления\n      oneOf:\n        - type: string\n          enum:\n            - daily\n            - weekly\n            - monthly\n            - quarterly\n            - yearly\n            - minutely\n            - hourly\n            - numDays\n            - calendarDays\n            - multiple\n            - withChanges\n            - realTime\n\n    CatalogFilterOperatorTagIdEnum:\n      description: Техническое название оператора для фильтрации по списку каталогов\n      oneOf:\n        - type: string\n          enum:\n            - empty\n            - notEmpty\n            - contains\n            - inEnum\n            - equals\n            - greaterThan\n            - greaterOrEqualsThan\n            - lessThan\n            - lessOrEqualsThan\n            - inIds\n\n    CatalogFilter:\n      description: Объект фильтра по списку каталогов для запросов с фильтрацией по столбцам таблиц\n      type: object\n      properties:\n        attribute:\n          description: |-\n            Техническое название атрибута (столбца), по которому производится фильтрация.\n            Совпадает с названием поля объекта, который передается в теле ответа.\n          type: string\n        operator:\n          description: |-\n            Оператор фильтрации:\n              - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n              Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник. Для дат сравнение просходит без учёта времени.\n              Значения передаются через точку с запятой `;`.\n              - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге. Для дат сравнение просходит без учёта времени.\n              - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат (без учёта времени).\n              - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат (без учёта времени).\n              - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат (без учёта времени).\n              - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат (без учёта времени).\n              - `inIds` - сравнение по идентификаторам.\n                Используется для сравнения по пересечению с идентификаторами выбранных тематической категории,\n                ОИВов, периодичностей обновления, систем-поставщиков, систем-потребителей.\n          allOf:\n            - $ref: '#/components/schemas/CatalogFilterOperatorTagIdEnum'\n        value:\n          description: Значение для сравнения со значением атрибута при применении оператора\n          oneOf:\n            - type: string\n              description: Значение для фильтрации по строковому атрибуту или дате\n            - type: integer\n              description: Значение для фильтрации по целому числу\n            - type: number\n              description: Значение для фильтрации по дробному числу\n            - description: Значение для фильтрации по идентификаторам с оператором `inIds`\n              type: array\n              items:\n                type: integer\n      required:\n        - attribute\n        - operator\n      example:\n        attribute: 'dateNextUpdate'\n        operator: 'greaterThan'\n        value: '01.02.2024 15:25:05'\n\n    ResponsiblePersonInfo:\n      description: Информация об ответственном лице\n      type: object\n      properties:\n        fio:\n          description: ФИО ответсвенного лица\n          type: string\n        email:\n          description: Email ответсвенного лица\n          type: string\n        phone:\n          description: Телефон ответсвенного лица\n          type: string\n\n      required:\n        - fio\n        - email\n        - phone\n      example:\n        fio: Иванов Иван Иванович\n        email: ivanov@example.com\n        phone: + 7 (999) 11-22-333\n\n    CatalogKind:\n      description: Вид каталога\n      type: object\n      properties:\n        id:\n          description: Идентификатор вида каталога\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          $ref: '#/components/schemas/CatalogKingNameEnum'\n      required:\n        - id\n        - name\n\n    CatalogType:\n      description: Тип каталога\n      type: object\n      properties:\n        id:\n          description: Идентификатор типа каталога\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          $ref: '#/components/schemas/CatalogTypeNameEnum'\n      required:\n        - id\n        - name\n\n    FillingCatalogUpdatePeriodicity:\n      description: Периодичность обновления каталога заполнения\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/CatalogPeriodUpdateTagIdEnum'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/CatalogPeriodUpdateNameEnum'\n          readOnly: true\n        numDays:\n          description: Настройки периодичности обновления \"Настраиваемая (произвольный срок)\". Обязателен, если tagId = numDays.\n          type: integer\n        calendarDays:\n          description: Настройки периодичности обновления \"Настраиваемая (Календарные дни)\". Обязателен, если tagId = calendarDays.\n          type: array\n          items:\n            type: object\n            properties:\n              day:\n                description: День месяца в формате DD.MM\n                type: string\n                pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])$'\n          minItems: 1\n        isCheckLastDay:\n          description: Дополнительное свойство для периодичности обновления \"Ежемесячно\" - \"Обновлять не позднее последнего дня следующего месяца за месяцем последнего подписания\"\n          type: boolean\n        multiple:\n          description: Настройки периодичности обновления \"Множественная периодичность\". Обязателен, если tagId = multiple.\n          type: array\n          items:\n            type: object\n            properties:\n                tagId:\n                  $ref: '#/components/schemas/CatalogPeriodUpdateTagIdEnum'\n                name:\n                  allOf:\n                    - $ref: '#/components/schemas/CatalogPeriodUpdateNameEnum'\n                  readOnly: true\n                dateStart:\n                  description: Дата начала действия указанной периодичности. Используется формат DD.MM\n                  type: string\n                  pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])$'\n                numDays:\n                  description: Настройки периодичности обновления \"Настраиваемая (произвольный срок)\". Обязателен, если tagId = numDays.\n                  type: integer\n                calendarDays:\n                  description: Настройки периодичности обновления \"Настраиваемая (Календарные дни)\". Обязателен, если tagId = calendarDays.\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      day:\n                        description: День месяца в формате DD.MM\n                        type: string\n                        pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])$'\n                  minItems: 1\n                isCheckLastDay:\n                  description: Дополнительное свойство для периодичности обновления \"Ежемесячно\" - \"Обновлять не позднее последнего дня следующего месяца за месяцем последнего подписания\"\n                  type: boolean\n            required:\n                - tagId\n                - name\n                - dateStart\n          minItems: 1\n      required:\n        - tagId\n        - name\n\n    CommonCatalogInfo:\n      description: Общая информация о каталоге\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога\n          type: integer\n          readOnly: true\n        fullName:\n          description: Полное наименование каталога\n          type: string\n          minLength: 1\n      required:\n        - id\n        - fullName\n\n    CommonCatalogListItem:\n      description: Общая информация о каталоге, выводимая в списке каталогов (для заполнения и публикации)\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogInfo'\n      properties:\n        objectCategories:\n          description: Категории объектов каталога, перечисленные через запятую с пробелом\n          type: string\n        thematicCategory:\n          description: Тематическая категория каталога\n          type: string\n        oivs:\n          description: ОИВ, ответственные за наполнение каталога, перечисленные через запятую с пробелом\n          type: string\n        countActiveObjects:\n          description: |-\n            Количество активных объектов в каталоге.\n\n            Для заполнения считаются объекты со статусами:\n              - Подписанный,\n              - На изменении,\n              - На удалении.\n\n            Для публикации считаются неудаленные объекты.\n          type: integer\n        countObjects:\n          description: Общее количество объектов в каталоге\n          type: integer\n        systemsConsumers:\n          description: Системы-потребители каталога, перечисленные через запятую с пробелом\n          type: string\n        responsiblePerson:\n          description: Ответственный за каталог. Указывается ФИО, email, телефон через запятую с пробелом\n          type: string\n        #userPrivileges:\n          #$ref: 'users.yaml#/components/schemas/UserPrivilegeFill'\n      required:\n        - objectCategories\n        - thematicCategory\n        - oivs\n        - countActiveObjects\n        - countObjects\n        - systemsConsumers\n        - responsiblePerson\n\n    CommonCatalogGeneralInfo:\n      description: Общие параметры общей информации каталога\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogInfo'\n      properties:\n        technicalName:\n          description: Технологическое наименование каталога\n          type: string\n          minLength: 1\n        shortName:\n          description: Краткое наименование каталога\n          type: string\n          minLength: 1\n        kindCatalog:\n          description: Вид каталога\n          type: object\n          readOnly: true\n\n          allOf:\n            - $ref: '#/components/schemas/CatalogKind'\n        kindCatalogId:\n          description: Идентификатор вида каталога\n          type: integer\n          writeOnly: true\n\n        typeCatalog:\n          description: Тип каталога\n          type: object\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/CatalogType'\n        typeCatalogId:\n          description: Идентификатор типа каталога\n          type: integer\n          writeOnly: true\n        thematicCategory:\n          description: Тематическая категория каталога\n          type: object\n          allOf:\n            - $ref: 'thematicCategories.yaml#/components/schemas/CommonThematicCategoryInfo'\n          readOnly: true\n        thematicCategoryId:\n          description: Идентификатор тематической категории каталога\n          type: integer\n          writeOnly: true\n        objectCategories:\n          description: Категории объекта\n          type: array\n          items:\n            $ref: 'objectCategories.yaml#/components/schemas/ObjectCategory'\n          minItems: 1\n          readOnly: true\n        # objectCategoriesIds:\n        #   description: Список идентификаторов категорий объекта\n        #   type: array\n        #   items:\n        #     type: integer\n        #   minItems: 1\n        #   writeOnly: true\n        oivs:\n          description: Поставщики информации каталога (ответственные ОИВы)\n          type: array\n          items:\n            $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          minItems: 1\n          readOnly: true\n        oivsIds:\n          description: Список идентификаторов поставщиков информации каталога (ответственные ОИВы)\n          type: array\n          items:\n            type: integer\n          minItems: 1\n          writeOnly: true\n        accountingObject:\n          description: Объект учёта\n          type: string\n          minLength: 1\n        keywords:\n          description: Ключевые слова\n          type: string\n          minLength: 1\n        systemsConsumers:\n          description: Системы потребители данных каталога\n          type: array\n          items:\n            $ref: 'systems.yaml#/components/schemas/CommonSystemInfo'\n          readOnly: true\n\n        systemsConsumersIds:\n          description: Список идентификаторов систем потребителей данных\n          type: array\n          items:\n            type: integer\n          writeOnly: true\n\n        isShowDeleteObjects:\n          description: Признак \"Показывать удалённые объекты\"\n          type: boolean\n      required:\n        - technicalName\n        - shortName\n        - typeCatalog\n        - thematicCategory\n        - objectCategories\n        # - objectCategoriesIds\n        - oivs\n        - periodUpdateTagId\n        - isShowDeleteObjects\n\n    CommonCatalogMetadata:\n      description: Общие параметры метаданных каталога\n      type: object\n      properties:\n        respPersonFIO:\n          description: ФИО ответственного за каталог\n          type: string\n\n        respPersonEmail:\n          description: Адрес электронной почты ответственного за каталог\n          type: string\n\n        respPersonPhone:\n          description: Телефон ответственного за каталог\n          type: string\n\n        description:\n          description: Описание каталога\n          type: string\n\n\n    CommonCatalogAttributeWithDefaultValue:\n      type: object\n      description: Свойство атрибута \"Значение по умолчанию\"\n      properties:\n        defaultValue:\n          description: Значение атрибута по умолчанию\n          type: string\n\n\n    CommonCatalogAttributeWithFieldMask:\n      description: Информация об атрибуте с маской ввода\n      type: object\n      properties:\n        fieldMask:\n          description: |-\n            Маска ввода, которой должно соответствовать значение атрибута. Обозначения:\n              - X - любые буквы,\n              - 0 - любые цифры.\n          type: string\n\n\n    CommonCatalogAttributeWithNumber:\n      description: Информация о числовом атрибуте\n      type: object\n      properties:\n        isPositive:\n          description: Признак, что значение может быть только положительным числом\n          type: boolean\n        maxLength:\n          description: Максимальное количество знаков целой части числа\n          type: integer\n          minimum: 1\n          maximum: 38\n      required:\n        - isPositive\n        - maxLength\n\n    CommonCatalogAttributeWithDecimalPart:\n      description: Свойство атрибута \"Количество знаков после запятой\"\n      type: object\n      properties:\n        maxLengthDecimal:\n          description: Максимальное количество знаков после запятой\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 38\n      required:\n        - maxLengthDecimal\n\n    CommonCatalogAttributeWithTime:\n      description: Свойство атрибута \"Дата и время\"\n      type: object\n      properties:\n        isTime:\n          description: Признак, который указывает на необходимость добавления временной метки к дате\n          type: boolean\n      required:\n        - isTime\n\n    CommonCatalogAttributeWithFieldRegex:\n      description: Информация об атрибуте с регулярным выражением\n      type: object\n      properties:\n        fieldRegexId:\n          description: Идентификатор регулярного выражения, которому должно соответствовать значение атрибута\n          type: integer\n          format: int32\n\n          writeOnly: true\n        fieldRegex:\n          description: Регулярное выражение, которому должно соответствовать значение атрибута\n          type: object\n          readOnly: true\n\n          allOf:\n            - $ref: 'regexps.yaml#/components/schemas/CommonRegularExpressionInfo'\n\n    CommonCatalogAttributeWithSearchIndex:\n      description: Информация об атрибуте с поисковым индексом\n      type: object\n      properties:\n        searchIndexId:\n          description: Идентификатор поискового индекса, которому должно соответствовать значение атрибута\n          type: integer\n          format: int32\n\n          writeOnly: true\n        searchIndex:\n          description: Индекс, используемый для полнотекстового поиска при заполнении атрибута\n          type: object\n          allOf:\n            - $ref: 'searchIndexes.yaml#/components/schemas/CommonSearchIndexInfo'\n\n          readOnly: true\n\n    CommonCatalogAttributeWithMultipleValues:\n      description: Информация об атрибуте с множественным значением\n      type: object\n      properties:\n        isMultiple:\n          description: Указывает, что атрибут может содержать несколько значений одновременно\n          type: boolean\n        maxCntElement:\n          description: Максимально допустимое количество элементов, которое возможно добавить в рамках атрибута\n          type: integer\n\n          minimum: 1\n        minCntElement:\n          description: Минимальное количество элементов, которое должно быть добавлено в атрибут\n          type: integer\n\n          minimum: 0\n      required:\n        - isMultiple\n\n    CommonCatalogAttribute:\n      description: Общая информация об атрибуте каталога\n      type: object\n      properties:\n        attribute:\n          readOnly: true\n          description: Информация об атрибуте ЕХД\n          type: object\n          allOf:\n            - $ref: 'attributes.yaml#/components/schemas/CommonAttribute'\n        attrId:\n          writeOnly: true\n          description: Идентификатор атрибута ЕХД\n          type: integer\n        catalogAttrId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          readOnly: true\n        selectedAlterNameId:\n          description: Идентификатор выбранного альтернативного наименования атрибута в каталоге\n          type: integer\n\n        order:\n          description: Порядковый номер атрибута в каталоге\n          type: integer\n        isMain:\n          description: Свойство, что атрибут считается главным при связывании с другими каталогами\n          type: boolean\n      required:\n        - attribute\n        - attrId\n        - catalogAttrId\n        - order\n        - isMain\n\n    RefCatalogAttributeInfo:\n      description: Общая информация об атрибуте каталога для ссылочных схем\n      type: object\n      properties:\n        id:\n          description: Идентификатор атрибута каталога\n          type: integer\n        name:\n          description: Русскоязычное наименование атрибута в каталоге\n          type: string\n      required:\n        - id\n        - name\n\n    RefCatalogAttributeInfoWithAttrId:\n      description: Общая информация об атрибуте каталога для ссылочных схем\n      type: object\n      properties:\n        id:\n          type: integer\n          description: Идентификатор атрибута в ЕХД (attrId).\n        name:\n          type: string\n          description: Русскоязычное наименование атрибута в каталоге\n      required:\n        - id\n        - name\n\n    RefCatalogInfo:\n      description: Общая информация о каталоге для ссылочных схем\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога\n          type: integer\n        name:\n          description: Полное наименование каталога\n          type: string\n      required:\n        - id\n        - name\n\n    CatalogRef:\n      description: Информация о связи каталога публикации с каталогом заполнения\n      type: object\n      properties:\n        fullName:\n          description: Полное наименование каталога публикации\n          type: string\n        technicalName:\n          description: Техническое наименование каталога публикации\n          type: string\n        shortName:\n          description: Краткое наименование каталога публикации\n          type: string\n        typeCatalogId:\n          description: Идентификатор типа каталога публикации\n          type: integer\n        kindCatalogId:\n          description: Идентификатор вида каталога публикации\n          type: integer\n        thematicCategoryId:\n          description: Идентификатор тематической категории каталога публикации\n          type: integer\n        # objectCategoriesIds:\n        #   description: Идентификаторы категорий объектов каталога публикации\n        #   type: array\n        #   items:\n        #     type: integer\n        defaultPriority:\n          $ref: 'publicationCatalogs.yaml#/components/schemas/PublicationCatalogPriority'\n      required:\n        - publicationCatalogId\n        - fullName\n        - technicalName\n        - shortName\n        - typeCatalogId\n        - kindCatalogId\n        - thematicCategoryId\n        # - objectCategoriesIds\n        - defaultPriority\n\n    # Каталоги заполнения\n\n    FillingCatalogObjectsStatusTagIdEnum:\n      description: |-\n        Техническое название статуса данных каталога заполнения:\n          - `signed` - подписано,\n          - `unsigned` - не подписано,\n          - `archive` - архив.\n      oneOf:\n        - type: string\n          enum:\n            - signed\n            - unsigned\n            - archive\n\n    FillingCatalogMetadataStatusTagIdEnum:\n      description: |-\n        Техническое название статуса подписания метаданных каталога заполнения:\n          - `signed` - метаданные подписаны;\n          - `unsigned` - метаданные не подписаны;\n          - `archive` - архив.\n      oneOf:\n        - type: string\n          enum:\n            - signed\n            - unsigned\n            - archive\n\n    FillingCatalogOperatingModeTagIdEnum:\n      description: |-\n        Режим работы с объектом, при котором доступно изменение значений атрибута:\n          - `createObj` - только при создании,\n          - `updateObj` - при редактировании (в т.ч. создании),\n          - `deleteObj` - при удалении.\n      oneOf:\n        - type: string\n          enum:\n            - createObj\n            - updateObj\n            - deleteObj\n\n    FillingCatalogListItem:\n      description: Элемент списка каталогов заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogListItem'\n      properties:\n        periodUpdate:\n          $ref: '#/components/schemas/CatalogPeriodUpdateNameEnum'\n        systemsSuppliers:\n          description: Системы-поставщики данных в каталог, перечисленные через запятую с пробелом\n          type: string\n        dateLastSign:\n          description: |-\n            Дата последнего подписания всех объектов каталога или подписания отсутствия изменений в объектах.\n            Может отличаться от последней даты подписания из истории, так как в историю попадают записи с подписанием отдельных объектов.\n            Формат даты: DD.MM.YYYY\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n        dateNextUpdate:\n          description: |-\n            Рассчитанная дата следующего подписания каталога, вычисленной на основе даты последней подписи и периодичности обновления.\n            Формат даты: DD.MM.YYYY\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n        statusSignObjects:\n          allOf:\n            - $ref: '#/components/schemas/FillingCatalogObjectsStatusTagIdEnum'\n        statusSignMetadata:\n          allOf:\n            - $ref: '#/components/schemas/FillingCatalogMetadataStatusTagIdEnum'\n        countUnsignedObjects:\n          description: |-\n            Количество неподписанных объектов в каталоге. Считаются объекты со статусами:\n              - На изменении,\n              - На удалении,\n              - На восстановлении.\n          type: integer\n        signatureInfo:\n          description: Информация о подписании каталога, включающая дату последнего подписания и наименование подписанта\n          type: string\n        countErrorObjects:\n          description: Количество объектов каталога, имеющих статус \"Ошибка\"\n          type: integer\n        countPublicationCatalogs:\n          description: Число каталогов публикации, созданных на основе каталога заполнения\n          type: integer\n        userPrivileges:\n          $ref: 'users.yaml#/components/schemas/UserPrivilegeFill'\n      required:\n        - periodUpdate\n        - systemsSuppliers\n        - dateLastSign\n        - dataNextUpdate\n        - statusSignObjects\n        - statusSignMetadata\n        - countUnsignedObjects\n        - countErrorObj\n        - countPublicationCatalogs\n        - userPrivileges\n\n    FillingCatalogGeneralInfo:\n      description: Общая информация каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogGeneralInfo'\n      properties:\n        periodUpdate:\n          $ref: '#/components/schemas/FillingCatalogUpdatePeriodicity'\n        systemsSuppliers:\n          description: Системы-поставщики данных в каталог заполнения\n          type: array\n          items:\n            $ref: 'systems.yaml#/components/schemas/CommonSystemInfo'\n          readOnly: true\n        systemsSuppliersIds:\n          description: Список идентификаторов систем поставщиков данных\n          type: array\n          items:\n            type: integer\n          writeOnly: true\n        hasBackgroundCheck:\n          description: Признак наличия в каталоге периодической фоновой проверки\n          type: boolean\n        backgroundCheckPeriodTagId:\n          description: Строковый идентификатор периода фоновой проверки\n          allOf:\n            - $ref: '#/components/schemas/BasicCatalogPeriodUpdateTagIdEnum'\n          writeOnly: true\n        backgroundCheckPeriod:\n          description: Период фоновой проверки в каталоге\n          type: object\n          properties:\n            name:\n              $ref: '#/components/schemas/BasicCatalogPeriodUpdateNameEnum'\n            tagId:\n              $ref: '#/components/schemas/BasicCatalogPeriodUpdateTagIdEnum'\n          readOnly: true\n        backgroundCheckEmails:\n          description: Список электронных почт получателей результатов фоновой проверки, перечисленные через запятую БЕЗ пробела\n          type: string\n        isDeleteAllObjects:\n          description: Признак \"Возможно одновременное удаление всех объектов\"\n          type: boolean\n        isPriorityProcess:\n          description: Признак \"Установить приоритет подписания данных\"\n          type: boolean\n        outOivsBlockEditObjectsGUI:\n          description: Поставщики информации, которым остаётся доступным редактирование содержания каталога при отмеченном свойстве \"Заблокировать редактирование данных (веб)\"\n          type: array\n          items:\n            $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          readOnly: true\n        outOivsIdsBlockEditObjectsGUI:\n          description: Список идентификаторов поставщиков информации, которым остаётся доступным редактирование содержания каталога при отмеченном свойстве \"Заблокировать редактирование данных (веб)\"\n          type: array\n          items:\n            type: integer\n\n          writeOnly: true\n        isBlockEditObjectsService:\n          description: Признак \"Заблокировать подписание данных (сервис)\"\n          type: boolean\n        isBlockRestoreObjects:\n          description: Признак \"Заблокировать восстановление данных\"\n          type: boolean\n        isBlockSignObjectsGUI:\n          description: Признак \"Заблокировать подписание данных (веб)\"\n          type: boolean\n        isCopyObjects:\n          description: Признак \"Возможно копирование объектов\"\n          type: boolean\n        isBlockEditObjectsGUI:\n          description: Признак \"Заблокировать редактирование данных (веб)\"\n          type: boolean       \n      required:\n        - periodUpdate\n        - hasBackgroundCheck\n        - isDeleteAllObjects\n        - isPriorityProcess\n        - isBlockEditObjectsService\n        - isBlockRestoreObjects\n        - isBlockSignObjectsGUI\n        - accountingObject\n        - thematicCategoryId\n        - typeCatalogId\n        - oivsIds\n        - keywords\n        - isCopyObjects\n        - isBlockEditObjectsGUI        \n\n\n    FillingCatalogMetadata:\n      description: Метаданные каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogMetadata'\n\n    CommonFillingCatalogAttribute:\n      description: Общая информация атрибута каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogAttribute'\n      properties:\n        isReq:\n          description: Свойство обязательности атрибута\n          type: boolean\n        isUniq:\n          description: Свойство уникальности значения атрибута\n          type: boolean\n        isUniqWithinParent:\n          description: Признак, что уникальность значений атрибутов внутри табличного атрибута будет проверятся в рамках объекта-родителя.\n          type: boolean\n          default: false\n        isBanEdit:\n          description: Свойство запрета на редактирование\n          type: boolean\n        isSystemModify:\n          description: Свойство, что значение атрибута изменяется системой\n          type: boolean\n        objOperatingMode:\n          $ref: '#/components/schemas/FillingCatalogOperatingModeTagIdEnum'\n        oivs:\n          description: Список ОИВ, ответственных за значение, содержащееся в атрибуте\n          type: array\n          items:\n            $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          readOnly: true\n          minItems: 1\n        oivsIds:\n          description: Список идентификаторов ОИВ, ответственных за значение, содержащееся в атрибуте\n          type: array\n          items:\n            type: integer\n          writeOnly: true\n          minItems: 1\n        isManualInput:\n          description: Настроено ли на этот атрибут заполнение значениями не из справочника (ручной ввод) в блоках Автозаполнения конструктора\n          type: boolean\n          readOnly: true\n        manualInputTargets:\n          description: |-\n            Массив атрибутов, значение которых зависит от заполнения данного атрибута при автозаполнении.\n            Описываются в блоке `Автозаполнение` конструктора в массиве [[blocks.properties.mapping]].\n\n            Поле обязательное. Если атрибутов нет, то возвращается пустой массив.\n          readOnly: true\n          type: array\n          items:\n            type: object\n            properties:\n              attrId:\n                description: Идентификатор атрибута в ЕХД\n                type: integer\n              isDependent:\n                description: Является ли атрибут зависимым в рамках ручного ввода\n                type: boolean\n        manualInputSources:\n          description: |-\n            Массив идентификаторов атрибутов, от значения которых зависит значение данного атрибута при Автозаполнении.\n\n            Поле обязательное. Если атрибутов нет, то возвращается пустой массив.\n          readOnly: true\n          type: array\n          items:\n            type: integer\n            format: int32\n      required:\n        - isReq\n        - isUniq\n        - isUniqWithinParent\n        - isBanEdit\n        - isSystemModify\n        - objOperatingMode\n        - oivs\n        - oivsIds\n\n    StringFillingCatalogAttribute:\n      description: Строковый атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithDefaultValue'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithFieldMask'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithSearchIndex'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithFieldRegex'\n      properties:\n        maxLength:\n          description: Максимальная длина строкового значения\n          type: integer\n      required:\n        - maxLength\n\n    IntegerFillingCatalogAttribute:\n      description: Целочисленный атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithDefaultValue'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithNumber'\n\n    FloatFillingCatalogAttribute:\n      description: Атрибут каталога заполнения с типом дробное число\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithDefaultValue'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithNumber'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithDecimalPart'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithFieldRegex'\n\n    DateFillingCatalogAttribute:\n      description: Атрибут каталога заполнения с типом дата (и время)\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithDefaultValue'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithTime'\n      properties:\n        fieldMask:\n          description: |-\n            Маска ввода, которой должно соответствовать значение атрибута. Справочная информация для SOAP. Варианты:\n              - dd.mm.yyyy hh24:mi:ss (для атрибута с настройкой \"Дата и время\"),\n              - dd.mm.yyyy.\n          type: string\n          readOnly: true\n\n    BooleanFillingCatalogAttribute:\n      description: Атрибут каталога заполнения с типом флаг\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithDefaultValue'\n\n    FileFillingCatalogAttribute:\n      description: Файловый атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithMultipleValues'\n\n    DictFillingCatalogAttribute:\n      description: Справочный атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithMultipleValues'\n        - properties:\n            attribute:\n              allOf:\n                - $ref: 'attributes.yaml#/components/schemas/DictionaryAttribute'\n              readOnly: true\n      properties:\n        parentDictAttrId:\n          description: Идентификатор справочного атрибута, который содержит элементы более высокого уровня иерархии. При заполнении атрибута будет ограничиваться список элементов, связанных с элементом родительского справочника.\n          type: integer\n\n        refColDictTechName:\n          description: Указывает значения какого атрибута будут использоваться для сопоставления с объектом справочника при загрузке данных через сервис.\n          type: string\n          writeOnly: true\n        refColDict:\n          description: Атрибут справочника, который будет использоваться для сопоставления с объектом справочника при загрузке данных через сервис.\n          type: object\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/DictionaryColumn'\n          readOnly: true\n        defaultColDictTechName:\n          description: Позволяет выбрать атрибут справочника, который будет отображаться в каталоге. По умолчанию поле \"Наименование\".\n          type: string\n          default: name\n          writeOnly: true\n        defaultColDict:\n          description: Атрибут справочника, который будет отображаться в каталоге.\n          type: object\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/DictionaryColumn'\n          readOnly: true\n        sort:\n          description: Сортировка элементов справочника при заполнении атрибута\n          type: string\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/SortingOrderTagIdEnum'\n      required:\n        - refColDictTechName\n        - refColDict\n        - defaultColDictTechName\n        - defaultColDict\n        - sort\n\n    LinkFillingCatalogAttribute:\n      description: Ссылочный атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithMultipleValues'\n      properties:\n        refCatalog:\n          description: Каталог заполнения, на объекты которого ссылается объект\n          type: object\n          readOnly: true\n          properties:\n            id:\n              description: Идентификатор каталога\n              type: integer\n            name:\n              description: Полное наименование каталога\n              type: string\n            mainAttrId:\n              description: Идентификатор главного атрибута\n          required:\n            - id\n            - name\n            - mainAttrId\n        refCatalogId:\n          description: Идентификатор каталога заполнения, на объекты которого ссылается объект\n          type: integer\n          writeOnly: true\n        refAttr:\n          description: Атрибут ссылочного каталога, который используется для сопоставления с объектом каталога при загрузке данных через сервис\n          type: object\n          properties:\n            id:\n              type: integer\n              description: Идентификатор атрибута в ЕХД, который содержится в атрибутивном составе ссылочного каталога\n            name:\n              type: string\n              description: Русскоязычное наименование атрибута в ссылочном каталоге\n          readOnly: true\n          required:\n            - id\n            - name\n        refAttrId:\n          description: Идентификатор атрибута ссылочного каталога в ЕХД, который используется для сопоставления с объектом каталога при загрузке данных через сервис\n          type: integer\n          writeOnly: true\n        isRefUnsignedObj:\n          description: Указывает, что для выбора объекта каталога, на который ссылается объект, доступны новые неподписанные объекты\n          type: boolean\n      required:\n        - refCatalog\n        - refCatalogId\n        - isRefUnsignedObj\n\n    TableFillingCatalogAttribute:\n      description: Табличный атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttribute'\n        - $ref: '#/components/schemas/CommonCatalogAttributeWithMultipleValues'\n      properties:\n        # childCatalogUniqAttrIds:\n        #   description: |-\n        #     Cписок идентификаторов атрибутов вложенного каталога, значения которых должно быть уникально в рамках родительского объекта.\n        #     Если значение не выбрано, то передаётся пустой массив - [].\n        #     В БД передаются через запятую БЕЗ пробела.\n        #   type: array\n        #   items:\n        #     type: integer\n\n        childCatalogId:\n          description: |-\n            Идентификатор вложенного каталога, хранящего объекта для табличного атрибута.\n            При создании каталога передается отрицательное число - псевдоидентификатор, которое также можно указывать в других объектах в рамках первичного сохранения каталога.\n          type: integer\n        attributes:\n          description: Атрибутивный состав вложенного каталога (табличного атрибута)\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/StringFillingCatalogAttribute'\n              - $ref: '#/components/schemas/IntegerFillingCatalogAttribute'\n              - $ref: '#/components/schemas/FloatFillingCatalogAttribute'\n              - $ref: '#/components/schemas/DateFillingCatalogAttribute'\n              - $ref: '#/components/schemas/BooleanFillingCatalogAttribute'\n              - $ref: '#/components/schemas/FileFillingCatalogAttribute'\n              - $ref: '#/components/schemas/DictFillingCatalogAttribute'\n              - $ref: '#/components/schemas/LinkFillingCatalogAttribute'\n              - $ref: '#/components/schemas/TableFillingCatalogAttribute'\n          minItems: 1\n      required:\n        - childCatalogId\n        - attributes\n\n    FillingCatalogAttribute:\n      description: Атрибут каталога заполнения\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/StringFillingCatalogAttribute'\n        - $ref: '#/components/schemas/IntegerFillingCatalogAttribute'\n        - $ref: '#/components/schemas/FloatFillingCatalogAttribute'\n        - $ref: '#/components/schemas/DateFillingCatalogAttribute'\n        - $ref: '#/components/schemas/BooleanFillingCatalogAttribute'\n        - $ref: '#/components/schemas/FileFillingCatalogAttribute'\n        - $ref: '#/components/schemas/DictFillingCatalogAttribute'\n        - $ref: '#/components/schemas/LinkFillingCatalogAttribute'\n        - $ref: '#/components/schemas/TableFillingCatalogAttribute'\n        \n\n    CommonFillingCatalogAttributeForValidation:\n      description: Основные свойства атрибута кататалога заполнения, необходимые для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".\n      type: object\n      properties:\n        techName:\n          description: Техническое наименование атрибута.\n          type: string\n        typeTagId:\n          $ref: 'attributes.yaml#/components/schemas/AttributeTypeTagIdEnum'\n        isSystemModify:\n          description: Свойство, что значение атрибута изменяется системой.\n          type: boolean\n      required:\n        - techName\n        - typeTagId\n        - isSystemModify\n\n    DictFillingCatalogAttributeForValidation:\n      description: Свойства справочного атрибута кататалога заполнения, необходимые для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttributeForValidation'\n        - properties:\n            dictionaryId:\n              description: Идентификатор справочника, который используется в справочном атрибуте\n              type: integer\n          required:\n            - dictionaryId\n\n    LinkFillingCatalogAttributeForValidation:\n      description: Свойства ссылочного атрибута кататалога заполнения, необходимые для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttributeForValidation'\n        - properties:\n            refCatalogId:\n              description: Идентификатор каталога заполнения, на объекты которого будет ссылаться объект.\n              type: integer\n          required:\n            - refCatalogId\n\n    TableFillingCatalogAttributeForValidation:\n      description: Свойства табличного атрибута кататалога заполнения, необходимые для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttributeForValidation'\n        - properties:\n            attributes:\n              description: Атрибутивный состав вложенного каталога (табличного атрибута)\n              type: array\n              items:\n                oneOf:\n                  - $ref: '#/components/schemas/CommonFillingCatalogAttributeForValidation'\n                  - $ref: '#/components/schemas/DictFillingCatalogAttributeForValidation'\n                  - $ref: '#/components/schemas/LinkFillingCatalogAttributeForValidation'\n                  - $ref: '#/components/schemas/TableFillingCatalogAttributeForValidation'\n          required:\n            - attributes\n\n    FillingCatalogAttributeForValidation:\n      description: Атрибут кататалога заполнения с набором свойств, необходимых для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/CommonFillingCatalogAttributeForValidation'\n        - $ref: '#/components/schemas/DictFillingCatalogAttributeForValidation'\n        - $ref: '#/components/schemas/LinkFillingCatalogAttributeForValidation'\n        - $ref: '#/components/schemas/TableFillingCatalogAttributeForValidation'\n\n    FillingCatalogGroupUniq:\n      description: Настройки групповой уникальности\n      type: object\n      properties:\n        tomlFormat:\n          description: Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.\n          type: string\n        jsonFormat:\n          description: Настройка групповой уникальности, преобразованная из формата TOML в JSON. Необходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.\n          readOnly: true\n          type: object\n          properties:\n            groups:\n              description: Массив групп атрибутов\n              type: array\n              items:\n                type: object\n                properties:\n                  groupTechName:\n                    description: Технологическое наименование группы атрибутов. Должно быть уникально в рамках групп одного каталога.\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/TechNameFormat'\n                  groupName:\n                    description: Пользовательское наименование группы атрибутов.\n                    type: string\n                  applyTableAttr:\n                    description: |-\n                      Группа атрибутов настраивается из табличного атрибута и применяется ко всему вложенному каталогу. Указывается табличный атрибут в формате attr.{TableTechName1}.{TableTechName11}.{TableTechName111}.{и т.д.}. То есть указывается вся последовательность табличных атрибутов от корня до того, для которого настраивается группа.\n\n                      Если передано данное поле, то в описании блоков могут использоваться только атрибуты внутри указанной таблицы.\n                    type: string\n                  attributes:\n                    description: Массив атрибутов, входящих в группу. Указываются в формате attr.{techNameAttr}\n                    type: array\n                    items:\n                      type: string\n                    minItems: 1\n                  condition:\n                    description: Условие, описанное в синтаксисе условий конструктора проверок. Доступны все типы атрибутов каталога, включая системные.\n                    type: string\n                minItems: 1\n                required:\n                  - groupTechName\n                  - attributes\n          required:\n            - groups\n      required:\n        - tomlFormat\n        - jsonFormat\n\n    FillingCatalogSettings:\n      description: Настройки каталога заполнения\n      type: object\n      properties:\n        generalInfo:\n          description: Настройки вкладки \"Общая информация\" каталога заполнения\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/FillingCatalogGeneralInfo'\n        attributes:\n          description: Настройки вкладки \"Атрибуты\" каталога заполнения\n          type: array\n          items:\n            $ref: '#/components/schemas/FillingCatalogAttribute'\n          minItems: 1\n        meta:\n          description: Настройки вкладки \"Метаданные\" каталога заполнения\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/FillingCatalogMetadata'\n        constructor:\n          description: Настройки конструктора процессов. Представляет собой массив пакетов.\n          type: array\n          items:\n            $ref: '#/components/schemas/ConstructorPackageData'\n        conditionalUniq:\n          description: Настройки условной уникальности. Передаётся строка с условием, которое описано в формате условий, используемом в конструкторе процессов.\n          type: string\n        groupUniq:\n          description: Настройка групповой уникальности, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.\n          type: string\n        map:\n          $ref: '#/components/schemas/FillingCatalogMap'\n      required:\n        - generalInfo\n        - attributes\n        - map\n\n    FillingCatalogAttributeConstructorEditProperties:\n      description: Свойства редактирования атрибута из конструктора проверок\n      type: object\n      readOnly: true\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        isManualInput:\n          description: |-\n            Возможен ли ручной ввод атрибута.\n            Описывается в блоке \"Автозаполнение\".\n\n            Значение определяется на основе поля `valueNotFromDict` в блоке конструктора процессов.\n          type: boolean\n        dependencies:\n          description: |-\n            Идентификаторы атрибутов, значения которых зависят от заполнения данного атрибута.\n            Описываются в блоке `Автозаполнение`.\n          type: array\n          items:\n            type: integer\n            format: int32\n      required:\n        - attrId\n        - catalogId\n        - isManualInput\n        - dependencies\n\n    FillingCatalogMap:\n      description: Настройки карты каталога заполнения\n      type: object\n      properties:\n        hasGeo:\n          description: Наличие геопривязки в каталоге\n          type: boolean\n          default: false\n        typeGeoTagIds:\n          description: Массив строковых идентификаторов типов геометрии\n          type: array\n          items:\n            $ref: 'geodata.yaml#/components/schemas/GeojsonGeoTypeTagIdEnum'\n          # writeOnly: true\n        # typeGeo:\n        #   description: Массив типов геометрии\n        #   type: array\n        #   items:\n        #     $ref: '#/components/schemas/GeoType'\n        #   readOnly: true\n        isWGS84:\n          description: |-\n            Система координат (СК), в которой хранятся геоданные объектов каталога. Если принимает значение\n              - true, то СК - WGS84\n              - false, то СК - MSK77\n          type: boolean\n        isReq:\n          description: Обязательность геопривязки\n          type: boolean\n        isOneTypeGeoForObj:\n          description: Признак, указывающий, что объект может иметь только один тип геометрии\n          type: boolean\n        isNotReqGeoForService:\n          description: Необязательность геометрии при загрузке через сервис\n          type: boolean\n        isManualGeo:\n          description: Признак возможности ручного ввода геоданных при наличии блока \"На карту из справочника\". \n          type: boolean\n          readOnly: true\n        onMapAttrId:\n          description: Идентификатор атрибут (attrId), из которого берется значение для сопоставления со столбцом справочника в блоке \"На карту из справочника\".\n          type: integer\n          format: int32\n          readOnly: true\n        dictId:\n          description: Идентификатор справочника, из которого строится геометрия в блоке \"На карту из справочника\".\n          type: integer\n          format: int32\n          readOnly: true\n        manualInputGeoTagId:\n          description: Технический идентификатор типа геометрии, который может заполняться с использованием ручного ввода в блоке \"На карту из справочника\".\n          type: string\n          allOf:\n            - $ref: 'geodata.yaml#/components/schemas/GeojsonGeoTypeTagIdEnum'\n          readOnly: true\n        autocompleteGeoTypeTagIds:\n          description: Массив технических идентификаторов типов геометрии, которые могут заполняться блоками \"На карту\".\n          type: array\n          items:\n            $ref: 'geodata.yaml#/components/schemas/GeojsonGeoTypeTagIdEnum'\n          readOnly: true\n        isManualLocation:\n          description: Признак возможности ручного ввода местоположения в блоках \"Из карты координаты\". \n          type: boolean\n          readOnly: true\n        manualInputTargets:\n          description: Массив идентификаторов атрибутов (attrId), которые могут быть заполнены вручную при включении ручного ввода местоположения.\n          type: array\n          items:\n            type: integer\n          readOnly: true\n      required:\n        - hasGeo\n\n    CommonCatalogMap:\n      description: Общие настройки карты для каталогов\n      type: object\n      properties:\n        hasGeo:\n          description: Наличие геопривязки в каталоге\n          type: boolean\n          default: false\n        typeGeoIds:\n          description: Массив идентификаторов типов геометрии\n          type: array\n          items:\n            $ref: 'geodata.yaml#/components/schemas/GeojsonGeoTypeTagIdEnum'\n          writeOnly: true\n        typeGeo:\n          description: Массив типов геометрии\n          type: array\n          items:\n            $ref: 'geodata.yaml#/components/schemas/GeoType'\n          readOnly: true\n      required:\n        - hasGeo\n\n#     FillingCatalogCatalogAttributeInfo:\n#       description: |-\n#         Информация о каталоге и атрибуте, в котором используется каталог.\n#       type: object\n#       readOnly: true\n#       allOf:\n#         - $ref: '#/components/schemas/CommonCatalogInfo'\n#       properties:\n# # Если сделать CommonAttributeInfo из идентификатора и наименовыания, то можно этот common много где использовать.\n# # Пока он очень большой, с лишней информацией, поэтому отдельно прописываем.\n#         attributeId:\n#           description: Идентификатор атрибута ЕХД\n#           type: integer\n#           format: int32\n#         attributeName:\n#           description: Русскоязычное наименование атрибута\n#           type: string\n#       required:\n#         - attributeId\n#         - attributeName\n\n    # Конструктор проверок\n\n    ConstructorPackageEventEnum:\n      description: |-\n        Событие, при котором запускается процесс, описанный в конструкторе. Может принимать значения:\n          - change - изменение объекта, включая создание\n          - create - создание объекта,\n          - delete - удаление объекта.\n      type: string\n      enum:\n        - create\n        - change\n        - delete\n\n    ConstructorPackageModeEnum:\n      description: |-\n        Режим работы процесса. Может принимать значения:\n          - event - событие,\n          - backgroung - фоновый процесс,\n          - eventAndBackground - событие и фоновый процесс,\n          - off - отключён.\n        Значение off является приоритетным над остальными. Если указано в массиве, то считается, что процесс отключен и не будет выполняться.\n      type: string\n      enum:\n        - \"off\"\n        - event\n        - background\n        - eventAndBackground\n\n    ConstructorBlockTypeEnum:\n      description: |-\n        Тип блока конструктора. Возможные значения:\n          - package - пакет,\n          - condition - условие,\n          - notice - уведомление,\n          - email - письмо на электронную почту,\n          - autochange - автоизменение,\n          - autofill - автозаполнение,\n          - onMapFromDict - на карту из справочника,\n          - onMapFromObj - на карту из объекта,\n          - fromMapCoord - из карты координаты,\n          - fromMapDict - из карты по справочнику. \n      type: string\n      enum:\n        - package\n        - condition\n        - notice\n        - email\n        - autochange\n        - autofill\n        - onMapFromDict\n        - onMapFromObj \n        - fromMapCoord\n        - fromMapDict\n\n    ConstructorBlockPackage:\n      description: Настройки для блока \"Пакет\"\n      type: object\n      properties:\n        packTechName:\n          description: |-\n            Технологическое наименование пакета, который должен выполниться в данном блоке.\n          type: string\n\n    ConstructorBlockCondition:\n      description: Настройки для блока \"Условие\"\n      type: object\n      properties:\n        condition:\n          description: |-\n            Условие проверки значений атрибутов. Cинтаксис условий подробно описан в статье в вики в разделе \"Конструктор процессов\".\n          type: string\n        uniqAttr:\n          description: |-\n            Технологическое наименование атрибута каталога, для которого будет производиться проверка уникальности в рамках исполнения блока.\n            Атрибут прописывается как и в настройках условий - attr.{techName}\n            Можно указать атрибуты всех типов данных, кроме типов: таблица, файл, флаг. Указывается непосредственно корневой атрибут.\n          type: string\n\n    ConstructorBlockNotice:\n      description: Настройки для блока \"Уведомление\"\n      type: object\n      properties:\n        message:\n          description: |-\n            В блоке \"notice\":\n            Текст уведомления, который должен получить пользователь/система при работе с объектом каталога.\n          type: string\n\n    ConstructorBlockEmail:\n      description: Настройки для блока \"E-mail\"\n      type: object\n      properties:\n        message:\n          description: |-\n            Текст письма, который должен быть отправлен на указанный адрес электронной почты при выполнении блока.\n          type: string\n        email:\n          description: |-\n            Адрес электронной почты, на который должно быть отправлено письмо при выполнении блока.\n          type: string\n\n    ConstructorBlockAutochange:\n      description: Настройки для блока \"Автоизменение\"\n      type: object\n      properties:\n        condition:\n          description: |-\n            Условие при выполнении, которого будет происходит заполнение атрибутов. В условии можно использовать атрибуты любого типа, включая системные.\n            Cинтаксис условий подробно описан в статье в вики в разделе \"Конструктор процессов\".\n          type: string\n        markObjDelete:\n          description: |-\n            Позволяет после изменения значений в атрибутах пометить объект как удаленный.\n            Данное свойство может быть true, только в случае, если в режиме работы пакета указан фоновый процесс event = \"background\".\n          type: boolean\n        mapping:\n          description: |-\n            Список сопоставления атрибутов каталога и значений, которые должны подставиться в рамках выполнения автоизменения.\n          type: array\n          items:\n            type: object\n            properties:\n              catalogAttr:\n                description: |-\n                  Атрибут каталога, которому необходимо присвоить значение автоизменением.\n                  Указывается в формате attr.{techName}\n                  Возможно указать все типы атрибутов, кроме: файл, ссылка на объект, таблица.\n                type: string\n              value:\n                description: |-\n                  Значение, которое будет подставляться в указанный атрибут.\n                  Доступен ввод конкретного значения в формате строки. Если в catalogAttr указан атрибут с типом:\n                  - \"Строка\", \"Целое число\", \"Дробное число\", \"Дата\", то в value указывается значение в кавычках, далее на стороне сервиса эти значения будут преобразованы к типу данных атрибута.\n                  - \"Флаг\", то в value указывается значение в кавычках 1 или 0, true или false.\n                  - \"Справочник\", то в value передаётся в кавычках идентификатор значения из справочника этого атрибута.\n                  Также для всех вышеперечисленных типов атрибутов можно указать в value функцию, описанную в пакете, в виде func.{tagId}\n                type: string\n\n    ConstructorBlockAutofill:\n      description: Настройки для блока \"Автозаполнение\"\n      type: object\n      properties:\n        # condition:\n        #   description: |-\n        #     Условие поиска элемента справочника для автозаполнения. Для условия всегда используется оператор ***containsInDict(value, dictId, dictAttr, caseSensitive)***, в котором указываются справочник, атрибут каталога и атрибут справочника для сопоставления и параметр учёта регистра при поиске.\n        #   type: string\n        refValue:\n          description: Значение для сопоставления со справочником\n          type: string\n        dictId:\n          description: Идентификатор справочника, с которым сопоставляется значение\n          type: integer\n        dictAttr:\n          description: Столбец справочника, по которому производится сопоставление в формате dictAttr.{techName}\n          type: string\n        caseSensitive:\n          description: |-\n            Учитывать ли регистр значения при сопоставлении со справочником\n\n            Если не указан, то сравнение выполняется без учета регистра\n          type: boolean\n        allowManualInput:\n          description: |-\n            Признак позволяющий пользователю при работе с объектам указывать значение не из справочника, для атрибута, который участвует в сопоставлении со справочным.\n          type: boolean\n        mapping:\n          description: |-\n            Список сопоставления атрибутов каталога и атрибутов справочника.\n          type: array\n          items:\n            type: object\n            properties:\n              catalogAttr:\n                description: |-\n                  Атрибут каталога, которому необходимо присвоить значение автозаполнением.\n                  Указывается в формате attr.{techName}\n                  Возможно указать только атрибуты, имеющие свойство \"Изменяемый системой\" (isSystemModify: true).\n                  Такими атрибутами могут быть все типы атрибутов, кроме: файл, таблица.\n                type: string\n              value:\n                description: |-\n                  Атрибут справочника, из которого необходимо использовать значение для автозаполнения.\n                  Указывается в формате dictAttr.{techName}\n                type: string\n\n    ConstructorBlockOnMapFromDict:\n      description: Настройки для блока \"На карту из справочника\"\n      type: object\n      properties:\n        dictId:\n          description: Идентификатор справочника, с которым сопоставляется значение и из которого будет строиться геометрия объекта.\n          type: integer\n        allowManualInput:\n          description: |-\n            Признак, позволяющий пользователю при работе с объектом указывать геометрию объекта, которая должна строиться автоматически по координатам из справочника.\n          type: boolean\n        dictAttr:\n          description: Столбец справочника, по которому производится сопоставление с атрибутом каталога в формате dictAttr.{techName}\n          type: string\n        refValue:\n          description: Атрибут каталога, по которому производится сопоставление со столбцом справочника в формате attr.{techName}.\n          type: string\n        orderLatdLong:\n          description: Порядок следования координат \"Широта - Долгота\". По умолчанию false (\"Долгота - Широта\").\n          type: boolean\n        decimalSeparator:\n          description: Разделитель дробной части. Указывается символ, разделяющий дробную часть координаты.\n          type: string\n        fractionalPartOff:\n          description: Необязательность дробной части. По умолчанию false (дробная часть).\n          type: boolean\n        geoType:\n          description: Из координат поля справочника будет строиться или точка или мультигнеометрия.\n          oneOf:\n              - $ref: '#/components/schemas/MapGeoTypePoint'\n              - $ref: '#/components/schemas/MapGeoTypeMulti'\n\n    ConstructorBlockOnMapFromObj:\n      description: Настройки для блока \"На карту из объекта\"\n      type: object\n      properties:\n        orderLatdLong:\n          description: Порядок следования координат \"Широта - Долгота\". По умолчанию false (\"Долгота - Широта\").\n          type: boolean\n        decimalSeparator:\n          description: Разделитель дробной части. Указывается символ, разделяющий дробную часть координаты.\n          type: string\n        fractionalPartOff:\n          description: Необязательность дробной части. По умолчанию false (дробная часть).\n          type: boolean\n        geoType:\n          description: Из координат объекта будет строиться или точка или мультигнеометрия.\n          oneOf:\n              - $ref: '#/components/schemas/MapGeoTypePoint'\n              - $ref: '#/components/schemas/MapGeoTypeMulti'\n\n    ConstructorBlockFromMapCoord:\n      description: Настройки для блока \"Из карты координаты\"\n      type: object\n      properties:\n        allowManualInput:\n          description: |-\n            Признак, позволяющий пользователю при работе с объектом координаты геометрии в атрибут, который должен заполняться координатами по указанной геометрии на карте.\n          type: boolean\n        orderLatdLong:\n          description: Порядок следования координат \"Широта - Долгота\". По умолчанию false (\"Долгота - Широта\").\n          type: boolean\n        decimalSeparator:\n          description: Разделитель дробной части. Указывается символ, разделяющий дробную часть координаты.\n          type: string\n        decimalPlaces:\n          description: Количество символов дробной части координаты.\n          type: integer\n        geoType:\n          description: Координаты будут заполняться из геометрии точка или мультигеометрии.\n          oneOf:\n              - $ref: '#/components/schemas/MapGeoTypePoint'\n              - $ref: '#/components/schemas/MapGeoTypeMulti'\n\n    ConstructorBlockFromMapDict:\n      description: Настройки для блока \"Из карты по справочнику\"\n      type: object\n      properties:\n        geoType:\n          description: Выполняется сопоставление обозначенных на карте геоданных с системным справочником районов и округов и заполняются атрибуты объекта (округ, район, адрес и пр).\n          oneOf:\n              - $ref: '#/components/schemas/FromMapDictGeoTypePoint'\n              - $ref: '#/components/schemas/FromMapDictGeoTypeMulti'\n\n    FromMapDictGeoTypePoint:\n      description: На основании геометрии \"Точка\" будут заполняться атрибуты объекта\n      type: object\n      properties:\n        area:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение Округа из справочника.\n          type: string\n        district:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение Района из справочника.\n          type: string\n        unom:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение УНОМа из справочника.\n          type: string\n        address:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение Адреса из справочника.\n          type: string\n        unomOks:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение УНОМа (ОКС) из справочника.\n          type: string\n        unomZu:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение УНОМа (ЗУ) из справочника.\n          type: string\n\n    FromMapDictGeoTypeMulti:\n      description: На основании нескольких типов геометрии или единичной мультигеометрии будут заполняться атрибуты объекта (Округ и Район).\n      type: object\n      properties:\n        geoType:\n          description: Типы геометрии, на основании координат которых будут заполняться атрибуты объекта (Округ и Район). Не может содержать единственное значение \"Точка\". \n          type: array\n          items:\n            anyOf:\n              - type: string\n                enum:\n                  - Point\n                  - MultiPoint \n                  - MultiLineString\n                  - MultiPolygon\n        area:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение Округа из справочника.\n          type: string\n        district:\n          description: Атрибут каталога, которому автозаполнением необходимо присвоить значение Района из справочника.\n          type: string\n\n    MapGeoTypePoint:\n      description: |-\n        Для блока \"На карту\" - из координат справочника или атрибутов будет строиться геометрия \"Точка\"\n\n        Для блока \"Из карты координаты\" - координаты будут заполняться из геометрии \"Точка\".\n      type: object\n      properties:\n        coordinates:\n          description: Координаты X и Y отдельно или вместе.\n          oneOf:\n              - $ref: '#/components/schemas/FieldsCoordinates'\n              - $ref: '#/components/schemas/OneFieldCoordinates'\n\n    MapGeoTypeMulti:\n      description: Из координат справочника будет строиться мультигеометрия.\n      type: object\n      properties:\n        geoType:\n          description: Тип геометрии, который будет строиться из координат поля справочника. \n          oneOf:\n            - type: string\n              enum:\n                - MultiPoint \n                - MultiLineString \n                - MultiPolygon \n        coords: \n          description: Столбец(ы) справочника, из которого(-ых) необходимо брать координаты. Указывается в формате [dictAttr.{techName}, dictAttr.{techName}, ...].\n          type: array\n          items:\n            type: string\n        coordSeparator:\n          description: Разделитель координат. Указывается символ, разделяющий одну координату от другой.\n          type: string\n        coordPairSeparator:\n          description: Разделитель пар координат. Указывается символ, разделяющий одну пару координат [X,Y] от другой пары координат. \n          type: string\n        objectSeparator:\n          description: Разделитель объектов. Указывается символ, разделяющий один объект геометрии от другого объекта геометрии (одну мультилинию от другой мультилинии и пр.).\n          type: string\n\n    FieldsCoordinates:\n      description: |-\n        Для блока \"На карту\" - координаты X и Y берутся из разных столбцов справочника или атрибутов каталога\n\n        Для блока \"Из карты координаты\" - координаты X и Y записываются в разные атрибуты каталога.\n      type: object\n      properties:\n        CoordX:\n          description: |-\n            Для блока \"На карту\" - столбец справочника или атрибут котолога, из которого необходимо брать координату X.\n\n            Для блока \"Из карты координаты\" - атрибут каталога, в который необходимо записывать координату X.             \n          type: string\n        CoordY:\n          description: |-\n            Для блока \"На карту\" - столбец справочника или атрибут котолога,  из которого необходимо брать координату Y.\n\n            Для блока \"Из карты координаты\" - атрибут каталога, в который необходимо записывать координату Y.                          \n          type: string\n\n    OneFieldCoordinates:\n      description: |-\n        Для блока \"На карту\" - координаты X и Y заполняются из одного столбца справочника или одного атрибута каталога.\n\n        Для блока \"Из карты координаты\" - координаты X и Y записываются в один атрибут каталога.        \n      type: object\n      properties:\n        CoordXY:\n          description: |-\n            Для блока \"На карту\" - столбец справочника или атрибут котолога, из которого необходимо брать координаты X и Y.\n\n            Для блока \"Из карты координаты\" - атрибут каталога, в который необходимо записывать координаты геометрии.        \n             \n          type: string\n\n    ConstructorPackageCommonInfo:\n      description: Общаяя информация о пакете конструктора процессов\n      type: object\n      properties:\n        packName:\n          description: Название пакета\n          type: string\n        packTechName:\n          description: Технологическое наименование пакета. Должно быть уникально в рамках каталога.\n          type: string\n        isMain:\n          description: |-\n            Признак главного процесса. Если для каталога настраивается конструктор, то обязательно должен быть только 1 файл со значением true. С файла со свойством isMain: true начинается обработка описанного процесса.\n          type: boolean\n        event:\n          $ref: '#/components/schemas/ConstructorPackageEventEnum'\n        applyTableAttr:\n          description: |-\n            Применить процесс пакета к объектам табличного атрибута. Указывается табличный атрибут в формате attr.{TableTechName1}.{TableTechName11}.{TableTechName111}.{и т.д.}. То есть указывается вся последовательность табличных атрибутов от корня до того, для которого настраивается пакет.\n            Если передано данное поле, то в описании блоков могут использоваться только атрибуты внутри указанной таблицы.\n          type: string\n      required:\n        - packTechName\n        - event\n        - isMain\n\n    ConstructorPackage:\n      description: Пакет конструктора процессов\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/ConstructorPackageCommonInfo'\n      properties:\n        mode:\n          $ref: '#/components/schemas/ConstructorPackageModeEnum'\n        blocks:\n          description: |-\n            Массив блоков конструктора. Каждый блок представляет набор общих свойств и дополнительных настроек в зависимости от типа блока.\n            Блок \"START\" явно не указывается. Процесс начинается с блока идущего первым в массиве.\n            Блок \"END\" явно не указывается, но чтобы сослаться на него необходимо указать идентификатор \"end\".\n            Если блок не ссылается на другие блоки, например \"Уведомление\", то в ссылках указывается пустая строка \"\".\n          type: array\n          items:\n            type: object\n            properties:\n              tagId:\n                description: Строковый идентификатор блока конструктора. Должен быть уникален в рамках пакета каталога.\n                type: string\n              type:\n                $ref: '#/components/schemas/ConstructorBlockTypeEnum'\n              name:\n                description: Наименование блока.\n                type: string\n              trueBlockTagId:\n                description: Идентификатор блока, который должен обрабатываться следующим в случае истинности условия/корректной обработки блока.\n                type: string\n              falseBlockTagId:\n                description: Идентификатор блока, который должен обрабатываться следующим в случае ложности условия/некорректной обработки блока.\n                type: string\n              properties:\n                description: Набор дополнительных свойств блока, зависящих от типа блока.\n                type: object\n                oneOf:\n                  - $ref: '#/components/schemas/ConstructorBlockPackage'\n                  - $ref: '#/components/schemas/ConstructorBlockCondition'\n                  - $ref: '#/components/schemas/ConstructorBlockNotice'\n                  - $ref: '#/components/schemas/ConstructorBlockEmail'\n                  - $ref: '#/components/schemas/ConstructorBlockAutochange'\n                  - $ref: '#/components/schemas/ConstructorBlockAutofill'\n                  - $ref: '#/components/schemas/ConstructorBlockOnMapFromDict'\n                  - $ref: '#/components/schemas/ConstructorBlockOnMapFromObj'\n                  - $ref: '#/components/schemas/ConstructorBlockFromMapCoord'\n                  - $ref: '#/components/schemas/ConstructorBlockFromMapDict'\n            required:\n              - tagId\n              - name\n              - type\n              - trueBlockTagId\n              - falseBlockTagId\n              - properties\n        functions:\n          description: Массив функций, которые используются в рамках пакета.\n          type: array\n          items:\n            properties:\n              tagId:\n                description: Строковый идентификатор функции. Должен быть уникален в рамках пакета.\n                type: string\n              outputType:\n                description: |-\n                  Выходной тип данных функции. Может принимать значения:\n                    - string - строка,\n                    - number - целое или дробное число,\n                    - date - дата.\n                type: string\n                enum:\n                  - string\n                  - number\n                  - date\n              func:\n                description: Тело функции. Cинтаксис описания функций подробно описан в статье в вики в разделе \"Конструктор процессов\".\n                type: string\n              varables:\n                description: |-\n                  Массив функций, которые будут использоваться в основной функции в качестве переменных.\n                  При описании функций важен их порядок в массиве. Функцию-переменную F1 можно использовать в другой функции-переменной F2, если F1 описана раньше чем F2.\n                type: array\n                items:\n                  type: object\n                  properties:\n                    tagId:\n                      description: Строковый идентификатор функции-переменной. Должен быть уникален в рамках пакета.\n                      type: string\n                    outputType:\n                      description: |-\n                        Выходной тип данных функции-переменной. Может принимать значения:\n                          - string - строка,\n                          - number - целое или дробное число,\n                          - date - дата.\n                      type: string\n                      enum:\n                        - string\n                        - number\n                        - date\n                    func:\n                      description: Тело функции-переменной. Cинтаксис описания функций подробно описан в статье в вики в разделе \"Конструктор процессов\".\n                      type: string\n                  required:\n                    - tagId\n                    - outputType\n                    - func\n            required:\n              - tagId\n              - outputType\n              - func\n      required:\n        - mode\n        - blocks\n\n    ConstructorPackageData:\n      description: Данные одного пакета конструктора процессов.\n      type: object\n      properties:\n        tomlFormat:\n          description: |-\n            Настройка одного пакета конструктора процессов, описанная пользователем в формате TOML.\n            Передаётся в качестве строки с экранированием символов.\n          type: string\n        jsonFormat:\n          description: |-\n            Настройка одного пакета конструктора процессов, преобразованная из формата TOML в JSON.\n            Необходима для обработки на стороне клиента для реализации доп. функций, помогающих пользователю при создании настройки.\n          readOnly: true\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/ConstructorPackage'\n      required:\n        - tomlFormat\n        - jsonFormat\n\n    ConstructorValidationError:\n      type: object\n      properties:\n        packTechName:\n          description: Технологическое наименование пакета, в котором были обнаружены ошибки.\n          type: string\n        errors:\n          description: Массив найденных ошибок.\n          type: array\n          items:\n            type: object\n            properties:\n              blockTagId:\n                description: |-\n                  Строковый идентификатор блока конструктора, в котором обнаружена ошибка. Если ошибка не относится к конкретному блоку, то указывается null.\n                type: string\n              blockType:\n                description: |-\n                  Тип блока конструктора, в котором обнаружена ошибка. Указывается только для ошибок обнаруженных в блоках.\n                type: string\n              functionTagId:\n                description: |-\n                  Строковый идентификатор функции из блока [[functions]], в которой обнаружена ошибка. Указывается только для ошибок, обнаруженных в функциях.\n                type: string\n\n              message:\n                description: |-\n                  Описание найденной ошибки.\n                type: string\n                enum:\n                  - \"Недопустимое выражение '{expression}'.\"\n                  - \"Найдено {symbol/expression}. Ожидалось {symbol/expression}.\"\n                  - \"Поле {parameterName} должно принимать одно из перечисленных значений: {enumLiterals}.\"\n                  - \"Не найдено или не заполнено обязательное поле {fieldName}.\"\n                  - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n                  - \"Не найден пакет с настройкой главного процесса, где isMain: true.\"\n                  - \"Указан packTechName несуществующего пакета.\"\n                  - \"Настройка главного процесса невозможна в нескольких пакетах.\"\n                  - \"Не найдено окончание процесса 'end'.\"\n                  - \"'falseBlockId' может принимать значение только в настройках блока 'Условие'.\"\n                  - \"Указан tagId несуществующего блока.\"\n                  - \"Значение packTechName должно быть уникальным в рамках настроек конструктора процесса текущего каталога.\"\n                  - \"Значение tagId должно быть уникальным в рамках настроек текущего пакета конструктора процесса.\"\n                  - \"В каталоге отсутсвует указанный атрибут attr.{techName}.\"\n                  - \"Не найдена указанная функция func.{tagId}\"\n                  - \"Передан некорректный набор входных параметров в {operator/function}\"\n                  - \"Свойство markObjDelete может быть true, только в случае, если в режиме работы пакета указан фоновый процесс mode = 'background'.\"\n                  - \"Атрибут с типом {type} недоступен для сопоставления в данном блоке.\"\n                  - \"Невозможно преобразовать значение - {value} к типу {type}\"\n                  - \"Атрибут attr.{techName} должен иметь признак 'Изменяемый системой', чтобы использоваться в блоке автозаполнения\"\n                  - \"Ошибка при обходе блоков конструктора. Обнаружен бесконечный цикл, начинающийся с блока {tagId}.\"\n                  - \"Не найден справочник с идентификатором {dictId}.\"\n                  - \"Не найден элемент справочника {elementId} в справочнике {dictId}.\"\n                  - \"Не найден каталог с идентификатором {catalogId}.\"\n                  - \"Не найдено регулярное выражение с идентификатором {regexpId}.\"\n                  - \"В поле {parameterName} передано некорректное значение. Ожидается {понятное описание что ожидалось}.\"\n                  - \"Атрибут с типом {type} недоступен для оператора {operator}\"\n                  - \"В справочнике отсутсвует указанный атрибут attr.{dictTechName}.{columnTechName}/dictAttr.{techName}\"\n                  - \"Невозможно использовать ручной ввод в автозаполнении, где в сопоставлении указана функция.\"\n                  - \"В блоке {tagId} переданы 2 объекта с настройками geoTypePoint и geoTypeMulti, что не предусмотрено конструктором проверок для данного блока, допускается только один.\"\n                  - \"Атрибут с типом {type} недоступен для блока {tagId}.\"\n                  - \"Указан недопустимый тип геометрии в блоке {tagId}. Поле geoType должно принимать одно из перечисленных значений: MultiPoint, MultiLineString, MultiPolygon\"\n                  - \"Указан недопустимый тип геометрии в блоке {tagId}. Поле geoType может содержать значения: Point, MultiPoint, MultiLineString, MultiPolygon\"\n                  - \"В блоке {tagId} указана единичная геометрия Point, что не предусмотрено конструктором проверок для данного блока.\"\n                  - \"Блок {tagId} настроен для геометрии {GeoTypeTagId}, что недопустимо настройками карты каталога.\"\n                  - \"В блоке {tagId} указана геометрия {GeoTypeTagId}, что недопустимо настройками карты каталога.\"\n                  - \"В блоке {tagId} не указан ни один параметр. Необходимо указать хотя бы один из параметров блока {tagId}.\"\n                  - \"В блоке {tagId} повторно указан разделитель {}. Разделители в рамках блока не должны повторяться.\" \n                  - \"Указан недопустимый разделитель {} в блоке {tagId}.\"\n                  - \"Атрибут {techName} уже используеьтся в блоке {tagId}. Атрибуты для вывода координат не должны повторяться в разных блоках.\" \n                  - \"Атрибут attr.{techName} должен иметь признак 'Изменяемый системой', чтобы использоваться в блоках из карты\"\n                  - \"Блок {tagId} с типом {type} повторяется в конструкторе процессов данного каталога, что не предусмотрено конструктором проверок для данного типа блока.\"\n                  - \"Блок {tagId} с типом {type} недопустим настройками карты каталога.\"\n                  - \"Вложенный пакет {packName} не может содержать блоки На карту или Из карты.\"\n            required:\n              - message\n\n    CatalogPackageInfo:\n      description: Информация о каталоге и конструкторе процессов, в котором используется сущность (справочник, регулярное выражение, каталог заполнения и пр.)\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      properties:\n        packName:\n          description: Название пакета\n          type: integer\n          format: int32\n        packTechName:\n          description: Технологическое наименование пакета\n          type: string\n      required:\n        - packName\n        - packTechName\n\n# на проверку для отображения связанных сущностей\n    CatalogUniqInfo:\n      description: Информация о каталоге и настройках уникальности, в котором используется сущность (справочник, регулярное выражение, каталог заполнения)\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      properties:\n#под вопросом, стоит ли выводить и packTechName если это условная уникальность (в вебе там нет названий паукетов, только в базе однотипные)\n        packTechName:\n          description: Технологическое наименование уникальности\n          type: string\n        uniqTypeTag:\n          description:  |-\n            Технологическое наименование пакета:\n\n            - `conditional` - условная уникальность\n            - `group` - групповая уникальность\n          type: string\n          enum:\n            - conditional\n            - group\n      required:\n        - packTechName\n        - uniqTypeTag\n\n\n    # Условная уникальность\n\n    ConditionalUniqValidationError:\n      type: object\n      properties:\n        code:\n          description: HTTP-код ошибки\n          type: integer\n          format: int32\n          example: 400\n        messageType:\n          description: Тип ответа\n          type: string\n          example: Bad request\n        errors:\n          type: array\n          items:\n            type: string\n            enum:\n              - \"Недопустимое выражение '{expression}'.\"\n              - \"Найдено {symbol/expression}. Ожидалось {symbol/expression}.\"\n              - \"В каталоге отсутсвует указанный атрибут attr.{techName}.\"\n              - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n              - \"Передан некорректный набор входных параметров в {operator}.\"\n              - \"Не найден справочник с идентификатором {dictId}.\"\n              - \"Не найден элемент справочника {elementId} в справочнике {dictId}.\"\n              - \"Атрибут с типом {type} недоступен для оператора {operator}.\"\n              - \"Не найден каталог с идентификатором {catalogId}.\"\n              - \"Не найдено регулярное выражение с идентификатором {regexpId}.\"\n              - \"В справочнике отсутсвует указанный атрибут attr.{dictTechName}.{columnTechName}/dictAttr.{techName}\"\n      required:\n        - code\n        - messageType\n        - errors\n\n    # Групповая уникальность\n\n    GroupUniqValidationError:\n      type: object\n      properties:\n        groupTechName:\n          type: string\n        errors:\n          type: array\n          items:\n            type: string\n            enum:\n              - \"Недопустимое выражение '{expression}'.\"\n              - \"Найдено {symbol/expression}. Ожидалось {symbol/expression}.\"\n              - \"В каталоге отсутсвует указанный атрибут attr.{techName}.\"\n              - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n              - \"Передан некорректный набор входных параметров в {operator}.\"\n              - \"Не заполнено обязательное поле {fieldName}.\"\n              - \"Значение groupTechName должно быть уникальным в рамках настроек групповой уникальности текущего каталога.\"\n              - \"Не найден справочник с идентификатором {dictId}.\"\n              - \"Не найден элемент справочника {elementId} в справочнике {dictId}.\"\n              - \"Атрибут с типом {type} недоступен для оператора {operator}.\"\n              - \"Не найден каталог с идентификатором {catalogId}.\"\n              - \"Не найдено регулярное выражение с идентификатором {regexpId}.\"\n              - \"В справочнике отсутсвует указанный атрибут attr.{dictTechName}.{columnTechName}/dictAttr.{techName}\"\n\n  parameters:\n    catalogIdPathParam:\n      name: catalogId\n      in: path\n      description: |-\n        Идентификатор каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 194700\n\n    catalogIdQueryParam:\n      name: catalogId\n      in: query\n      description: |-\n        Идентификатор каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 194700\n\n    fillingCatalogIdQueryParam:\n      name: fillingCatalogId\n      in: query\n      description: |-\n        Идентификатор каталога заполнения.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 6404\n\n    fillingCatalogIdOptQueryParam:\n      name: fillingCatalogId\n      in: query\n      description: |-\n        Идентификатор каталога заполнения.\n      schema:\n        type: integer\n        format: int32\n      example: 6404\n\n    catalogIdsQueryParam:\n      name: catalogIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов каталогов.\n\n        Число элементов в списке от `1` до `500`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 500\n      example: [194700, 186532, 11033]\n\n    catalogIdsOptQueryParam:\n      name: catalogIds\n      required: false\n      in: query\n      description: |-\n        Список идентификаторов каталогов.\n\n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [194700, 186532, 11033]\n\n    parentCatalogIdQueryParam:\n      name: parentCatalogId\n      in: query\n      description: |-\n        Идентификатор родительского каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 194698\n\n    rootCatalogIdQueryParam:\n      name: rootCatalogId\n      in: query\n      description: |-\n        Идентификатор корневого каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 194690\n\n    catalogStatusesFilterQueryParam:\n      name: catalogStatuses\n      in: query\n      description: |-\n        Технические статусы возвращаемых каталогов.\n\n        Используется для фильтрации.\n        В параметре передается массив строк, строка представляет собой ключевое слово.\n        Не может передаваться пустой массив.\n\n        Допустимые значения:\n          - `active` - активный;\n          - `deleted` - удаленный.\n      required: false\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/CatalogTechStatusTagIdEnum'\n        minItems: 1\n        maxItems: 2\n\n    dataModesFilterQueryParam:\n      name: dataModes\n      in: query\n      description: |-\n        Технические наименования режимов работы с данными возвращаемых каталогов.\n\n        Используется для фильтрации.\n        В параметре передается строка. Не может передаваться пустая строка.\n\n        Допустимые значения:\n          - `filling` - заполнение;\n          - `publication` - публикация.\n\n        По умолчанию `filling`.\n      required: false\n      schema:\n        type: string\n        items:\n          $ref: '#/components/schemas/DataModeTagIdEnum'\n\n\n    forLinksCatalogQueryParam:\n      name: forLinks\n      description: |-\n        Указывает, что необходимо получить каталоги, которые можно указать в качестве ссылочных.\n        Данные каталоги имеют атрибут с отмеченным свойством \"Главный\".\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: false\n\n    forLinksCatalogAttributeQueryParam:\n      name: forLinks\n      description: |-\n        Указывает, что необходимо получить атрибуты каталога, которые можно использовать в качестве атрибута для связи.\n\n        Атрибуты должны иметь тип: строка, дробное число, дата, справочник, ссылка на объект, целое число.\n\n        Исключаются типы: файл, флаг, таблица.\n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: false\n\n    catalogGroupIdQueryParam:\n      name: catalogGroupId\n      in: query\n      description: Идентификатор группы каталогов. Необязательный параметр. Если указан, следует исключать из выборки все каталоги, имеющие связи с группой каталогов\n      schema:\n        type: integer\n        format: int32\n      required: false\n      example: 12\n\n    userIdQueryParam:\n      name: userId\n      in: query\n      description: Идентификатор пользователя. Необязательный параметр. Если указан, следует исключать из выборки все каталоги, имеющие связи с пользователем\n      schema:\n        type: integer\n        format: int32\n      required: false\n      example: 189776\n\n    subscriptionIdQueryParam:\n      name: subscriptionId\n      in: query\n      description: Идентификатор подписки на push-уведомления. Необязательный параметр. Если указан, следует исключать из выборки все каталоги, имеющие связи с подпиской.\n      schema:\n        type: integer\n        format: int32\n      required: false\n      example: 243\n\n  requestBodies:\n    catalogListRequestBody:\n      description: Пример тела запроса для поиска по списку каталогов\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/CatalogFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName\n                            # - objectCategories\n                            - thematicCategory\n                            - oivs\n                            - periodUpdate\n                            - systemsConsumers\n                            - systemsSuppliers\n                            - responsiblePerson\n                            - countActiveObjects\n                            - countObjects\n                            - dateLastSign\n                            - dateNextUpdate\n                            - statusSignObjects\n                            - statusSignMetadata\n                            - signatureInfo\n                            - countUnsignedObjects\n          examples:\n            Пример:\n              $ref: '#/components/examples/CatalogSearchRequest'\n      required: false\n\n  responses:\n    CatalogNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога:\n              $ref: '#/components/examples/CatalogNotFoundError'\n\n    FillingCatalogNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога заполнения не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога:\n              $ref: '#/components/examples/FillingCatalogNotFoundError'\n\n    FillingCatalogEntitiesNotFoundError:\n      description: |-\n        ### Возможные ошибки бизнес-логики при создании и изменении каталога:\n          - Передан несуществующий id вида каталога;\n          - Передан несуществующий id типа каталога;\n          - Передан несуществующий id тематической категории;\n          - Передан несуществующий id ОИВа;\n          - Передан несуществующий id системы;\n          - Передан несуществующий id атрибута;\n          - Передан id альтернативного названия атрибута, не найденный в атрибуте;\n          - Несуществующее регулярное выражение;\n          - Несуществующий поисковый индекс;\n          - Несуществующий refCatalogId;\n          - Несуществующий refAttrId в каталоге refCatalogId;\n          - Передан несуществующий столбец справочника;\n\n        ### Ошибки бизнес-логики при ИЗМЕНЕНИИ каталога:\n          - Не существует каталога с переданным идентификатором.\n\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n          # Примеры ошибок, которые актуальны при создании и изменении каталога\n            Несуществующий id вида каталога:\n              $ref: '#/components/examples/CatalogKindNotFoundError'\n            Несуществующий id типа каталога:\n              $ref: '#/components/examples/CatalogTypeNotFoundError'\n            Несуществующий id тематической категории:\n              $ref: 'thematicCategories.yaml#/components/examples/ThematicCategoryNotFoundError'\n            Несуществующий id ОИВа:\n              $ref: 'oivs.yaml#/components/examples/OivNotFoundError'\n            Несуществующий id системы:\n              $ref: 'systems.yaml#/components/examples/SystemNotFoundError'\n            Несуществующий id атрибута:\n              $ref: 'attributes.yaml#/components/examples/AttributeNotFoundError'\n            Альтернативное название не найдено в атрибуте:\n              $ref: 'attributes.yaml#/components/examples/AttributeAlterNameNotFoundError'\n            Несуществующее регулярное выражение:\n              $ref: 'regexps.yaml#/components/examples/RegularExpressionNotFoundError'\n            Несуществующий поисковый индекс:\n              $ref: 'searchIndexes.yaml#/components/examples/SearchIndexNotFoundError'\n            Несуществующий refCatalogId:\n              $ref: '#/components/examples/RefCatalogNotFoundError'\n            Несуществующий refAttrId в каталоге refCatalogId:\n              $ref: '#/components/examples/RefAttrNotFoundError'\n            Несуществующий colDictTechName в справочнике:\n              $ref: '#/components/examples/ColDictTechNameNotFoundError'\n          # Примеры ошибок, которые актуальны только для ИЗМЕНЕНИЯ каталога\n            Каталога не существует:\n              $ref: '#/components/examples/FillingCatalogNotFoundError'\n\n    FillingCatalogBadRequestErrors:\n      description: |-\n        ### Ошибки бизнес-логики при создании и изменении каталога:\n          - Неуникальная комбинация полного и технологического наименования каталога;\n          - Не заполнен период фоновой проверки;\n          - Email ответственного не прошел проверку на соответствие регулярному выражению;\n          - Список атрибутов каталога содержит неуникальные techName атрибутов;\n          - Свойство \"Главный атрибут\" присвоено более чем 1 атрибуту или вложенному атрибуту;\n          - Минимальное кол-во элементов множественного атрибута больше максимального кол-ва элементов;\n          - Множественный атрибут имеет свойство \"Обязательный\", но минимальное кол-во элементов равно 0;\n          - Некорректный parentDictAttrId;\n          - Некорректно указано свойство isUniqWithinParent.\n          - Настройки конструктора не прошли проверку валидации;\n          - Условие условной уникальности не прошло проверку валидации;\n          - Настройки групповой уникальности не прошли проверку валидации;\n          - Не заполнены обязательные поля при наличии геопривязки;\n          - Типы геометрии Точка и Мультиточка не могут быть выбраны одновременно;\n          - Признак isNotReqGeoForService может принимать значение true, только при обязательности геопривязки.\n\n        ### Ошибки бизнес-логики при ИЗМЕНЕНИИ каталога:\n          - Каталог находится в процессе подписания;\n          - Попытка удалить атрибут каталога, который используется в справочнике, синхронизированном с каталогом;\n          - Каталог находится в процессе импорта;\n          - Для каталога запущен процесс удаления всех объектов;\n\n      content:\n        application/json:\n          schema:\n            oneOf:\n              - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n              - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n              - $ref: '_common.yaml#/components/schemas/MissingParamsError'\n          examples:\n          # Примеры ошибок, которые актуальны при создании и изменении каталога\n            Неуникальная комбинация полного и технологического наименования каталога:\n              $ref: '#/components/examples/CatalogNotUniqueNameError'\n            Не заполнен период фоновой проверки:\n              $ref: '#/components/examples/backgroundCheckPeriodTagIdBadRequestError'\n            Email ответственного не прошел проверку на соответствие регулярному выражению:\n              $ref: '#/components/examples/InvalidRespPersonEmail'\n            Список атрибутов каталога содержит неуникальные techName атрибутов:\n              $ref: '#/components/examples/NotUniqTechNameAttributeInCatalogError'\n            Свойство \"Главный атрибут\" присвоено более чем 1 атрибуту:\n              $ref: '#/components/examples/MultipleMainAttributesInCatalogError'\n            Минимальное кол-во элементов множественного атрибута больше максимального:\n              $ref: '#/components/examples/WrongMixMaxAttributeError'\n            Минимальное кол-во элементов обязательного атрибута = 0:\n              $ref: '#/components/examples/ZeroMinInRequiredAttributeError'\n            Некорректный parentDictAttrId:\n              $ref: '#/components/examples/IncorrectParentDictAttrIdError'\n            Некорректно указано свойство isUniqWithinParent:\n              $ref: '#/components/examples/WrongUniqWithinParent'\n            Настройки конструктора не прошли проверку валидации:\n              $ref: '#/components/examples/ConstructorValidationError'\n            Условие условной уникальности не прошло проверку валидации:\n              $ref: '#/components/examples/ConditionalUniqValidationError'\n            Настройки групповой уникальности не прошли проверку валидации:\n              $ref: '#/components/examples/GroupUniqValidationError'\n            Не заполнены обязательные поля при наличии геопривязки:\n              $ref: '#/components/examples/MissingMapFieldsError'\n            Типы геометрии Точка и Мультиточка не могут быть выбраны одновременно:\n              $ref: '#/components/examples/IncorrectGeoTypeArrayError'\n            Признак isNotReqGeoForService может принимать значение true, только при обязательности геопривязки:\n              $ref: '#/components/examples/isNotReqGeoForServiceBadRequestError'\n          # Примеры ошибок, которые актуальны только для ИЗМЕНЕНИЯ каталога\n            Каталог находится в процессе подписания:\n              $ref: '#/components/examples/SignedCatalogCannotBeEditedError'\n            Атрибут каталога привязан к справочнику и не может быть удален:\n              $ref: '#/components/examples/AttributeConnectedToDictionaryError'\n            Каталог находится в процессе импорта:\n              $ref: '#/components/examples/CatalogInImportCantBeEditedError'\n            Для каталога запущен процесс удаления всех объектов:\n              $ref: '#/components/examples/CatalogInDeletionCantBeEditedError'\n\n  examples:\n    # Общие по каталогам\n    CatalogSearchRequest:\n      value:\n        filters:\n          - attribute: 'dateNextUpdate'\n            operator: 'greaterThan'\n            value: '16.09.2022'\n          - attribute: 'thematicCategory'\n            operator: 'inIds'\n            value: [10, 20, 273]\n    RefCatalogInfoArrayResponse:\n      value:\n        - id: 188730\n          name: Дворовые территории\n        - id: 194700\n          name: Поликлиники\n\n    RefCatalogAttributeInfoWithAttrIdArrayResponse:\n      value:\n        - id: 34\n          name: Наименование\n        - id: 231\n          name: Адрес\n\n    CatalogCreatedResponse:\n      value:\n        id: 194700\n        code: 201\n        messageType: Created\n        message: Каталог успешно создан!\n\n    CatalogEditedResponse:\n      value:\n        id: 194700\n        code: 200\n        messageType: Ok\n        message: Каталог успешно изменен!\n\n    CatalogDeletedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные каталоги помечены как удалённые!\n\n    CatalogNotUniqueNameError:\n      description: Проверка должна производиться среди активных корневых каталогов.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Каталог заполнения с такой комбинацией полного и технологического наименования уже существует. Комбинация полей fullName, technicalName должна быть уникальна.\n\n    ConstructorValidationError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Настройки конструктора не прошли валидацию.\n    ConditionalUniqValidationError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Условие условной уникальности не прошло валидацию.\n    GroupUniqValidationError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Настройки групповой уникальности не прошли валидацию.\n\n    CatalogInImportCantBeEditedError:\n      description: Пример ответа с ошибкой, если каталог находится в процессе импорта\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Каталог находится в процессе импорта, редактирование невозможно.\n\n    CatalogInImportCantBeDeletedError:\n      description: Пример ответа с ошибкой, если каталог находится в процессе импорта\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Каталог находится в процессе импорта, удаление невозможно.\n\n    CatalogInDeletionCantBeDeletedError:\n      description: Пример ответа с ошибкой, если для каталога запущен процесс удаления всех объектов\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Для каталога запущен процесс удаления всех объектов, удаление каталога невозможно.\n\n    CatalogInDeletionCantBeEditedError:\n      description: Пример ответа с ошибкой, если для каталога запущен процесс удаления всех объектов\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Для каталога запущен процесс удаления всех объектов, редактирование каталога невозможно.\n\n    CatalogInCatalogPackagesCantBeDeletedError:\n      description: |-\n        Удаляется каталог, который используется в конструкторе проверок другого каталога.\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Каталог (id {catalogId}) не может быть удален, так как используется в одном или нескольких конструкторах проверок других каталогов заполнения. \n          Удаление каталогов не выполнено.\n\n    CatalogInCatalogUniqCantBeDeletedError:\n      description: |-\n        Удаляется каталог, который используется в настройках уникальности другого каталога.\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Каталог (id {catalogId}) не может быть удален, так как используется в одной или нескольких настройках уникальностей другого каталога.\n          Удаление каталогов не выполнено.\n\n    CatalogInPublCatalogConditionsCantBeDeletedError:\n      description: |-\n        Удаляется каталог, который используется в настройках ограничения выборки каталога публикации.\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Каталог (id {catalogId}) не может быть удален, так как используется в одной или нескольких настройках ограничения выборки каталога публикации.\n          Удаление каталогов не выполнено.\n\n    CatalogInDictionaryCantBeDeletedError:\n      description: |-\n        Удаляется каталог на основе которого создан справочник.\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Каталог (id {catalogId}) не может быть удален, так как на его основе создан один или несколько справочников.\n          Удаление каталогов не выполнено.\n\n    CatalogInCatalogAttributesCantBeDeletedError:\n      description: |-\n        Удаляется каталог, который используется в ссылочном атрибуте другого каталога заполнения.\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Каталог (id {catalogId}) не может быть удален, так как используется в ссылочном атрибуте другого каталога заполнения.\n          Удаление каталогов не выполнено.\n\n    MultipleMainAttributesInCatalogError:\n      description: |-\n        Проверяется, чтобы свойство **isMain: true** было установлено только у **одного корневого атрибута** каталога. При этом свойство может быть установлено только для атрибутов с типами данных: строка, целое число, дробное число, дата, справочник.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Поле isMain может принимать значение true только в рамках одного корневого атрибута в каталоге.\n\n    IncorrectAttributeOrderError:\n      description: |-\n        Неверный порядок атрибутов в настройках атрибутов.\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Неверные порядковые номера атрибутов в каталоге.\n          Для каждого атрибута в пределах корневого или вложенного каталога поле \"order\" должно быть уникально.\n          Нумерация должна вестись, начиная с 1 без пропусков порядковых номеров.\n\n    NotUniqTechNameAttributeInCatalogError:\n      description: |-\n        Проверяется, чтобы свойство атрибута **techName** было уникальным среди списка атрибутов каталога.\n      value:\n        code: 400\n        messageType: Bad request\n        message: \"Обнаружены атрибуты с неуникальным техническим названием: {techName}. Технические названия атрибутов в рамках одного каталога должны быть уникальны!\"\n\n    InvalidRespPersonEmail:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Email ответственного лица не соответствует формату регулярного выражения\n\n    WrongMixMaxAttributeError:\n      description: |-\n        Проверяется, чтобы в табличном атрибуте maxCntElement было больше или равно minCntElement.\n\n        Если maxCntElement: null, то считаем , что в таком случае число элементов не ограничено, а значит оно по-умолчанию больше minCntElement.\n      value:\n        code: 400\n        messageType: Request body field wrong type\n        message: Значение поля maxCntElement должно быть больше или равно значению поля minCntElement или принимать значение null.\n\n    ZeroMinInRequiredAttributeError:\n      description: |-\n        Проверяется, чтобы в табличном атрибуте minCntElement было больше 0, если множественный атрибут отмечен как обязательный (isReq: true).\n      value:\n        code: 400\n        messageType: Request body field wrong type\n        message: Значение minCntElement должно быть больше 0, так как для атрибута {attrId} установлено свойство обязательности.\n\n    CatalogNotFoundError:\n      description: |-\n        Указанный каталог не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталога с идентификатором {catalogId} не существует.\n\n    ChildCatalogNotFoundInCatalogError:\n      description: |-\n        Переданный вложенный каталог не существует в корневом каталоге.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Вложенный каталог {childCatalogId} не существует в каталоге {catalogId}.\n\n    CatalogKindNotFoundError:\n      description: |-\n        Указанный вид каталога не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Вида каталога с идентификатором {catalogKindId} не существует.\n\n    CatalogTypeNotFoundError:\n      description: |-\n        Указанный тип каталога не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Типа каталога с идентификатором {catalogTypeId} не существует.\n\n    RefCatalogNotFoundError:\n      description: |-\n        Не существует каталога с идентификатором, указанным в параметре refCatalogId\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          В поле refCatalogId указан идентификатор несуществующего каталога.\n\n    RefAttrNotFoundError:\n      description: |-\n        В каталоге для ссылок не существует атрибута с указанным в запросе идентификатором.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          В каталоге для ссылок {refCatalogId} не существует атрибута с идентификатором {refAttrId}.\n\n    ColDictTechNameNotFoundError:\n      description: |-\n        В справочнике не существует атрибута с указанным в запросе техническим наименованеим.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          В справочнике, который используется в атрибуте {attrId}, не существует столбца с техническим наименованием {colDictTechName}.\n\n    IncorrectParentDictAttrIdError:\n      description: |-\n        Проверяется, чтобы родительский справочный атрибут:\n          - был выбран среди массива атрибутов каталога,\n          - был основан на справочнике, который является родительским для справочника атрибута с настроенным свойством parentDictAttrId.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Значение поля parentDictAttrId должно быть выбрано из массива справочных атрибутов каталога, справочник которых является родительским для справочника атрибута {attrId}.\n\n    WrongUniqWithinParent:\n      description: Проверяется, чтобы свойство isUniqWithinParent передавалось только для атрибутов внутри таблицы, для которых отмечено свойство isUniq.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Поле isUniqWithinParent может принимать значение true только для атрибутов внутри табличного атрибута с отмеченным свойством isUniq.\n\n    backgroundCheckPeriodTagIdBadRequestError:\n      description: |-\n        Проверяется, чтобы свойство backgroundCheckPeriodTagId был заполнен когда hasBackgroundCheck: true\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Поле backgroundCheckPeriodTagId должно быть заполнено при hasBackgroundCheck: true\n\n    MissingMapFieldsError:\n      description: Проверяется, чтобы передавались свойства typeGeoTagIds, isWGS84,, isOneTypeGeoForObj, isNotReqGeoForService, если hasGeo = true\n      value:\n        code: 400\n        messageType: Missing request body fields\n        message: При наличии гепривязки должны быть заполнены поля typeGeoIds и isWGS84, isReq, isOneTypeGeoForObj, isNotReqGeoForService\n\n    IncorrectGeoTypeArrayError:\n      description: Проверяется, чтобы в типах геометрии не передавались Точка и Мультиточка одновременно.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Типы геометрии 1-Точка и 2-Мультиточка не могут одновременно передаваться в массиве geoTypeIds.\n\n    isNotReqGeoForServiceBadRequestError:\n      description: Проверяется, чтобы свойство isNotReqGeoForService принимало значение true, только при обязательности геопривязки isReq = true\n      value:\n        code: 400\n        messageType: Bad request\n        message: Признак isNotReqGeoForService может принимать значение true, только при обязательности гепривязки.\n\n    # Каталоги заполнения\n    FillingCatalogListItemArrayResponse:\n      value:\n        - id: 213678\n          fullName: Реестр мест захоронений (тест)\n          objectCategories: Места захоронения\n          thematicCategory: Земля и имущество\n          oivs: Тестовая организация\n          countActiveObjects: 110323\n          countObjects: 123213\n          systemsConsumers: Портал открытых данных\n          responsiblePerson: Ивано Иван Иванович, ivanov@example.com, +7 (999) 11-22-333\n          periodUpdate: Ежедневно\n          systemsSuppliers: testis\n          dateLastSign: \"24.02.2024\"\n          dateNextUpdate: \"24.03.2024\"\n          statusSignObjects: signed\n          statusSignMetadata: signed\n          countUnsignedObjects: 0\n          signatureInfo: Каталог подписан 24.10.2024 15:30:35 Иванов Иван Иванович\n          countErrorObjects: 8\n          countPublicationCatalogs: 13\n          userPrivileges:\n            canView : true\n            canExport : true\n            canEdit : true\n            canSign : true\n            canImport : true\n            canEditMeta : true\n\n\n    FillingCatalogSettingsRequest:\n      value:\n        generalInfo:\n          fullName: Нестационарные торговые объекты по реализации печатной продукции\n          technicalName: Нестационарные торговые объекты по реализации печатной продукции\n          shortName: Нестационарные торговые объекты по реализации печатной продукции\n          kindCatalogId: 8\n          typeCatalogId: 1\n          thematicCategoryId: 16\n          # objectCategoriesIds: [22900]\n          oivsIds: [13478]\n          accountingObject: Нестационарные торговые объекты по реализации печатной продукции, расположенные в пределах установленных границ города Москвы.\n          keywords: киоск, киоски, пресс-стенд, пресс-стенды, газетный киоск, газетные киоски, печать, печатная продукция, реализация, нестационарный торговый объект\n          periodUpdate:\n            tagId: numDays\n            numDays: 50\n          systemsConsumersIds: [10, 28]\n          systemsSuppliersIds: [76]\n          hasBackgroundCheck: true\n          backgroundCheckPeriodTagId: daily\n          backgroundCheckEmails: ivanov@mail.ru,cemenov@mail.ru\n          isShowDeleteObjects: true\n          isPriorityProcess: false\n          # isAddObjects: true\n          isCopyObjects: false\n          isDeleteAllObjects: true\n          isBlockEditObjectsGUI: false\n          isBlockEditObjectsService: false\n          isBlockRestoreObjects: true\n          isBlockSignObjectsGUI: false\n          hasGeo: true\n        attributes:\n          - attrId: 1\n            selectedAlterNameId: null\n            order: 1\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            defaultValue: Иван\n            fieldMask: null\n            fieldRegexId: 9076\n            searchIndexId: 1\n            maxLength: 4000\n          - attrId: 34\n            selectedAlterNameId: null\n            order: 2\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: createObj\n            oivIds: [1]\n            defaultValue: 18\n            maxLength: 3\n            isPositiveValues: true\n          - attrId: 98\n            selectedAlterNameId: null\n            order: 3\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            defaultValue: 99,99\n            maxLength: 50\n            isPositiveValues: true\n            fieldRegexId: null\n            maxLengthDecimal: 2\n          - attrId: 198\n            selectedAlterNameId: 12\n            order: 4\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            defaultValue: null\n            isTime: true\n          - attrId: 54\n            selectedAlterNameId: null\n            order: 5\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: createObj\n            oivIds: [1]\n            defaultValue: true\n          - attrId: 84325\n            selectedAlterNameId: null\n            order: 6\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            isMultiple: true\n          - attrId: 3892\n            selectedAlterNameId: null\n            order: 7\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            dictId: 15\n            maxCntElement: 1\n            minCntElement: 10\n            parentDictAttrId: null\n            refColDict: null\n            defaultColDictTechName: NAME\n            sort: asc\n            isMultiple: true\n          - attrId: 348\n            selectedAlterNameId: null\n            order: 8\n            isReq: true\n            isUniq: true\n            isUniqWithinParent: false\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            refCatalogId: 194700\n            refAttrId: 1\n            maxCntElement: 3\n            minCntElement: 1\n            isMultiple: true\n            isRefUnsignedObj: true\n          - attrId: 10\n            selectedAlterNameId: null\n            order: 9\n            isReq: true\n            isUniq: true\n            isMain: false\n            isBanEdit: true\n            isSystemModify: true\n            objOperatingMode: updateObj\n            oivIds: [1]\n            oiv:\n            maxCntElement: 10\n            minCntElement: 0\n            # childCatalogUniqAttrIds: [1]\n            isUniqWithinParent: false\n            childCatalogId: 194701\n            attributes:\n              - attrId: 12\n                selectedAlterNameId: null\n                catalogAttrId: 201\n                order: 1\n                isReq: true\n                isUniq: true\n                isUniqWithinParent: true\n                isMain: false\n                isBanEdit: true\n                isSystemModify: true\n                objOperatingMode: updateObj\n                oivIds: [1]\n                maxLength: 4000\n                fieldMask: null\n                fieldRegexId: null\n                defaultValue: null\n                searchIndexId: null\n        meta:\n          respPersonFIO: Иванов Иван Иванович\n          respPersonEmail: ivanov@mail.ru\n          respPersonPhone: +79876543210\n          description: Каталог хранит информацию о нестационарных торговых объектов.\n        constructor:\n          - tomlFormat: |-\n              packName = \"Код организации по ОКОГУ\"\n              packTechName = \"CodeOKOGU-28394\"\n              isMain = false\n              event = \"change\"\n              mode = \"eventAndBackground\"\n\n              [[blocks]]\n                  tagId = \"cond1\"\n                  type = \"condition\"\n                  name = \"Условие\"\n                  trueBlockTagId = \"cond2\"\n                  falseBlockTagId = \"cond3\"\n                  [blocks.properies]\n                      condition = \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n                      uniqAttr = \"\"\n          - tomlFormat: |-\n              packName = \"Код организации по ОКОГУ\"\n              packTechName = \"CodeOKOGU-28394\"\n              isMain = false\n              event = \"change\"\n              mode = \"eventAndBackground\"\n\n              [[blocks]]\n                  tagId = \"cond1\"\n                  type = \"condition\"\n                  name = \"Условие\"\n                  trueBlockTagId = \"cond2\"\n                  falseBlockTagId = \"cond3\"\n                  [blocks.properies]\n                      condition = \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n                      uniqAttr = \"\"\n        conditionalUniq: containsInList(attr.IsExecAuth, (3)) and (empty(attr.OrgExcludeDate) or greater(attr.OrgExcludeDate, sysAttr.currentDate))\n        groupUniq: >-\n            [[groups]]\n              groupTechName = \"NameAddress\"\n              groupName = \"Проверка уникальности Наименования и Адреса объекта\"\n              attributes = [\"attr.Name\", \"attr.Address\"]\n              condition = \"equals(attr.EntryState.NAME, 'Актуальна')\"\n            [[groups]]\n              groupTechName = \"NameCodeClose\"\n              groupName = \"Проверка уникальности Наименования и кода закрытия для неактуальных объектов\"\n              attributes = [\"attr.Name\", \"attr.CodeClose\"]\n              condition = \"equals(attr.EntryState.NAME, 'Не актуальна')\"\n            [[groups]]\n              groupTechName = \"TableGroupUniq\"\n              groupName = \"Проверка уникальности в табличном атрибуте\"\n              applyTableAttr = \"attr.Table\"\n              attributes = [\"attr.Code\", \"attr.ResponsiblePerson\"]\n              condition = \"empty(attr.DateEnd)\"\n                hasGeo: true\n        map:\n          hasGeo: true\n          typeGeoTagIds:\n            - Point\n            - MultiLineString\n            - MultiPolygon\n          isWGS84: true\n          isReq: true\n          isOneTypeGeoForObj: false\n          isNotReqGeoForService: false\n\n    SignedCatalogCannotBeEditedError:\n        description: |-\n          Невозможно внести изменения в настройки каталога, который находится в процессе подписания.\n        value:\n          code: 400\n          messageType: Bad request\n          message: Каталог находится в процессе подписания, редактирование невозможно.\n\n    AttributeConnectedToDictionaryError:\n        description: |-\n          Невозможно удалить атрибут каталога, который используется в справочнике, синхронизированном с каталогом.\n        value:\n          code: 400\n          messageType: Bad request\n          message: Атрибут каталога {attributeEnName} привязан к справочнику {dictionaryId}, удаление данного атрибута невозможно.\n\n    ConstructorPackageCommonInfoArrayResponse:\n      description: Пример ответа с краткой информацией о пакетах конструктора\n      value:\n        - packName: Проверка и автозаполнение адреса\n          packTechName: checkAndAutofillAddress\n          isMain: true\n          event: change\n          applyTableAttr: attr.Table\n        - packName: Удаление неактивных объектов\n          packTechName: DeleteNotActive\n          isMain: false\n          event: change\n\n    FillingCatalogGeneralInfoResponse:\n      value:\n        id: 29697\n        fullName: Нестационарные торговые объекты по реализации печатной продукции\n        technicalName: Нестационарные торговые объекты по реализации печатной продукции\n        shortName: Нестационарные торговые объекты по реализации печатной продукции\n        kindCatalog:\n          id: 8\n          name: Перечень\n        typeCatalog:\n          id: 1\n          name: Городской межотраслевой (межведомственный)\n        thematicCategory:\n          id: 16\n          name: Торговля\n        objectCategories:\n          - id: 22900\n            rusName: НТО по реализации печатной продукции\n        oivs:\n          - id: 13478\n            name: Департамент средств массовой информации и рекламы города Москвы\n        accountingObject: Нестационарные торговые объекты по реализации печатной продукции, расположенные в пределах установленных границ города Москвы.\n        keywords: киоск, киоски, пресс-стенд, пресс-стенды, газетный киоск, газетные киоски, печать, печатная продукция, реализация, нестационарный торговый объект\n        periodUpdate:\n          tagId: numDays\n          name: Настраиваемая (Произвольный срок)\n          numDays: 50\n        systemsConsumers:\n          - id: 10\n            name: АИС ГИН\n          - id: 28\n            name: Цифровой двойник\n        systemsSuppliers:\n          - id: 76\n            name: ЕГАС СИОПР\n        hasBackgroundCheck: true\n        backgroundCheckPeriod:\n          id: daily\n          name: Ежедневно\n        backgroundCheckEmails: ivanov@mail.ru,cemenov@mail.ru\n        isShowDeleteObjects: true\n        isPriorityProcess: false\n        # isAddObjects: true\n        isCopyObjects: false\n        isDeleteAllObjects: true\n        isBlockEditObjectsGUI: false\n        isBlockEditObjectsService: false\n        isBlockRestoreObjects: true\n        isBlockSignObjectsGUI: false        \n\n    FillingCatalogMetadataRequest:\n      value:\n        respPersonFIO: Иванов Иван Иванович\n        respPersonEmail: ivanov@mail.ru\n        respPersonPhone: \"+79876543210\"\n        description: Каталог хранит информацию о нестационарных торговых объектов.\n\n    FillingCatalogMetadataResponse:\n      value:\n        respPersonFIO: Иванов Иван Иванович\n        respPersonEmail: ivanov@mail.ru\n        respPersonPhone: \"+79876543210\"\n        description: Каталог хранит информацию о нестационарных торговых объектов.\n\n    FillingCatalogAttributesResponse:\n      value:\n        - attribute:\n            id: 1\n            techName: name\n            rusName: Наименование\n            enName: Name\n            type:\n              id: 1\n              name: Строка\n              typeTag: string\n            description: Имя\n          catalogAttrId: 190\n          selectedAlterNameId: null\n          order: 1\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: true\n          manualInputTargets:\n            - attrId: 34\n              isDependent: true\n            - attrId: 198\n              isDependent: false\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          maxLength: 4000\n          fieldMask: null\n          fieldRegex:\n            id: 9076\n            name: Имя человека\n            value: ^[А-Яа-я]+[ А-Яа-я]*$\n          defaultValue: Иван\n          searchIndex:\n            - id: 1\n              name: Тестовая организация\n        - attribute:\n            id: 34\n            techName: age\n            rusName: Возраст\n            enName: Age\n            type:\n              id: 9\n              name: Целое число\n              typeTag: integer\n            description: Возраст\n          catalogAttrId: 191\n          selectedAlterNameId: null\n          order: 2\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: createObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: [1]\n          oiv:\n            - id: 1\n              name:\n          defaultValue: 18\n          maxLength: 3\n          isPositiveValues: true\n        - attribute:\n            id: 98\n            techName: price\n            rusName: Цена\n            enName: Price\n            type:\n              id: 9\n              name: Дробное число\n              typeTag: float\n            description: Цена\n          catalogAttrId: 192\n          selectedAlterNameId: null\n          order: 3\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          defaultValue: 99,99\n          maxLength: 50\n          isPositiveValues: true\n          fieldRegex: null\n          maxLengthDecimal: 2\n        - attribute:\n            id: 198\n            techName: birthday\n            rusName: Дата рождения\n            enName: Birthday\n            type:\n              id: 3\n              name: Дата\n              typeTag: date\n            description: Дата рождения\n            alterNames:\n            - id: 12\n              rusAlterName: День рождения\n              enAlterName: Birthday\n          catalogAttrId: 193\n          selectedAlterNameId: 12\n          order: 4\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: [1]\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          defaultValue: null\n          isTime: false\n          fieldMask: dd.mm.yyyy\n        - attribute:\n            id: 54\n            techName: goodman\n            rusName: Хороший человек\n            enName: Good man\n            type:\n              id: 7\n              name: Флаг\n              typeTag: boolean\n            description: Признак, что человек хороший\n          catalogAttrId: 194\n          selectedAlterNameId: null\n          order: 5\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: createObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          defaultValue: true\n        - attribute:\n            id: 84325\n            techName: photo\n            rusName: Фото\n            enName: Photo\n            type:\n              id: 6\n              name: Файл\n              typeTag: file\n            description: Фото\n          catalogAttrId: 196\n          selectedAlterNameId: null\n          order: 6\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          isMultiple: true\n        - attribute:\n            id: 3892\n            techName: characteristic\n            rusName: Характеристика\n            enName: Characteristic\n            type:\n              id: 4\n              name: Справочник\n              typeTag: dict\n            description: null\n            dictionary:\n              id: 123\n              name: Характеристики человека\n              parentId: 122\n          catalogAttrId: 197\n          selectedAlterNameId: null\n          order: 7\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          dictId: 15\n          maxCntElement: 1\n          minCntElement: 10\n          parentDictAttrId: null\n          refColDict: null\n          defaultColDict:\n            techName: NAME\n            rusName: Наименование\n          sort: asc\n          isMultiple: true\n        - attribute:\n            id: 348\n            techName: friend\n            rusName: Друг\n            enName: Friend\n            type:\n              id: 8\n              name: Ссылка на объект\n              typeTag: link\n            description: null\n          catalogAttrId: 198\n          selectedAlterNameId: null\n          order: 8\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          refCatalog:\n            id: 194700\n            name: Персоны\n            mainAttrId: 361\n          refAttr:\n            id: 1\n            name: Наменование\n          maxCntElement: 3\n          minCntElement: 1\n          isMultiple: true\n          isRefUnsignedObj: true\n        - attribute:\n            id: 10\n            techName: education\n            rusName: Образование\n            enName: Education\n            type:\n              id: 5\n              name: Таблица\n              typeTag: table\n            description: null\n          catalogAttrId: 199\n          selectedAlterNameId: null\n          order: 9\n          isReq: true\n          isUniq: true\n          isUniqWithinParent: false\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          objOperatingMode: updateObj\n          isManualInput: false\n          manualInputTargets: []\n          manualInputSources: []\n          oiv:\n            - id: 1\n              name: Тестовая организация\n          maxCntElement: 10\n          minCntElement: 0\n          # childCatalogUniqAttrIds: [1]\n          childCatalogId: 194701\n          attributes:\n            - attribute:\n                id: 12\n                techName: institution\n                rusName: Учебное заведение\n                enName: Institution\n                type:\n                  id: 1\n                  name: Строка\n                  typeTag: string\n                description: Имя\n              selectedAlterNameId: null\n              catalogAttrId: 201\n              order: 1\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: true\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              maxLength: 4000\n              fieldMask: null\n              fieldRegex: null\n              defaultValue: null\n              searchIndex: null\n\n    ConstructorValidationRequest:\n      description: |-\n        Пример запроса с кодом пакетов конструктора процессов.\n        Полный пример кода пакета подготовлен в вики в разделе \"Конструктор процессов\".\n      value:\n        constructor:\n          - tomlFormat: >-\n              packName = \"Код организации по ОКОГУ\"\n              packTechName = \"CodeOKOGU-28394\"\n              isMain = false\n              event = \"change\"\n              mode = \"eventAndBackground\"\n\n              [[blocks]]\n                  tagId = \"cond1\"\n                  type = \"condition\"\n                  name = \"Условие\"\n                  trueBlockTagId = \"cond2\"\n                  falseBlockTagId = \"cond3\"\n                  [blocks.properies]\n                      condition = \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n                      uniqAttr = \"\"\n          - tomlFormat: >-\n              packName = \"Код организации по ОКОГУ\"\n              packTechName = \"CodeOKOGU-28394\"\n              isMain = false\n              event = \"change\"\n              mode = \"eventAndBackground\"\n\n              [[blocks]]\n                  tagId = \"cond1\"\n                  type = \"condition\"\n                  name = \"Условие\"\n                  trueBlockTagId = \"cond2\"\n                  falseBlockTagId = \"cond3\"\n                  [blocks.properies]\n                      condition = \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n                      uniqAttr = \"\"\n        attributes:\n          - techName: OrgTypeName\n            typeTagId: dict\n            isSystemModify: false\n            dictionaryId: 1234\n          - techName: OKFSCode\n            typeTagId: integer\n            isSystemModify: false\n          - techName: endOfFantasy\n            typeTagId: link\n            isSystemModify: false\n            refCatalogId: 193478\n          - techName: wowTable\n            typeTagId: table\n            isSystemModify: false\n            attributes:\n              - techName: Hours\n                typeTagId: string\n                isSystemModify: false\n        map:\n          hasGeo: true\n          typeGeoTagIds:\n            - Point\n            - MultiLineString\n            - MultiPolygon\n          isWGS84: true\n          isReq: true\n          isOneTypeGeoForObj: false\n          isNotReqGeoForService: false\n\n    FillingCatalogConditionalUniqResponse:\n      value:\n        equals(attr.EntryState.NAME, 'Актуальна') and empty(attr.ContractDateEnd)\n\n    OkFillingCatalogUniqValidateResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Настройки описаны корректно!\n\n    FillingCatalogGroupUniqTomlResponse:\n      value: |-\n        [[groups]]\\r\\n          groupTechName = \\\"NameAddress\\\"\\r\\n          groupName = \\\"Проверка уникальности Наименования и Адреса объекта\\\"\\r\\n          attributes = [\\\"attr.Name\\\", \\\"attr.Address\\\"]\\r\\n          condition = \\\"equals(attr.EntryState.NAME, 'Актуальна')\\\"\\r\\n        [[groups]]\\r\\n          groupTechName = \\\"NameCodeClose\\\"\\r\\n          groupName = \\\"Проверка уникальности Наименования и кода закрытия для неактуальных объектов\\\"\\r\\n          attributes = [\\\"attr.Name\\\", \\\"attr.CodeClose\\\"]\\r\\n          condition = \\\"equals(attr.EntryState.NAME, 'Не актуальна')\\\"\\r\\n        [[groups]]\\r\\n          groupTechName = \\\"TableGroupUniq\\\"\\r\\n          groupName = \\\"Проверка уникальности в табличном атрибуте\\\"\\r\\n          applyTableAttr = \\\"attr.Table\\\"\\r\\n          attributes = [\\\"attr.Code\\\", \\\"attr.ResponsiblePerson\\\"]\\r\\n          condition = \\\"empty(attr.DateEnd)\\\"\n\n    FillingCatalogGroupUniqResponse:\n      value:\n        tomlFormat: >-\n          [[groups]]\n            groupTechName = \"NameAddress\"\n            groupName = \"Проверка уникальности Наименования и Адреса объекта\"\n            attributes = [\"attr.Name\", \"attr.Address\"]\n            condition = \"equals(attr.EntryState.NAME, 'Актуальна')\"\n          [[groups]]\n            groupTechName = \"NameCodeClose\"\n            groupName = \"Проверка уникальности Наименования и кода закрытия для неактуальных объектов\"\n            attributes = [\"attr.Name\", \"attr.CodeClose\"]\n            condition = \"equals(attr.EntryState.NAME, 'Не актуальна')\"\n          [[groups]]\n            groupTechName = \"TableGroupUniq\"\n            groupName = \"Проверка уникальности в табличном атрибуте\"\n            applyTableAttr = \"attr.Table\"\n            attributes = [\"attr.Code\", \"attr.ResponsiblePerson\"]\n            condition = \"empty(attr.DateEnd)\"\n        jsonFormat:\n          groups:\n            - groupTechName: NameAddress\n              groupName: Проверка уникальности Наименования и Адреса объекта\n              attributes:\n                - attr.Name\n                - attr.Address\n              condition: equals(attr.EntryState.NAME, 'Актуальна')\n            - groupTechName: NameCodeClose\n              groupName: Проверка уникальности Наименования и кода закрытия для неактуальных объектов\n              attributes:\n                - attr.Name\n                - attr.CodeClose\n              condition: equals(attr.EntryState.NAME, 'Не актуальна')\n            - groupTechName: TableGroupUniq\n              groupName: Проверка уникальности в табличном атрибуте\n              applyTableAttr: attr.Table\n              attributes:\n                - attr.Code\n                - attr.ResponsiblePerson\n              condition: empty(attr.DateEnd)\n\n    FillingCatalogMapResponse:\n      value:\n        hasGeo: true\n        typeGeoTagIds:\n          - Point\n          - MultiLineString\n          - MultiPolygon\n        isWGS84: true\n        isReq: true\n        isOneTypeGeoForObj: false\n        isNotReqGeoForService: false\n        isManualGeo: true\n        onMapAttrId: 214\n        dictId: 5437\n        manualInputGeoTagId: Point\n        autocompleteGeoTypeTagIds: \n          - Point\n          - MultiPolygon\n        isManualLocation: true\n        manualInputTargets: \n          - 23\n          - 4214\n          - 3544\n          - 46\n          - 845\n          - 834\n\n    CatalogRefRequest:\n      value:\n        fullName: Нестационарные торговые объекты по реализации печатной продукции\n        technicalName: Нестационарные торговые объекты по реализации печатной продукции\n        shortName: Нестационарные торговые объекты по реализации печатной продукции\n        kindCatalogId: 8\n        typeCatalogId: 1\n        thematicCategoryId: 16\n        # objectCategoriesIds:\n        #   - 22900\n        defaultPriority: 5\n\n    FillingCatalogArchivedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Каталог переведён в архив.\n\n    FillingCatalogUnarchivedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Каталог выведен из архива.\n\n    FillingCatalogAlreadyArchivedError:\n      description: |-\n        Проверка текущего статуса каталога. Если он уже является архивным, то повторный перевод в архив недоступен.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Каталог имеет статус \"Архивный\", повторный перевод в архив недоступен.\n\n    FillingCatalogAlreadyUnarchivedError:\n      description: |-\n        Проверка текущего статуса каталога. Если он не является архивным, то вывод каталога из архива недоступен.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Каталог не является архивным, вывод из архива недоступен.\n\n    SignedFillingCatalogCannotBeArchivedError:\n      description: |-\n        Невозможно внести изменения в настройки каталога, который находится в процессе подписания.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Каталог находится в процессе подписания, изменение статуса невозможно.\n\n    FillingCatalogNotFoundError:\n      description: |-\n        Указанный каталог заполнения не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталога заполнения с идентификатором {catalogId} не существует.\n\n    FillingCatalogCatalogsSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется каталог заполнения\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    FillingCatalogDictionariesSearchRequest:\n      description: Пример тела запроса для поиска по списку справочников, созданных на основе каталога\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    FillingCatalogCatalogsAttributesInfoArrayResponse:\n      description: Пример ответа из массива каталогов и атрибутов, в которых используется атрибут\n      value:\n        - id: 107834\n          fullName: Платные парковки\n          attributeRusName: Номер парковки\n          attributeEnName: Number of parking\n        - id: 105264\n          fullName: Бесплатные горки для катания на ватрушках\n          attributeRusName: Сложность горки\n          attributeEnName: Slide level\n\n    FillingCatalogCatalogPackageInfoArrayResponse:\n      description: Пример ответа из массива каталогов и конструкторов процессов, в которых используется каталог\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          packhName: Проверка строковых\n          packTechName: checkString\n        - id: 76\n          fullName: Тоннели\n          packName: Проверка числовых\n          packTechName: checkInteger\n\n    FillingCatalogCatalogUniqInfoArrayResponse:\n      description: Пример ответа из массива каталогов и настроек уникальностей, в которых используется каталог\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          packTechName: conditional\n          uniqTypeTag: conditional\n        - id: 76\n          fullName: Тоннели\n          packTechName: NameAddress\n          uniqTypeTag: group\n\n    FillingCatalogCatalogGroupsSearchRequest:\n      description: Пример тела запроса для поиска по списку групп каталгов, в которые входит каталог\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: name\n            operator: contains\n            value: \"ЖКХ\"\n\n    FillingCatalogCatalogGroupsInfoArrayResponse:\n      description: Пример ответа из массива групп каталогов, в которые входит каталог\n      value:\n        - id: 1234\n          name: Группа ЖКХ каталогов\n        - id: 76\n          name: Группка медицинских каталогов\n\n    FillingCatalogPublCatalogConditionsInfoArrayResponse:\n      description: Пример ответа из массива каталогов публикации, в которых каталог используется в настройках ограничения выборки\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n        - id: 76\n          fullName: Тоннели\n\n    FillingCatalogDictionariesInfoArrayResponse:\n      description: Пример ответа из массива справочников, созданных на основе каталога\n      value:\n        - id: 1234\n          name: Адресный реестр\n        - id: 76\n          name: Адреса БТИ без земельных участков\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с пользователями ЕХД\n  version: 1.0.0\n\n\npaths:\n\n  /users/search:\n    post:\n      tags: \n        - users\n      summary: Получение списка пользователей\n      description: Возвращает список пользователей, включая удалённых и заблокированных\n      parameters:        \n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых пользователей (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке Пользователей. Поиск производится по атрибутам `id`, `Логин`, `Фамилия`, `Имя`, `Отчество` и `e-mail`. Запрос со значением `Iva` вернет всех Пользователей, атрибуты которого содержат подстроку `Iva`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `firstName`, `lastName`, `pathroName` `login`, `email`, `userGroupName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - lastName\n              - firstName\n              - pathroName\n              - login\n              - email\n              - userGroupName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - $ref: '#/components/parameters/oivIdQueryParam'\n        - $ref: '#/components/parameters/isAdminQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/UserListRequestBody'            \n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n      \n  /users:\n    get:\n      tags:\n        - users\n      summary: Получение данных пользователя\n      description: |-\n        Получение данных пользователя пользователя\n      parameters:\n        - $ref: '#/components/parameters/userIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/User'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserDataResponse'\n    post:\n      tags:\n        - users\n      summary: Создание пользователя\n      description: |-\n        Создает нового пользователя\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n            examples:\n              Пример:\n                $ref: '#/components/examples/UserCreateRequest'\n        \n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserCreatedResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Логин неуникален.\n              - Email неуникален.\n              - E-mail не соответствует формату.              \n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'                  \n              examples:\n                Логин неуникален:\n                  $ref: '#/components/examples/UserNotUniqueLoginError'\n                E-mail неуникален:\n                  $ref: '#/components/examples/UserNotUniqueEmailError'                               \n                E-mail не соответствует формату:\n                  $ref: '#/components/examples/EmailWrongFormatError'  \n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует организация пользователя с указанным идентификатором.\n              - Не существует группа пользователей с указанным идентификатором.\n              \n              - Не существует пункт меню с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                               \n                Не существует организация пользователя с указанным идентификатором:\n                  $ref: '#/components/examples/OivNotExistError'\n                Не существует группа пользователей с указанным идентификатором:\n                  $ref: '#/components/examples/GroupNotExistError'\n                \n                Не существует пункт меню с указанным идентификатором:\n                  $ref: '#/components/examples/MenuPointNotExistError'\n\n    delete:\n      tags:\n        - users\n      summary: Изменение статуса учетной записи пользователя на \"Удалена\"\n      description: |-\n        Метод используется для изменения статуса на \"Удалена\" одной или нескольких учетных записей пользователя пользователей.\n      parameters:\n        - $ref: '#/components/parameters/userIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserDeletedResponse'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.              \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                          \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n\n  /users/admins:\n    post:\n      tags:\n        - users\n      summary: Создание администратора\n      description: |-\n        Создает нового пользователя с признаком администраторa\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAdmin'\n            examples:\n              Пример:\n                $ref: '#/components/examples/AdminCreateRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserCreatedResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Логин неуникален.\n              - E-mail неуникален.\n              - E-mail не соответствует формату.              \n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'                  \n              examples:\n                Логин неуникален:\n                  $ref: '#/components/examples/UserNotUniqueLoginError'\n                E-mail неуникален:\n                  $ref: '#/components/examples/UserNotUniqueEmailError'                                 \n                E-mail не соответствует формату:\n                  $ref: '#/components/examples/EmailWrongFormatError'  \n                   \n  /users/admins/{userId}:\n    put:\n      tags:\n        - users\n      summary: Изменение данных администратора\n      description: |-\n        Изменение данных пользователя       \n      parameters:\n        - $ref: '#/components/parameters/userIdPathParam'  \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UserAdmin'\n            examples:\n              Пример:\n                $ref: '#/components/examples/AdminCreateRequest'\n        \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserOkResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:              \n              - Логин неизменяем.\n              - E-mail неуникален.\n              - E-mail не соответствует формату.              \n          content:\n            application/json:\n              schema:\n                oneOf: \n                  - $ref: '_common.yaml#/components/schemas/ResourceCannotBeEditedError'                  \n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n\n              examples:                                                \n                Логин нельзя изменить:\n                  $ref: '#/components/examples/UserNotEdittedLoginError'\n                E-mail неуникален:\n                  $ref: '#/components/examples/UserNotUniqueEmailError'\n                E-mail не соответствует формату:\n                  $ref: '#/components/examples/EmailWrongFormatError'                                \n              \n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.               \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                               \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n\n  /users/{userId}/resetPassword:\n    get:\n      tags:\n        - users\n      summary: Сброс пароля пользователя (триггер для вызова метода сброса пароля KeyCloak)\n      description: |-\n        Метод используется для вызова метода сброса пароля в KeyCloak\n      parameters:\n        - $ref: '#/components/parameters/userIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserResetPasswordResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:              \n              - Указанный пользователь аутентифицируется без пароля.                          \n          content:\n            application/json:\n              schema:\n                oneOf:                  \n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'                  \n              examples:                                                \n                Пользователь аутентифицируется через СУДИР:\n                  $ref: '#/components/examples/UserHasNoPasswordError'                                              \n              \n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.\n              - Статус пользователя неактивный (удален, заблокирован, временно заблокирован).              \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                          \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n\n  \n  \n  /users/block:                    \n    get:\n      tags:\n      - users\n      summary: Блокирование пользователя\n      description: |-\n        Метод используется для блокировки одного или нескольких пользователей. В результате вызова метода статус учетной записи пользователя меняется на \"Заблокирована\".\n      parameters:\n        - $ref: '#/components/parameters/userIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserBlockedResponse'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.              \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                          \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n\n  /users/recover:\n    get:\n      tags:\n      - users\n      summary: Восстановление пользователя\n      description: |-\n        Метод используется для восстановления одного или нескольких пользователей. В результате вызова метода статус учетной записи пользователя меняется на \"Активна\". Нельзя восстановить запись, у которой isTemporary=true.\n      parameters:\n        - $ref: '#/components/parameters/userIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserRecoveredResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:              \n              - E-mail пользователя неуникален.\n\n          content:\n            application/json:\n              schema:\n                oneOf:                  \n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'                  \n              examples:                                                \n                E-mail пользователя неуникален:\n                  $ref: '#/components/examples/UserNotUniqueEmailError'    \n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.              \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                          \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n  \n  /users/{userId}:   \n\n    put:\n      tags:\n        - users\n      summary: Изменение данных пользователя\n      description: |-\n        Изменение данных пользователя       \n      parameters:\n        - $ref: '#/components/parameters/userIdPathParam'  \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/User'\n            examples:\n              Пример:\n                $ref: '#/components/examples/UserModifyRequest'\n        \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/UserOkResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Логин неуникален.\n              - Логин нельзя изменить.\n              - E-mail неуникален.\n              - E-mail не соответствует формату.\n              - Нельзя сделать постоянную учётную запись временной\n              - Нельзя изменить параметры временной учётной записи, если она истекла              \n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/ResourceCannotBeEditedError' \n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n                  - $ref: '_common.yaml#/components/schemas/ResourceCannotBeEditedError' \n                                   \n              examples:\n                Логин неуникален:\n                  $ref: '#/components/examples/UserNotUniqueLoginError'\n                Логин нельзя изменить:\n                  $ref: '#/components/examples/UserNotEdittedLoginError'\n                E-mail неуникален:\n                  $ref: '#/components/examples/UserNotUniqueEmailError'                                   \n                E-mail не соответствует формату:\n                  $ref: '#/components/examples/EmailWrongFormatError'\n                Нельзя сделать постоянную учётную запись временной:\n                  $ref: '#/components/examples/TempImpossibleError'\n                Нельзя изменить параметры временной учётной записи, если она истекла:\n                  $ref: '#/components/examples/TempFinishedError'                                \n              \n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором. \n              - Не существует организация пользователя с указанным идентификатором.\n              - Не существует группа пользователей с указанным идентификатором.\n              \n              - Не существует пункт меню с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                               \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n                Не существует организация пользователя с указанным идентификатором:\n                  $ref: '#/components/examples/OivNotExistError'\n                Не существует группа пользователей с указанным идентификатором:\n                  $ref: '#/components/examples/GroupNotExistError'\n                \n                Не существует пункт меню с указанным идентификатором:\n                  $ref: '#/components/examples/MenuPointNotExistError'\n \n  \n  /users/{userId}/specPrivileges/search:\n    post:\n      tags:\n        - users\n      summary: Получение спецпривилегий пользователя по его идентификатору\n      description: |-\n        Возвращает перечень назначенных спецпривилегий на каталоги и группы каталогов.        \n      parameters:\n        - $ref: '#/components/parameters/userIdPathParam'\n        - $ref: '#/components/parameters/dataModeFilterQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых спецпривилегий (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке спецпривилегий Пользователя. Поиск производится по атрибутам `id`, `Наименование` каталога/группы каталогов. Запрос со значением `Iva` вернет все каталоги, атрибуты которого содержат подстроку `Iva`.\n          schema:\n            type: string \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `entityId`, `entityName`.\n            \n            По умолчанию: `entityId`.\n          required: false\n          schema:\n            type: string\n            default: entityId\n            enum:\n              - entityId\n              - entityName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса для поиска по списку специальных привилегий\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            type: string\n                            enum:\n                              - entityId\n                              - entityName\n            examples:\n              Пример:\n                $ref: '#/components/examples/SpecPrivilegeSearchRequest'\n        required: false\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SpecPrivilegeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SpecPrivilegeListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.              \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                          \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'\n\n\n  /users/{userId}/specPrivileges:\n    post:\n      tags:\n        - users\n      summary: Сохранение спецпривилегий пользователя\n      description: |-\n        Сохранение спецпривилегий пользователя. Спецпривилегия должна назначаться для каталога или для группы каталогов. После сохранения спецпривилегий должно обновляться значение поля \"Наличие спецпривилегий\"(SPECIAL_PRIVILEGES) в таблице \"Пользователи\" (T_USER)       \n      parameters:\n        - $ref: '#/components/parameters/userIdPathParam'  \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/SpecPrivilege'\n            examples:\n              Пример:\n                $ref: '#/components/examples/UserCreateSpecPrivilegesRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SpecPrivilegeCreatedResponse'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует пользователь с указанным идентификатором.\n              - Не существует каталог с указанным идентификатором.\n              - Не существует группа каталогов с указанным идентификатором.\n                          \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:\n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'                                              \n                Не существует каталог с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogNotExistError'\n                Не существует группа каталогов с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogGroupNotExistError'\n                                \n    put:\n      tags:\n        - users\n      summary: Изменение спецпривилегий пользователя\n      description: |-\n        Изменение спецпривилегий пользователя.      \n      parameters:\n        - $ref: '#/components/parameters/userIdPathParam' \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: '#/components/schemas/SpecPrivilegeInfo'            \n            examples:\n              Пример:\n                $ref: '#/components/examples/SpecPrivilegeModifyRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SpecPrivilegeModifiedResponse'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Спецпривилегия не найдена.\n              - Не существует пользователь с указанным идентификатором.\n              - Не существует каталог с указанным идентификатором.\n              - Не существует группа каталогов с указанным идентификатором.\n                           \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:\n                Спецпривилегия не найдена:\n                  $ref: '#/components/examples/SpecPrivNotExistError'    \n                Не существует пользователь с указанным идентификатором:\n                  $ref: '#/components/examples/UserNotFoundError'                                              \n                Не существует каталог с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogNotExistError'\n                Не существует группа каталогов с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogGroupNotExistError'\n                \n\n  /users/specPrivileges:\n    delete:\n      tags:\n        - users\n      summary: Удаление спецпривилегий пользователя\n      description: |-\n        Удаление спецпривилегий пользователя.      \n      parameters:          \n        - $ref: '#/components/parameters/specPrivilegeIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SpecPrivilegeDeleteResponse'\n\ncomponents:\n  \n  schemas:\n    CommonUserInfo:\n      description: Общая информация о пользователе\n      type: object\n      properties:\n        id:\n          description: Идентификатор пользователя\n          type: integer\n          format: int32\n          readOnly: true\n        login:\n          description: Логин пользователя\n          type: string\n        lastName:\n          description: Фамилия\n          type: string   \n        firstName:\n          description: Имя\n          type: string\n        pathroName:\n          description: Отчество\n          type: string\n        email:\n          description: E-mail\n          type: string        \n      required:\n        - id\n        - login\n        - lastName\n        - firstName\n        - email    \n    \n    UserListItem:\n      description: Информация о пользователе в списке пользователей\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonUserInfo'\n      properties:\n        userGroupName:\n          $ref: '#/components/schemas/UserGroupNameEnum'\n        privilegeFillText:  \n          description: Список привилегий каталогов заполнения/групп каталогов (кириллицей), которые доступны пользователю\n          type: string\n          readOnly: true         \n        privilegePublText:\n          description: Список привилегий каталогов публикации (кириллицей), которые доступны пользователю\n          type: string\n          readOnly: true        \n        hasSpecialRoles:\n          description: Наличие назначенных спецролей пользователя для конкретных каталогов\n          type: boolean\n        mailingStatusName:\n          $ref: '#/components/schemas/MailingStatusNameEnum'\n        oiv:\n          description: Информация об организации, в которую входит пользователь\n          allOf:\n            - $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n        isTemporary:\n          description: Признак временного пользователя\n          type: boolean\n        dateEnd:\n          description: Дата окончания действия временной учетной записи пользователя\n          allOf: \n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n        status:\n          $ref: '#/components/schemas/UserStatus'\n        isSudir: \n          type: boolean\n      required:\n        - userGroupName\n        - privilegeFillText\n        - privilegePublText\n        - hasSpecialRoles\n        - isGetEmailName\n        - oiv\n        - isEnabled\n        - isDeleted       \n      \n    User:\n      description: Пользователь\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonUserInfo'\n      properties:\n        # Закомментировал пока нет ясности с аутентификацией\n        # sudirId:\n        #   description: Идентификатор пользователя СУДИР\n        #   type: integer\n        #   format: int32\n        #   readOnly: true\n        #keykloakId:\n        #  description: Идентификатор пользователя KeyCloak\n        # type: integer\n        #  format: int32\n        #  readOnly: true\n        phone:\n          description: Номер телефона\n          type: string\n        position:\n          description: Должность\n          type: string\n        oiv:\n          allOf:\n            - $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          readOnly: true\n        oivId:\n          description: Идентификатор ОИВ\n          type: integer\n          format: int32\n          writeOnly: true\n        userGroupTagId:\n          description: TagId группы пользователей\n          type: string          \n          writeOnly: true \n        userGroup:\n          allOf:\n            - $ref: '#/components/schemas/UserGroup'\n          readOnly: true    \n        privilegeFill:\n          $ref: '#/components/schemas/UserPrivilegeFill'\n          readOnly: false\n        privilegePubl:\n          $ref: '#/components/schemas/UserPrivilegePubl'\n          readOnly: false        \n        menuIds: \n          type: array\n          items:\n            type: integer        \n        isTemporary:\n          description: Признак временного пользователя\n          type: boolean\n        dateEnd:\n          description: Дата окончания действия временной учетной записи пользователя. При isTemporary=true dateEnd обязательна\n          allOf: \n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n      required:\n        - oivId\n        - oiv\n        - userGroupTagId\n        - userGroup\n        - privilegeFill          \n        - privilegePubl     \n        - menuIds\n        - isTemporary\n\n    UserAdmin:\n      description: Администратор\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonUserInfo'\n      properties:\n        # Закомментировал пока нет ясности с аутентификацией\n        # sudirId:\n        #   description: Идентификатор пользователя СУДИР\n        #   type: integer\n        #   format: int32\n        #   readOnly: true\n        # keykloakId:\n        #   description: Идентификатор пользователя KeyCloak\n        #   type: integer\n        #   format: int32\n        #   readOnly: true\n        phone:\n          description: Номер телефона\n          type: string\n        position:\n          description: Должность\n          type: string\n      required:\n        - lastName\n        - firstName\n        - pathroName\n    \n    SpecPrivilege:\n      type: object\n      description: Базовая информация о спецпривилегиях на каталог/группу каталогов\n      properties:\n        entityId:\n          description: Идентификатор каталога или группы каталогов\n          type: integer\n        entityName:\n          description: Наименование сущности\n          type: string\n          readOnly: true\n        entityType:\n          description: Тип сущности\n          type: string\n          enum:\n            - fillingCatalog\n            - publicationCatalog\n            - catalogGroup\n        privilege:\n          description: Привилегии каталогов и групп каталогов\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/UserPrivilegeFill'\n            - $ref: '#/components/schemas/UserPrivilegePubl'       \n      required:        \n        - entityId\n        - entityType\n        - privileges\n            \n    SpecPrivilegeInfo:\n      description: Полная информация о спецпривилегии\n      allOf:  \n      - $ref: '#/components/schemas/SpecPrivilege'       \n      properties: \n        id:\n          description: Идентификатор записи о спецпривилегии\n          type: integer \n      required:\n        - id\n        \n    CommonUserGroupInfo:\n      description: Общая информация о группе пользователя\n      type: object\n      properties:\n        id:\n          description: Идентификатор группы пользователей\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/UserGroupNameEnum'\n        tagId:\n          $ref: '#/components/schemas/UserGroupTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    UserGroup:\n      description: |-\n        Группа пользователей\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonUserGroupInfo'\n      properties:\n        excp_catalog:\n          description: Массив идентификаторов каталогов-исключений\n          type: array\n          items: \n            type: integer\n            readOnly: true\n        super_catalog:\n          description: Массив идентификаторов каталогов-исключений\n          type: array\n          items: \n            type: integer\n            readOnly: true\n      required:\n        - excp_catalog\n        - super_catalog\n   \n    \n    UserGroupNameEnum:\n      description: Наименование группы пользователей\n      oneOf:\n        - type: string\n          # enum:\n          #   - Суперпользователь\n          #   - Пользователь\n          #   - Сотрудник Аппарата Мэра\n          #   - Наблюдатель\n          #   - Гость\n    \n    UserGroupTagIdEnum:\n      description: Техническое наименование группы пользователей\n      oneOf:\n        - type: string\n          enum:\n            - superUser\n            - userOiv\n            - apparat\n            - viewAll\n            - guest\n\n    UserPrivilege:\n      description: |-\n        Привилегии пользователей      \n      type: object\n      properties:\n        id:\n          description: Идентификатор группы пользователей\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/UserPrivilegeNameEnum'\n        tagId:\n          $ref: '#/components/schemas/UserPrivilegeTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n   \n    \n    UserPrivilegeNameEnum:\n      description: Наименование привилегии пользователей\n      oneOf:\n        - type: string\n          enum:\n           - Просмотр\n           - Экспорт\n           - Редактирование\n           - Подписание\n           - Импорт\n           - Редактирование метаданных\n           - Публикация объектов\n    \n    UserPrivilegeTagIdEnum:\n      description: Техническое наименование привилегии пользователей\n      oneOf:\n        - type: string\n          enum:\n            - canView\n            - canExport\n            - canEdit\n            - canSign\n            - canImport\n            - canEditMeta\n            - canPubl\n\n    Menu:\n      description: |-\n        Пункты меню, доступные пользователям. Меню содержит два уровня.\n      type: object\n      properties:\n        id:\n          description: Идентификатор пункта меню\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/MenuNameEnum'\n        tagId:\n          $ref: '#/components/schemas/MenuTagIdEnum'\n        children: \n          description: Массив дочерних пунктов меню в формате json\n          type: array\n          items: \n            type: object\n            properties:\n              id:\n                description: Идентификатор пункта меню\n                type: integer\n                format: int32\n              name:  \n                $ref: '#/components/schemas/MenuNameEnum'\n              tagId:\n                $ref: '#/components/schemas/MenuTagIdEnum'\n              norder:\n                description: Приоритет пункта меню для отображения\n                type: integer\n                format: int32\n        norder:\n          description: Приоритет пункта меню для отображения\n          type: integer\n          format: int32                \n      required:\n        - id\n        - name\n        - tagId\n        - children\n            \n    MenuNameEnum:\n      description: Наименование пункта меню\n      oneOf:\n        - type: string\n          # enum:\n          #   - Каталоги\n          #   - Управление\n          #   - Категории объектов\n          #   - Атрибуты\n          #   - Справочники\n          #   - Управление публикацией\n          #   - Регулярные выражения\n          #   - Поисковые индексы\n          #   - Тематические категории\n          #   - Информационные системы\n          #   - Группы каталогов\n          #   - Пользователи\n          #   - Подписки на push-уведомления\n\n\n    MenuTagIdEnum:\n      description: Техническое наименование пункта меню\n      oneOf:\n        - type: string\n          enum:\n            - catalogs\n            - control\n            - object-categories\n            - attributes\n            - dictionaries\n            - publication-queue\n            - regexps\n            - search-indexes\n            - thematic-categories\n            - information-systems\n            - group-catalogs\n            - users\n            - pushsubs    \n            \n    CommonPrivilege:\n      description: |-\n        Привилегии каталогов заполнения, публикации групп каталогов      \n      properties:          \n        canView:   \n          description: Просмотр\n          type: boolean\n        canExport:   \n          description: Экспорт\n          type: boolean\n        canEditMeta:   \n          description: Редактирование метаданных\n          type: boolean\n      required:\n        - canView\n        - canExport       \n        - canEditMeta  \n\n    UserPrivilegeFill:\n      description: |-\n        Привилегии каталогов заполнения и групп каталогов\n      type: object\n      properties:\n        canView:   \n          description: Просмотр\n          type: boolean\n        canExport:   \n          description: Экспорт\n          type: boolean\n        canEditMeta:   \n          description: Редактирование метаданных\n          type: boolean\n        canEdit: \n          description: Редактирование\n          type: boolean\n        canSign:   \n          description: Подписание\n          type: boolean\n        canImport:   \n          description: Импорт\n          type: boolean        \n      required:        \n        - canEdit\n        - canSign\n        - canImport\n        - canView\n        - canExport       \n        - canEditMeta \n                 \n    UserPrivilegePubl:\n      description: |-\n        Привилегии каталогов публикации\n      type: object      \n      properties:\n        canView:   \n          description: Просмотр\n          type: boolean\n        canExport:   \n          description: Экспорт\n          type: boolean\n        canEditMeta:   \n          description: Редактирование метаданных\n          type: boolean\n        canPubl:   \n          description: Публикация объектов\n          type: boolean\n      required:        \n        - canPubl\n        - canView\n        - canExport       \n        - canEditMeta \n\n    UserStatus:\n      description: |-\n        Статус пользователя\n      type: object\n      properties:\n        id:\n          description: Идентификатор статуса пользователя\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/UserStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/UserStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId       \n\n    UserStatusNameEnum:\n      description: Наименование статуса учетной записи пользователя\n      oneOf:\n        - type: string\n          # enum:\n          #   - Активна\n          #   - Удалена\n          #   - Заблокирована\n          #   - Временно заблокирована\n          #   - Временная            \n    \n    UserStatusTagIdEnum:\n      description: TagId статуса учетной записи пользователя\n      oneOf:\n        - type: string\n          enum:\n            - active\n            - deleted\n            - blocked\n            - tempBlocked\n            - temporary      \n          \n    MailingStatus:\n      description: |-\n        Группа пользователей\n      type: object\n      properties:\n        id:\n          description: Идентификатор статуса рассылок\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/MailingStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/MailingStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n           \n    MailingStatusTagIdEnum:\n      description: TagId статуса рассылок\n      oneOf:\n        - type: string\n          enum:\n            - allOn\n            - partlyOn\n            - allOff\n    MailingStatusNameEnum:\n      description: Наименование статуса рассылок\n      oneOf:\n        - type: string\n          # enum:\n          #   - Включены все\n          #   - Частично включены\n          #   - Выключены все\n              \n    DataModeTagIdEnum:\n      description: |-\n        Техническое наименование режима работы каталога:\n          - `fillingCatalog` - Каталоги заполнения\n          - `publicationCatalog` - Каталоги публикации\n          - `catalogGroup` - Группы каталогов\n          - `all` - Все\n      oneOf:\n        - type: string\n          enum:\n            - fillingCatalog\n            - publicationCatalog\n            - catalogGroup\n            - all\n\n    OkUserRecoveredResponse:\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/OkResponse'\n      properties:      \n        userId:\n          description: Идентификатор пользователя\n          type: integer\n          format: int32\n          readOnly: true\n      required: \n        - userId    \n    \n    IncorrectUserRecoveredResponse:\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n      properties:      \n        userId:\n          description: Идентификатор пользователя\n          type: integer\n          format: int32\n          readOnly: true\n      required: \n        - userId    \n\n  requestBodies:\n    UserListRequestBody:\n      description: Пример тела запроса для поиска по списку пользователей\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - lastName\n                            - firstName\n                            - pathroName\n                            - login\n                            - email\n                            - userGroupName\n          examples:\n            Пример:\n              $ref: '#/components/examples/UserSearchRequest'\n      required: false\n\n      \n  parameters:\n\n    oivIdQueryParam:\n      name: oivId\n      in: query\n      description: Идентификатор ОИВ. Необязательный параметр. Если передается oivId, то в ответе возвращаются пользователи, связанные с указанным ОИВ.\n      required: false\n      schema:\n        type: integer\n        format: int32\n      example: 25 \n    \n    isAdminQueryParam:\n      name: isAdmin\n      in: query\n      description: Признак администратора\n      required: false\n      schema:\n        type: boolean        \n        default: false\n      example: false\n    \n    userIdPathParam:\n      name: userId\n      in: path\n      description: Идентификатор пользователя.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 188945\n    \n    specPrivilegeIdsQueryParam:\n      name: specPrivilegeIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов спецпривилегий.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [2345123]\n\n    specRolesIdsQueryParam:\n      name: specRolesIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов спецролей.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [2345123]\n       \n    userIdsQueryParam:\n      name: userIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов пользователей.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]    \n      \n    dataModeFilterQueryParam:\n      name: dataMode\n      in: query\n      description: |-\n        Технические наименования режимов работы с данными возвращаемых каталогов и групп каталогов.\n\n        Используется для фильтрации.\n        В параметре передается строка. Не может передаваться пустая строка.\n        \n        Допустимые значения:\n          - `fillingCatalog` - Каталоги заполнения\n          - `publicationCatalog` - Каталоги публикации\n          - `catalogGroup` - Группы каталогов\n          - `all` - Все\n\n        По умолчанию `all`.\n      required: false\n      schema:\n        type: string\n        items:\n          $ref: '#/components/schemas/DataModeTagIdEnum'\n    \n    \n\n  examples:\n\n    UserListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка пользователей\n      value:\n        - id: 18023\n          login: ivanovaa\n          firstName: Алексей\n          pathroName: Андреевич\n          lastName: Иванов\n          email: ivanovaa@cdek.ru                \n          userGroupName: Наблюдатель\n          privilegeFillText: Просмотр, редактирование\n          privilegePublText: Просмотр, экспорт         \n          hasSpecroles: false      \n          mailingStatusName: Выключены все\n          oiv:\n            id: 27\n            name: ГБУ \"Московский зоопарк\"          \n          isTemporary: true\n          dateEnd: 21.07.2025\n          statusId: \n            id: 1\n            name: Активна\n            tagId: active\n          isSudir: true\n        - id: 18024\n          login: ivanovala          \n          firstName: Алёна\n          pathroName: Викторовна\n          lastName: Иванова\n          email: ivanovala@cdek.ru               \n          userGroupName: Оператор каталогов       \n          hasSpecroles: true\n          mailingStatusName: Выключены все\n          oiv:\n            id: 27\n            name: ГБУ \"Московский зоопарк\"\n          isTemporary: false\n          status: \n            id: 1\n            name: Активна\n            tagId: active\n          isSudir: false        \n\n    UserDataResponse:\n      description: Пример ответа с данными пользователя\n      value:\n          - id: 18023\n            login: ivanovaa\n            oiv:\n              id: 27\n              name: ГБУ \"Московский зоопарк\"\n            firstName: Алексей\n            pathroName: Андреевич\n            lastName: Иванов\n            phone: +79113452443\n            email: ivanovaa@cdek.ru\n            position: \n            isGetEmail:\n              id: 2\n              name: Выключены все\n            userGroup:\n              id: 2\n              name: Оператор каталогов\n            privilegeFill:\n              canView: true\n              canExport: true\n              canEdit: true\n              canSign: false\n              canEditMeta: false\n              canImport: false\n            privilegePubl:\n              canView: true\n              canExport: true\n              canEditMeta: false\n              canPubl: false\n            menuIds:\n              - 1\n              - 2\n              - 4\n            isTemporary: true\n            dateEnd: 24.09.2025   \n\n    UserCreateRequest:\n      description: |-\n        Создание пользователя.\n      value:\n        login: ivanovaa\n        firstName: Алексей\n        pathroName: Андреевич\n        lastName: Иванов        \n        email: ivanovaa@cdek.ru        \n        phone: \"+79113452443\"\n        position: null\n        oivId: 254\n        userGroupTagId: apparat        \n        privilegeFill:\n          canView: true\n          canExport: true\n          canEdit: true\n          canSign: false\n          canEditMeta: false\n          canImport: false\n        privilegePubl:\n          canView: true\n          canExport: true\n          canEditMeta: false\n          canPubl: false\n        menuIds:\n          - 1\n          - 2\n          - 4 \n        isTemporary: true\n        dateEnd: 21.07.2025        \n                \n    AdminCreateRequest:\n      description: |-\n        Создание администратора.\n      value:\n        login: ivanovaa\n        firstName: Алексей\n        pathroName: Андреевич\n        lastName: Иванов        \n        email: ivanovaa@cdek.ru        \n        phone: \"+79113452443\"\n        position: Специалист по информационной безопасности              \n\n    UserModifyRequest:\n      description: |-\n        Изменение пользователя.\n      value:\n        login: ivanovaa              \n        firstName: Алексей\n        pathroName: Андреевич\n        lastName: Иванов        \n        email: ivanovaa@cdek.ru\n        phone: \"+79113333311\"\n        position: null\n        oivId: 27  \n        userGroupTagId: apparat          \n        privilegeFill:\n          canView: true\n          canExport: true\n          canEdit: true\n          canSign: false\n          canEditMeta: false\n          canImport: false\n        privilegePubl:\n          canView: true\n          canExport: true\n          canEditMeta: false\n          canPubl: false\n        menuIds:\n          - 1\n          - 2\n          - 6\n        isTemporary: true\n        dateEnd: 21.07.2025   \n    \n    UserCreatedResponse:\n      description: |-\n        Пользователь создан.\n      value:\n        id: 19516\n        code: 201\n        messageType: Created\n        message: Пользователь успешно создан!\n\n    UserOkResponse:\n      description: |-\n        Данные пользователя обновлены.\n      value:\n        id: 516\n        code: 200\n        messageType: Ok\n        message: Пользователь успешно изменен!\n\n    UserNotUniqueLoginError:\n      description: |-\n        Логин пользователя неуникален.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Пользователь с таким логином уже существует.\n\n    UserNotUniqueEmailError:\n      description: |-\n        E-mail пользователя неуникален.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Пользователь с таким адресом электронной почты уже существует.\n\n    UserNotEdittedLoginError:\n      description: |-\n        Логин пользователя неизменяем.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Логин пользователя нельзя изменить.\n\n    EmailWrongFormatError:\n      description: |-\n        Значение в поле \"E-mail\" не соответствует формату.\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: E-mail не соответствует требуемому формату.\n    \n    TempImpossibleError:\n      description: |-\n        Невозможно сделать постоянную учётную запись временной\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Невозможно сделать постоянную учётную запись временной.\n    \n    TempFinishedError:\n      description: |-\n        Срок действия учётной записи истёк, изменения невозможны\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Невозможно изменить параметры временной учётной записи, срок действия которой закончился.\n   \n    UserHasNoPasswordError:\n      description: |-\n        Указанный пользователь аутентифицируется через СУДИР.\n      value:\n        code: 400\n        messageType: Bad Request\n        message: Пользователь с идентификатором {userId} аутентифицируется через СУДИР. Невозможно сбросить пароль.\n\n    UserNotActiveError:\n      description: |-\n        Учётная запись пользователя не находится в активном статусе. Неактивные статусы: \"Удалена\", \"Заблокирована\", \"Временно заблокирована\".\n      value:\n        code: 400\n        messageType: Bad Request\n        message: Невозможно сбросить пароль, учёчная запись пользователя в статусе Удалена. Восстановите/разблокируйте пользователя.\n\n    OivNotExistError: \n      description: |-\n        Не существует организация пользователя.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Не существует организация пользователя {oivId}.\n    \n    GroupNotExistError:\n      description: |-\n        Не существует группа пользователей.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Не существует группа пользователей {gropupId}.\n         \n    SpecPrivNotExistError:\n      description: |-\n        Не существует спецпривиления пользователя.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Спецпривилегии с идентификатором {id} не существует.\n      \n    SpecPrivilegeNotExistError:\n      description: |-\n        Не существует запись о спецпривилегиях пользователя.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Записи о спецпривилегиях с идентификатором {id} не существует.\n    \n    UserNotFoundError:\n      description: |-\n        Указанный пользователь не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Пользователя с идентификатором {userId} не существует.\n\n    MenuPointNotExistError:\n      description: |-\n        Не существует пункт меню.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Не существует пункт меню {menuId}.\n    \n    CatalogNotExistError:\n      description: |-\n        Не существует каталог.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Не существует каталог {catalogId}.\n\n    CatalogGroupNotExistError:\n      description: |-\n        Не существует группа каталогов.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Не существует группы каталогов {catalogGroupId}.\n    \n    UserDeletedResponse:\n      description: |-\n        Пользователи удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные пользователи помечены как удаленные!   \n   \n    UserCreateSpecPrivilegesRequest:\n      description: Пример запроса c массивом элементов списка спецпривилегий пользователя\n      value:\n        - entityId: 45\n          entityType: fillingCatalog\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: false\n            canImport: false\n            canEditMeta: false            \n        - entityId: 2143\n          entityType: catalogGroup\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: true\n            canImport: false\n            canEditMeta: false            \n        - entityId: 14\n          entityType: publicationCatalog\n          privilege:\n            canView: true          \n            canExport: true            \n            canEditMeta: false\n            canPublication: false\n      \n    SpecPrivilegeListItemArrayResponse:\n      description: Пример ответа c массивом элементов спецпривилегий пользователя\n      value:\n        - id: 879897987          \n          entityId: 45\n          entityName: Нестационарные объекты города Москвы\n          entityType: publicationCatalog\n          privilege:\n            canView: true          \n            canExport: true            \n            canEditMeta: false\n            canPubl: false\n        - id: 234234233          \n          entityId: 2143\n          entityName: Парковые территории города Москвы\n          entityType: fillingCatalog\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: false\n            canImport: true\n            canEditMeta: false            \n        - id: 232455345\n          entityId: 14\n          entityName: Группа каталогов Управы восточного округа\n          entityType: catalogGroup\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: false\n            canImport: true\n            canEditMeta: false  \n\n    SpecPrivilegeModifyRequest: \n      description: Пример запроса c массивом элементов спецпривилегий пользователя\n      value:\n        - id: 141345212\n          entityId: 45\n          entityType: fillingCatalog\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: false\n            canImport: false\n            canEditMeta: false\n            \n        - id: 141345212\n          entityId: 2143\n          entityType: catalogGroup\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: false\n            canImport: true\n            canEditMeta: false\n            \n        - id: 141345212\n          entityId: 14\n          entityType: catalogGroup\n          privilege:\n            canView: true          \n            canExport: true\n            canEdit: true\n            canSign: false\n            canImport: false\n            canEditMeta: false            \n    \n    SpecPrivilegeModifiedResponse: \n      description: |-\n        Спецпривилегии пользователя успешно обновлены.\n      value:\n        code: 200\n        messageType: Ok\n        message: Спецпривилегии пользователя обновлены!\n    \n    SpecPrivilegeCreatedResponse:\n      description: |-\n        Спецпривилегии пользователя успешно созданы.\n      value:\n        id: 18345\n        code: 201\n        messageType: Ok\n        message: Спецпривилегии пользователя назначены!\n\n    SpecPrivilegeDeleteResponse:\n      description: |-\n        Спецпривилегии пользователя успешно удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: Спецпривилении пользователя удалены!\n\n    UserSearchRequest:\n      value:\n        filters: \n          - attribute: 'firstName'\n            operator: 'contains'\n            value: 'Иван'    \n   \n\n    SpecPrivilegeSearchRequest:\n      value:\n        filters:\n          - attribute: 'entityName'\n            operator: 'contains'\n            value: 'Больницы'\n    \n    UserBlockedResponse:\n      description: Пример ответа при блокировке пользователей\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные пользователи заблокированы!\n\n    UserRecoveredResponse:\n      description: Пример ответа при восстановлении пользователей\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные пользователи восстановлены!\n\n\n    UserResetPasswordResponse:\n      description: Пример ответа при сбросе пароля пользователя\n      value:\n        code: 200\n        messageType: Ok\n        message: Пароль успешно сброшен!\n\n    MultiStatusUserRecoveredResponse:\n      description: |-\n        Пример ответа при успешной обработке запроса сохранения объектов,\n        но с ошибками бизнес-логики для некоторых объектов\n      value:\n        - code: 200\n          messageType: Ok\n          message: Пользователь успешно восстановлен!\n          userId: 123456789          \n        - code: 400\n          messageType: Unique value error\n          message: E-mail пользователя неуникален\n          userId: 987432554",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с тематическими категориями, добавленными в ЕХД\n  version: 1.0.0\n\npaths:\n\n  /thematicCategories/search:\n    post:\n      tags: \n        - thematicCategories\n      summary: Получение списка тематических категорий\n      description: Возвращает список тематических категорий, добавленных в ЕХД\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых тематических категорий (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке тематических категорий. Поиск производится по атрибутам `id`, `name` и `enName`. Запрос со значением `12` вернет все категории, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string   \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n              - enName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'  \n        # - name: hasCatalogs\n        #   in: query\n        #   required: false\n        #   description: Признак, указывающий, что тематическая категория выбрана хотя бы в одном каталоге\n        #   schema:\n        #     type: boolean\n        #     default: false\n        # - name: countCatalogs\n        #   in: query\n        #   required: false\n        #   description: Признак, указывающий, что ответ должен содержать количество каталогов, в которых выбрана определённая тематическая категория\n        #   schema:\n        #     type: boolean\n        #     default: false    \n      requestBody:\n        description: Пример тела запроса с фильтрами по списку тематических категорий\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n                              - enName\n            examples:\n              Пример:\n                $ref: '#/components/examples/ThematicCategorySearchRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. \n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ThematicCategoryListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'        \n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n\n  /thematicCategories:\n    get:\n      tags:\n        - thematicCategories\n      summary: Получение тематических категорий по идентификаторам\n      description: |-\n        Возвращает полную информацию о тематических категориях по идентификаторам.\n        \n        Если тематическая категория с указанным идентификатором не найдена, она не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/thematicCategoryIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ThematicCategory'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryArrayResponse'\n    post:\n      tags:\n        - thematicCategories\n      summary: Создание тематической категории\n      description: |-\n        Создает тематическую категорию. \n        В запросе передается:\n        - Русскоязычное наименование тематической категории `name`\n        - Англоязычное наименование темотической категории `enName`\n        - Статус публикации тематической категории `statusTagId`\n        - Идентификатор файла (uuid) иконки категории `fileId`\n\n        Для тематической категории должны выполняться следующие правила:\n        - уникальное русскоязычное наименование `name`\n        - уникальное англоязычное наименование `enName`\n\n        Если передается статус `Опубликована`, то должны выполняться следующие условия:\n          - англоязычное наименование (поле `enName`) должно быть заполнено\n          - идентификатор файла иконки категории (поле `fileId`) должно быть заполнено\n          - формат файла иконки категории должен быть `svg`\n      requestBody:\n        $ref: '#/components/requestBodies/ThematicCategoryRequestBody'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryCreatedResponse'\n        '400':\n          $ref: '#/components/responses/ThematicCategoryBadRequestPostOrPutResponse'\n    delete:\n      tags:\n        - thematicCategories\n      summary: Удаление тематической категории\n      description: |-\n        Удаляет тематические категории по переданным идентификаторам.\n        \n        Если одна или несколько тематических категорий используются хотя бы в одном каталоге, \n        будет возвращена ошибка и удаление всех переданных тематических категорий не будет выполнено.\n      parameters:\n        - $ref: '#/components/parameters/thematicCategoryIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryDeletedResponse'\n        '400':\n          $ref: '#/components/responses/ThematicCategoryDeletedErrorResponse'\n\n  /thematicCategories/{thematicCategoryId}:\n    put:\n      tags:\n        - thematicCategories\n      summary: Изменение информации о тематической категории\n      description: |-\n        Обновляет информацию о тематической категории.\n        \n        В запросе передается:\n          - новое русскоязычное наименование тематической категории в поле `name`, которое должны быть уникальным\n          - новое англоязычное наименование тематической категории в поле `enName`, которое должны быть уникальным\n          - измененный статус публикации, если необходимо опубликовать или снять с публикации тематическую категорию\n          - измененный идентификатор файла иконки категории, если категория опубликована\n\n        Если передается статус `Опубликована`, то должны выполняться следующие условия:\n          - англоязычное наименование (поле `enName`) должно быть заполнено\n          - идентификатор файла иконки категории (поле `fileId`) должно быть заполнено\n          - формат файла иконки категории должен быть `svg`\n      parameters: \n        - $ref: '#/components/parameters/thematicCategoryIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/ThematicCategoryRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryEditedResponse'\n        '400':\n          $ref: '#/components/responses/ThematicCategoryBadRequestPostOrPutResponse'\n        '404':\n          $ref: '#/components/responses/ThematicCategoryNotFoundErrorResponse'\n\n  # Связанные сущности тематической категории\n  /thematicCategories/{thematicCategoryId}/catalogs/search:\n    post:\n      tags:\n        - thematicCategories\n      summary: Получение информации о каталогах заполнения, в которых используется тематическая категория\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения, в которых используется тематическая категория.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/thematicCategoryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id` и `fullName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется тематическая категория\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/ThematicCategoryCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/ThematicCategoryNotFoundErrorResponse'\n\n  /thematicCategories/{thematicCategoryId}/publicationCatalogs/search:\n    post:\n      tags:\n        - thematicCategories\n      summary: Получение информации о каталогах публикации, в которых используется тематическая категория\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации, в которых используется тематическая категория.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/thematicCategoryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id` и `fullName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется тематическая категория\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/ThematicCategoryCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/ThematicCategoryNotFoundErrorResponse'\n\n\ncomponents:\n\n  schemas:\n\n    CommonThematicCategoryInfo:\n      description: Общая информация о тематической категории\n      type: object\n      properties:\n        id:\n          description: Идентификатор тематической категории\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Русскоязычное наименование тематической категории\n          type: string\n      required:\n        - id\n        - name\n    \n    ThematicCategory:\n      description: Тематическая категория\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonThematicCategoryInfo'\n      properties:\n        enName:\n          description: Англоязычное наименование тематической категории\n          type: string\n        status:\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/ThematicCategoryStatus'\n        statusTagId:\n          writeOnly: true\n          allOf:\n            - $ref: '#/components/schemas/ThematicCategoryStatusTagIdEnum'\n        fileId:\n          description: Идентификатор изображения (uuid) для иконки категории\n          type: string\n      required:\n        - status\n        - statusTagId\n\n    ThematicCategoryListItem:\n      description: Информация о тематической категории в списке тематических категорий\n      allOf:\n         - $ref: '#/components/schemas/CommonThematicCategoryInfo'\n      type: object\n      properties:\n        enName:\n          description: |-\n            Англоязычное наименование тематической категории\n\n            Если не задано, то возвращается пустая строка\n          type: string\n        status:\n          allOf:\n            - $ref: '#/components/schemas/ThematicCategoryStatus'\n      required:\n        - enName\n        - status\n\n    ThematicCategoryStatusTagIdEnum:\n      description: |-\n        Статус публикации тематической категории:\n          - `unpublished` - не опубликована\n          - `published` - опубликована\n      oneOf:\n        - type: string\n          enum:\n            - unpublished\n            - published\n\n    ThematicCategoryStatusNameEnum:\n      description: Наименование статуса публикации тематической категории\n      oneOf:\n        - type: string\n          # enum:\n          #   - Не опубликована\n          #   - Опубликована\n\n    ThematicCategoryStatus:\n      description: |-\n        Статус публикации тематической категории\n      type: object\n      properties:\n        id:\n          description: Идентификатор статуса публикации\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/ThematicCategoryStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ThematicCategoryStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    # ThematicCategoryCatalogInfo:\n    #   description: |-\n    #     Информация о каталоге, в котором используется тематическая категория.\n    #   type: object\n    #   readOnly: true\n    #   allOf:\n    #     - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      \n  parameters:\n\n    thematicCategoryIdsQueryParam:\n      name: categoryIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов тематических категорий.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n\n    thematicCategoryIdFilterQueryParam:\n      name: thematicCategoryId\n      in: query\n      required: false\n      description: Идентификатор тематической категории. Используется для фильтрации по тематической категории.\n      schema:\n        type: integer\n\n    thematicCategoryIdPathParam:\n      name: thematicCategoryId\n      in: path\n      description: |-\n        Идентификатор тематической категории.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 6\n\n  requestBodies:\n    ThematicCategoryRequestBody:\n      description: Тело запроса с информацией о тематической категории.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ThematicCategory'\n          examples:\n            Пример:\n              $ref: '#/components/examples/ThematicCategoryRequestBody'\n\n  responses:\n\n    ThematicCategoryBadRequestPostOrPutResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Тематическая категория с переданным наиеменованием `name` уже существует;\n          - Тематическая категория с переданным наиеменованием `enName` уже существует;\n          - В русскоязычном наиеменовании тематической категории `name`  переданы запрещенные символы;\n          - В англоязычном наиеменовании тематической категории `enName` переданы запрещенные символы;\n          - При передаче статуса `Опубликована` не передано англоязычное наименование тематической категории (поле `enName`)\n          - При передаче статуса `Опубликована` не передан идентификатор файла иконки категории (поле `fileId`)\n          - Передан недопустимый формат файла иконки категории. \n      content:\n        application/json:\n          schema:\n              oneOf:\n              - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n              - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n              - $ref: '_common.yaml#/components/schemas/MissingParamsError'\n              - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n          examples:\n            Неуникальное название тематической категории:\n              $ref: '#/components/examples/ThematicCategoryNameNotUniqueError'\n            В русскоязычном или англоязычном названиях тематической категории присутствуют запрещенные символы:\n              $ref: '#/components/examples/ThematicCategoryBadNameError'\n            Не переданы обязательные для публикации поля:\n              $ref: '#/components/examples/ThematicCategoryNotFoundEnNameOrFieldId'\n            Передан не допустимый формат файла иконки категории:\n              $ref: '#/components/examples/ThematicCategoryNotSvgError'\n\n    ThematicCategoryDeletedErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Одна или несколько из переданных тематических категорий используются в каталогах заполнения;\n          - Одна или несколько из переданных тематических категорий используются в каталогах публикации.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n          examples:\n            Тематическая категория используется в каталоге заполнения:\n              $ref: '#/components/examples/ThematicCategoryIsUsedInCatalogsError'\n            Тематическая категория используется в каталоге публикации:\n              $ref: '#/components/examples/ThematicCategoryIsUsedInPublicationCatalogsError'\n\n    ThematicCategoryNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id тематической категории не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id тематической категории:\n              $ref: '#/components/examples/ThematicCategoryNotFoundError'\n\n  examples:\n\n    ThematicCategorySearchRequest:\n      description: Пример тела запроса для поиска по списку тематических категорий \n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 5\n          - attribute: name\n            operator: contains\n            value: спорт\n\n    ThematicCategoryListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка тематических категорий\n      value:\n        - id: 20\n          name: Земля и имущество\n          enName: Land and assets\n          status:\n            id: 1\n            name: Опубликована\n            tagId: published\n        - id: 21\n          name: Здравохранение\n          enName: \"\"\n          status:\n            id: 2\n            name: Не опубликована\n            tagId: unpublished\n\n    ThematicCategoryArrayResponse:\n      description: Пример ответа с массивом тематических категорий\n      value:\n        - id: 5\n          name: Земля и имущество\n          enName: Land and property\n          status:\n            id: 1\n            name: Опубликована\n            tagId: published\n          fileId: 697580d7-5ed2-43f7-8454-129def933f4a\n        - id: 8\n          name: Здравохранение\n          enName: Healthcare\n          status:\n            id: 2\n            name: Не опубликована\n            tagId: unpublished\n          fileId: cc8eb1d3-8b42-403a-bbd9-918220a8321f\n\n    ThematicCategoryNotFoundError:\n      description: |-\n        Указанная тематическая категория не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Тематической категории с идентификатором {thematicCategoryId} не существует.                  \n\n    ThematicCategoryRequestBody:    \n      description: Пример тела запроса с информацией о тематической категории\n      value:\n        name: Финансы\n        enName: Finance\n        statusTagId: published\n        fileId: ace20e83-1076-4729-9087-f88a9e7fc716\n\n    ThematicCategoryCreatedResponse:\n      description: Пример ответа при создании тематической категории\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Тематическая категория успешно создана!\n\n    ThematicCategoryDeletedResponse:\n      description: Пример ответа при удалении тематических категорий\n      value:\n        code: 200\n        messageType: Ok\n        message: Тематические категории успешно удалены!\n\n    ThematicCategoryIsUsedInCatalogsError:\n      description: |-\n        Удаляется тематическая категория, которая используется в каталогах заполнения.\n      value:\n        id: 7\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Тематическая категория (id {thematicCategoryId}) не может может быть удалена, так как используется в одном или нескольких каталогах заполнения. \n          Удаление тематических категорий не выполнено.\n\n    ThematicCategoryIsUsedInPublicationCatalogsError:\n      description: |-\n        Удаляется тематическая категория, которая используется в каталогах публикации.\n      value:\n        id: 7\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Тематическая категория (id {thematicCategoryId}) не может может быть удалена, так как используется в одном или нескольких каталогах публикации. \n          Удаление тематических категорий не выполнено.\n\n    ThematicCategoryNameNotUniqueError:\n      description: |-\n        Передано неуникальное название тематической категории.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Тематическая категория с таким названием уже существует. Русскоязычное и англоязычное наименования должны быть уникальными.\n\n    ThematicCategoryBadNameError:\n      description: |-\n        В русскоязычном или англоязычном наименовании тематической категории переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: |-\n          В русскоязычном или англоязычном наименовании тематической категории переданы запрещенные символы. \n          Русскоязычное наименование может включать все символы, кроме < и >.\n          Англоязычное наименование может включать все символы, кроме букв русского алфавита, а также символов < и >.\n\n    ThematicCategoryNotFoundEnNameOrFieldId:\n      description: |-\n        При передаче статуса тематической категории `Опубликована` не передано англоязычное наименование (поле `enName`) или идентификатор файла (поле `fileId`).\n      value:\n        code: 400\n        messageType: Required fields not passed\n        message: |-\n          Не переданы обязательные для публикации поля. \n          При передаче статуса публикации \"Опубликована\" должны быть переданы англоязычное наименование (поле \"enName\") и идентификатор файла (поле \"fileId\").\n\n    ThematicCategoryNotSvgError:\n      description: |-\n        Передан не допустимый формат файла иконки тематической категории.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: |-\n          Передан не допустимый формат файла иконки тематической категории. \n          Формат файла иконки тематической категории должен быть SVG.\n\n    ThematicCategoryEditedResponse:\n      description: Пример ответа при изменении тематической категории\n      value:\n        code: 200\n        messageType: Ok\n        message: Тематическая категория успешно изменена!\n\n    ThematicCategoryCatalogSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется тематическая категория\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    ThematicCategoryCatalogInfoArrayResponse:\n      description: Пример ответа из массива каталогов, в которых используется тематическая категория\n      value:\n        - id: 109145\n          fullName: Платные поликлиники\n        - id: 345654\n          fullName: Дошкольные учреждения\n\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с организациями/ОИВ, добавленными в ЕХД\n  version: 1.0.0\n\n\npaths:\n\n# в выводе списка ОИВ для ОИВ удалить отображение дочерних ОИВ, для них будет отдельный метод /oivs/{oivId}/childOivs/search\n  /oivs/search:\n    post:\n      tags: \n        - oivs\n      summary: Получение списка ОИВов\n      description: Возвращает список неудалённых ОИВов, добавленных в ЕХД\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых ОИВов (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке ОИВов. Поиск производится по атрибутам `id`, `name`, 'shortName', `inn`. Запрос со значением `12` вернет все ОИВы, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `name`, `shortName`, `inn`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n              - shortName\n              - inn\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'        \n        - name: hasCatalogs\n          in: query\n          required: false\n          description: Признак, указывающий, что ОИВ является поставщиком хотя бы в одном каталоге\n          schema:\n            type: boolean\n            default: false\n        - name: countCatalogs\n          in: query\n          required: false\n          description: Признак, указывающий, что ответ должен содержать количество каталогов, для которых ОИВ является поставщиком\n          schema:\n            type: boolean\n            default: false    \n      requestBody:        \n        $ref: '#/components/requestBodies/OivListRequestBody'  \n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OivListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n  \n  /oivs:\n    get:\n      tags:\n        - oivs\n      summary: Получение ОИВов по идентификаторам\n      description: |-\n        Возвращает полную информацию об ОИВах по идентификаторам.\n        \n        Если ОИВ с указанными идентификатором не найден, он не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/oivIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/Oiv'\n                    - properties:\n                        keycloakId:\n                          type: string\n                        token:\n                          type: string\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivArrayResponse'\n\n    post:\n      tags:\n        - oivs\n      summary: Создание ОИВ\n      description: |-\n        Создает новый ОИВ        \n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oiv'\n            examples:\n              Пример:\n                $ref: '#/components/examples/OivCreateRequest'\n        \n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivCreatedResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Наименование неуникально.\n              - ИНН не соответствует формату.            \n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n              examples:\n                Наименование неуникально:\n                  $ref: '#/components/examples/OivNotUniqueNameError'\n                ИНН не соответствует формату:\n                  $ref: '#/components/examples/InnWrongFormatError'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует родительский ОИВ с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                               \n                Не существует родительский ОИВ с указанным идентификатором:\n                  $ref: '#/components/examples/OivNotExistError'\n\n    delete:\n      tags:\n        - oivs\n      summary: Удаление ОИВ\n      description: |-\n        Метод используется для удаления одного или нескольких ОИВов, не имеющих связи с пользователями, гуппами каталогов, огранизациями и другими ОИВ.\n        \n        При удалении ОИВ удаляются связи ОИВ с каталогами. Если у каталога данный ОИВ единственный, то удаление ОИВ не выполняется.\n      parameters:\n        - $ref: '#/components/parameters/oivIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivDeletedResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            Ошибка может быть в параметре, заголовке или полях тела запроса.\n            В зависимости от этого текст ошибки может отличаться.\n            \n            ### Возможные ошибки бизнес-логики:\n              - Удаляется ОИВ, который содержит пользователей;\n              - Удаляется ОИВ, являющийся родительским для других ОИВ;\n              - Удаляется ОИВ, который используется в группах каталогов;\n              - Удаляется ОИВ, после удаления которого не остается ОИВов в каталогах заполнения;\n              - Удаляется ОИВ, после удаления которого не остается ОИВов в каталогах публикации;\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Удаляется ОИВ, который используется в пользователях:\n                  $ref: '#/components/examples/OivConnectedUserError'\n                Удаляется ОИВ, являющийся родительским для других ОИВ:\n                  $ref: '#/components/examples/OivConnectedOivError'                  \n                Удаляется ОИВ, который используется в группах каталогов:\n                  $ref: '#/components/examples/OivConnectedCatalogGroupsError'                  \n                Удаляется ОИВ, после удаления которого не остается ОИВов в каталогах заполнения:\n                  $ref: '#/components/examples/OivConnectedCatalogError'\n                Удаляется ОИВ, после удаления которого не остается ОИВов в каталогах публикации:\n                  $ref: '#/components/examples/OivConnectedPublicationCatalogError'\n  \n  /oivs/{oivId}:\n    put:\n      tags:\n        - oivs\n      summary: Изменение данных ОИВ\n      description: |-\n        Изменение данных ОИВ        \n      parameters:\n        - $ref: '#/components/parameters/oivIdPathParam'  \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Oiv'\n            examples:\n              Пример:\n                $ref: '#/components/examples/OivModifyRequest'\n        \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivOkResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Наименование неуникально.\n              - ИНН не соответствует формату.            \n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n              examples:\n                Наименование неуникально:\n                  $ref: '#/components/examples/OivNotUniqueNameError'\n                ИНН не соответствует формату:\n                  $ref: '#/components/examples/InnWrongFormatError'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует родительский ОИВ с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                               \n                Не существует родительский ОИВ с указанным идентификатором:\n                  $ref: '#/components/examples/OivNotExistError'\n \n  /oivs/{oivId}/catalogs/search:\n    post:\n      tags:\n        - oivs\n      summary: Поиск каталогов заполнения, связанных с ОИВ #и публикации\n      description: |-\n        Возвращает список неудалённых каталогов заполнения. \n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса. Для фильтрации по столбцам списка используется тело запроса.        \n        \n      parameters:\n        - $ref: '#/components/parameters/oivIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.\n            Поиск производится по идентификатору и полному наименованию каталога.\n            \n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - thematicCategory\n              - objectCategories\n              - oivs             \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      #  - $ref: 'catalogs.yaml#/components/parameters/dataModesFilterQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/catalogListRequestBody'           \n      responses:\n        '200':\n          description: \n            Успешный ответ. \n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. \n            Если переданы несуществующие идентификаторы категории, ОИВ, то также возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OivCatalogListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivCatalogListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  # Связанные сущности организации\n# Метод аналогичен /oivs/{oivId}/catalogs/search но урезан по данным о каталоге и по структуре (более правильная). \n# Необходимо будет скорректировать после удаления /catalogs/search (наименование NEW убрать и остальное с NEW  и удалить лишнее)\n  /oivs/{oivId}/NEWcatalogs/search:\n    post:\n      tags:\n        - oivs\n      summary: Получение информации о каталогах заполнения, в которых указана ОИВ\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения, в которые ОИВ поставляет информацию \n        (указана в поле \"Поставщик информации\").\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/oivIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName           \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых указана ОИВ\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/OivCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/OivNotFoundResponse'\n\n  /oivs/{oivId}/publicationCatalogs/search:\n    post:\n      tags:\n        - oivs\n      summary: Получение информации о каталогах публикации, в которых указана ОИВ\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации, в которых указана ОИВ в поле \"Поставщик информации\".\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/oivIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName           \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых указана ОИВ\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/OivCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/OivNotFoundResponse'\n\n# Метод на проверку - отображение связных сущностей оргинизации\n  # /oivs/{oivId}/users/search:\n  #   post:\n  #     tags:\n  #       - oivs\n  #     summary: Получение информации о пользователях организации\n  #     description: |-\n  #       Возвращает информацию о всех пользователях указнной организации.\n        \n  #       Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n  #     parameters:\n  #       - $ref: '#/components/parameters/oivIdPathParam'\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: |-\n  #           Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #           minimum: 1\n  #           maximum: 200\n  #       - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n  #       - name: search\n  #         in: query\n  #         required: false\n  #         description: |-\n  #           Текстовый поисковый запрос по списку пользователей.\n  #           Поиск производится по полям `id` и `login`.\n  #           В ответе будут представлены только те пользователи, в указанных полях которых содержится поисковое значение.\n            \n  #           Запрос со значением `12` вернет всех пользователей, идентификатор или логин которых содержит подстроку `12`.\n  #         schema:\n  #           type: string    \n  #       - name: sortBy\n  #         in: query\n  #         description: |-\n  #           Поле, по которому производится сортировка.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           default: id\n  #           enum:\n  #             - id\n  #             - login\n  #             - lastName\n  #             - firstName\n  #             - pathroName\n  #             - email     \n  #       - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n  #     requestBody:\n  #       description: Пример тела запроса с фильтрами по списку пользователей ОИВ\n  #       content:\n  #         application/json:\n  #           schema:\n  #             type: object\n  #             properties:\n  #               filters:\n  #                 type: array\n  #                 items:\n  #                   allOf:\n  #                     - $ref: '_common.yaml#/components/schemas/BasicFilter'\n  #                     - properties:\n  #                         attribute:\n  #                           enum:\n  #                             - id\n  #                             - login\n  #                             - lastName\n  #                             - firstName\n  #                             - pathroName\n  #                             - email\n  #           examples:\n  #             Пример:\n  #               $ref: '#/components/examples/OivUserSearchRequest'\n  #     responses:\n  #       '200':\n  #         description: Успешный ответ\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/OivUserInfo'\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/OivUserInfoArrayResponse'\n  #         headers:\n  #           X-Total-Count:\n  #             $ref: '_common.yaml#/components/headers/X-Total-Count'\n  #       '400':\n  #         $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n  #       '404':\n  #         $ref: '#/components/responses/OivNotFoundResponse'\n\n# Метод на проверку - отображение связных сущностей оргинизации\n  /oivs/{oivId}/catalogGroups/search:\n    post:\n      tags:\n        - oivs\n      summary: Получение информации о группах каталогов, в которых указана ОИВ\n      description: |-\n        Возвращает информацию о неудаленных группах каталогов, в которых ОИВ указана в поле \"Добавлять все каталоги выбранных ОИВ\".\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/oivIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку групп каталогов.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те группы каталогов, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все группы каталогов, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name           \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку групп каталогов, в которых указана ОИВ\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/OivCatalogGroupsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogGroups.yaml#/components/schemas/CommonCatalogGroupInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivCatalogGroupsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/OivNotFoundResponse'\n\n# Метод на проверку - отображение связных сущностей оргинизации\n  /oivs/{oivId}/childOivs/search:\n    post:\n      tags:\n        - oivs\n      summary: Получение информации о дочерних ОИВах, в которых указана ОИВ\n      description: |-\n        Возвращает информацию о неудаленных ОИВов, в которых ОИВ указана родителем.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/oivIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `200`). По умолчанию `100`.\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку групп каталогов.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те группы каталогов, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все группы каталогов, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name           \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку групп каталогов, в которых указана ОИВ\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/OivCatalogGroupsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogGroups.yaml#/components/schemas/CommonCatalogGroupInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivCatalogGroupsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/OivNotFoundResponse'\n\n        \ncomponents:\n  \n  schemas:\n\n    CommonOivInfo:\n      description: Общая информация об ОИВе\n      type: object\n      properties:\n        id:\n          description: Идентификатор ОИВа\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование ОИВа\n          type: string\n      required:\n        - id\n        - name\n\n    OivListItem:\n      description: Информация об ОИВе в списке ОИВов\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonOivInfo'\n      properties:\n        shortName:\n          description: Краткое наименование ОИВа\n          type: string\n        inn:\n          description: ИНН ОИВа\n          type: integer\n# удалить вывод списка дочерних ОИВ так как будет реализован отдельный метод на поиск связных сущностей\n# дочерние ОИВ будут отдельным методом\n        childrenIds:\n          description: Индентификаторы дочерних ОИВов\n          type: array\n          items: \n            type: integer\n        countCatalogs:\n          description: Количество каталогов ОИВа\n          type: integer\n      required:\n        - shortName        \n\n    Oiv:\n      description: ОИВ\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonOivInfo'\n      properties:\n        shortName:\n          description: Краткое наименование ОИВа\n          type: string\n        enName:\n          description: Англоязычное наименование ОИВа\n          type: string\n        inn:\n          description: ИНН ОИВа\n          type: integer\n          format: int32\n        parentOivId:\n          description: Идентификатор родительского ОИВа\n          type: integer\n          format: int32\n          writeOnly: true\n        parentOiv:\n          description: Родительский ОИВ\n          type: object\n          allOf:\n            - $ref:  '#/components/schemas/CommonOivInfo'\n          readOnly: true\n      required:\n        - shortName\n        - enName\n\n    OivCatalogListItem:\n      description: Элемент списка каталогов, связанных с ОИВ\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo' \n      properties:\n        objectCategories:\n          description: Категории объектов каталога, перечисленные через запятую с пробелом\n          type: string\n        thematicCategory:\n          description: Тематическая категория каталога\n          type: string\n        oivs:\n          description: ОИВ, ответственные за наполнение каталога, перечисленные через запятую с пробелом\n          type: string    \n      required:        \n        - objectCategories\n        - thematicCategory\n        - oivs     \n\n# достаточно много информации о пользователе, возможно стоит укоротить\n    OivUserInfo:\n      description: Информация пользователе ОИВ\n      type: object\n      readOnly: true\n      allOf:\n        - $ref: 'users.yaml#/components/schemas/CommonUserInfo'\n\n  \n  parameters:\n\n    oivIdPathParam:\n      name: oivId\n      in: path\n      description: Идентификатор ОИВ.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 25 \n    \n    oivIdsQueryParam:\n      name: oivIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов ОИВов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n    \n    oivIdFilterQueryParam:\n      name: oivId\n      required: false\n      in: query\n      description: |-\n        Идентификатор поставщика данных (ОИВ). Используется для фильтрации по ОИВ\n      schema:\n        type: integer\n        format: int32\n\n  requestBodies:\n    catalogListRequestBody:\n      description: Пример тела запроса для поиска по списку каталогов\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName\n                            - thematicCategory                            \n          examples:\n            Пример:\n              $ref: '#/components/examples/catalogListRequest'                          \n\n    OivListRequestBody:\n      description: Пример тела запроса для поиска по списку ОИВ\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - name\n                            - shortName\n                            - inn                       \n          examples:\n            Пример:\n              $ref: '#/components/examples/OivListRequest' \n\n  responses:\n    OivNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id ОИВа не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id ОИВа:\n              $ref: '#/components/examples/OivNotFoundError'\n\n  examples:\n\n    OivListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка ОИВов\n      value:\n        - id: 8023\n          name: АТИ по ВАО\n          shortName: АТИ по ВАО\n          inn: 456378456\n          childrenIds:\n            - 245\n            - 11\n          countCatalogs: 10\n    \n    OivArrayResponse:\n      description: Пример ответа с массивом ОИВов\n      value:\n        - id: 8023\n          name: АТИ по ВАО\n          shortName: АТИ по ВАО\n          enName: ATI of VAO\n          inn: \"36640693027\"\n          parentOiv:\n            id: 7253\n            name: Объединение административно-технических инспекций\n\n    OivNotFoundError:\n      description: |-\n        Указанный ОИВ не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          ОИВа с идентификатором {oivId} не существует.            \n    \n    OivCreateRequest:\n      description: |-\n        Создание ОИВ.\n      value:        \n        name: ГБУК города Москвы Государственный музей керамики и Усадьба Кусково XVIII века\n        shortName: ГБУК города Москвы Государств\n        enName: GBUK Moscow's museum\n        inn: 3554567347\n        parentOivId: 1\n\n    OivModifyRequest:\n      description: |-\n        Изменение данных ОИВ.\n      value:\n        name: ГБУК города Москвы Государственный музей керамики и Усадьба Кусково XVIII века\n        shortName: ГБУК города Москвы Государств\n        enName: GBUK Moscow's museum\n        inn: 3551209432\n        parentOivId: 1\n    \n    \n    OivCreatedResponse:\n      description: |-\n        ОИВ создан.\n      value:\n        id: 516\n        code: 201\n        messageType: Created\n        message: ОИВ успешно создан!\n\n    OivOkResponse:\n      description: |-\n        Данные ОИВ обновлены.\n      value:\n        id: 516\n        code: 200\n        messageType: Ok\n        message: ОИВ успешно изменен!\n\n    OivNotUniqueNameError:\n      description: |-\n        Наименование организации неуникально.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Организация с таким наименованием уже существует.\n    \n    InnWrongFormatError:\n      description: |-\n        Значение в поле \"ИНН\" не соответствует формату.\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: ИНН не соответствует требуемому формату.\n\n    OivNotExistError: \n      description: |-\n        Не существует родительский ОИВ.\n      value:\n        code: 404\n        messageType: Resource Not Found\n        message: Не существует родительский ОИВ {oivId}.\n    \n    OivNameEmptyError:\n      description: |-\n        Не заполнено наименование.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не заполнено наименование.\n    \n    OivShortNameEmptyError:\n      description: |-\n        Не заполнено краткое наименование.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не заполнено краткое наименование.\n\n    OivFormatError:\n      description: |-\n        Формат введенных данных не соответствует установленному.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Формат данных в поле {} не соответствует требуемому.\n    \n    OivDeletedResponse:\n      description: |-\n        ОИВы удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные ОИВы удалены!\n    \n    OivConnectedUserError:\n      description: |-\n        Удаляется ОИВ, который содержит пользователей.\n      value:\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          ОИВ (id {oivId}) не может быть удален, так как содержит пользователей. Удаление ОИВов не выполнено. \n \n    OivConnectedCatalogError:\n      description: |-\n        Удаляется ОИВ, после удаления которого не останется ОИВов в каталогах заполнения.\n      value:\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          ОИВ (id {oivId}) не может быть удален, так как используется в одном или нескольких каталогах заполнения и после его удаления у каталога не останется ОИВов. \n          Удаление ОИВов не выполнено.\n\n    OivConnectedPublicationCatalogError:\n      description: |-\n        Удаляется ОИВ, после удаления которого не останется ОИВов в каталогах публикации.\n      value:\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          ОИВ (id {oivId}) не может быть удален, так как используется в одном или нескольких каталогах публикации и после его удаления у каталога не останется ОИВов. \n          Удаление ОИВов не выполнено.\n\n    OivConnectedOivError:\n      description: |-\n        Удаляется ОИВ, который является родителем других ОИВов.\n      value:\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          ОИВ (id {oivId}) не может быть удален, так как является родительским для одного или нескольких других ОИВов.\n          Удаление ОИВов не выполнено.\n\n    OivConnectedCatalogGroupsError:\n      description: |-\n        Удаляется ОИВ, который используется в группах каталогов.\n      value:\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          ОИВ (id {oivId}) не может быть удален, так как используется в одной или нескольких группах каталогов. \n          Удаление ОИВов не выполнено.\n\n    OivCatalogListItemArrayResponse:\n      value:\n        id: 29697\n        fullName: Нестационарные торговые объекты по реализации печатной продукции \n        objectCategories: Нестационарные торговые объекты\n        thematicCategory: Торговля\n        oivs: Департамент средств массовой информации и рекламы города Москвы, Департамент информационных технологий\n\n    OivCatalogInfoArrayResponse:\n      description: Пример ответа из массива каталогов, в которых указан ОИВ\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n        - id: 76\n          fullName: Тоннели\n\n    OivCatalogSearchRequest:\n      description: Пример тела запроса для поиска по списку каталгов, в которых указана ОИВ\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: fullNmae\n            operator: contains\n            value: \"Номера телефонов\" \n\n    OivUserSearchRequest:\n      description: Пример тела запроса для поиска по списку пользователей ОИВ\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: lastName\n            operator: contains\n            value: \"Петрова\" \n\n    OivUserInfoArrayResponse:\n      description: Пример ответа из массив пользователей ОИВ\n      value:\n        - id: 18023\n          login: ivanovaa\n          firstName: Алексей\n          pathroName: Андреевич\n          lastName: Иванов\n          email: ivanovaa@cdek.ru                \n        - id: 18024\n          login: ivanovala          \n          firstName: Алёна\n          pathroName: Викторовна\n          lastName: Иванова\n          email: ivanovala@cdek.ru               \n         \n    catalogListRequest:\n      value:\n        filters: \n          - attribute: 'fullName'\n            operator: 'contains'\n            value: 'парк'\n    \n    OivListRequest:\n      value:\n        filters: \n          - attribute: 'inn'\n            operator: 'equals'\n            value: '487456345'\n\n    OivCatalogGroupsSearchRequest:\n      description: Пример тела запроса для поиска по списку групп каталгов, в которых указана ОИВ\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: name\n            operator: contains\n            value: \"ЖКХ\" \n\n    OivCatalogGroupsInfoArrayResponse:\n      description: Пример ответа из массива групп каталогов, в которых указана ОИВ\n      value:\n        - id: 1234\n          name: Группа ЖКХ каталогов\n        - id: 76\n          name: Группка медицинских каталогов\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с системами, добавленными в ЕХД\n  version: 1.0.0\n\n\npaths:\n  /systems/search:\n    post:\n      tags: \n        - systems\n      summary: Получение списка систем\n      description: Возвращает список информационных систем, добавленных в ЕХД\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых систем (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке информационных систем. Поиск производится по атрибутам `id`, `name`, `login`. Запрос со значением `12` вернет все системы, идентификатор, наименование или логин которых содержит подстроку `12`.\n          schema:\n            type: string  \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `name`, `login`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n              - login\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - $ref: '#/components/parameters/typeIntegrationQueryParam'\n        - name: countCatalogs\n          in: query\n          required: false\n          description: Признак, указывающий, что ответ должен содержать количество каталогов, с которыми система имеет интеграцию. Если выбран тип интеграции supplier, consumer, то считается количество для указанного типа, иначе оба типа.\n          schema:\n            type: boolean\n            default: false    \n      requestBody:\n        $ref: '#/components/requestBodies/SystemListRequestBody'\n      responses:\n        '200':\n          description: \n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SystemListItem'\n              examples:\n                Пример (countCatalogs = true):\n                  $ref: '#/components/examples/SystemListItemCountCatalogsArrayResponse'\n                Пример (countCatalogs = false):\n                  $ref: '#/components/examples/SystemListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'   \n  \n  /systems:\n    get:\n      tags:\n        - systems\n      summary: Получение систем по идентификаторам\n      description: |-\n        Возвращает полную информацию о системах по идентификаторам.\n        \n        Если система с указанным идентификатором не найдена, она не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/systemIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/System'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemArrayResponse'\n\n    post:\n      tags:\n        - systems\n      summary: Создание новой информационной системы\n      description: |-\n        Метод используется при создании системы.\n        \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/System'\n            examples:\n              Пример:\n                $ref: '#/components/examples/SystemCreatedRequest'\n      \n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemCreatedResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Наименование неуникально;\n              - Логин неуникален;            \n              - Не установлен пароль информационной системы.\n              - Ошибка ФЛК: указанный e-mail не соответствует регулярному выражению                         \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/WrongFormatError'              \n              examples:\n                Наименование неуникально:\n                  $ref: '#/components/examples/SystemNotUniqueNameError'\n                Логин неуникален:\n                  $ref: '#/components/examples/SystemNotUniqueLoginError'                                 \n                Не установлен пароль информационной системы:\n                  $ref: '#/components/examples/SystemPasswordEmptyError'\n                Ошибка ФЛК - указанный e-mail не соответствует регулярному выражению:\n                  $ref: '#/components/examples/SystemEmailFormatError'\n                \n    delete:\n      tags:\n        - systems\n      summary: Отметка системы удаленной\n      description: |-\n        Метод используется для отметки удалёнными одной или нескольких систем.\n      parameters:\n        - $ref: '#/components/parameters/systemIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemDeletedResponse'           \n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Одина или несколько из переданных систем используются в каталогах заполнения;\n              - Одина или несколько из переданных систем используются в каталогах публикации;\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Системе используется в каталогах заполнения:\n                  $ref: '#/components/examples/SystemIsUsedInCatalogsError'\n                Система используется в каталогах публикации:\n                  $ref: '#/components/examples/SystemIsUsedInPublicationCatalogsError'\n        '404':\n          $ref: '#/components/responses/SystemNotFoundErrorResponse'\n  \n  /systems/recover:\n    get:\n      tags:\n      - systems\n      summary: Восстановление системы\n      description: |-\n        Метод используется для восстановления одной или нескольких систем.\n      parameters:\n        - $ref: '#/components/parameters/systemIdsQueryParam'\n      \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemRecoveredResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Восстанавление системы с неуникальным наименованием \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'                                \n              examples:\n                Восстанавление системы с неуникальным наименованием:\n                  $ref: '#/components/examples/SystemRecoverNotUniqueNameError'                               \n                \n  /systems/{systemId}:\n    put:\n      tags:\n        - systems\n      summary: Изменение данных системы\n      description: |-\n        Изменяет данные системы\n        \n      parameters:\n        - $ref: '#/components/parameters/systemIdPathParam'\n      \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/System'\n            examples:\n              Пример:\n                $ref: '#/components/examples/SystemCreatedRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemOkResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Наименование неуникально;\n              - Логин неуникален;\n              - Логин нельзя изменить;\n              - Ошибка ФЛК: указанный e-mail не соответствует регулярному выражению                         \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                    - $ref: '_common.yaml#/components/schemas/ResourceCannotBeEditedError'                                        \n                    - $ref: '_common.yaml#/components/schemas/WrongFormatError'              \n              examples:\n                Наименование неуникально:\n                  $ref: '#/components/examples/SystemNotUniqueNameError'\n                Логин неуникален:\n                  $ref: '#/components/examples/SystemNotUniqueLoginError'\n                Логин нельзя изменить:\n                  $ref: '#/components/examples/SystemNotEditLoginError'                               \n                Ошибка ФЛК - указанный e-mail не соответствует регулярному выражению:\n                  $ref: '#/components/examples/SystemEmailFormatError'\n \n  # /systems/{systemId}/catalogs/search:\n  #   post:\n  #     tags:\n  #       - systems\n  #     summary: Поиск каталогов заполнения, связанных с системой\n  #     description: |-\n  #       Возвращает список неудалённых каталогов заполнения. \n\n  #       Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса. Для фильтрации по столбцам списка используется тело запроса.        \n  #     parameters:\n  #       - $ref: '#/components/parameters/systemIdPathParam'\n  #       - name: limit\n  #         in: query\n  #         required: false\n  #         description: |-\n  #           Количество возвращаемых каталогов (от `1` до `1000`).\n  #         schema:\n  #           type: integer\n  #           format: int32\n  #           default: 100\n  #           minimum: 1\n  #           maximum: 1000\n  #       - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n  #       - name: search\n  #         in: query\n  #         required: false\n  #         description: |-\n  #           Текстовый поисковый запрос в списке каталогов.\n  #           Поиск производится по идентификатору и полному наименованию.\n  #         schema:\n  #           type: string    \n  #       - name: sortBy\n  #         in: query\n  #         description: |-\n  #           Поле, по которому производится сортировка.\n  #         required: false\n  #         schema:\n  #           type: string\n  #           default: id\n  #           enum:\n  #             - id\n  #             - fullName\n  #             - thematicCategory\n  #             - objectCategories\n  #             - oivs\n  #       - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n  #       - $ref: '#/components/parameters/typeIntegrationQueryParam'\n  #      # - $ref: 'catalogs.yaml#/components/parameters/dataModesFilterQueryParam'\n  #     requestBody:\n  #       $ref: '#/components/requestBodies/catalogListRequestBody'\n  #     responses:\n  #       '200':\n  #         description: \n  #           Успешный ответ.\n  #           При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. \n  #           Если переданы несуществующие идентификаторы категории, ОИВ, системы-поставщика, то также возвращается пустой массив.\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/SystemCatalogListItem'\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/systemCatalogListItemArrayResponse'\n  #         headers:\n  #           X-Total-Count:\n  #             $ref: '_common.yaml#/components/headers/X-Total-Count'                \n\n  # Связанные сущности системы \n# Надо будет удалить NEW (только в наименовании) перед реализацией метода\n  /systems/{systemId}/catalogs/search:\n    post:\n      tags:\n        - systems\n      summary: Получение информации о каталогах заполнения, в которых указана система\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения, в которые система поставляет данные \n        (указана в поле \"Система-поставщик\") или из которых система получает данные \n        (указана в поле \"Система (только чтение)\").\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/systemIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `200`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - $ref: '#/components/parameters/typeIntegrationQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/SystemCatalogsRequestBody'\n      responses:\n        '200':\n          description: \n            Успешный ответ.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemCatalogsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'                \n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/SystemNotFoundErrorResponse'\n\n# Метод на проверку - отображение связных сущностей системы\n  /systems/{systemId}/publicationCatalogs/search:\n    post:\n      tags:\n        - systems\n      summary: Получение информации о каталогах публикации, из которых система получает данные\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации, из которых система получает данные \n        (указана в поле \"Системы-потребители данных\").\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/systemIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/SystemCatalogsRequestBody'\n      responses:\n        '200':\n          description: \n            Успешный ответ.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemCatalogsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'                \n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/SystemNotFoundErrorResponse'\n\n\ncomponents:\n  schemas:\n\n    CommonSystemInfo:\n      description: Общая информация об информационной системе\n      type: object\n      properties:\n        id:\n          description: Идентификатор информационной системы\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Название информационной системы\n          type: string\n      required:\n        - id\n        - name\n\n    SystemListItem:\n      description: Информация об информационной системе в списке систем \n      allOf:\n        - $ref: '#/components/schemas/CommonSystemInfo'\n      type: object\n      properties:        \n        login:\n          description: Логин информационной системы\n          type: string\n        fullName:\n          description: Полное наименование информационной системы\n          type: string\n        countCatalogs:\n          description: Количество каталогов, доступных системе\n          type: integer\n        isDeleted:\n          description: Признак удаления\n          type: boolean\n      required:\n        - login\n        - isDeleted\n\n    System:\n      description: Информационная система\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonSystemInfo'\n      properties:\n        login:\n          description: Логин информационной системы\n          type: string\n        password:\n          description: Пароль информационной системы\n          type: string\n          writeOnly: true         \n        fullName:\n          description: Полное наименование системы\n          type: string\n        signWithoutSignature:\n          description: Признак \"Всегда загружать данные как подписанные\"\n          type: boolean\n        activeSessionLimit:\n          description: Доступное число потоков для информационной системы\n          type: integer\n          format: int32\n        responsibles:\n          description: Данные об ответсвенных за информационную систему\n          type: array\n          minItems: 1\n          items:\n            $ref: 'catalogs.yaml#/components/schemas/ResponsiblePersonInfo'\n      required:\n        - login                               \n    \n    SystemCatalogListItem:\n      description: Элемент списка каталогов,связанных с системой\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo' \n      properties:\n        objectCategories:\n          description: Категории объектов каталога, перечисленные через запятую с пробелом\n          type: string\n        thematicCategory:\n          description: Тематическая категория каталога\n          type: string\n        oivs:\n          description: ОИВ, ответственные за наполнение каталога, перечисленные через запятую с пробелом\n          type: string    \n      required:        \n        - objectCategories\n        - thematicCategory\n        - oivs     \n\n  parameters:\n    systemIdPathParam:\n      name: systemId\n      in: path\n      description: Идентификатор информационной системы.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 29\n\n    systemIdQueryParam:\n      name: systemId\n      in: query\n      description: Идентификатор информационной системы.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 10570\n    \n    systemIdsQueryParam:\n      name: systemIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов систем.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n\n    systemConsumerIdFilterQueryParam:\n      name: systemConsumerId\n      in: query\n      required: false\n      description: Идентификатор системы-потребителя. Используется для фильтрации по системе-потребителю.\n      schema:\n        type: integer\n\n    typeIntegrationQueryParam:\n      name: typeIntegration\n      in: query\n      required: false\n      description: |-\n        Указывает с каким типом интеграции необходимо получить системы:\n          - `consumer` - потребитель\n          - `supplier` - поставщик\n\n        В параметре передается массив тэгов. Если массив не передан, возвращаются любые типы интеграций\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - consumer\n            - supplier\n  \n     \n  requestBodies:\n    catalogListRequestBody:\n      description: Пример тела запроса для поиска по списку каталогов\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName\n                            - thematicCategory\n                            - objectCategories\n                            - oivs\n          examples:\n            Пример:\n              $ref: '#/components/examples/catalogListRequest'\n\n    SystemCatalogsRequestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых указана система\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/SystemCatalogSearchRequest'\n\n\n    SystemListRequestBody:\n      description: Пример тела запроса для поиска по списку систем\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - name\n                            - login\n                            - fullName\n                                                  \n          examples:\n            Пример:\n              $ref: '#/components/examples/SystemListRequest' \n  \n\n  responses:\n    SystemNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id системы не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id тематической категории:\n              $ref: '#/components/examples/SystemNotFoundError'\n\n\n  examples:\n    SystemListItemCountCatalogsArrayResponse:\n      description: Пример ответа c массивом элементов списка информационных систем\n      value:\n        - id: 1\n          name: Тестовая система\n          login: Testsystem\n          isDeleted: false\n          countCatalogs: 10\n\n    SystemListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка информационных систем без указания числа каталогов\n      value:\n        - id: 1\n          name: Тестовая система\n          login: Testsystem\n          isDeleted: false\n          fullName: Тестовая система Иванова И.И.\n    \n    SystemArrayResponse:\n      description: Пример ответа с массивом информационных систем\n      value:\n        - id: 2\n          name: Портал открытых данных       \n          login: opod\n          fullName: Портал открытых данных\n          signWithoutSignature: false\n          activeSessionLimit: 10\n          responsibles:\n            - fio: Иванов Иван Иванович\n              email: ivanov@example.com\n              phone: + 7 (999) 11-22-333\n            - fio: Петров Петр Петрович\n              email: petrov@example.com\n              phone: + 7 (999) 33-22-111\n\n    SystemNotFoundError:\n      description: |-\n        Указанная информационная система не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Информационная система с идентификатором {systemId} не существует.\n\n    SystemNotUniqueNameError:\n      description: |-\n        Наименование системы неуникально.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Система с таким наименованием уже существует.\n\n    SystemNotUniqueLoginError:\n      description: |-\n        Наименование системы неуникально.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Система с таким наименованием уже существует.\n    \n    SystemNotEditLoginError:\n      description: |-\n        Логин системы неизменяем.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Логин системы нельзя изменить.\n\n    SystemRecoverNotUniqueNameError:\n      description: |-\n        Восстанавление системы с неуникальным наименованием.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Система не может быть восстановлена, т.к. существует активная система с таким же наименованием. Восстановление системы не выполнено.\n\n    SystemNameEmptyError:\n      description: |-\n        Не заполнено наименование.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не заполнено наименование.\n    \n    SystemLoginEmptyError:\n      description: |-\n        Не заполнен Логин.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не заполнено поле \"Логин\".\n    \n    SystemPasswordEmptyError:\n      description: |-\n        Не установлен пароль.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не установлен пароль.\n    \n    SystemEmailFormatError:\n      description: |-\n        Некорректный формат e-mail\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: Неверный формат данных в поле \"E-mail\". Значение должно представлять e-mail в формате `^[\\\\w-\\\\.]+@[\\\\w-]+(\\\\.[\\\\w-]+)*\\\\.[a-z]{2,}$`\n\n    SystemOkResponse:\n      description: |-\n        Данные системы обновлены.\n      value:\n        code: 200\n        messageType: Ok\n        message: Система успешно изменена.\n\n    SystemCreatedRequest:\n      description: |-\n        Создание системы.\n      value:\n        name: Портал открытых данных\n        login: opod\n        password: DuwpVvsL64KMqZCnIXrKBsPQ2E10G\n        fullName: Портал открытых данных\n        signWithoutSignature: false\n        activeSessionLimit: 12\n        responsibles:\n          - fio: Петров Алексей Викторович\n            email: petrovav@ya.ru\n            phone: +79853562239\n        \n    SystemCreatedResponse:\n      description: |-\n        Система создана.\n      value:\n        id: 16\n        code: 201\n        messageType: Created\n        message: Система успешно создана!\n\n    SystemDeletedResponse:\n      description: |-\n        Системы удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные системы помечены как удаленные!\n        \n    SystemRecoveredResponse:\n      description: Пример ответа при восстановлении систем\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные системы восстановлены!\n\n    catalogListRequest:\n      value:\n        filters: \n          - attribute: 'fullName'\n            operator: 'contains'\n            value: 'парк'\n\n    systemCatalogListItemArrayResponse:\n      value:\n        id: 29697\n        fullName: Нестационарные торговые объекты по реализации печатной продукции \n        objectCategories: Нестационарные торговые объекты\n        thematicCategory: Торговля\n        oivs: Департамент средств массовой информации и рекламы города Москвы, Департамент информационных технологий\n\n    \n    SystemListRequest:\n      value:\n        filters: \n          - attribute: 'fullName'\n            operator: 'equals'\n            value: 'Система департамента района Вешняки города Москвы'\n\n    SystemCatalogSearchRequest:\n      description: Пример тела запроса для поиска по списку каталгов, в которых указана система (система-поставщик, система чтение, система-потребитель)\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: fullNmae\n            operator: contains\n            value: \"Номера телефонов\" \n\n    SystemCatalogsInfoArrayResponse:\n      description: Пример ответа из массива каталогов, в которых указана система\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n        - id: 76\n          fullName: Тоннели\n\n    SystemIsUsedInCatalogsError:\n      description: |-\n        Удаляется система, которая используется в каталогах заполнения.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Система (id {systemId}) не может быть удалена, так как используется в одном или нескольких каталогах заполнения. \n          Удаление систем не выполнено.\n\n    SystemIsUsedInPublicationCatalogsError:\n      description: |-\n        Удаляется система, которая используется в каталогах публикации.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Система (id {systemId}) не может быть удалена, так как используется в одном или нескольких каталогах публикации. \n          Удаление систем не выполнено.\n\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с атрибутами\n  version: 1.0.0\n\n\npaths:\n  /attributes/search:\n    post:\n      tags:\n        - attributes\n      summary: Поиск по списку атрибутов ЕХД\n      description: |-\n        Возвращает базовую информацию об атрибутах для отображения списка атрибутов в табличном виде в разделе `Управление > Атрибуты`.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `techName`, `rusName`, `enName` и `description` используется тело запроса (поле `filters`).\n        Для фильтрации по типу атрибута используется поле `attributeTypes` тела запроса.\n      parameters:\n        - $ref: '#/components/parameters/attributeIdsOptQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых атрибутов (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку атрибутов.\n            Поиск производится по полям `id`, `techName`, `rusName`, `enName` и `description`.\n            В ответе будут представлены только те атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все атрибуты, идентификатор, наименования или описание которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `techName`, `rusName`, `enName` и `description`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - techName\n              - rusName\n              - enName\n              - description\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - $ref: '_common.yaml#/components/parameters/filterOutIdsQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку атрибутов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - rusName\n                              - enName\n                              - techName\n                              - description\n                attributeTypes:\n                  description: |-\n                    Типы атрибутов, которые необходимо вернуть.\n                    В поле передается массив технических наименований типов атрибутов.\n                    \n                    Если массив не передан, возвращаются атрибуты всех типов.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AttributeTypeTagIdEnum'\n                  minItems: 1\n            examples:\n              Пример:\n                  $ref: '#/components/examples/AttributeSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttributeListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Тип атрибута с указанным идентификатором, переданный в параметре `attributeTypes`, не найден.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id типа атрибута:\n                  $ref: '#/components/examples/AttributeTypeNotFoundError'\n  \n  /attributes:\n    get:\n      tags:\n        - attributes\n      summary: Получение информации об атрибутах\n      description: |-\n        Возвращает полную информацию об атрибутах по идентификаторам.\n        \n        Если атрибут с указанными идентификатором не найден, он не включаются в массив тела ответа.\n        \n        В зависимости от типа атрибута вид ответа может отличаться.\n        Для каждого атрибута возвращаются идентификатор `id`, техническое название `techName`, русскоязычное название `rusName`, англоязычное название `enName` и тип атрибута `type`.\n        Дополнительно может включать описание `description` и список альтернативных названий `alterNames`.\n        \n        Для справочных атрибутов дополнительно возвращается словарь в поле `dictionary`.\n        \n        Для строковых атрибутов возвращается максимальная длина `defaultMaxLength`. Дополнительно может возвращаться маска поля `defaultFieldMask` и регулярное выражение `defaultFieldRegex`.\n        \n        Для атрибутов с типом дробное число дополнительно возвращается максимальная длина дробной части `defaultMaxLength`.\n      parameters:\n        - $ref: '#/components/parameters/attributeIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Attribute'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeArrayResponse'\n\n    post:\n      tags:\n        - attributes\n      summary: Создание нового атрибута в ЕХД\n      description: |-\n        Создает новый атрибут в ЕХД.\n        В тело запроса передается объект атрибута без указания `id`.\n        Для любых атрибутов обязательно передаются техническое название `techName`, русскоязычное название `rusName` и англоязычное название `enName`, техническое наименование типа атрибута `typeTag`, а также альтернативные названия атрибутов `alterNames` в виде массива. Если альтернативные названия не используются, то передается пустой массив. \n        Типы атрибутов см. в `GET /attributes/types`.\n        \n        Для справочных атрибутов в поле `dictionaryId` обязательно передается идентификатор справочника.\n        \n        Для строковых атрибутов и атрибутов с типом дробное число обязательно указываются максимальная длина `defaultMaxLength`.\n        \n        При успешном создании атрибута в ответе в поле `id` передается идентификатор созданного атрибута.\n        \n        Для названий атрибута (в т.ч. альтернативных) должны выполняться следующие правила:\n          - Для всех названий атрибута (в т.ч. альтернативных) при передаче производится удаление пробельных симоволов в начале и конце.\n          - Техническое наименование может включать буквы английского алфавита, цифры, символ нижнего подчеркивания _, а также дефис -.\n          - Название не может начинаться и заканчиваться символами нижнего подчеркивания _ и  дефис -.\n          - Русскоязычное наименование (в т.ч. альтернативное) может включать все символы кроме < и >.\n          - Англоязычное наименование (в т.ч. альтернативное) может включать все символы кроме букв русского алфавита и символов < и >.\n      requestBody:\n        $ref: '#/components/requestBodies/attributeRequestBody'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeCreatedResponse'\n\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - У атрибута передана комбинация `rusName`, `techName` и `typeTag`, которая уже используется другим атрибутом;\n              - У атрибута переданы одинаковые русскоязычные альтернативные названия `rusAlterName`;\n              - Передано зарезервированное техническое наименование \"id\";\n              - В техническом названии атрибута присутствуют запрещенные символы;\n              - В русскоязычном названии атрибута присутствуют запрещенные символы;\n              - В альтернативном русскоязычном названии атрибута присутствуют запрещенные символы;\n              - В англоязычном названии атрибута присутствуют запрещенные символы;\n              - В альтернативном англоязычном названии атрибута присутствуют запрещенные символы.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Неуникальная комбинация рус. названия, тех. навзания и типа атриубта:\n                  $ref: '#/components/examples/AttributeNameCombinationNotUniqueError'\n                Неуникальное альтернативное название атрибута:\n                  $ref: '#/components/examples/AttributeAlterNameNotUniqueError'\n                Зарезерированное техническое наименование:\n                  $ref: '#/components/examples/AttributeForbiddenTechNameError'\n                В техническом названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadTechNameError'\n                В русскоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadRusNameError'\n                В альтер. русскоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadRusAlterNameError'\n                В англоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadEnNameError'\n                В альтер. англоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadEnAlterNameError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Тип атрибута с указанным техническим наименованием `typeTag` не найден;\n              - Справочник `dictionaryId` с указанным идентификатором не найден.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id типа атрибута:\n                  $ref: '#/components/examples/AttributeTypeNotFoundError'\n                Несуществующий id справочника:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryNotFoundError'\n    delete:\n      tags:\n        - attributes\n      summary: Удаление атрибутов из ЕХД\n      description: |-\n        Удаляет атрибуты из ЕХД по переданным идентификаторам.\n        \n        Если атрибут используется в каталоге, то возвращается соответсвующая ошибка и удаление всех переданных атрибутов не выполняется.\n      parameters:\n        - $ref: '#/components/parameters/attributeIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeDeletedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Один из переданных атрибутов используется в каталоге;\n              - Один из переданных атрибутов используется в каталоге публикации.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Атрибут используется в каталоге:\n                  $ref: '#/components/examples/AttributeIsUsedInCatalogsError'\n                Атрибут используется в каталоге публикации:\n                  $ref: '#/components/examples/AttributeIsUsedInPublicationCatalogsError'\n  \n  /attributes/{attributeId}:\n    put:\n      tags:\n        - attributes\n      summary: Изменение информации об атрибуте\n      description: |-\n        Изменяет информацию об атрибуте.\n        В тело запроса передается новый объект атрибута.\n        Подробнее см. `POST /attributes`.\n        \n        Тип атрибута изменить нельзя.\n        \n        Для названий атрибута (в т.ч. альтернативных) должны выполняться следующие правила:\n          - Для всех названий атрибута (в т.ч. альтернативных) при передаче производится удаление пробельных симоволов в начале и конце.\n          - Техническое наименование может включать буквы английского алфавита, цифры, символ нижнего подчеркивания _, а также дефис -.\n            Название не может начинаться и заканчиваться символами нижнего подчеркивания _ и  дефис -.\n          - Русскоязычное наименование (в т.ч. альтернативное) может включать все символы кроме < и >.\n          - Англоязычное наименование (в т.ч. альтернативное) может включать все символы кроме букв русского алфавита и символов < и >.\n      parameters:\n        - $ref: '#/components/parameters/attributeIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/attributeRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeEditedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Нельзя изменить тип данных атрибута;\n              - Нельзя изменить справочник атрибута, если он используется в каталогах;\n              - У атрибута передана комбинация `rusName`, `techName` и `typeTag`, которая уже используется другим атрибутом;\n              - У атрибута переданы одинаковые русскоязычные альтернативные названия `rusAlterName`;\n              - Передано зарезервированное техническое наименование \"id\";\n              - В техническом названии атрибута присутствуют запрещенные символы;\n              - В русскоязычном названии атрибута присутствуют запрещенные символы;\n              - В альтернативном русскоязычном названии атрибута присутствуют запрещенные символы;\n              - В англоязычном названии атрибута присутствуют запрещенные символы;\n              - В альтернативном англоязычном названии атрибута присутствуют запрещенные символы.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/ResourceCannotBeEditedError'\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Изменен тип данных:\n                  $ref: '#/components/examples/AttributeTypeIsEditedError'\n                Изменен справочник используемого атрибута:\n                  $ref: '#/components/examples/UsedAttributeDictionaryIsEditedError'\n                Неуникальная комбинация рус. названия, тех. навзания и типа атриубта:\n                  $ref: '#/components/examples/AttributeNameCombinationNotUniqueError'\n                Неуникальное альтернативное название атрибута:\n                  $ref: '#/components/examples/AttributeAlterNameNotUniqueError'\n                Зарезерированное техническое наименование:\n                  $ref: '#/components/examples/AttributeForbiddenTechNameError'\n                В техническом названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadTechNameError'\n                В русскоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadRusNameError'\n                В альтер. русскоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadRusAlterNameError'\n                В англоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadEnNameError'\n                В альтер. англоязычном названии атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/AttributeBadEnAlterNameError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id атрибута не существует;\n              - Изменяемый id альтернативного наименования атрибута не существует;\n              - Справочник `dictionaryId` с указанным идентификатором не найден.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id атрибута:\n                  $ref: '#/components/examples/AttributeNotFoundError'\n                Несуществующий id альтернативного наименования атрибута:\n                  $ref: '#/components/examples/AttributeAlterNameNotFoundError'\n                Несуществующий id справочника:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryNotFoundError'\n  \n  /attributes/{attributeId}/catalogs/search:\n    post:\n      tags:\n        - attributes\n      summary: Получение информации о каталогах, в которых используется атрибут\n      description: |-\n        Возвращает список каталогов, в которых используется (использовался) атрибут.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `catalogId`, `catalogName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/attributeIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `catalogId`, `catalogName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор, наименование или название атрибута в которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - $ref: 'catalogs.yaml#/components/parameters/dataModesFilterQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/catalogStatusesFilterQueryParam'\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `catalogId`, `catalogName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `catalogId`.\n          required: false\n          schema:\n            type: string\n            default: catalogId\n            enum:\n              - catalogId\n              - catalogName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов атрибута\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - catalogId\n                              - catalogName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/AttributeCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttributeCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id атрибута не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id атрибута:\n                  $ref: '#/components/examples/AttributeNotFoundError'\n  \n  /attributes/groups:\n    post:\n      tags:\n        - attributes\n      summary: Создание новой группы атрибутов\n      description: |-\n        Создает новую группу атрибутов. В теле запроса передается название группы `name`.\n      requestBody:\n        $ref: '#/components/requestBodies/attributeGroupRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeArrayResponse'\n        '400':\n          $ref: '#/components/responses/AttributeGroupBadRequestResponse'\n    get:\n      tags:\n        - attributes\n      summary: Получение списка групп атрибутов\n      description: |-\n        Возвращает список всех групп атрибутов в ЕХД.\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttributeGroup'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeGroupArrayResponse'\n\n    delete:\n      tags:\n        - attributes\n      summary: Удаление групп атрибутов с отвязкой от атрибутов всех каталогов\n      description: |-\n        Удаляет группы атрибутов из ЕХД по переданным идентификаторам.\n        Все существующие связи с атриубтами в каталогах автоматически удаляются.\n      parameters:\n        - name: groupIds\n          required: true\n          in: query\n          description: |-\n            Список идентификаторов удаляемых групп атрибутов.\n            \n            Число элементов в списке от `1` до `100`.\n          schema:\n            type: array\n            items:\n              type: integer\n            minItems: 1\n            maxItems: 100\n          example: [1, 2]\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeGroupDeletedResponse'\n  \n  /attributes/groups/{groupId}:\n    put:\n      tags:\n        - attributes\n      summary: Изменение (переименование) группы атрибутов\n      description: |-\n        Меняет название существующей группы атрибутов.\n        В теле запроса передается новое название группы `name`.\n      parameters:\n        - $ref: '#/components/parameters/groupIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/attributeGroupRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeGroupEditedResponse'\n        '400':\n          $ref: '#/components/responses/AttributeGroupBadRequestResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id группы атрибутов не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id группы атрибутов:\n                  $ref: '#/components/examples/AttributeGroupNotFoundError'\n  \n  /attributes/system/{systemId}:\n    get:\n      tags:\n        - attributes\n      summary: Получение системных атрибутов\n      description: |-\n        Возвращает список всех системных атрибутов по идентификатору системы.\n        Используется при настройке публикации каталога раскрытия.\n      parameters:\n        - $ref: 'systems.yaml#/components/parameters/systemIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SystemAttribute'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SystemAttributeArrayResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id информационной системы не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id информационной системы:\n                  $ref: 'systems.yaml#/components/examples/SystemNotFoundError'\n  \n  /attributes/types:\n    get:\n      tags:\n        - attributes\n      summary: Получение списка типов атрибутов в ЕХД\n      description: |-\n        Возвращает список всех типов атрибутов, которые используются в ЕХД.\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AttributeType'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AttributeTypeArrayResponse'\n\n# Метод на проверку - отображение связных сущностей\n# Аналогичен методу /attributes/{attributeId}/catalogs/search но приведен к общему виду (урезан)\n# после удаления /attributes/{attributeId}/catalogs/search этот вывести в api-spec\n  /attributes/{attributeId}/catalogAttributes/search:\n    post:\n      tags:\n        - attributes\n      summary: Получение информации о каталогах заполнения и атрибутах, в которых используется атрибут\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и атрибутах, в которых используется атрибут.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n\n        Если атрибут используется в табличном атрибуте каталога, то выводится идентификатор и наименование основного каталога. \n        Остальные данные остаются неизменными (attributeRusName, attributeEnName). \n      parameters:\n        - $ref: '#/components/parameters/attributeIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов и атрибутов атрибута\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogAttributesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id атрибута не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id атрибута:\n                  $ref: '#/components/examples/AttributeNotFoundError'\n\n# Метод на проверку - отображение связных сущностей\n  /attributes/{attributeId}/publicationCatalogAttributes/search:\n    post:\n      tags:\n        - attributes\n      summary: Получение информации о каталогах публикации и атрибутах, в которых используется атрибут\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации и атрибутах, в которых используется атрибут.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n\n        Если атрибут используется в табличном атрибуте каталога, то выводится идентификатор и наименование основного каталога. \n        Остальные данные остаются неизменными (`attributeRusName`, `attributeEnName`). \n      parameters:\n        - $ref: '#/components/parameters/attributeIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов и атрибутов атрибута\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogAttributesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id атрибута не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id атрибута:\n                  $ref: '#/components/examples/AttributeNotFoundError'\n\ncomponents:\n  schemas:\n    AttributeTypeTagIdEnum:\n      description: Техническое название типа данных\n      oneOf:\n        - type: string\n          enum:\n            - string\n            - integer\n            - date\n            - dict\n            - table\n            - file\n            - boolean\n            - link\n            - float\n\n    AttributeTypeNameEnum:\n      description: Наименование типа атрибута\n      oneOf:\n        - type: string\n          # enum:\n          #   - Строка\n          #   - Целое число\n          #   - Дата\n          #   - Справочник\n          #   - Таблица\n          #   - Файл\n          #   - Флаг\n          #   - Ссылка на объект\n          #   - Дробное число\n\n    CommonAttributeInfo:\n      type: object\n      description: Общая информация об атрибуте\n      properties:\n        id:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n          readOnly: true\n        techName:\n          description: Техническое наименование атрибута, не может иметь значение \"id\"\n          type: string\n        rusName:\n          description: Русскоязычное наименование атрибута, должно быть уникальным\n          type: string\n        enName:\n          description: Англоязычное наименование атрибута\n          type: string\n        description:\n          description: Описание атрибута\n          type: string\n      required:\n        - id\n        - techName\n        - rusName\n        - enName\n        \n    AttributeListItem:\n      description: |-\n        Элемент списка атрибутов.\n        \n        Используется при выдаче списка атрибутов в разделе `Управление > Атрибуты`.\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonAttributeInfo'\n      properties:\n        attributeType:\n          $ref: '#/components/schemas/AttributeTypeNameEnum'\n        dictionary:\n          description: Информация о справочнике в справочном атрибуте\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/CommonDictionaryInfo'\n      required:\n        - attributeType\n    \n    AttributeType:\n      description: |-\n        Тип атрибута\n      type: object\n      properties:\n        id:\n          description: Идентификатор типа атрибута\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/AttributeTypeNameEnum'\n        typeTag:\n          $ref: '#/components/schemas/AttributeTypeTagIdEnum'\n      required:\n        - id\n        - name\n        - typeTag\n    \n    AttributeAlterName:\n      description: |-\n        Альтернативное наименование атрибута\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int32\n          description: |-\n            Идентификатор альтернативного наименования\n            \n            Если он передается в методе PUT, альтернативное наименование атрибута будет изменено в БД. Иначе - создается новое альтернативное название.\n        rusAlterName:\n          type: string\n          description: |-\n            Русскоязычное альтернативное наименование атрибута\n            \n            _Должно быть уникальным для каждого атрибута_\n        enAlterName:\n          description: Англоязычное альтернативное наименование атрибута\n          type: string\n      required:\n        - rusAlterName\n        - enAlterName\n      example:\n        id: 736\n        rusAlterName: Муниципальный район\n        enAlterName: District\n    \n    CommonAttribute:\n      description: |-\n        Атрибут.\n        \n        Схема включает общие для всех типов атрибутов поля.\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonAttributeInfo'\n      properties:\n        type:\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/AttributeType'\n        typeTag:\n          writeOnly: true\n          allOf:\n            - $ref: '#/components/schemas/AttributeTypeTagIdEnum'\n        alterNames:\n          description: Альтернативные названия атрибута\n          type: array\n          items:\n            $ref: '#/components/schemas/AttributeAlterName'\n      required:\n        - type\n        - typeTag\n        - alterNames\n    \n    DictionaryAttribute:\n      type: object\n      description: |-\n        Справочный атрибут\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n      properties:\n        dictionary:\n          description: Информация о справочнике в справочном атрибуте\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/CommonDictionaryInfo'\n          properties:\n            parentId:\n              description: Идентификатор справочника-родителя\n              type: integer\n          readOnly: true\n        dictionaryId:\n          description: Идентификатор справочника\n          type: integer\n          format: int32\n          writeOnly: true\n      required:\n        - dictionary\n        - dictionaryId\n      example:\n        id: 2\n        techName: district\n        rusName: Район\n        enName: District\n        type:\n          id: 4\n          name: Справочник\n          typeTag: dict\n        description: Название района\n        alterNames:\n          - id: 91\n            rusAlterName: Регион\n            enAlterName: Area\n          - id: 92\n            rusAlterName: Название района\n            enAlterName: Region name\n        dictionary:\n          id: 61\n          name: Справочник районов\n          parentId: 60\n    \n    StringAttribute:\n      type: object\n      description: |-\n        Строковый атрибут\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n      properties:\n        defaultMaxLength:\n          description: Максимальная длина значения атрибута по умолчанию\n          type: integer\n          format: int32\n        defaultFieldMask:\n          description: Маска поля ввода строковых значений по умолчанию\n          type: string\n        defaultFieldRegexId:\n          description: Идентификатор регулярного выражения для валидации значения атрибута по умолчанию\n          type: integer\n          format: int32\n          writeOnly: true\n        defaultFieldRegex:\n          allOf:\n            # Костыль, так как CommonRegularExpressionInfo содержится внутри RegularExpression,\n            # но по-другому часть схемы не отображается\n            - $ref: 'regexps.yaml#/components/schemas/CommonRegularExpressionInfo'\n            - $ref: 'regexps.yaml#/components/schemas/RegularExpression'\n          description: Регулярное выражение для валидации значения атрибута по умолчанию\n          type: object\n          readOnly: true\n      required:\n        - defaultMaxLength\n    \n    FloatAttribute:\n      type: object\n      description: |-\n        Атрибут с типом дробное число\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n      properties:\n        defaultMaxLength:\n          description: Максимальная длина целой части по умолчанию, от `1` до `38`\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 38\n        defaultMaxLengthDecimal:\n          description: Максимальная длина дробной части по умолчанию, от `1` до `38`\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 38\n      required:\n        - defaultMaxLength\n        - defaultMaxLengthDecimal\n    \n    IntegerAttribute:\n      type: object\n      description: |-\n        Атрибут с типом целое число\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n      properties:\n        defaultMaxLength:\n          description: Максимальная длина числа по умолчанию, от `1` до `38`\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 38\n      required:\n        - defaultMaxLength\n\n    DateAttribute:\n      type: object\n      description: Атрибут с типом дата\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n    \n    FileAttribute:\n      type: object\n      description: Файловый атрибут\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n    \n    BooleanAttribute:\n      type: object\n      description: Атрибут с типом флаг\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n    \n    LinkAttribute:\n      type: object\n      description: Ссылочный атрибут\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n      example:\n        id: 34\n        techName: parentOrg\n        rusName: Родительская организация\n        enName: Parent Organization\n        description: Родительская организация\n        type:\n          id: 8\n          name: Ссылка на объект\n          typeTag: link\n        typeTag: link\n        alterNames: []\n    \n    TableAttribute:\n      type: object\n      description: Табличный атрибут\n      allOf:\n        - $ref: '#/components/schemas/CommonAttribute'\n    \n    Attribute:\n      description: Атрибут\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/StringAttribute'\n        - $ref: '#/components/schemas/IntegerAttribute'\n        - $ref: '#/components/schemas/FloatAttribute'\n        - $ref: '#/components/schemas/DateAttribute'\n        - $ref: '#/components/schemas/FileAttribute'\n        - $ref: '#/components/schemas/BooleanAttribute'\n        - $ref: '#/components/schemas/DictionaryAttribute'\n        - $ref: '#/components/schemas/LinkAttribute'\n        - $ref: '#/components/schemas/TableAttribute'\n    \n    AttributeGroup:\n      description: |-\n        Группа атрибутов\n      type: object\n      properties:\n        id:\n          description: Идентификатор группы атрибутов\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование группы атрибутоа\n          type: string\n      required:\n        - id\n        - name\n    \n    SystemAttribute:\n      description: |-\n        Системный атрибут\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: Идентификатор системного атрибута\n          type: integer\n          format: int32\n        name:\n          description: Наименование системного атрибута\n          type: string\n      required:\n        - id\n        - name\n\n    AttributeCatalogInfo:\n      description: |-\n        Информация о каталоге, в котором используется атрибут.\n      type: object\n      readOnly: true\n      properties:\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        catalogName:\n          description: Наименование каталога\n          type: string\n        isCatalogDeleted:\n          description: Удален ли каталог\n          type: boolean\n        attributeRusName:\n          description: |-\n            Русскоязычное наименование атрибута в каталоге\n            \n            Может быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию\n          type: string\n        attributeEnName:\n          description: |-\n            Англоязычное наименование атрибута в каталоге\n            \n            Может быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию\n          type: string\n      required:\n        - catalogId\n        - catalogName\n        - isCatalogDeleted\n        - attributeRusName\n        - attributeEnName\n\n    CatalogAttributeInfo:\n      description: |-\n        Информация о каталоге и атрибуте, в котором используется сущность (атрибут, справочник, рег. выражение, поисковый индекс, каталог заполнения).\n      type: object\n      readOnly: true\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      properties:\n        attributeRusName:\n          description: |-\n            Русскоязычное наименование атрибута в каталоге\n            \n            Может быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию\n          type: string\n        attributeEnName:\n          description: |-\n            Англоязычное наименование атрибута в каталоге\n            \n            Может быть выбрано одно из альтернативных наименований атрибута, иначе - используется значение по умолчанию\n          type: string\n      required:\n        - attributeRusName\n        - attributeEnName\n\n  parameters:\n    attributeIdPathParam:\n      name: attributeId\n      in: path\n      description: |-\n        Идентификатор атрибута.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 1\n\n    groupIdPathParam:\n      name: groupId\n      in: path\n      description: Идентификатор группы атрибутов.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 1\n\n    attributeIdsQueryParam:\n      name: attributeIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов атрибутов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [1, 3, 4]\n\n    attributeIdsOptQueryParam:\n      name: attributeIds\n      required: false\n      in: query\n      description: |-\n        Список идентификаторов атрибутов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [1, 3, 4]\n    \n    attributeTypesQueryParam:\n      name: attributeTypes\n      in: query\n      description: |-\n        Типы атрибутов, которые необходимо вернуть.\n        В параметре передается массив технических наименований типов атрибутов.\n        \n        Если массив не передан, возвращаются атрибуты всех типов.\n      required: false\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/AttributeTypeTagIdEnum'\n        minItems: 1\n\n  requestBodies:\n    attributeRequestBody:\n      description: Пример тела запроса с информацией об атрибуте.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Attribute'\n          examples:\n            Пример:\n              $ref: '#/components/examples/AttributeRequest'\n    \n    attributeGroupRequestBody:\n      description: Пример тела запроса с информацией о группе атрибутов.\n      required: true  \n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AttributeGroup'\n          examples:\n            Пример:\n              $ref: '#/components/examples/AttributeGroupRequest'\n\n  responses:\n    AttributeGroupBadRequestResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Группа атрибутов с переданным названием `name` уже существует;\n          - В названии группы атрибутов переданы запрещенные символы.\n      content:\n        application/json:\n          schema:\n              oneOf:\n              - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n              - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n          examples:\n            Неуникальное название группы атрибутов:\n              $ref: '#/components/examples/AttributeGroupNameNotUniqueError'\n            В названии группы атрибутов присутствуют запрещенные символы:\n              $ref: '#/components/examples/AttributeGroupBadNameError'\n\n  examples:\n    AttributeSearchRequest:\n      description: Пример тела запроса для поиска по списку атрибутов\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n          - attribute: description\n            operator: notEmpty\n        attributeTypes:\n          - string\n          - float\n    \n    AttributeRequest:\n      description: Пример тела запроса с информацией об атрибуте.\n      value:\n        techName: district\n        rusName: Район\n        enName: District\n        description: Название района\n        typeTag: dict\n        alterNames:\n          - rusAlterName: Регион\n            enAlterName: Area\n        dictionaryId: 61\n\n# После постановки и взятия в работу необходимо будет AttributeCatalogSearchRequest удалить    \n    AttributeCatalogSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется атрибут\n      value:\n        filters:\n          - attribute: catalogId\n            operator: greaterThan\n            value: 30\n\n    CatalogAttributesSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов и атрибутов, в которых используется атрибут\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    AttributeGroupRequest:\n      description: Пример тела запроса с информацией о группе атрибутов.\n      value:\n        name: 'schedule'\n    \n    AttributeListItemArrayResponse:\n      description: Пример ответа из массива элементов списка атрибутов\n      value:\n        - id: 2\n          techName: district\n          rusName: Район\n          enName: District\n          attributeType: Справочник\n          description: Название района\n          dictionary:\n            id: 61\n            name: Справочник районов\n    \n    AttributeArrayResponse:\n      description: Пример ответа с массивом атрибутов\n      value:\n        - id: 3\n          techName: title\n          rusName: Заголовок\n          enName: Title\n          description: Заголовок\n          type:\n            id: 1\n            name: Строка\n            typeTag: string\n          defaultMaxLength: 4000\n          alterNames: []\n        - id: 4\n          techName: discount\n          rusName: Скидка\n          enName: Discount\n          type:\n            id: 9\n            name: Дробное число\n            typeTag: float\n          description: Размер скидки в процентах\n          defaultMaxLength: 38\n          defaultMaxLengthDecimal: 2\n          alterNames: []\n        - id: 7\n          techName: age\n          rusName: Возраст\n          enName: Age\n          type:\n            id: 2\n            name: Целое число\n            typeTag: integer\n          description: Возраст\n          defaultMaxLength: 3\n          alterNames: []\n        - id: 23\n          techName: birthDate\n          rusName: Дата рождения\n          enName: Birth Date\n          description: Дата рождения\n          type:\n            id: 3\n            name: Дата\n            typeTag: date\n          alterNames: []\n        - id: 27\n          techName: photo\n          rusName: Фото\n          enName: Photo\n          description: Фото\n          type:\n            id: 6\n            name: Файл\n            typeTag: file\n          alterNames: []\n        - id: 29\n          techName: wifi\n          rusName: Есть wifi\n          enName: Has Wifi\n          description: Наличие точки wifi\n          type:\n            id: 7\n            name: Флаг\n            typeTag: boolean\n          alterNames: []\n        - id: 34\n          techName: parentOrg\n          rusName: Родительская организация\n          enName: Parent Organization\n          description: Родительская организация\n          type:\n            id: 8\n            name: Ссылка на объект\n            typeTag: link\n          alterNames: []\n        - id: 38\n          techName: Режим работы\n          rusName: Режим работы\n          enName: Has Wifi\n          description: Режим работы\n          type:\n            id: 5\n            name: Таблица\n            typeTag: table\n          alterNames: []\n\n    AttributeGroupArrayResponse:\n      description: Пример ответа с массивом групп атрибутов\n      value:\n        - id: 1\n          name: schedule\n        - id: 2\n          name: time\n\n    AttributeTypeArrayResponse:\n      description: Пример ответа с массивом типов атрибутов\n      value:\n        - id: 1\n          name: Строка\n          typeTag: string\n        - id: 2\n          name: Дата\n          typeTag: date\n\n    SystemAttributeArrayResponse:\n      description: Пример ответа с массивом системных атрибутов\n      value:\n        - id: 10\n          name: label\n        - id: 11\n          name: name\n\n# После постановки и взятия в работу необходимо будет AttributeCatalogInfoArrayResponse УДАЛИТЬ    \n    AttributeCatalogInfoArrayResponse:\n      description: Пример ответа из массива каталогов, в которых используется атрибут\n      value:\n        - catalogId: 107834\n          catalogName: Платные парковки\n          isCatalogDeleted: true\n          attributeRusName: Возраст\n          attributeEnName: Age\n\n    CatalogAttributesInfoArrayResponse:\n      description: Пример ответа из массива каталогов и атрибутов, в которых используется атрибут\n      value:\n        - id: 107834\n          fullName: Платные парковки\n          attributeRusName: Номер парковки\n          attributeEnName: Number of parking\n        - id: 105264\n          fullName: Бесплатные горки для катания на ватрушках\n          attributeRusName: Сложность горки\n          attributeEnName: Slide level\n\n    AttributeCreatedResponse:\n      description: Пример ответа при создании атрибута\n      value:\n        id: 1\n        code: 201\n        messageType: Created\n        message: Атрибут успешно создан!\n    \n    AttributeEditedResponse:\n      description: Пример ответа при изменении атрибута\n      value:\n        code: 200\n        messageType: Ok\n        message: Атрибут успешно изменен!\n    \n    AttributeDeletedResponse:\n      description: Пример ответа при удалении атрибутов\n      value:\n        code: 200\n        messageType: Ok\n        message: Атрибуты успешно удалены!\n\n    AttributeGroupCreatedResponse:\n      description: Пример ответа при создании группы атрибутов\n      value:\n        id: 1\n        code: 201\n        messageType: Created\n        message: Группа атрибутов успешно создана!\n    \n    AttributeGroupEditedResponse:\n      description: Пример ответа при изменении группы атрибутов\n      value:\n        code: 200\n        messageType: Ok\n        message: Группа атрибутов успешно изменена!\n    \n    AttributeGroupDeletedResponse:\n      description: Пример ответа при удалении групп атрибутов\n      value:\n        code: 200\n        messageType: Ok\n        message: Группы атрибутов успешно удалены! Связи с атрибутами каталогов удалены.\n\n    AttributeNameCombinationNotUniqueError:\n      description: |-\n        Передано неуникальная комбинация русскоязычного названия, технического названия и типа атрибута.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Атрибут с такой комбинацией русскоязычного названия, технического названия и типа уже существует. Комбинация полей rusName, techName и typeTag должна быть уникальна.\n    \n    AttributeAlterNameNotUniqueError:\n      description: |-\n        Передано неуникальное альтернативное название атрибута.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Переданы одинаковые альтернативные названия. Русскоязычное альтернативное наименование должно быть уникальным для каждого атрибута.\n    \n    AttributeBadTechNameError:\n      description: |-\n        В техническом названии атрибута переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В техническом наименовании атрибута переданы запрещенные символы.\n          Техническое наименование может включать буквы английского алфавита, цифры, символ нижнего подчеркивания _, а также дефис -.\n          Название не может начинаться и заканчиваться символами нижнего подчеркивания _ и  дефис -.\n    \n    AttributeBadRusNameError:\n      description: |-\n        В русскоязычном названии атрибута переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В русскоязычном наименовании атрибута переданы запрещенные символы. Русскоязычное наименование может включать все символы, кроме < и >\n    \n    AttributeBadRusAlterNameError:\n      description: |-\n        В русскоязычном альтернативном названии атрибута переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В русскоязычном альтернативном наименовании атрибута переданы запрещенные символы. Русскоязычное альтернативное наименование может включать все символы, кроме < и >\n    \n    AttributeBadEnNameError:\n      description: |-\n        В англоязычном названии атрибута переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В англоязычном наименовании атрибута переданы запрещенные символы. Англоязычное наименование может включать все символы, кроме букв русского алфавита, а также символов < и >\n    \n    AttributeBadEnAlterNameError:\n      description: |-\n        В англоязычном альтернативном названии атрибута переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В англоязычном альтернативном наименовании атрибута переданы запрещенные символы. Англоязычное альтернативное наименование может включать все символы, кроме букв русского алфавита, а также символов < и >\n    \n    AttributeForbiddenTechNameError:\n      description: |-\n        Передано зарезервированное техническое наименование 'id'.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          Атрибут не может иметь техническое наименование 'id'.\n    \n    AttributeTypeIsEditedError:\n      description: |-\n        В запросе производится попытка изменения типа.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: >\n          Тип атрибута не может быть изменен. Поле typeTag должно иметь тип {typeTag}.\n    \n    AttributeIsUsedInCatalogsError:\n      description: |-\n        Удаялется атрибут, который используется в каталогах.\n      value:\n        id: 3\n        code: 400\n        messageType: Resource cannot be deleted\n        message: >\n          Атрибут (id {attributeId}) не может быть удален, так как используется в одном или нескольких каталогах. Удаление атрибутов не выполнено.\n\n    AttributeIsUsedInPublicationCatalogsError:\n      description: |-\n        Удаялется атрибут, который используется в каталогах публикации.\n      value:\n        id: 3\n        code: 400\n        messageType: Resource cannot be deleted\n        message: >\n          Атрибут (id {attributeId}) не может быть удален, так как используется в одном или нескольких каталогах публикации. Удаление атрибутов не выполнено.\n\n    UsedAttributeDictionaryIsEditedError:\n      description: |-\n        В запросе производится попытка изменения справочника атрибута, который связан с каталогом.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: >\n          Справочник атрибута не может быть изменен, так как он используется в каталоге. Поле dictionaryId должно иметь значение {dictionaryId}.\n    \n    AttributeGroupNameNotUniqueError:\n      description: |-\n        Передано неуникальное название группы атрибутов.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Группа атрибутов с таким названием уже существует.\n    \n    AttributeGroupBadNameError:\n      description: |-\n        В названии группы атрибутов переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В наименовании группы атрибутов переданы запрещенные символы. Наименование может включать все символы, кроме < и >\n    \n    AttributeNotFoundError:\n      description: |-\n        Указанный атрибут не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Атрибут с идентификатором {attributeId} не существует.\n    \n    AttributeAlterNameNotFoundError:\n      description: |-\n        Указанное альтернативное название атрибута не найдено в атрибуте.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Альтернативного названия с идентификатором {alterNameId} не существует в атрибуте {attributeId}.\n    \n    AttributeTypeNotFoundError:\n      description: |-\n        Указанный тип атрибута не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Тип атрибута с идентификатором {attributeTypeId} не существует.\n    \n    AttributeGroupNotFoundError:\n      description: |-\n        Указанная группа атрибутов не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Группы атрибутов с идентификатором {attributeGroupId} не существует.\n    \n    SystemAttributeNotFoundError:\n      description: |-\n        Указанный системный атрибут не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Системного атрибута с идентификатором {systemAttributeId} не существует в системе {systemId}.\n\n  \n    ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы со справочниками\n  version: 1.0.0\n\n\npaths:\n  # Справочники\n  /dictionaries/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Поиск по списку справочников\n      description: |-\n        Возвращает список справочников.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск по списку и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `name` используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых справочников (число от `1` до `500`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку справочников. Поиск производится по идентификатору и наименованию.\n            \n            Запрос со значением `12` вернет все справочники, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку справочников\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionarySearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionaryListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /dictionaries/aux/{auxDictTagId}:\n    get:\n      tags:\n        - dictionaries\n      summary: Получение содержания вспомогательных справочников\n      description: |-\n        В зависисмости от справочника изменяются объекты массива в ответе.\n        В схеме ответа, будут предлагаться возможные варианты по мере добавления вспомогательных справочников.\n      parameters:\n        - $ref: '#/components/parameters/auxDictTagIdPathParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов справочника (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '#/components/parameters/dictElemSearchParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - type: array\n                    items:\n                      $ref: 'catalogs.yaml#/components/schemas/CatalogKind'\n                  - type: array\n                    items:\n                      $ref: 'catalogs.yaml#/components/schemas/CatalogType'\n                  - type: array\n                    items:\n                      $ref: '#/components/schemas/UpdatePeriodicityAuxDictElement'\n                  - type: array\n                    items:\n                      $ref: 'publicationCatalogs.yaml#/components/schemas/PublicationCatalogStatus'\n                  - type: array\n                    items:\n                      $ref: 'catalogObjects.yaml#/components/schemas/ObjectStatus'\n                  - type: array\n                    items:\n                      $ref: 'publicationObjects.yaml#/components/schemas/PublicationObjectStatus'\n                  - type: array\n                    items:\n                      $ref: 'attributes.yaml#/components/schemas/AttributeType'\n                  - type: array\n                    items:\n                      $ref: 'signatures.yaml#/components/schemas/SignStatus'\n                  - type: array\n                    items:\n                      $ref: 'signatures.yaml#/components/schemas/CatalogHistorySignStatus'\n                  - type: array\n                    items:\n                      $ref: 'signatures.yaml#/components/schemas/CatalogHistorySignType'\n                  - type: array\n                    items:\n                      $ref: 'signatures.yaml#/components/schemas/SignObjectLogStatus'\n                  - type: array\n                    items:\n                      $ref: 'imports.yaml#/components/schemas/CatalogImportHistoryStatus'\n                  - type: array\n                    items:\n                       $ref: '#/components/schemas/DatasetSeasonalityAuxDict' \n                  - type: array\n                    items:\n                      $ref: 'datasets.yaml#/components/schemas/DatasetDictionaryType'\n                  - type: array\n                    items:\n                      $ref: '#/components/schemas/FilterOperatorAuxDictElement'\n                  - type: array\n                    items:\n                      $ref: '#/components/schemas/SysColumn'\n                  - type: array\n                    items:\n                      $ref: 'publicationCatalogs.yaml#/components/schemas/GeneralInfoSyncedProperty'\n                  - type: array\n                    items:\n                      $ref: 'publicationCatalogs.yaml#/components/schemas/MetadataSyncedProperty'\n                  - type: array\n                    items:\n                      $ref: 'publicationCatalogs.yaml#/components/schemas/Rubric'\n                  - type: array\n                    items:\n                      $ref: 'searchIndexes.yaml#/components/schemas/SearchIndexStatus'\n                  - type: array\n                    items:\n                      $ref: 'users.yaml#/components/schemas/UserGroup'\n                  - type: array\n                    items:\n                      $ref: 'users.yaml#/components/schemas/UserPrivilege'                    \n                  - type: array\n                    items:\n                      $ref: 'users.yaml#/components/schemas/MailingStatus'\n                  - type: array\n                    items:\n                      $ref: 'users.yaml#/components/schemas/Menu'\n                  - type: array\n                    items:\n                      $ref: 'users.yaml#/components/schemas/UserStatus'\n                  - type: array\n                    items:\n                      $ref: 'auth.yaml#/components/schemas/SecurityEventType'\n                  - type: array\n                    items:\n                      $ref: 'catalogObjects.yaml#/components/schemas/LastChangeType'\n                  - type: array\n                    items:\n                      $ref: 'pushsubs.yaml#/components/schemas/PushsubStatus'\n              examples:\n                auxDictTagId = kindCatalog:\n                  $ref: '#/components/examples/CatalogKindAuxResponse'\n                auxDictTagId = typeCatalog:\n                  $ref: '#/components/examples/CatalogTypeAuxResponse'\n                auxDictTagId = periodUpdate:\n                  $ref: '#/components/examples/UpdatePeriodicityAuxResponse'\n                auxDictTagId = publicationStatus:\n                  $ref: '#/components/examples/PublicationCatalogStatusAuxResponse'\n                auxDictTagId = objectStatus:\n                  $ref: '#/components/examples/ObjectStatusAuxResponse'\n                auxDictTagId = publObjectStatus:\n                  $ref: '#/components/examples/PublObjectStatusAuxResponse'\n                auxDictTagId = attributeType:\n                  $ref: '#/components/examples/AttributeTypeAuxResponse'\n                auxDictTagId = signStatus:\n                  $ref: '#/components/examples/SignStatusAuxResponse'\n                auxDictTagId = subCatalogHistory:\n                  $ref: '#/components/examples/CatalogHistorySignStatusAuxResponse'\n                auxDictTagId = subCatalogHistoryType:\n                  $ref: '#/components/examples/CatalogHistorySignTypeAuxResponse'\n                auxDictTagId = subObjectLog:\n                  $ref: '#/components/examples/SignObjectLogStatusAuxResponse'\n                auxDictTagId = importHistoryStatus:\n                  $ref: '#/components/examples/ImportHistoryStatusAuxResponse'\n                auxDictTagId = datasetSeasonality:\n                  $ref: '#/components/examples/DatasetSeasonalityAuxResponse'\n                auxDictTagId = datasetDictType:\n                  $ref: '#/components/examples/DatasetDictionaryTypeAuxResponse'\n                auxDictTagId = filterOperator:\n                  $ref: '#/components/examples/FilterOperatorAuxResponse'\n                auxDictTagId = sysColumns:\n                  $ref: '#/components/examples/SysColumnsAuxResponse'\n                auxDictTagId = generalInfoSyncedProperty:\n                  $ref: '#/components/examples/GeneralInfoSyncedPropertiesAuxResponse'\n                auxDictTagId = metadataSyncedProperty:\n                  $ref: '#/components/examples/MetadataSyncedPropertiesAuxResponse'\n                auxDictTagId = mapSyncedProperty:\n                  $ref: '#/components/examples/MapSyncedPropertiesAuxResponse'  \n                auxDictTagId = rubric:\n                  $ref: '#/components/examples/RubricAuxResponse'\n                auxDictTagId = searchIndexStatus:\n                  $ref: '#/components/examples/SearchIndexStatusAuxResponse'\n                auxDictTagId = userGroup:\n                  $ref: '#/components/examples/UserGroupAuxResponse'\n                auxDictTagId = userPrivilege:\n                  $ref: '#/components/examples/UserPrivilegeAuxResponse'                \n                auxDictTagId = mailingStatus:\n                  $ref: '#/components/examples/MailignStatusAuxResponse'\n                auxDictTagId = menu:\n                  $ref: '#/components/examples/Menu'\n                auxDictTagId = userStatus:\n                  $ref: '#/components/examples/UserStatus'\n                auxDictTagId = securityEvent:\n                  $ref: '#/components/examples/SecurityEvent'\n                auxDictTagId = lastChangeType:\n                  $ref: '#/components/examples/LastChangeType'\n                auxDictTagId = pushsubStatus:\n                  $ref: '#/components/examples/PushsubStatus'\n                auxDictTagId = geoType:\n                  $ref: '#/components/examples/GeoTypeAuxResponse'  \n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /dictionaries/{dictionaryId}/columns:\n    get:\n      tags:\n        - dictionaries\n      summary: Получение колонок справочника\n      description: |-\n        Возвращает список колонок выбранного справочника. \n\n        Данный формат нужен для:\n        \n        - формы редактирования каталога, при редактировании атрибута типа \"Справочник\".\n        Используется в полях \"Поле для связи\" и \"Поле для вывода\".\n\n        - формы создания поискового индекса по справочнику. Используется в поле \"Столбец справочника\".        \n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionaryColumn'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryColumnArrayResponse'    \n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n\n  /dictionaries:\n    post:\n      tags:\n        - dictionaries\n      summary: Создание справочника\n      description: |-\n        Метод используется при создании справочника с ручным управлением элементами или справочника на основе каталога. \n        При успешном создании в ответе в поле `id` передается идентификатор созданного справочника.\n\n        При создании справочника на основе каталога необходимо указать:\n          - идентификатор (`global_id` или `system_object_id`) объекта для использования в качестве идентификатора элемента справочника;\n          - атрибут каталога, используемый в качестве наименования справочных элементов;\n          - атрибут каталога, в котором содержится идентификатор родительского элемента в родительском справочнике, если он выбран;\n\n            При выборе атрибутов каталога доступны атрибуты следующих типов:\n              - строка;\n              - целое число;\n              - дробное число;\n              - справочник;\n              - ссылка.\n      requestBody:\n        $ref: '#/components/requestBodies/DictionaryRequestBody'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryCreatedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Справочник с переданным названием `name` уже существует;\n              - В названии справочника присутствуют запрещенные символы;\n              - В наименовании доп. атрибутов присутствуют запрещенные символы;\n              - В тех. наименовании доп. атрибутов присутствуют запрещенные символы;\n              - В тех. наименовании доп. атрибута передано недопустимое значение (системный идентификатор);\n              - В тех. наименовании доп. атрибута переданы дубликаты;\n              - Переданы недопустимые атрибуты для связи с каталогом;\n              - Невалидное условие ограничения выборки;\n              - Для справочника на основе каталога и с родительким справочником не передан parentCatalogFieldId.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Неуникальное название справочника:\n                  $ref: '#/components/examples/DictionaryNameNotUniqueError'\n                В названии справочника присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryBadNameError'\n                В названии доп. атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryAddFieldBadNameError'\n                В тех. названии доп. атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryAddFieldBadTechNameError'\n                В тех. названии доп. атрибута передано недопустимое значение:\n                  $ref: '#/components/examples/DictionaryAddFieldForbiddenTechNameError'\n                В тех. названии доп. атрибута переданы дубликаты:\n                  $ref: '#/components/examples/DictionaryAddFieldDuplicatedTechNameError'\n                Переданы недопустимые атрибуты для связи с каталогом:\n                  $ref: '#/components/examples/InvalidCatalogAttributesError'\n                Невалидное условие ограничения выборки:\n                  $ref: '#/components/examples/ConditionValidationError'\n                Для справочника на основе каталога и с родительким справочником не передан parentCatalogFieldId:\n                  $ref: '#/components/examples/MissingParentCatalogFieldIdError'\n    get:\n      tags:\n        - dictionaries\n      summary: Получение общей информации справочника\n      description: |-\n        Метод возвращает информацию о справочниках по идентификаторам.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Dictionary'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryArrayResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n    delete:\n      tags:\n        - dictionaries\n      summary: Удаление справочника\n      description: |-\n        Метод используется для удаления одного или нескольких справочников.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryDeletedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Один или несколько из переданных справочников используются в атрибутах;\n              - Один или несколько из переданных справочников являются родителями других справочников;\n              - Один или несколько из переданных справочников используются в поисковых индексах;\n              - Один или несколько из переданных справочников используются в конструкторе проверок каталогов заполнения;\n              - Один или несколько из переданных справочников используются в настройках уникальности каталогов заполнения;\n              - Один или несколько из переданных справочников используются в атрибутах каталога публикации;\n              - Один или несколько из переданных справочников используются в настройках ограничения выборки каталогов публикации.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Справочник используется в атрибуте:\n                  $ref: '#/components/examples/DictionaryIsUsedInAttributesError'\n                Справочник является родителем другого справочника:\n                  $ref: '#/components/examples/DictionaryIsParentDictionaryError'\n                Справочник используется в поисковом индексе:\n                  $ref: '#/components/examples/DictionaryIsInSearchIndexesError'\n                Справочник используется в конструкторе проверок каталога заполнения:\n                  $ref: '#/components/examples/DictionaryIsInCatalogPackageError'\n                Справочник используется в настройках уникальностей каталога заполнения:\n                  $ref: '#/components/examples/DictionaryIsInCatalogUniqError'\n                Справочник используется в атрибуте каталога публикации:\n                  $ref: '#/components/examples/DictionaryIsUsedInPublicationCatalogsError'\n                Справочник используется в ограничених выборки каталога публикации:\n                  $ref: '#/components/examples/DictionaryIsUsedInPublCatalogConditionsError'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n\n  /dictionaries/validate:\n    post:\n      tags:\n        - dictionaries\n      summary: Валидация условия ограничения выборки для справочника на основе каталога\n      description: |-\n        Метод позволяет выполнить валидацию условия ограничения выборки справочника на основе каталога.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                condition:\n                  description: Условие ограничения выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.\n                  type: string\n                catalogId:\n                  description: Идентификатор каталога для получения атрибутов и проверки их использования в условии\n                  type: integer\n              required:\n                - condition\n                - catalogId\n            examples:\n              Пример:\n                description: Пример тела запроса с условием\n                value:\n                  condition: >-\n                    condition = \"contains(attr.City, 'Москва')\"\n                  catalogId: 6404\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SuccessValidationResponse'\n        '400':\n          description: |-\n              Невалидное условие заполнения.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionValidationError'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /dictionaries/{dictionaryId}:\n    put:\n      tags:\n        - dictionaries\n      summary: Изменение информации о справочнике\n      description: |-\n        Изменяет информацию о справочнике. \n        \n        \n        Для обычных справочников доступно редактирование наименования, а также русскоязычных наименований дополнительных столбцов. \n        \n        В теле запроса необходимо отправлять полный список дополнительных столбцов.\n        Если в теле запроса будет передано измененное техническое наименование столбца,\n        это будет восприниматься как удаление старой колонки и добавление новой.\n      \n        \n        Для справочников на основе каталога доступно редактирование только наименования.\n        Если будут переданы другие измененные поля, они будут прогнорированы.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/DictionaryRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryEditedResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            \n            ### Возможные ошибки бизнес-логики:\n              - Справочник с переданным названием `name` уже существует;\n              - В названии справочника присутствуют запрещенные символы;\n              - В наименовании доп. атрибутов присутствуют запрещенные символы;\n              - В тех. наименовании доп. атрибута передано недопустимое значение;\n              - Удаляется столбец справочника, по которому построен индекс;\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n                    - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Неуникальное название справочника:\n                  $ref: '#/components/examples/DictionaryNameNotUniqueError'\n                В названии справочника присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryBadNameError'\n                В названии доп. атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryAddFieldBadNameError'\n                В тех. названии доп. атрибута присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryAddFieldBadTechNameError'\n                В тех. названии доп. атрибута передано недопустимое значение:\n                  $ref: '#/components/examples/DictionaryAddFieldForbiddenTechNameError'\n                Столбец справочника используется в индексе:\n                  $ref: '#/components/examples/DictionaryColumnIsInSearchIndexesError'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n\n  # Связанные сущности справочника\n  /dictionaries/{dictionaryId}/attributes/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации об атрибутах, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных атрибутах, в которых используется справочник.\n        Атрибут может использоваться или не использоваться в каталоге. Для поиска атрибутов в каталоге используется метод /catalogsAttributes/search \n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации по полям `id` и `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку атрибутов.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все атрибуты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку атрибутов, в которых используется справочник\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesAttributesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionaryAttrubuteInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/catalogAttributes/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о каталогах заполнения и атрибутах, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и атрибутах, в которых используется справочник.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n\n        Если атрибут используется в табличном атрибуте каталога, то выводится идентификатор и наименование основного каталога. \n        Остальные данные остаются неизменными (attributeRusName, attributeEnName). \n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов и атрибутов, в которых используется справочник\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'attributes.yaml#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesCatalogsAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/publicationCatalogAttributes/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о каталогах публикации и атрибутах, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации и атрибутах, в которых используется справочник.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n\n        Если атрибут используется в табличном атрибуте каталога, то выводится идентификатор и наименование основного каталога. \n        Остальные данные остаются неизменными (`attributeRusName`, `attributeEnName`). \n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется справочник\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'attributes.yaml#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesCatalogsAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/searchIndexes/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о поисковых индексах, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных индексах, в которых используется справочник.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `name`, `dictColumnName` и `dictColumnTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку индексов.\n            Поиск производится по полям `id`, `name`, `dictColumnName` и `dictColumnTechName`.\n            В ответе будут представлены только те поисковые индексы, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все поисковые индексы, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`, `dictColumnName` и `dictColumnTechName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n              - dictColumnName\n              - dictColumnTechName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку поисковых индексов, в которых используется справочник\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n                              - dictColumnName\n                              - dictColumnTechName\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesSearchIndexesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionarySearchIndexInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesSearchIndexInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/childDictionaries/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о дочерних справочниках, в которых используется справочник как родитель\n      description: |-\n        Возвращает информацию о неудаленных справочниках, в которых справочник указан родителем.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых справочников (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку справочников.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те справочники, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все справочники, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id` и `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку дочерних справочников, в которых справочник указан родителем\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesChildDictSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CommonDictionaryInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesChildDictsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/catalogPackages/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о каталогах и конструкторах процессов, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и конструкторах процессов, в которых используется справочник.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `packName`, `packTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `packName`, `packTechName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `packName`, `packTechName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - packName\n              - packTechName \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых справочник используется в конструкторе проверок\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - packName\n                              - packTechName\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CatalogPackageInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesCatalogPackagesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/catalogUniqs/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о каталогах и настройках уникальностей, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и настройках уникальностей, в которых используется справочник.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `uniqTypeTag`, `packTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - uniqTypeTag\n              - packTechName \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых справочник используется в конструкторе проверок\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - packTechName\n                              - uniqTypeTag\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesCatalogsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CatalogUniqInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesCatalogUniqInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  /dictionaries/{dictionaryId}/publCatalogConditions/search:\n    post:\n      tags:\n        - dictionaries\n      summary: Получение информации о каталогах публикации, в которых используется справочник\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации, в которых используется справочник в настройках ограничения выборки.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id` и `fullName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется справочник\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionariesAttributesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionariesPublCatalogConditionsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundErrorResponse'\n\n  # Элементы справочников\n  /dictionaryElements/search:\n    post:\n      tags:\n        - dictionaryElements\n      summary: Поиск по списку элементов справочника\n      description: |-\n        Возвращает список элементов справочника. \n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск по списку и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов справочника (число от `1` до `500`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/dictionaryElementStatusesFilterQueryParam'\n        - $ref: '#/components/parameters/dictElemSearchParam'\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - name: parentDictElementIds\n          in: query\n          description: |-\n            Массив идентификаторов элементов родительского справочника.\n            В ответе должны содержаться элементы справочника в соответствии с переданными родительскими идентификаторами.\n            Если в массиве содержится идентификатор несуществующего или удалённого элемента, то он игнорируется.\n          required: false\n          schema:\n            type: array\n            items:\n              type: string\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку элементов справочника\n        content:\n          application/json:\n            schema:\n              description: Фильтр по списку элементов справочника\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionaryElementSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionaryElementListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n\n  /dictionaryElements/columns:\n    get:\n      tags:\n        - dictionaryElements\n      summary: Получение столбцов для элементов справочника\n      description: |-\n        Возвращает информацию о столбцах списка элементов справочника.\n        Данные формат нужен для построения таблицы при просмотре элементов справочника, а также для построения формы редактирования элемента справочника.     \n        \n        Каждый столбец в ответе содержит информацию о типе столбца, его названии, отображаемом в интерфейсе, а также техническом наименовании.\n\n        Столбцы возвращаются в порядке следования в таблице.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionaryElementListColumn'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementListColumnArrayResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n\n  /dictionaryElements:\n    post:\n      tags:\n        - dictionaryElements\n      summary: Создание элемента справочника\n      description: |-\n        Метод используется при создании элемента справочника. \n        При успешном создании в ответе в поле `id` передается идентификатор созданного элемента.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DictionaryElement'\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionaryElementRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: object\n                description: |-\n                  Успешное создание элемента.\n                properties:\n                  id:\n                    description: |-\n                      Строковый идентифкатор ресурса, для которого передан ответ\n                    type: string\n                  message:\n                    description: Текст ответа\n                    type: string\n                  code:\n                    description: HTTP-код ошибки\n                    type: integer\n                    format: int32\n                    enum:\n                      - 201\n                  messageType:\n                    description: Тип ответа\n                    type: string\n                    enum:\n                      - Created\n                required:\n                  - code\n                  - messageType\n                  - message\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementCreatedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Создание или изменение элемента справочника на основе каталога;\n              - В названии элемента справочника присутствуют запрещенные символы;\n              - При создании элемента с доп. полями переданы доп. поля, не сооветствующие справочнику;\n              - Переданного parentElementId не существует в родительском справочнике;\n              - Переданный parentElementId помечен удаленным в родительском справочнике.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Создание или изменение элемента справочника на основе каталога:\n                  $ref: '#/components/examples/DictionaryFromCatalogElementEditError'\n                В названии элемента справочника присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryElementBadNameError'\n                Доп. поля элемента не сооветствуют доп. полям справочника:\n                  $ref: '#/components/examples/WrongDictionaryFieldsError'\n                Переданный parentElementId не существует в родительском справочнике:\n                  $ref: '#/components/examples/InvalidParentElementIdError'\n                Переданный parentElementId помечен удаленным в родительском справочнике:\n                  $ref: '#/components/examples/ParentElementIsDeletedError'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n\n    get:\n      tags:\n        - dictionaryElements\n      summary: Получение информации об элементе справочника\n      description: |-\n        Метод используется для получения общей информации об элементах справочника по идентификаторам.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryElementIdsQueryParam'\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DictionaryElement'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementArrayResponse'    \n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id справочника не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id справочника:\n                  $ref: '#/components/examples/DictionaryNotFoundError'\n\n    delete:\n      tags:\n        - dictionaryElements\n      summary: Отметка элемента справочника удаленным\n      description: |-\n        Метод используется для отметки удаленным одного или нескольких элементов справочника.\n\n        При удалении осуществляется проверка, используется ли элемент справочника в каталоге. Если используется, то удаление требует подтверждения.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n        - $ref: '#/components/parameters/dictionaryElementIdsQueryParam'\n        - $ref: '#/components/parameters/userConfirmedDeletionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementDeletedResponse'                         \n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Удаление элемента справочника на основе каталога;\n              - Один или несколько из переданных элементов справочника используются в каталоге.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ConflictError'\n              examples:\n                Удаление элемента справочника на основе каталога:\n                  $ref: '#/components/examples/DictionaryFromCatalogElementEditError'\n                Элемент справочника используется в каталоге:\n                  $ref: '#/components/examples/DictionaryElementIsUsedInCatalogsError'\n        '404':\n          description: |-\n            Ресурс не найден.\n            \n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id справочника не существует.\n              - Запрошенный id элемента справочника не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id справочника:\n                  $ref: '#/components/examples/DictionaryNotFoundError'\n                Несуществующий id элемента справочника:\n                  $ref: '#/components/examples/DictionaryElementNotFoundError'\n\n  /dictionaryElements/{dictionaryElementId}:\n    put:\n      tags:\n        - dictionaryElements\n      summary: Изменение элемента справочника\n      description: |-\n        Метод используется для изменения информации об элементе справочника.         \n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n        - $ref: '#/components/parameters/dictionaryElementIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DictionaryElement'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: object\n                description: |-\n                  Успешное создание элемента.\n                properties:\n                  id:\n                    description: |-\n                      Строковый идентифкатор ресурса, для которого передан ответ\n                    type: string\n                  message:\n                    description: Текст ответа\n                    type: string\n                  code:\n                    description: HTTP-код ошибки\n                    type: integer\n                    format: int32\n                    enum:\n                      - 200\n                  messageType:\n                    description: Тип ответа\n                    type: string\n                    enum:\n                      - Ok\n                required:\n                  - code\n                  - messageType\n                  - message\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementEditedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Создание или изменение элемента справочника на основе каталога;\n              - В названии элемента справочника присутствуют запрещенные символы;\n              - При создании элемента с доп. полями переданы доп. поля, не сооветствующие справочнику\n              - Переданного parentElementId не существует в родительском справочнике\n              - Переданный parentElementId помечен удаленным в родительском справочнике\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Создание или изменение элемента справочника на основе каталога:\n                  $ref: '#/components/examples/DictionaryFromCatalogElementEditError'\n                В названии элемента справочника присутствуют запрещенные символы:\n                  $ref: '#/components/examples/DictionaryElementBadNameError'\n                Доп. поля элемента не сооветствуют доп. полям справочника:\n                  $ref: '#/components/examples/WrongDictionaryFieldsError'\n                Переданный parentElementId не существует в родительском справочнике:\n                  $ref: '#/components/examples/InvalidParentElementIdError'\n                Переданный parentElementId помечен удаленным в родительском справочнике:\n                  $ref: '#/components/examples/ParentElementIsDeletedError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id справочника не существует.\n              - Запрошенный id элемента справочника не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id справочника:\n                  $ref: '#/components/examples/DictionaryNotFoundError'\n                Несуществующий id элемента справочника:\n                  $ref: '#/components/examples/DictionaryElementNotFoundError'\n\n  /dictionaryElements/recover:\n    post:\n      tags:\n      - dictionaryElements\n      summary: Восстановление элемента справочника\n      description: |-\n        Метод используется для восстановления одного или нескольких элементов справочника.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n      requestBody:\n        description: Тело запроса с массивом идентификаторов элементов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                elementIds:\n                  type: array\n                  items:\n                    type: string\n                  minItems: 1\n                  maxItems: 100\n                  example: [43, 343, 64]\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionaryElementRecoverRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DictionaryElementRecoveredResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Создание или изменение элемента справочника на основе каталога.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Создание или изменение элемента справочника на основе каталога:\n                  $ref: '#/components/examples/DictionaryFromCatalogElementEditError'\n\n  # Экспорты справочников\n  /dictionaryExports:\n    post:\n      tags:\n        - dictionaryExports\n      summary: Запуск экспорта справочника\n      description: |-\n        Метод выполняет запуск экспорта элементов справочника. По умолчанию экспортируются все элементы справочника: и активные, и удаленные.\n            \n        Файл экспорта всегда будет иметь формат .csv.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportCreatedResponse'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n      \n  /dictionaryExports/history:\n    post:\n      tags:\n        - dictionaryExports\n      summary: Получение истории экспортов справочника\n      description: |-\n        Метод позволяет получать историю экспортов справочника.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n      parameters:\n        - $ref: '#/components/parameters/dictionaryIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка историй экспортов (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку экспортов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - userName\n                              - dateStart\n                              - dateEnd\n            examples:\n              Пример:\n                  $ref: '#/components/examples/ExportHistoryFilterRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ExportHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/ExportHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/DictionaryNotFoundResponse'\n  \n  /dictionaryExports/{exportId}/cancel:\n    get:\n      tags:\n        - dictionaryExports\n      summary: Отмена  экспорта справочника\n      description: |-\n        Метод позволяет выполнить отмену запущенного экспорта справочника.\n      parameters:\n        - $ref: '#/components/parameters/exportIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportCancelledResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Экспорт уже завершен.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportIsAlreadyFinishedError'\n        '404':\n          $ref: '#/components/responses/ExportNotFoundResponse'\n\n\ncomponents:\n  schemas:\n    CommonDictionaryInfo:\n      type: object\n      description: Общая информация о справочнике\n      properties:\n        id:\n          description: Идентификатор справочника\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование справочника\n          type: string\n      required:\n        - id\n        - name\n    \n    DictionaryListItem: \n      description: Информация о справочнике в списке справочников\n      type: object\n      readOnly: true\n      allOf:\n        - $ref: '#/components/schemas/CommonDictionaryInfo'\n      properties:\n        elementsCount:\n          description: Количество элементов справочника\n          type: integer\n        isDictFromCatalog:\n          description: Основан ли справочник на каталоге\n          type: boolean\n          default: false\n      required:\n        - elementsCount\n      example:\n        id: 58\n        name: Актуальные адреса БТИ\n        elementsCount: 500\n\n    DictionaryColumn:\n      description: |-\n        Столбец списка элементов справочников.\n        Дополнительный столбец справочника.\n      type: object\n      properties:\n        techName:\n          description: |-\n            Техническое название столбца определенного формата.\n            Название может содержать английские буквы, цифры и символы нижнего подчеркивания _. Должно начинаться с буквы\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/TechNameFormat'\n        rusName:\n          description: Русскоязычное название столбца\n          type: string  \n      required:\n        - techName\n        - rusName\n\n    RegularDictionary:\n      description: Справочник, созданный вручную\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonDictionaryInfo'\n      properties:\n        parentDictionaryId:\n          description: Идентификатор справочника-родителя. Указывается только при создании нового справочника.\n          type: integer\n          format: int32\n          writeOnly: true\n        parentDictionary:\n          description: Справочник-родитель\n          allOf:\n            - $ref: '#/components/schemas/CommonDictionaryInfo'\n          readOnly: true\n        additionalColumns:\n          description: Дополнительные столбцы справочника\n          type: array\n          items:\n            $ref: '#/components/schemas/DictionaryColumn'\n      example:\n        name: Справочник сотрудников\n        parentDictionary:\n          id: 74\n          name: Справочник компаний\n        additionalColumns: \n          - rusName: Профессия\n            techName: Profession\n          - rusName: Возраст\n            techName: Age\n    \n    DictionaryFromCatalog:\n      description: Справочник, созданный на основе каталога\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonDictionaryInfo'\n      properties:\n        parentDictionaryId:\n          description: Идентификатор справочника-родителя. Указывается только при создании нового справочника.\n          type: integer\n          format: int32\n          writeOnly: true\n        parentDictionary:\n          description: Справочник-родитель\n          allOf:\n            - $ref: '#/components/schemas/CommonDictionaryInfo'\n          readOnly: true\n        catalogId:\n          description: Идентификатор связанного каталога\n          type: integer\n          format: int32\n        catalogName:\n          description: Наименование связанного каталога\n          type: string\n          readOnly: true\n        # onlySignedObjects:\n        #   description: Только подписанные записи\n        #   type: boolean\n        #   default: false\n        catalogNameFieldId:\n          description: Идентификатор атрибута (attrId), из которого берутся значения для поля \"Наименование\" элементов справочника.\n          type: integer\n          format: int32\n        catalogNameFieldName:\n          description: Наименование атрибута каталога, из которого берутся значения для поля \"Наименование\" элементов справочника. \n          type: string\n          readOnly: true\n        globalCatalogFieldId:\n          description: |-\n            Идентификатор атрибута, из которого берутся значения для идентификаторов элементов справочника\n            \n            Доступные значения -  global_id (-1), system_object_id (-2).\n          type: integer\n          format: int32\n          enum:\n            - -1\n            - -2\n        globalCatalogFieldName:\n          description: Наименование атрибута каталога, из которого берутся значения для идентификаторов элементов справочника\n          type: string\n          readOnly: true\n          enum:\n            - global_id\n            - system_object_id\n        parentCatalogFieldId:\n          description: |-\n            Идентификатор атрибута (attrId), из которого берутся значения для идентификаторов родительских элементов справочника.\n            Указывается, если у данного справочника есть справочник-родитель.\n          type: integer\n          format: int32\n        parentCatalogField:\n          description: Наименование атрибута каталога, из которого берутся значения для идентификаторов родительских элементов справочника\n          type: string\n          readOnly: true\n        condition:\n          description: Условие ограничения выборки в формате TOML\n          type: string\n      required:\n        - catalogId\n        # - onlySignedObjects\n        - catalogName\n        - catalogNameFieldId\n        - catalogNameFieldName\n        - globalCatalogFieldId\n        - globalCatalogFieldName\n\n    Dictionary:\n      type: object\n      description: Справочник\n      oneOf:\n        - $ref: '#/components/schemas/RegularDictionary'\n        - $ref: '#/components/schemas/DictionaryFromCatalog'\n\n    ConditionValidationError:\n      type: object\n      properties:\n        code:\n          description: HTTP-код ошибки\n          type: integer\n          format: int32\n          example: 400\n        messageType:\n          description: Тип ответа\n          type: string\n          example: Bad request\n        errors:\n          type: array\n          items: \n            type: string\n            enum:\n              - \"Недопустимое выражение '{expression}'.\"\n              - \"Найдено {symbol/expression}. Ожидалось {symbol/expression}.\"\n              - \"В каталоге отсутсвует указанный атрибут attr.{techName}.\"\n              - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n              - \"Не найден справочник с идентификатором {dictId}.\"\n              - \"Не найден элемент справочника {elementId} в справочнике {dictId}.\"\n              - \"Атрибут с типом {type} недоступен для оператора {operator}.\"\n              - \"Не найден каталог с идентификатором {catalogId}.\"\n              - \"Не найдено регулярное выражение с идентификатором {regexpId}.\"\n              - \"В справочнике отсутсвует указанный атрибут attr.{dictTechName}.{columnTechName}/dictAttr.{techName}\"\n              - \"Не найдена указанная функция func.{tagId}\"\n              - \"Не найдено или не заполнено обязательное поле {fieldName}.\"\n              - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n              - \"Передан некорректный набор входных параметров в {operator/function}\"\n              - \"Невозможно преобразовать значение - {value} к типу {type}\"\n              - \"В поле {parameterName} передано некорректное значение. Ожидается {понятное описание что ожидалось}.\"\n      required:\n        - code\n        - messageType\n        - errors\n\n    DictionaryAttrubuteInfo:\n      description: |-\n        Информация об атрибуте, в котором используется справочник. \n      type: object\n      readOnly: true\n      properties:\n# Если сделать CommonAttributeInfo из идентификатора и наименовыания, то можно этот common много где использовать.\n# Пока он очень большой, с лишней информацией, поэтому отдельно прописываем.\n        id:\n          description: Идентификатор атрибута ЕХД\n          type: integer\n          format: int32\n        name:\n          description: Русскоязычное наименование атрибута\n          type: string\n      required:\n        - id\n        - name\n\n    DictionarySearchIndexInfo:\n      description: |-\n        Информация о поисковом индексе, в котором используется справочник.\n      type: object\n      allOf:\n        - $ref: 'searchIndexes.yaml#/components/schemas/CommonSearchIndexInfo'\n      properties:\n        dictColumnName:\n          description: Русскоязычное название столбца справочника, по которому настроен поисковый индекс\n          type: string  \n        dictColumnTechName:\n          description: Техническое название столбца справочника, по которому настроен поисковый индекс\n          type: string  \n      required:\n        - dictColumnName\n        - dictColumnTechName\n\n    # Системные справочники (aux)\n    FilterOperatorAuxDictElement:\n      description: Элемент системного справочника с операторами для фильтрации\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: Идентификатор оператора в БД\n          type: integer\n          format: int32\n        name:\n          $ref: '_common.yaml#/components/schemas/FilterOperatorNameEnum'\n        tagId:\n          $ref: '_common.yaml#/components/schemas/FilterOperatorTagIdEnum'\n        dataTypes:\n          description: Технические названия типов данных, к которым применим оператор\n          type: array\n          items:\n            $ref: 'attributes.yaml#/components/schemas/AttributeTypeTagIdEnum'\n        filterType:\n          description: |-\n            Тип фильтра:\n              - basic - базовый фильтр (используется во всех таблицах с фильтрами по столбцам)\n              - object - фильтр для спсика объектов каталога\n          type: string\n          enum:\n            - basic\n            - object\n      required:\n        - id\n        - name\n        - tagId\n        - dataTypes\n        - filterType\n    \n    SysColumn:\n      description: Системный столбец\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: Идентификатор записи, для системных поле отрицательный\n          type: integer\n          format: int32\n        name:\n          description: Название столбца в интерфейсе\n          type: string\n        dataType:\n          description: Техническое название типа данных, который используется для значений столбца\n          type: string\n        objFieldName:\n          description: Техническое название столбца. Используется в качетсве ключа полей в JSON\n          type: string\n        displayFlag:\n          description: |-\n              Признак отображения столбца в интерфейсе для списка объектов\n                - 0 - не отображается\n                - 1 - заполнение\n                - 2 - публикация\n                - 3 - заполнение и публикация\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n        forNested:\n          description: |-\n              Признак отображения для корневого или вложенного объекта\n                - 1 - корневой объект\n                - 2 - вложенный объект\n                - 3 - корневой и вложенный\n          type: integer\n          format: int32\n          enum:\n            - 1\n            - 2\n            - 3\n        forPublSettings:\n          description: |-\n              Признак использования в настройках публикации КП:\n                - 0 - не используется\n                - 1 - используется\n                - 2 - используется (всегда видимый, для таких столбцов нельзя изменить настройку видимости в КП)\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n            - 2\n        objCardFlag:\n          description: |-\n              Признак использования поля для карточки объекта\n                - 0 - не используется\n                - 1 - заполнение\n                - 2 - публикация\n                - 3 - заполнение и публикация\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n        norder:\n          description: Порядок сортировки\n          type: integer\n        publrestName:\n          description: Наименование поля для REST публикации\n          type: string  \n      required:\n        - id\n        - name\n        - dataType\n        - objFieldName\n        - displayFlag\n        - forNested\n        - forPublSettings\n        - objCardFlag\n        - norder\n        \n    UpdatePeriodicityAuxDictElement:\n      description: Схема элемента для вспомогательного справочника \"Периодичность обновления\"    \n      type: object\n      readOnly: true\n      properties:\n        tagId:\n          $ref: 'catalogs.yaml#/components/schemas/CatalogPeriodUpdateTagIdEnum'\n        name:\n          $ref: 'catalogs.yaml#/components/schemas/CatalogPeriodUpdateNameEnum'\n        isGeneral:\n          description: Признак, что период явлется общим для выбора в рамках обновления каталога и фоновых процессах\n          type: boolean\n        forPubl:\n          description: Признак того, что периодичность распространяется на каталоги публикации\n          type: boolean\n      required:\n        - tagId\n        - name\n        - isGeneral\n        - forPubl\n      example:\n        tagId: minutely\n        name: Ежеминутно\n        isGeneral: false \n        forPubl: false   \n\n    DatasetSeasonalityAuxDict:\n      description: Сезонность набора данных\n      type: object\n      properties:\n        id:\n          description: Идентификатор сезонности\n          type: integer\n        tagId:\n          $ref: 'datasets.yaml#/components/schemas/DatasetSeasonalityTagIdEnum'\n        name:\n          $ref: 'datasets.yaml#/components/schemas/DatasetSeasonalityNameEnum'\n        isCurrent:\n          description: Признак, что сезон используется в ОПОД как текущий\n          type: boolean   \n      required:\n        - tagId\n        - name\n\n    # Элементы справочников\n    \n    DictionaryElementStatus:\n      description: Статус элемента справочника\n      type: object\n      properties:\n        id:\n          description: Идентификатор статуса\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/DictionaryElementStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/DictionaryElementStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: Активный\n        tagId: active\n    \n    DictionaryElementStatusTagIdEnum:\n      description: |-\n        Техническое название статуса элемента справочника:\n          - `active` - активный\n          - `deleted` - удаленный\n      oneOf:\n        - type: string\n          enum:\n            - active\n            - deleted\n\n    DictionaryElementStatusNameEnum:\n      description: |-\n        Название статуса элемента справочника:\n          - активный\n          - удаленный\n      oneOf:\n        - type: string\n          # enum:\n          #   - активный\n          #   - удаленный\n    \n    DictionaryElementListColumnTypeTagIdEnum:\n      description: |-\n        Тип столбца списка элементов справочника, показывает, какой тип информации передается в столбце:\n          - `general` - общая информация\n          - `additional` - дополнительный столбец, добавленный пользователем вручную\n      oneOf:\n        - type: string\n          enum:\n            - general\n            - additional\n\n    DictionaryElementListColumn:\n      description: Столбец списка элементов справочника\n      type: object\n      readOnly: true\n      properties:\n        name:\n          description: Название столбца в списке\n          type: string\n        techName:\n          description: |-\n            Техническое наименование столбца\n          type: string\n        columnType:\n          $ref: '#/components/schemas/DictionaryElementListColumnTypeTagIdEnum'\n        typeTag:\n          $ref: 'attributes.yaml#/components/schemas/AttributeTypeTagIdEnum'\n      required:\n        - name\n        - techName\n        - columnType\n        - typeTag\n\n    CommonDictionaryElementInfo:\n      description: Общая информация об элементе справочника\n      type: object\n      properties:\n        id:\n          type: string\n          description: |-\n            Идентификатор элемента справочника. Всегда имеет тип `string`.\n          readOnly: true\n        name:\n          description: Название элемента справочника на русском языке\n          type: string\n        isElementDeleted:\n          description: Удален ли элемент справочника\n          type: boolean\n          readOnly: true\n      required:\n        - id\n        - name\n        - isElementDeleted\n    \n    DictionaryElementListItem:\n      description: Информация об элементе справочника в списке элементов справочника\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonDictionaryElementInfo' \n      properties:\n        parentElementId:\n          description: Идентификатор элемента-родителя из родительского справочника\n          type: string\n        parentElementName:\n          description: Наименование элемента-родителя из родительского справочника\n          type: string\n        additionalFields:\n          description: |-\n            Значения дополнительных столбцов справочника.\n            \n            <*> - техническое наименование дополнительного столбца справочника.\n          type: object\n          additionalProperties:\n            type: string\n    \n    DictionaryElement:\n      description: Элемент справочника\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonDictionaryElementInfo' \n      properties:\n        parentElementId:\n          description: Идентификатор элемента-родителя из родительского справочника\n          type: string\n          writeOnly: true\n        parentElement:\n          description: Элемент-родитель из родительского справочника, используется при просмотре инф. об элементе справочника\n          allOf:\n            - $ref: '#/components/schemas/CommonDictionaryElementInfo'\n          readOnly: true\n        additionalFields:\n          description: |-\n            Значения дополнительных столбцов справочника.\n            \n            <*> - техническое наименование дополнительного столбца справочника.\n          type: object\n          additionalProperties:\n            type: string\n\n    DictionaryElementsSearchFilter:\n      description: Фильтр по списку элементов справочника\n      type: object\n      properties:\n        filters:\n          type: array\n          items:\n            allOf:\n              - $ref: '_common.yaml#/components/schemas/BasicFilter'\n              - properties:\n                  attribute:\n                    enum:\n                      - id\n                      - name\n\n    # Экспоорты справочников\n    ExportHistoryItem:\n      description: Элемент истории экспортов каталога\n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор экспорта\n          type: integer\n          format: int32\n        name:\n          description: Наименование файла экспорта, включая расширение. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики. \n          type: string\n        dateStart:\n          description: Дата и время запроса экспорта\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата и время окончания экспорта\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        userId:\n          description: Идентификатор пользователя, запустившего экспорт\n          type: integer\n          format: int32\n        userName:\n          description: ФИО пользователя, запустившего экспорт\n          type: string\n        countAllElements:\n          type: integer\n          description: Общее количество элементов в экспорте\n        fileId:\n          type: string\n          description: Идентификатор uuid файла экспорта в файловом хранилище          \n        status:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n      required:\n        - id\n        - name\n        - dateStart\n        - userId\n        - userName\n        - status\n\n    ExportStatus:\n      description: Статус экспорта\n      type: object\n      readOnly: true\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/ExportStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ExportStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    ExportStatusNameEnum:\n      description: Название статуса экспорта\n      oneOf:\n        - type: string\n          # enum:\n          #   - Добавлен в очередь\n          #   - В работе\n          #   - Экспорт завершен успешно\n          #   - Ошибка экспорта\n          #   - Экспорт отменен пользователем\n    \n    ExportStatusTagIdEnum:\n      description: |-\n        Технчиеское навзание статуса экспорта\n          - `new` - Добавлен в очередь,\n          - `inWork` - В работе, \n          - `finished` - Экспорт завершен успешно, \n          - `error` - Ошибка экспорта, \n          - `cancelled` - Экспорт отменен пользователем.\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - inWork\n            - finished\n            - error\n            - cancelled\n\n  parameters:\n\n    # Справочники\n    dictionaryIdPathParam:\n      name: dictionaryId\n      in: path\n      description: |-\n        Идентификатор справочника.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 6\n    \n    dictionaryIdQueryParam:\n      name: dictionaryId\n      in: query\n      description: |-\n        Идентификатор справочника.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 84\n    \n    dictionaryIdsQueryParam:\n      name: dictionaryIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов справочников.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [194700, 186532, 11033]  \n  \n    # Системные справочники (aux)\n    auxDictTagIdPathParam:\n      name: auxDictTagId\n      in: path\n      description: |-\n        Строковый идентификатор вспомогательного справочника\n      required: true\n      schema:\n        type: string\n        enum:\n          - kindCatalog\n          - typeCatalog\n          - periodUpdate\n          - publicationStatus\n          - filterOperator\n          - objectStatus\n          - publObjectStatus\n          - attributeType\n          - signStatus\n          - subCatalogHistory\n          - subCatalogHistoryType\n          - subObjectLog\n          - importHistoryStatus\n          - datasetSeasonality\n          - datasetDictType\n          - sysColumns\n          - generalInfoSyncedProperty\n          - metadataSyncedProperty\n          - mapSyncedProperty\n          - rubric\n          - searchIndexStatus\n          - userGroup\n          - userPrivilege         \n          - mailingStatus    \n          - menu\n          - userStatus\n          - securityEvent\n          - lastChangeType\n          - pushsubStatus\n          - geoType\n      example: kindCatalog\n    \n    # Элементы справочников\n    dictionaryElementIdPathParam:\n      name: dictionaryElementId\n      in: path\n      description: |-\n        Идентификатор элемента справочника.\n      required: true\n      schema:\n        type: string\n      example: 6\n    \n    dictionaryElementIdsQueryParam:\n      name: dictionaryElementIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов элементов справочника.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 100\n      example: [\"43\", \"343\", \"64\"]  \n    \n    dictionaryElementStatusesFilterQueryParam:\n      name: dictionaryElementStatuses\n      in: query\n      description: |-\n        Статусы элементов справочника.\n        \n        Используется для фильтрации.\n        В параметре передается массив строк, строка представляет собой ключевое слово.\n        Не может передаваться пустой массив.\n\n        Допустимые значения:\n          - `active` - активный;\n          - `deleted` - удаленный.\n      required: false\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/DictionaryElementStatusTagIdEnum'\n        minItems: 1\n        maxItems: 2\n    \n    userConfirmedDeletionQueryParam:\n      name: userConfirmedDeletion\n      in: query\n      description: |-\n        Пользователь подтвердил удаление элементов справочника.\n        \n        Передается `false` при первом запросе на удаление, `true` - после подтверждения пользователем. \n\n        Если `true`, то не проверять элементы на использование в системе и удалять их без предупреждения.\n      required: false\n      schema:\n        type: boolean\n        default: false\n      example: true\n\n    dictElemSearchParam:\n      name: search\n      in: query\n      description: |-\n        Текстовый поисковый запрос по списку элементов справочника. Поиск производится по идентификатору и наименованию.\n        \n        Запрос со значением `123` вернет все элементы справочника, идентификатор или наименование которых содержит подстроку `123`.\n      required: false\n      schema:\n        type: string\n\n   # Экспорты справочников \n    exportIdPathParam:\n      name: exportId\n      in: path\n      description: |-\n        Идентификатор экспорта.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 642\n    \n  requestBodies:\n    DictionaryRequestBody:\n      description: Пример тела запроса с информацией о справочнике.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Dictionary'\n          examples:\n            Пример обычного справочника:\n              $ref: '#/components/examples/RegularDictionaryRequest'\n            Пример справочника на основе каталога:\n              $ref: '#/components/examples/DictionaryFromCatalogRequest'\n\n  responses:\n    DictionaryNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id справочника не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id справочника:\n              $ref: '#/components/examples/DictionaryNotFoundError'\n\n    DictionaryNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id справочника не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id справочника:\n              $ref: '#/components/examples/DictionaryNotFoundError'\n\n    ExportNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id экспорта не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id экспорта:\n              $ref: '#/components/examples/ExportNotFoundError'\n  \n  examples:\n    #Справочники\n    DictionarySearchRequest:\n      description: Пример тела запроса для поиска по списку справочников\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: name\n            operator: contains\n            value: \"Справочник\"\n    \n    RegularDictionaryRequest:\n      value:\n        name: Справочник объектов недвижимости\n        parentDictionaryId: 75\n        additionalColumns:\n          - rusName: Периметр\n            techName: Perimeter\n          - rusName: Площадь\n            techName: Square\n       \n    DictionaryFromCatalogRequest:\n      value:\n        name: Справочник адресов\n        catalogId: 1368\n        # onlySignedObjects: true\n        catalogNameFieldId: 13\n        globalCatalogFieldId: -1\n        condition: >-\n          condition = \"contains(attr.City, 'Москва')\"\n\n    ConditionValidationError:\n      description: Невалидное условие ограничения выборки\n      value:\n        code: 400\n        messageType: Bad request\n        message: Условие ограничения выборки справочника не прошло валидацию\n\n    MissingParentCatalogFieldIdError:\n      description: Не передан parentCatalogFieldId\n      value:\n        code: 400\n        messageType: Missing request body fields\n        message: Не передано поле parentCatalogFieldId. Оно является обязательным, если заполнено поле parentDictionaryId.\n\n    DictionaryListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка справочников\n      value:\n        - id: 58\n          name: Актуальные адреса БТИ\n          elementsCount: 500\n          isDictFromCatalog: false\n        - id: 67\n          name: Справочник регионов\n          elementsCount: 96\n          isDictFromCatalog: true\n    \n    DictionaryArrayResponse:\n      description: Пример ответа с массивом справочников\n      value:\n        - id: 654\n          name: Справочник районов\n          parentDictionary:\n            id: 534\n            name: Справочник округов\n          additionalColumns:\n            - rusName: Площадь района\n              techName: Square\n        - id: 865\n          name: Системы объектов\n          catalogId: 84\n          catalogName: Каталог систем объектов\n          # onlySignedObjects: false\n          catalogNameFieldId: 76\n          catalogNameFieldName: kvalificatia_prestuplenia\n          globalCatalogFieldId: -1\n          globalCatalogFieldName: global_id\n          condition: >-\n            condition = \"contains(attr.City, 'Москва')\"\n\n    DictionaryColumnArrayResponse:\n      description: Пример ответа с массивом столбцов справочника\n      value:\n        - techName: ID \n          rusName: Идентификатор\n        - techName: NAME\n          rusName: Наименование     \n    \n    DictionaryCreatedResponse:\n      description: Пример ответа при создании справочника\n      value:\n        id: 643\n        code: 201\n        messageType: Created\n        message: Справочник успешно создан!\n    \n    SuccessValidationResponse:\n      description: Пример ответа при успешной валидации условия заполнения\n      value:\n        code: 200\n        messageType: Ok\n        message: Валидация условия успешна\n    \n    DictionaryEditedResponse:\n      description: Пример ответа при изменении справочника\n      value:\n        id: 56\n        code: 200\n        messageType: Ok\n        message: Справочник успешно изменен!   \n    \n    DictionaryDeletedResponse:\n      description: Пример ответа при удалении справочников\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные справочники удалены!\n    \n    DictionaryNameNotUniqueError:\n      description: |-\n        Передано неуникальное русскоязычное название справочника.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: Справочник с таким названием уже существует. Название должно быть уникальным.\n    \n    DictionaryBadNameError:\n      description: |-\n        В названии справочника переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: В названии справочника переданы запрещенные символы. Наименование может включать все символы, кроме символов < и >\n    \n    DictionaryAddFieldBadNameError:\n      description: |-\n        В названии доп. атрибута справочника переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: В названии доп. атрибута справочника переданы запрещенные символы. Наименование может включать все символы, кроме символов < и >\n    \n    DictionaryAddFieldBadTechNameError:\n      description: |-\n        В тех. названии доп. атрибута справочника переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: В тех. названии доп. атрибута справочника переданы запрещенные символы. Наименование может включать буквы английского алфавита, цифры и символ нижнего подчеркивания _. Наименование должно начинаться с буквы.\n    \n    DictionaryAddFieldForbiddenTechNameError:\n      description: |-\n        В тех. названии доп. атрибута передано недопустимое значение (id, name, is_deleted, parent_id). \n        Создание справочника с такими полями невозможно.\n      value: \n        code: 400\n        messageType: Bad request\n        message: В качестве techName нельзя использовать системные идентификаторы id, name, is_deleted, parent_id.\n\n    DictionaryAddFieldDuplicatedTechNameError:\n      description: |-\n        В тех. названии доп. атрибута переданы дубликаты.\n        Создание справочника с такими полями невозможно.\n      value: \n        code: 400\n        messageType: Unique value error\n        message: Дубликаты в массиве имён techName\n    \n    InvalidCatalogAttributesError:\n      description: Переданы недопустимые атрибуты для связи с каталогом в полях catalogNameFieldId, parentCatalogFieldId, globalCatalogFieldId.\n      value: \n        code: 400\n        messageType: Bad request\n        message: Переданы недопустимые атрибуты для связи с каталогом в полях catalogNameFieldId, parentCatalogFieldId, globalCatalogFieldId.\n    \n    DictionaryIsUsedInAttributesError:\n      description: |-\n        Удаляется справочник, который используется в атрибутах.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как используется в одном или нескольких атрибутах. \n          Удаление справочников не выполнено.\n    \n    DictionaryIsParentDictionaryError:\n      description: |-\n        Удаляется справочник, который имеет подчиненные справочники.\n      value:\n        id: 78\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как имеет один или несколько подчиненных справочников. \n          Удаление справочников не выполнено.\n\n    DictionaryIsInSearchIndexesError:\n      description: |-\n        Удаляется справочник, который используется в поисковых индексах.\n      value:\n        id: 45\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как на основе справочника создан один или несколько поисковых индексов. \n          Удаление справочников не выполнено.\n\n    DictionaryColumnIsInSearchIndexesError:\n      description: |-\n        Удаляется столбец справочника, который используется в поисковом индексе.\n      value:\n        id: 45\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Столбец справочника не может быть удален, так как на основе столбца справочника создан поисковый индекс. \n          Удаление столбцов справочников не выполнено.\n\n    DictionaryIsInCatalogPackageError:\n      description: |-\n        Удаляется справочник, который используется в конструкторе проверок каталогов заполнения.\n      value:\n        id: 45\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как используется в конструкторе проверок одного или нескольких каталогов заполнения. \n          Удаление справочников не выполнено.\n\n    DictionaryIsInCatalogUniqError:\n      description: |-\n        Удаляется справочник, который используются в настройках уникальности каталогов заполнения.\n      value:\n        id: 45\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как используется в настройках уникальности одного или нескольких каталогов заполнения. \n          Удаление справочников не выполнено.\n\n    DictionaryIsUsedInPublicationCatalogsError:\n      description: |-\n        Удаляется справочник, который используется в атрибутах каталогов публикации.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как используется в одном или нескольких атрибутах каталога публикации. \n          Удаление справочников не выполнено.\n\n    DictionaryIsUsedInPublCatalogConditionsError:\n      description: |-\n         Удаляется справочник, который используются в настройках ограничения выборки каталогов публикации.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Справочник (id {dictionaryId}) не может быть удален, так как используется в настройках ограничения выборки одного или нескольких каталогов публикации. \n          Удаление справочников не выполнено.\n\n    DictionaryNotFoundError:\n      description: |-\n        Указанный справочник не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: |-\n          Справочник с идентификатором {dictionaryId} не существует.\n    \n    DictionaryColumnNotFoundError:\n      description: |-\n        Указанный столбец не найден в справочнике.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: |-\n          Столбец {dictionaryColumn} не существует в справочнике {dictionaryId}.\n\n    # Элементы справочников\n    DictionaryElementSearchRequest:\n      description: Пример тела запроса для поиска по списку элементов справочника\n      value:\n        filters:\n          - attribute: id\n            operator: contains\n            value: 10\n          - attribute: name\n            operator: equals\n            value: \"Индустриальный район\"\n\n    DictionaryElementRequest:\n      description: Пример тела запроса с информацией об элементе справочника.\n      value:\n        name: Иван\n        parentElementId: \"45\" \n        additionalFields:\n          column_age: \"42\"\n          column_city: Perm\n    \n    DictionaryElementRecoverRequest:\n      description: Пример тела запроса для восстановления элементов справочника\n      value:\n        elementIds: [\"43\", \"343\", \"64\"]\n    \n    DictionaryElementListItemArrayResponse:\n      description: Пример ответа c массивом элементов справочника\n      value:\n        - id: \"34\"\n          name: Биология     \n          parentElementId: \"45\"\n          parentElementName: Школьные предметы\n          isElementDeleted: false\n          additionalFields:\n            column_school: \"School 10\"\n            column_city: Perm\n\n    DictionaryElementListColumnArrayResponse:\n      description: Пример ответа с массивом столбцов списка элементов справочника\n      value:\n        - typeTag: string\n          name: Идентификатор\n          techName: id\n          columnType: general\n        - typeTag: string\n          name: Наименование\n          techName: name\n          columnType: general\n        - typeTag: string\n          name: Адрес\n          techName: Age\n          columnType: additional\n\n    DictionaryElementArrayResponse:\n      description: Пример ответа с информацией об элементе справочнике.\n      value:\n        - id: \"2532\"\n          name: Иван\n          isElementDeleted: true\n          parentElement:\n            id: \"231\"\n            name: Василий\n            isElementDeleted: false\n          additionalFields:\n            column_age: \"42\"\n            column_city: Perm\n        - id: \"2533\"\n          name: Петр\n          isElementDeleted: false\n          parentElement:\n            id: \"232\"\n            name: Василий\n            isElementDeleted: false\n          additionalFields:\n            column_age: \"43\"\n            column_city: Perm\n    \n    DictionaryElementCreatedResponse:\n      description: Пример ответа при создании элемента справочника\n      value:\n        id: \"643\"\n        code: 201\n        messageType: Created\n        message: Элемент справочника успешно создан!\n    \n    DictionaryElementEditedResponse:\n      description: Пример ответа при изменении элемента справочника\n      value:\n        id: \"56\"\n        code: 200\n        messageType: Ok\n        message: Элемент справочника успешно изменен!\n    \n    DictionaryElementDeletedResponse:\n      description: Пример ответа при удалении элементов справочника\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные элементы справочника удалены!\n\n    DictionaryElementRecoveredResponse:\n      description: Пример ответа при удалении элементов справочника\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные элементы справочника восстановлены!\n\n    DictionaryFromCatalogElementEditError:\n      description: Ошибка создания, редактирования или удаления элементов справочника на основе каталога.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Создание или изменение (в т.ч. удаление) элементов справочников на основе каталогов невозможно.\n\n    DictionaryElementBadNameError:\n      description: |-\n        В названии элемента справочника переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: |-\n          В названии элемента справочника переданы запрещенные символы. Наименование может включать все символы, кроме символов < и >\n    \n    WrongDictionaryFieldsError:\n      description: |-\n        При создании элемента с доп. полями переданы доп. поля, не сооветствующие справочнику\n      value:\n        code: 400\n        messageType: Bad request\n        message: Переданы недопустимые {additionalFields}. Дополнительные поля элемента должны соответствовать доп. полям справочника {additionalColumns}\n\n    InvalidParentElementIdError:\n      description: |-\n        При создании элемента передан parentElementId, которого не существует в родительском справочнике\n      value:\n        code: 400\n        messageType: Bad request\n        message: Переданное значение parentElementId - {parentElementId} не найдено в родительском справочнике\n\n    ParentElementIsDeletedError:\n      description: |-\n        При создании элемента передан parentElementId, который помечен удаленным родительском справочнике\n      value:\n        code: 400\n        messageType: Bad request\n        message: Переданное значение parentElementId - {parentElementId} помечено удаленным в родительском справочнике\n\n    DictionaryElementIsUsedInCatalogsError:\n      description: |-\n        Удаляется элемент справочника, который используется в каталогах.\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Элементы справочника используются в каталоге. \n          Удаление данных элементов требует подтверждения: {dictionaryElementId1}, {dictionaryElementId2}...\n\n    DictionaryTechColumnNotFoundError:\n      description: |-\n        Указанный столбец справочника не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: |-\n          Столбец справочника с техническим наименованием {dictColTechName} не существует в справочнике {dictId}.\n\n    DictionaryElementNotFoundError:\n      description: |-\n        Указанный элемент справочника не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: |-\n          Элемент справочника с идентификатором {dictionaryElementId} не существует.\n\n    # Экспорты справочников \n    DictionaryElementExportRequest:\n      description: Пример тела запроса с фильтрами и сортировками для экспорта элементов справочника\n      value:\n        filters:\n          - attribute: id\n            operator: contains\n            value: 10\n          - attribute: name\n            operator: equals\n            value: \"Индустриальный район\"    \n        sortings:\n          - attribute: id\n            order: desc\n    \n    ExportCreatedResponse:\n      value:\n        id: 689\n        code: 201\n        messageType: Created\n        message: Экспорт успешно запущен\n\n    ExportHistoryFilterRequest:\n      description: Пример тела запроса для получения истории экспортов справочника\n      value:\n        filters:\n          - attribute: userName\n            operator: contains\n            value: Иван\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024\n    \n    ExportHistoryItemArrayResponse:\n      description: Пример ответа с историей экспортов справочника\n      value:\n        - id: 5451\n          name: export_dict_4900_28_10_2022_13_18_13.csv\n          dateStart: 28.10.2022 13:18:13\n          dateEnd: null\n          userId: 34534\n          userName: Сидоров Василий Иванович\n          countAllElements: 480\n          status:\n            id: 1\n            tag: inWork\n            name: В работе\n        - id: 8432\n          name: export_dict_8795_28_10_2022_13_18_13.csv\n          dateStart: 29.10.2022 13:43:13\n          dateEnd: 29.10.2022 13:50:54\n          userId: 34534\n          userName: Сидоров Василий Иванович\n          countAllElements: 1213\n          fileId: a6944cfc-4d51-48da-bc77-e9b5f9cc5d02\n          status:\n            id: 2\n            tag: finished\n            name: Завершен\n\n    ExportCancelledResponse:\n      description: Пример ответа об успешной отмене экспорта\n      value:\n        code: 200\n        messageType: Ok\n        message: Экспорт справочника успешно отменен.\n\n    ExportIsAlreadyFinishedError:\n      description: Пример ответа при попытке отмены уже завершенного экспорта\n      value:\n        code: 400\n        messageType: Bad request\n        message: Экспорт с id {exportId} уже завершен. Отмена экспорта невозможна.\n\n    ExportNotFoundError:\n      description: |-\n        Указанный экспорт не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Экспорта с идентификатором {exportId} не существует.\n\n    # Системные справочники \n    CatalogKindAuxResponse:\n      description: Пример ответа c элементами системного справочника видов каталога\n      value:\n        - id: 1\n          name: Классификатор\n        - id: 2\n          name: Справочник\n\n    CatalogTypeAuxResponse:\n      description: Пример ответа c элементами системного справочника типов каталога\n      value:\n        - id: 1\n          name: Городской межотраслевой (межведомственный)\n        - id: 2\n          name: Городской межотраслевой (ведомственный)\n    \n    UpdatePeriodicityAuxResponse:\n      description: Пример ответа c элементами системного справочника приодичностей обновления\n      value:\n        - tagId: minutely\n          name: Ежеминутно\n          isGeneral: false\n          forPubl: false\n        - tagId: daily\n          name: Ежедневно\n          isGeneral: true\n          forPubl: true\n        - tagId: numDays\n          name: Настраиваемая (Произвольный срок)\n          isGeneral: false\n          forPubl: true\n      \n    PublicationCatalogStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статусов публикации каталогов\n      value:\n        - tagId: unpublished\n          name: Не опубликовано\n        - tagId: published\n          name: Опубликовано\n\n    ObjectStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статусов объектов каталога заполнения\n      value:\n        - id: 1\n          name: Новый\n          tagId: new\n        - id: 2\n          name: Подписанный\n          tagId: signed\n  \n    PublObjectStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статусов объектов каталога публикации\n      value:\n        - id: 1\n          name: Активный\n          tagId: active\n        - id: 2\n          name: Удаленный\n          tagId: deleted\n\n    AttributeTypeAuxResponse:\n      description: Пример ответа c элементами системного справочника типов атрибутов\n      value:\n        - id: 1\n          name: Строка\n          typeTag: string\n        - id: 2\n          name: Дробное число\n          typeTag: float\n\n    CatalogHistorySignStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статусов истории подписания\n      value:\n        - id: 0\n          name: В работе\n          tagId: inWork\n        - id: 1\n          name: Подписание каталога завершено\n          tagId: finished\n\n    CatalogHistorySignTypeAuxResponse:\n      description: Пример ответа c элементами системного справочника типа подписания в истории подписагтя\n      value:\n        - id: 1\n          name: подписание всех неподписанных объектов каталога\n          tagId: allObjects\n        - id: 2\n          name: подписание выбранных объектов каталога\n          tagId: selectedObjects\n\n    SignObjectLogStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статуса объектов в логе подписания\n      value:\n        - id: 0\n          name: ожидает обработки\n          tagId: new\n        - id: 2\n          name: ошибка отправки в брокер\n          tagId: ErrQueue\n\n    ImportHistoryStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статуса записей в истории импортов\n      value:\n        - id: 0\n          name: Новый\n          tagId: new\n        - id: 1\n          name: В работе\n          tagId: inWork\n\n    SignStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статусов подписания\n      value:\n        - id: 1\n          name: Подписанный\n          tagId: signed\n        - id: 2\n          name: Неподписанный\n          tagId: unsigned\n\n    DatasetSeasonalityAuxResponse:\n      description: Пример ответа c элементами системного справочника сезонностей наборов данных\n      value:\n        - id: 4\n          tagId: allSeasonal\n          name: Всесезонный набор данных\n          isCurrent: true\n        - id: 2\n          tagId: winter\n          name: Зимний набор данных\n          isCurrent: false \n\n    DatasetDictionaryTypeAuxResponse:\n      description: Пример ответа c элементами системного справочника типов справочников для наборов данных\n      value:\n        - tagId: regular\n          name: Обычный\n        - tagId: federal\n          name: Федеральный\n    \n    FilterOperatorAuxResponse:\n      description: Пример ответа c элементами системного справочника фильтров\n      value:\n        - id: 3\n          name: Содержит\n          tagId: contains\n          dataTypes: \n            - string\n            - dict\n            - link\n          filterType: basic\n        - id: 5\n          name: Равно\n          tagId: equals\n          dataTypes: \n            - string\n            - integer\n            - date\n            - dict\n            - boolean\n            - link\n            - float\n          filterType: basic\n\n    SysColumnsAuxResponse:\n      description: Пример ответа с элементами системного справочника со списком cсистемных столбецов для списка объектов каталогов заполнения и публикации\n      value:\n        - id: -10\n          name: Тип последнего изменения\n          dataType: string\n          objFieldName: lastChangeType\n          displayFlag: 1\n          forNested: 1\n          forPublSettings: 0\n          objCardFlag: 1\n          norder: 100001\n          publrestName: null\n        - id: -3\n          name: global_object_id\n          dataType: integer\n          objFieldName: globalObjectId\n          displayFlag: 3\n          forNested: 2\n          forPublSettings: 1\n          objCardFlag: 0\n          norder: 100005\n          publrestName: global_object_id\n        - id: -4\n          name: Дата подписания\n          dataType: string\n          objFieldName: signDate\n          displayFlag: 1\n          forNested: 1\n          forPublSettings: 1\n          objCardFlag: 1\n          norder: 100007\n          publrestName: signature_date\n\n    GeneralInfoSyncedPropertiesAuxResponse:\n      description: Пример ответа с полями общей информации каталога заполнения, которые синхронизируются с каталогом публикации\n      value:\n        - name: Поставщик информации\n          tagId: accountingObject\n        - name: Тематическая категория\n          tagId: thematicCategoryId\n          \n    MetadataSyncedPropertiesAuxResponse:\n      description: Пример ответа с полями метаданных каталога заполнения, которые синхронизируются с каталогом публикации\n      value:\n        - name: ФИО ответственного\n          tagId: respPersonFIO\n        - name: Описание каталога\n          tagId: description\n\n    MapSyncedPropertiesAuxResponse:\n      description: Пример ответа с полями настройки карты каталога заполнения, которые синхронизируются с каталогом публикации\n      value:\n        - id: 1\n          name: Наличие геопривязки\n          tagId: hasGeo\n        - id: 2\n          name: Тип геометрии\n          tagId: typeGeoTagIds  \n\n    RubricAuxResponse:\n      value:\n        - id: 7\n          name: Клиники\n        - id: 10\n          name: Точки продажи прессы\n\n    SearchIndexStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статуса поискового индекса\n      value:\n        - id: 0\n          name: Ожидает обработки\n          tagId: waitWork\n        - id: 1\n          name: Актуален\n          tagId: done\n        - id: 2\n          name: В обработке\n          tagId: inWork\n        - id: 3\n          name: Имеются ошибки\n          tagId: errors\n    \n    UserGroupAuxResponse:\n      description: Пример ответа c элементами системного справочника группы пользователя\n      value:\n        - id: 1\n          name: Суперпользователь\n          tagId: superUser                   \n        - id: 2\n          name: Пользователь\n          tagId: userOiv\n        - id: 3\n          name: Сотрудник Аппарата Мэра\n          tagId: apparat\n          excp_catalog:\n          - 3567\n          super_catalog: \n          - 29\n          - 2984\n          - 3904\n        - id: 4\n          name: Наблюдатель\n          tagId: viewAll       \n        - id: 5\n          name: Гость\n          tagId: guest\n\n    UserPrivilegeAuxResponse:\n      description: Пример ответа c элементами системного справочника группы пользователя\n      value:\n        - id: 1\n          name: Просмотр\n          tagId: canView                   \n        - id: 2\n          name: Экспорт\n          tagId: canExport\n        - id: 3\n          name: Редактирование\n          tagId: canEdit         \n        - id: 4\n          name: Подписание\n          tagId: canSign       \n        - id: 5\n          name: Редактирование метаданных\n          tagId: canEditMeta\n        - id: 6\n          name: Импорт\n          tagId: canImport\n        - id: 7\n          name: Публикация объектов\n          tagId: canPubl\n    \n    MailignStatusAuxResponse:\n      description: Пример ответа c элементами системного справочника статусов рассылок\n      value:\n        - id: 1\n          name: Включены все\n          tagId: allOn\n        - id: 2\n          name: Частично включены\n          tagId: partlyOn\n        - id: 3\n          name: Выключены все\n          tagId: allOff\n        \n    Menu:\n      description: Пример ответа c элементами системного справочника пунктов меню\n      value:\n        - id: 1\n          name: Каталоги\n          tagId: catalogs\n          children:\n            - id: 11\n              name: Данные по ОИВ\n              tagId: dataOiv\n              norder: 1010\n            - id: 12\n              name: Данные по категориям\n              tagId: dataCategories\n              norder: 1020\n          norder: 10\n        - id: 2\n          name: Управление          \n          tagId: control\n          children:\n            - id: 88\n              name: Управление публикацией\n              tagId: publication-queue\n              norder: 2010\n            - id: 56\n              name: Поисковый индекс\n              tagId: search-indexes\n              norder: 2020\n          norder: 200\n\n    UserStatus:\n      description: Пример ответа c элементами системного справочника статусов пользователя\n      value:\n        - id: 1\n          name: Активна\n          tagId: active\n        - id: 2\n          name: Удалена\n          tagId: deleted\n        - id: 3\n          name: Заблокирована\n          tagId: deleted\n        - id: 4\n          name: Временно заблокирована\n          tagId: deleted\n\n    SecurityEvent:\n      value:\n        - id: 1\n          name: Попытка входа\n          tagId: loginAttempt\n        - id: 2\n          name: Вход в систему\n          tagId: login\n        - id: 3\n          name: Выход из системы\n          tagId: logout\n\n    LastChangeType:\n      value:\n        - id: 1\n          name: Создание\n          tagId: added\n        - id: 2\n          name: Изменение\n          tagId: modified\n\n    PushsubStatus:\n      value:\n        - id: 1\n          name: Активна\n          tagId: active\n        - id: 2\n          name: Временно заблокирована\n          tagId: tmpBlocked\n        - id: 3\n          name: Неактивна\n          tagId: inactive\n\n    GeoTypeAuxResponse:\n      description: Пример ответа c элементами системного справочника с типами геометрии\n      value:\n        - id: 1\n          name: Точка\n          tagId: Point\n        - id: 2\n          name: Мультиточка\n          tagId: MultiPoint\n        - id: 3\n          name: Линия\n          tagId: MultiLineString\n        - id: 4\n          name: Полигон\n          tagId: MultiPolygon\n\n    DictionariesAttributesSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется справочник (в атрибутах, в конструкторе проверок, в настройках уникальностей КП)\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    DictionariesCatalogsSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов и атрибутов, в которых используется справочник (в атрибутах или в конструкторе проверок)\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    DictionariesAttributesInfoArrayResponse:\n      description: Пример ответа из массива атрибутов, в которых используется справочник\n      value:\n        - id: 34081\n          name: Номер телефона\n        - id: 4363\n          name: Категория\n\n    DictionariesCatalogsAttributesInfoArrayResponse:\n      description: Пример ответа из массива каталогов и атрибутов, в которых используется справочник\n      value:\n        - id: 107834\n          fullName: Платные парковки\n          attributeRusName: Номер парковки\n          attributeEnName: Number of parking\n        - id: 105264\n          fullName: Бесплатные горки для катания на ватрушках\n          attributeRusName: Сложность горки\n          attributeEnName: Slide level\n\n    DictionariesSearchIndexesSearchRequest:\n      description: Пример тела запроса для поиска по списку поисковых индексов, в которых используется справочник\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    DictionariesSearchIndexInfoArrayResponse:\n      description: Пример ответа из массива поисковых индексов, которые построены по справочнику\n      value:\n        - id: 345\n          name: Адреса БТИ с классом строений\n          dictColumnName: Адрес\n          dictColumnTechName: address\n        - id: 245\n          name: Адреса БТИ полный\n          dictColumnName: Наименование полное\n          dictColumnTechName: fullName\n\n    DictionariesChildDictSearchRequest:\n      description: Пример тела запроса для поиска по списку справочников, в которых используется справочник как родитель\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    DictionariesChildDictsInfoArrayResponse:\n      description: Пример ответа из массива справочников, которые используют справочник как родитель\n      value:\n        - id: 345\n          name: Адреса БТИ с классом строений\n        - id: 245\n          name: Адреса БТИ полный\n\n    DictionariesCatalogPackagesInfoArrayResponse:\n      description: Пример ответа из массива каталогов и конструкторов процессов, в которых используется справочник\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          packhName: Проверка строковых\n          packTechName: checkString\n        - id: 76\n          fullName: Тоннели\n          packName: Проверка числовых\n          packTechName: checkInteger\n\n    DictionariesCatalogUniqInfoArrayResponse:\n      description: Пример ответа из массива каталогов и настроек уникальностей, в которых используется справочник\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          packTechName: conditional\n          uniqTypeTag: conditional\n        - id: 76\n          fullName: Тоннели\n          packTechName: NameAddress\n          uniqTypeTag: group\n\n    DictionariesPublCatalogConditionsInfoArrayResponse:\n      description: Пример ответа из массива каталогов публикации, в которых справочник используется в настройках ограничения выборки\n      value:\n        - id: 109145\n          fullName: Платные поликлиники\n        - id: 345654\n          fullName: Дошкольные учреждения\n\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с регулярными выражениями\n  version: 1.0.0\n\n\npaths:\n  /regexps/search:\n    post:\n      tags:\n        - regexps\n      summary: Поиск по списку регулярных выражений\n      description: |-\n        Возвращает список регулярных выражений. \n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск по списку и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `name`, `value`, `description` используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых регулярных выражений (число от `1` до `500`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку регулярных выражений.\n            Поиск производится по идентификатору и наименованию регулярного выражения.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку регулярных выражений\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n                              - value\n                              - description\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegularExpression'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /regexps:\n    post:\n      tags:\n        - regexps\n      summary: Создание регулярного выражения\n      description: |-\n        Метод используется при создании регулярного выражения. \n        При успешном создании в ответе в поле `id` передается идентификатор созданного регулярного выражения.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegularExpression'\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionCreatedResponse' \n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Регулярное выражение невалидно;\n          content:\n            application/json:\n              schema:\n                 $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Регулярное выражение является невалидным:\n                  $ref: '#/components/examples/InvalidRegularExpressionError' \n\n    get:\n      tags:\n        - regexps\n      summary: Получение информации о регулярных выражениях\n      description: |-\n        Возвращает полную информацию о регулярных выражениях по идентификаторам.       \n        Если регулярное выражение с указанным идентификатором не найдено, оно не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/regexIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegularExpression'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionArrayResponse'\n\n    delete:\n      tags:\n        - regexps\n      summary: Удаление регулярных выражений\n      description: |\n        Метод используется для удаления одного или нескольких регулярных выражений.\n\n        При удалении осуществляется проверка (метод /regexps/{regexId}/checkAttributes), используется ли регулярное выражение в атрибутах каталогов. \n        Если используется, то удаление невозможно.\n\n        Если регулярное выражение привязано к атрибуту (именно к атрибуту, а не атрибуту каталога), то при удалении выражения ссылка в атрибуте обнуляется. \n      parameters:\n        - $ref: '#/components/parameters/regexIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionDeletedResponse'      \n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Одно или несколько из переданных регулярных выражений используются в атрибутах каталогов;\n              - Одно или несколько из переданных регулярных выражений используется в атрибутах;\n              - Одно или несколько из переданных регулярных выражений используется в конструкторе проверок каталога заполнения;\n              - Одно или несколько из переданных регулярных выражений используется в настройках уникальностей каталога заполнения;\n              - Одно или несколько из переданных регулярных выражений используется в настройках ограничения выборки каталога публикации;\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Регулярное выражение используется в атрибуте каталога:\n                  $ref: '#/components/examples/RegularExpressionIsUsedInAttributesError'\n                Регулярное выражение используется в атрибутах:\n                  $ref: '#/components/examples/RegularExpressionIsUsedInListAttributesError'\n                Регулярное выражение используется в конструкторе проверок каталога заполнения:\n                  $ref: '#/components/examples/RegularExpressionIsUsedInCatalogPackagesError'\n                Регулярное выражение используется в настройках уникальностей каталога заполнения:\n                  $ref: '#/components/examples/RegularExpressionIsUsedInCatalogUniqsError'\n                Регулярное выражение используется в настройках ограничения выборки каталога публикации:\n                  $ref: '#/components/examples/RegularExpressionIsUsedInPublCatalogConditionsError'\n\n  /regexps/{regexId}:\n    put:\n      tags:\n        - regexps\n      summary: Изменение регулярного выражения\n      description: |-\n        Метод используется для изменения информации о регулярном выражении.\n        Для регулярного выражения доступно изменение наименования, значения и описания выражения.     \n      \n\n        При редактировании осуществляется проверка (метод /regexps/{regexId}/checkAttributes), используется ли регулярное выражение в атрибутах каталогов. \n        Если используется, то редактирование требует подтверждения.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/RegularExpression'\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionEditedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Регулярное выражение невалидно;\n          content:\n            application/json:\n              schema:\n                 $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Регулярное выражение является невалидным:\n                  $ref: '#/components/examples/InvalidRegularExpressionError'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n  /regexps/{regexId}/checkAttributes:\n    get:\n      tags:\n        - regexps\n      summary: Проверка, используется ли регулярное выражение в атрибутах каталогов\n      description: |-\n        Метод используется для проверки использования регулярного выражения в атрибутах каталогов.\n        Возвращает ответ `true` или `false` и сообщение с результатом проверки.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                description: Результат проверки\n                type: object\n                properties:\n                  usedInCatalogs: \n                    description: Результат проверки. `true` если выражение используется в каталогах, `false` - не используется\n                    type: boolean\n                  message:\n                    description: Сообщение с результатом проверки и информацией об атрибутах\n                    type: string\n                required:\n                  - usedInCatalogs\n              examples:\n                Результат проверки, когда регулярное выражение используется в каталогах:\n                  $ref: '#/components/examples/RegularExpressionCheckUsedResponse'\n                Результат проверки, когда регулярное выражение НЕ используется в каталогах:\n                  $ref: '#/components/examples/RegularExpressionCheckNotUsedResponse'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n  /regexps/testString:\n    post:\n      tags:\n        - regexps\n      summary: Проверка, соответствует ли введенный текст регулярному выражению\n      description: |-\n        Метод используется для проверки текста на соответствие регулярному выражению. \n        Возвращает ответ `true` или `false` и сообщение с результатом проверки.      \n      requestBody:\n        description: Пример тела запроса регулярным выражением и текстом для проверки\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                regexValue:\n                  description: Значение регулярного выражения\n                  type: string\n                textValue:\n                  description: Текст для проверки на соответствие регулярному выражению\n                  type: string\n              required:\n                - regexValue\n                - textValue\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionTestRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                description: Результат проверки \n                type: object\n                properties:\n                  textIsMatch:\n                    type: boolean\n                  message:\n                    description: Сообщения результата проверки\n                    type: string\n                required:\n                  - textIsMatch\n              examples:\n                Успешный результат проверки:\n                  $ref: '#/components/examples/RegularExpressionMatchedResponse'\n                Результат проверки с ошибкой:\n                  $ref: '#/components/examples/RegularExpressionNotMatchedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Регулярное выражение невалидно;\n          content:\n            application/json:\n              schema:\n                 $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Регулярное выражение является невалидным:\n                  $ref: '#/components/examples/InvalidRegularExpressionError'\n\n  # Связанные сущности регулярного выражения\n# этот метод будет заменен на /catalogAttributes/search (скорректирован и переименован) + добавить про табличные атрибуты. \n# Метод с таким наименованием остается для поиска атрибуов в системе (без привязки к каталогу) /NEWattributes/search\n  /regexps/{regexId}/attributes/search:\n    post:\n      tags:\n        - regexps\n      summary: Получение информации об атрибутах, в которых используется регулярное выражение\n      description: |-\n        Возвращает список атрибутов в неудаленных каталогах, где используется указанное регулярное выражение.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск по списку и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации используется тело запроса.\n        \n\n        Ответ включает список атрибутов c идентификаторами, названием `attributeName` и названием каталога `catalogName`, к которому этот атрибут относится.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых атрибутов (число от `1` до `500`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку атрибутов. Поиск производится по идентификатору и наименованию каталога, а также по идентификатору и наименованию атрибута.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `catalogId`, `catalogName`, `attributeId`, `attributeName`.\n            \n            По умолчанию: `catalogId`.\n          required: false\n          schema:\n            type: string\n            default: catalogId\n            enum:\n              - catalogId\n              - catalogName\n              - attributeId\n              - attributeName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку атрибутов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - catalogId\n                              - catalogName\n                              - attributeId\n                              - attributeName\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionAttributeSearchRequest'       \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RegularExpressionAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionAttributeInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n# метод для поиска регулярок в атрибутах системы. Для поиска атрибутов с регулярками в каталогах есть метод /catalogAttributes/search\n  /regexps/{regexId}/NEWattributes/search: \n    post:\n      tags:\n        - regexps\n      summary: Получение информации об атрибутах, в которых используется регулярное выражение\n      description: |-\n        Возвращает список неудаленных атрибутов, в которых используется регулярное выражение. \n        Атрибут может использоваться или не использоваться в каталоге. Для поиска атрибутов в каталоге используется метод /catalogAttributes/search\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск по списку и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации по полям `id` и `name` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку атрибутов.\n            Поиск производится по полям `id` и `name`.\n            В ответе будут представлены только те атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все атрибуты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку атрибутов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/NEWRegularExpressionAttributeSearchRequest'       \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/NEWRegularExpressionAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/NEWRegularExpressionAttributeInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n  /regexps/{regexId}/catalogAttributes/search: \n    post:\n      tags:\n        - regexps\n      summary: Получение информации о каталогах и атрибутах, в которых используется регулярное выражение\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и атрибутах, в которых используется регулярное выражение.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов и атрибутов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов и атрибутов, в которых используется регулярное выражение\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionCatalogAttributeSearchRequest'       \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'attributes.yaml#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionCatalogsAttributesInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n  /regexps/{regexId}/catalogPackages/search: \n    post:\n      tags:\n        - regexps\n      summary: Получение информации о каталогах и конструкторах процессов, в которых используется регулярное выражение\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и конструкторах процессов, в которых используется регулярное выражение.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `packName`, `packTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `packName`, `packTechName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `packName`, `packTechName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - packName\n              - packTechName \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется регулярное выражение\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - packName\n                              - packTechName\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionCatalogPackagesSearchRequest'       \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CatalogPackageInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionCatalogPackageInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n  /regexps/{regexId}/catalogUniqs/search: \n    post:\n      tags:\n        - regexps\n      summary: Получение информации о каталогах и настройках уникальностей, в которых используется регулярное выражение\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения и настройках уникальностей, в которых используется регулярное выражение.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `uniqTypeTag`, `packTechName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги и пакеты, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `uniqTypeTag`, `packTechName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - uniqTypeTag\n              - packTechName \n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется регулярное выражение\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - uniqTypeTag\n                              - packTechName\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionCatalogUniqsSearchRequest'       \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CatalogUniqInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionCatalogUniqInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n  /regexps/{regexId}/publCatalogConditions/search: \n    post:\n      tags:\n        - regexps\n      summary: Получение информации о каталогах публикации, в которых используется регулярное выражение\n      description: |-\n        Возвращает информацию о неудаленных каталогах публикации, в которых используется регулярное выражение в настройках ограничения выборки.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/regexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id` и `fullName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется регулярное выражение\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/RegularExpressionPublCatalogConditionsSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/RegularExpressionPublCatalogConditionsInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/RegularExpressionNotFoundResponse'\n\n\ncomponents:\n\n  schemas:\n\n    # Регулярные выражения    \n    CommonRegularExpressionInfo:\n      description: Общая информация регулярного выражения\n      type: object\n      properties:\n        id: \n          description: Идентификатор регулярного выражения\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Название регулярного выражения\n          type: string\n        value:\n          description: Регулярное выражение\n          type: string \n      required:\n        - id\n        - name\n        - value\n    \n    RegularExpression:\n      description: Регулярное выражение\n      type: object\n      allOf:\n        # Костыль, чтобы не было ошибке в веб-морде\n        - $ref: 'regexps.yaml#/components/schemas/CommonRegularExpressionInfo'\n      properties:\n        description:\n          description: Описание регулярного выражения\n          type: string\n      required:\n        - description\n      example:\n        id: 2\n        name: Только числа\n        value: \"^([0-9]+)$\"\n        description: Регулярное выражение принимает только числа\n\n    RegularExpressionAttributeInfo:\n      description: Элемент списка атрибутов и каталогов, которые используют указанное регулярное выражение\n      type: object\n      properties:\n        catalogId:\n          description: Идентификатор каталога, в котором используется данный атрибут\n          type: integer\n          format: int32\n        catalogName:\n          description: Название каталога, в котором используется данный атрибут\n          type: string\n        attributeId:\n          description: Идентификатор атрибута ЕХД\n          type: integer\n          format: int32\n        attributeName:\n          description: Название атрибута\n          type: string\n      required:\n        - catalogId\n        - catalogName\n        - attributeId\n        - attributeName\n\n    NEWRegularExpressionAttributeInfo:\n      description: Информация об атрибуте, в котором используется регулярное выражение\n      type: object\n      properties:\n# Если сделать CommonAttributeInfo из идентификатора и наименовыания, то можно этот common много где использовать.\n# Пока он очень большой, с лишней информацией, поэтому отдельно прописываем.\n        id:\n          description: Идентификатор атрибута ЕХД\n          type: integer\n          format: int32\n        name:\n          description: Русскоязычное наименование атрибута\n          type: string\n      required:\n        - id\n        - name\n\n\n    # RegularExpressionCatalogProcessSettingsInfo:\n    #       description: Информация о каталоге и конструкторе процессов, в котором используется указанное регулярное выражение\n    #       type: object\n    #       allOf:\n    #         - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n    #       properties:\n    #         packName:\n    #           description: Название пакета \n    #           type: integer\n    #           format: int32\n    #         packTechName:\n    #           description: Технологическое наименование пакета\n    #           type: string\n    #       required:\n    #         - packName\n    #         - packTechName\n    \n\n  parameters:\n    regexIdPathParam:\n      name: regexId\n      in: path\n      description: |-\n        Идентификатор регулярного выражения.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 18\n    \n    regexIdQueryParam:\n      name: regexId\n      in: query\n      description: |-\n        Идентификатор регулярного выражения.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 84\n    \n    regexIdsQueryParam:\n      name: regexIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов регулярных выражений.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [786, 32, 43]  \n\n\n  responses:\n    RegularExpressionNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id регулярного выражения не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id регулярного выражения:\n              $ref: '#/components/examples/RegularExpressionNotFoundError'\n   \n\n  examples:\n    RegularExpressionSearchRequest:\n      description: Пример тела запроса для поиска по списку регулярных выражений\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: name\n            operator: contains\n            value: \"Число\"\n    \n    RegularExpressionRequest:\n      description: Пример тела запроса с информацией о регулярном выражении\n      value:\n        name: Только русские буквы\n        value: \"^([а-я]+)$\"\n        description: Регулярное выражение принимает только русские буквы\n    \n    RegularExpressionAttributeSearchRequest:\n      description: Пример тела запроса для поиска по списку атрибутов, в которых используется регулярное выражение\n      value:\n        filters:\n          - attribute: catalogId\n            operator: greaterThan\n            value: 10\n          - attribute: attributeName\n            operator: contains\n            value: \"Номер телефона\" \n\n    NEWRegularExpressionAttributeSearchRequest:\n      description: Пример тела запроса для поиска по списку атрибутов, в которых используется регулярное выражение\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: name\n            operator: contains\n            value: \"Номер телефона\" \n\n    RegularExpressionCatalogAttributeSearchRequest:\n      description: Пример тела запроса для поиска по списку каталгов и атрибутов, в которых используется регулярное выражение\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: fullNmae\n            operator: contains\n            value: \"Номер телефона\" \n    \n    RegularExpressionTestRequest:\n      description: Пример тела запроса для проверки строки по регулярному выражению\n      value:\n        regexValue: 12345\n        textValue: \"абв\"\n    \n    RegularExpressionArrayResponse:\n      description: Пример ответа с массивом регулярных выражений\n      value:\n        - id: 2\n          name: Только числа\n          value: \"^([0-9]+)$\"\n          description: Регулярное выражение принимает только числа\n\n    RegularExpressionAttributeInfoArrayResponse:\n      description: Пример ответа с массивом атрибутов, в которых используется регулярное выражение\n      value:\n        - catalogId: 1234\n          catalogName: Каталог сотрудников\n          attributeId: 34081\n          attributeName: Номер телефона\n        - catalogId: 76\n          catalogName: Тоннели\n          attributeId: 4363\n          attributeName: Категория\n\n    NEWRegularExpressionAttributeInfoArrayResponse:\n      description: Пример ответа из массива атрибутов, в которых используется регулярное выражение\n      value:\n        - id: 34081\n          name: Номер телефона\n        - id: 4363\n          name: Категория\n\n    RegularExpressionCatalogsAttributesInfoArrayResponse:\n      description: Пример ответа из массива каталогов и атрибутов, в которых используется регулярное выражение\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          attributeRusName: Номер телефона\n          attributeEnName: Number\n        - id: 76\n          fullName: Тоннели\n          attributeRusName: Категория\n          attributeEnName: Category\n\n    RegularExpressionCreatedResponse:\n      description: Пример ответа при создании регулярного выражения\n      value:\n        id: 643\n        code: 201\n        messageType: Created\n        message: Регулярное выражение успешно создано!   \n    \n    RegularExpressionEditedResponse:\n      description: Пример ответа при изменении регулярного выражения\n      value:\n        id: 56\n        code: 200\n        messageType: Ok\n        message: Регулярное выражение успешно изменено!\n    \n    RegularExpressionDeletedResponse:\n      description: Пример ответа при удалении регулярных выражений\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные регулярные выражения удалены!\n    \n    RegularExpressionCheckNotUsedResponse:\n      description: Пример ответа, если регулярное выражение не используется в атрибутах\n      value:\n        usedInCatalogs: false\n        message:\n          Регулярное выражение не используется.\n\n    RegularExpressionCheckUsedResponse:\n      description: Пример ответа, если регулярное выражение используется в атрибутах\n      value:\n        usedInCatalogs: true\n        message: > \n          Регулярное выражение используется в атрибутах каталогов: {attributeId} - {catalogId}\n    \n    RegularExpressionMatchedResponse:\n      description: Пример ответа, если значение соответствует регулярному выражению\n      value:\n        textIsMatch: true\n        message: Введенное значение соответствует регулярному выражению\n    \n    RegularExpressionNotMatchedResponse:\n      description: Пример ответа, если значение не соответствует регулярному выражению\n      value:\n        textIsMatch: false\n        message: Введенное значение не соответствует регулярному выражению \n    \n    InvalidRegularExpressionError:\n      description: Пример ответа при отправке невалидного регулярного выражения\n      value:\n        code: 400\n        messageType: Bad request\n        message: Регулярное выражение является невалидным.\n\n    RegularExpressionIsUsedInAttributesError:\n      description: |-\n        Удаляется регулярное выражение, которое используется в атрибутах каталогов.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Регулярное выражение (id {regularExpressionId}) не может быть удалено, так как используется в одном или нескольких атрибутах каталогов. \n          Удаление регулярных выражений не выполнено.\n\n    RegularExpressionIsUsedInListAttributesError:\n      description: |-\n        Удаляется регулярное выражение, которое используется в атрибутах.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Регулярное выражение (id {regularExpressionId}) не может быть удалено, так как используется в одном или нескольких атрибутах. \n          Удаление регулярных выражений не выполнено.\n\n    RegularExpressionIsUsedInCatalogPackagesError:\n      description: |-\n        Удаляется регулярное выражение, которое используется в настройках конструктора проверок каталогов заполнения.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Регулярное выражение (id {regularExpressionId}) не может быть удалено, так как используется в конструкторе проверок одного или нескольких каталогов заполнения. \n          Удаление регулярных выражений не выполнено.\n\n    RegularExpressionIsUsedInCatalogUniqsError:\n      description: |-\n        Удаляется регулярное выражение, которое используется в настройках уникальности каталогов заполнения.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Регулярное выражение (id {regularExpressionId}) не может быть удалено, так как используется в настройках уникальности одного или нескольких каталогов заполнения.\n          Удаление регулярных выражений не выполнено.\n\n    RegularExpressionIsUsedInPublCatalogConditionsError:\n      description: |-\n        Удаляется регулярное выражение, которое используется в настройках ограничения выборки каталогов публикации.\n      value:\n        id: 87\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Регулярное выражение (id {regularExpressionId}) не может быть удалено, так как используется в настройках ограничения выборки одного или нескольких каталогов публикации. \n          Удаление регулярных выражений не выполнено.\n\n    RegularExpressionNotFoundError:\n      description: |-\n        Указанное регулярное выражение не найдено.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: |-\n          Регулярное выражение с идентификатором {regularExpressionId} не существует.\n\n    RegularExpressionCatalogPackagesSearchRequest:\n      description: Пример тела запроса для поиска по списку каталгов и конструкторов процессов, в которых используется регулярное выражение\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: packTechName\n            operator: contains\n            value: \"nomber\" \n\n    RegularExpressionCatalogUniqsSearchRequest:\n      description: Пример тела запроса для поиска по списку каталгов и настройках уникальностей, в которых используется регулярное выражение\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 10\n          - attribute: packTechName\n            operator: contains\n            value: \"nomber\" \n\n    RegularExpressionPublCatalogConditionsSearchRequest:\n      description: Пример тела запроса для поиска по списку каталгов публикации, в которых используется регулярное выражение\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    RegularExpressionCatalogPackageInfoArrayResponse:\n      description: Пример ответа из массива каталогов и конструкторов процессов, в которых используется регулярное выражение\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          packhName: Проверка строковых\n          packTechName: checkString\n        - id: 76\n          fullName: Тоннели\n          packName: Проверка числовых\n          packTechName: checkInteger\n\n    RegularExpressionCatalogUniqInfoArrayResponse:\n      description: Пример ответа из массива каталогов и настроек уникальностей, в которых используется справочник\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          packTechName: conditional\n          uniqTypeTag: conditional\n        - id: 76\n          fullName: Тоннели\n          packTechName: NameAddress\n          uniqTypeTag: group\n\n    RegularExpressionPublCatalogConditionsInfoArrayResponse:\n      description: Пример ответа из массива каталогов публикации, в которых регулярное выражение используется в настройках ограничения выборки\n      value:\n        - id: 109145\n          fullName: Платные поликлиники\n        - id: 345654\n          fullName: Дошкольные учреждения\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с категориями объектов\n  version: 1.0.0\n\n\npaths:\n  /objectCategories/search:\n    post:\n      tags:\n        - objectCategories\n      summary: Поиск по списку категорий объектов\n      description: |-\n        Возвращает список категорий объектов, удовлетворящий поисковым критериям.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Ответ включает список объектов категорий с указанием идентификатора `id` и названий `rusName` и `enName`.\n        \n        Для фильтрации используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых категорий (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: notUsedOnly\n          in: query\n          description: |-\n            Параметр, определяющий будут ли возвращены только те категории, которые не используются в других каталогах. По умолчанию: `false`.\n          required: false\n          schema:\n            type: boolean\n            default: false\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку категорий. Поиск производится по идентификатору `id` и наименованиям `rusName`, `enName`.\n            \n            Запрос со значением `12` вернет все категории, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `rusName`, `enName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - rusName\n              - enName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку категорий объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - rusName\n                              - enName\n            examples:\n              Пример:\n                $ref: '#/components/examples/ObjectCategorySearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ObjectCategory'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectCategoryArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n  \n  /objectCategories:\n    get:\n      tags:\n        - objectCategories\n      summary: Получение категорий объектов по идентификаторам\n      description: |-\n        Возвращает полную информацию о категориях объектов по идентификаторам.\n        \n        Если категория объектов с указанными идентификатором не найдена, она не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/objectCategoryIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ObjectCategory'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectCategoryArrayResponse'\n    post:\n      tags:\n        - objectCategories\n      summary: Создание категории объектов\n      description: |-\n        Создает категорию объектов. В запросе передается наименование категории в поле `rusName`, которое должно быть уникальным.\n      requestBody:\n        $ref: '#/components/requestBodies/objectCategoryRequestBody'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectCategoryCreatedResponse'\n        '400':\n          $ref: '#/components/responses/ObjectCategoryBadRequestResponse'\n    delete:\n      tags:\n        - objectCategories\n      summary: Удаление категорий объектов\n      description: |-\n        Удаляет категории объектов по переданным идентификаторам.\n        \n        Если категория используется хотя бы в одном каталоге, будет возвращена ошибка и удаление всех переданных категорий не будет выполнено.\n      parameters:\n        - $ref: '#/components/parameters/objectCategoryIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectCategoryDeletedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Одна из переданных категорий объектов используется в каталоге.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Категория объектов используется в каталоге:\n                  $ref: '#/components/examples/ObjectCategoryIsUsedInCatalogsError'\n  \n  /objectCategories/{categoryId}:\n    put:\n      tags:\n        - objectCategories\n      summary: Изменение информации о категории объектов\n      description: |-\n        Обновляет информацию о категории объектов.\n        \n        В запросе передается новое наименование категории в поле `rusName`, которое должно быть уникальным.\n      parameters:\n        - $ref: '#/components/parameters/objectCategoryIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/objectCategoryRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectCategoryEditedResponse'\n        '400':\n          $ref: '#/components/responses/ObjectCategoryBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/ObjectCategoryNotFoundErrorResponse'\n  \n  /objectCategories/{categoryId}/catalogs/search:\n    post:\n      tags:\n        - objectCategories\n      summary: Получение информации о каталогах, в которых используется категория объектов\n      description: |-\n        Возвращает информацию о каталогах, в которых используется категория объектов.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `catalogId` и `catalogName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/objectCategoryIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `catalogId` и `catalogName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор, наименование или название атрибута в которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - $ref: 'catalogs.yaml#/components/parameters/dataModesFilterQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/catalogStatusesFilterQueryParam'\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `catalogId` и `catalogName`.\n            \n            По умолчанию: `catalogId`.\n          required: false\n          schema:\n            type: string\n            default: catalogId\n            enum:\n              - catalogId\n              - catalogName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов, в которых используется категория объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - catalogId\n                              - catalogName\n            examples:\n              Пример:\n                $ref: '#/components/examples/ObjectCategoryCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ObjectCategoryCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectCategoryCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/ObjectCategoryNotFoundErrorResponse'\n\ncomponents:\n  schemas:\n    ObjectCategory:\n      description: |-\n        Категория объектов\n      type: object\n      properties:\n        id:\n          description: Идентификатор категории объектов\n          type: integer\n          format: int32\n          readOnly: true\n        rusName:\n          description: Русскоязычное наименование категории объектов, должно быть уникальным\n          type: string\n        enName:\n          description: Англоязычное наименование категории объектов\n          type: string\n      required:\n        - id\n        - rusName\n    \n    ObjectCategoryCatalogInfo:\n      description: |-\n        Информация о каталоге, в котором используется категория объектов.\n      type: object\n      readOnly: true\n      properties:\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        catalogName:\n          description: Наименование каталога\n          type: string\n        isCatalogDeleted:\n          description: Удален ли каталог\n          type: boolean\n      required:\n        - catalogId\n        - catalogName\n        - isCatalogDeleted\n\n  parameters:\n    objectCategoryIdPathParam:\n      name: categoryId\n      in: path\n      description: |-\n        Идентификатор категории объектов.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 7\n    \n    objectCategoryIdsQueryParam:\n      name: categoryIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов категорий объектов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n\n  requestBodies:\n    objectCategoryRequestBody:\n      description: Пример тела запроса с информацией о категории объектов.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/ObjectCategory'\n          examples:\n            Пример:\n              $ref: '#/components/examples/ObjectCategoryRequest'\n\n  responses:\n    ObjectCategoryNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id категории объектов не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id категории объектов:\n              $ref: '#/components/examples/ObjectCategoryNotFoundError'\n    ObjectCategoryBadRequestResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Категория объектов с переданным названием `name` уже существует;\n          - В русскоязычном названии категории объектов переданы запрещенные символы;\n          - В англоязычном названии категории объектов переданы запрещенные символы.\n      content:\n        application/json:\n          schema:\n              oneOf:\n              - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n              - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n          examples:\n            Неуникальное название категории объектов:\n              $ref: '#/components/examples/ObjectCategoryNameNotUniqueError'\n            В русскоязычном названии категории объектов присутствуют запрещенные символы:\n              $ref: '#/components/examples/ObjectCategoryBadRusNameError'\n            В англоязычном названии категории объектов присутствуют запрещенные символы:\n              $ref: '#/components/examples/ObjectCategoryBadEnNameError'\n  examples:\n    ObjectCategorySearchRequest:\n      description: Пример тела запроса для поиска по списку категорий объектов\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n          - attribute: rusName\n            operator: contains\n            value: больницы\n\n    ObjectCategoryRequest:\n      description: Пример тела запроса с информацией о категории объектов\n      value:\n        rusName: Поликлиники\n        enName: Hospitals\n    \n    ObjectCategoryCatalogSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется категория обьъектов\n      value:\n        filters:\n          - attribute: catalogId\n            operator: greaterThan\n            value: 30\n    \n    ObjectCategoryArrayResponse:\n      description: Пример ответа с массивом категории объектов\n      value:\n        - id: 7\n          rusName: Поликлиники\n          enName: Hospitals\n    \n    ObjectCategoryCatalogInfoArrayResponse:\n      description: Пример ответа из массива каталогов, в которых используется категория объектов\n      value:\n        - catalogId: 109145\n          catalogName: Платные поликлиники\n          isCatalogDeleted: true\n\n    ObjectCategoryCreatedResponse:\n      description: Пример ответа при создании категории объектов\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Категория объектов успешно создана!\n    \n    ObjectCategoryEditedResponse:\n      description: Пример ответа при изменении категории объектов\n      value:\n        code: 200\n        messageType: Ok\n        message: Категория объектов успешно изменена!\n    \n    ObjectCategoryDeletedResponse:\n      description: Пример ответа при удалении категорий объектов\n      value:\n        code: 200\n        messageType: Ok\n        message: Категории объектов успешно удалены!\n\n    ObjectCategoryNameNotUniqueError:\n      description: |-\n        Передано неуникальное название категории объектов.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Категория объектов с таким названием уже существует. Русскоязычное наименование должно быть уникальным.\n    \n    ObjectCategoryBadRusNameError:\n      description: |-\n        В русскоязычном названии категории объектов переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В русскоязычном наименовании категории объектов переданы запрещенные символы. Русскоязычное наименование может включать все символы, кроме < и >\n    \n    ObjectCategoryBadEnNameError:\n      description: |-\n        В англоязычном названии категории объектов переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          В англоязычном наименовании категории объектов переданы запрещенные символы. Англоязычное наименование может включать все символы, кроме букв русского алфавита, а также символов < и >\n\n    ObjectCategoryIsUsedInCatalogsError:\n      description: |-\n        Удаялется категория объектов, которая используется в каталогах.\n      value:\n        id: 7\n        code: 400\n        messageType: Resource cannot be deleted\n        message: >\n          Категория объектов (id {objectCategoryId}) не может может быть удалена, так как используется в одном или нескольких каталогах. Удаление категорий не выполнено.\n\n    ObjectCategoryNotFoundError:\n      description: |-\n        Указанная категория объектов не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Категория объектов с идентификатором {categoryId} не существует.\n    ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с поисковыми индексами и списком поисковых индексов каталогов заполнения\n  version: 1.0.0\n\npaths:\n\n  /searchIndexes/search:\n    post:\n      tags:\n        - searchIndexes\n      summary: Поиск по списку поисковых индексов\n      description: |-\n        Возвращает список поисковых индексов, удовлетворящий поисковым критериям.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        Ответ включает список объектов индексов с указанием идентификатора `id`, названия `name`, технического названия `techName`, \n        описания индекса `description`, наименования справочника `dictName`, наименования столбца справочника `dictColumnName` и наименование статуса `status`.\n        \n        Для фильтрации используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых индексов (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку индексов. Поиск производится по идентификатору индекса `id`, наименованиям `name` и `techName`, \n            описанию индекса `description`, наименованию справочника `dictName`, наименованию столбца справочника `dictColumnName`.\n            \n            Запрос со значением `12` вернет все индексы, у которых идентификатор индекса, наименования или описание индекса, \n            наименование справочника или столбца справочника которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`, `techName`, `dictName`, `dictColumnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n              - techName\n              - dictName\n              - dictColumnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - $ref: '#/components/parameters/searchIndexStatusesQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку поисковых индексов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - name\n                              - techName\n                              - description\n                              - dictName\n                              - dictColumnName\n                              - status\n            examples:\n              Пример:\n                $ref: '#/components/examples/SearchIndexesSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array \n                items:\n                  $ref: '#/components/schemas/SearchIndexListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SearchIndexesListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n\n  /searchIndexes:\n    get:\n      tags:\n        - searchIndexes\n      summary: Получение поисковых индексов по идентификаторам\n      description: |-\n        Возвращает полную информацию о поисковых индексах по идентификаторам.\n        \n        Если поисковый индекс с указанным идентификатором не найден, он не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SearchIndex'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SearchIndexesArrayResponse'\n    post:\n\n      tags:\n        - searchIndexes\n      summary: Создание поискового индекса\n      description: |-\n        Создает поисковый индекс. \n        В запросе передается:\n        - русскоязычное наименование поискового индекса в поле `name`\n        - техническое наименование поискового индекса (латиницей) в поле `techName`\n        - русскоязычное описание индекса в поле `description`\n        - идентификатор справочника, по которому строится индекс в поле `dictId`\n        - техническое наименование столбца справочника, по которому строится индекс в поле `dictColTechName`\n\n        Для поискового индекса должны выполняться следующие правила:\n        - уникальная комбинация справочника `dictId` и столбца справочника `dictColTechName`, по которому строится индекс\n        - уникальное русскоязычное наименование `name`\n        - уникальное техническое наименование `techName`\n\n        Если справочник, по которому строится индекс имеет менее 10 000 записей, то индекс будет создан синхронно и пользователю выводится сообщение об успешном создании индекса.\n        Если справчоник имеет более 10 000 записей, \n        то справочник отправляется в очередь на построение индекса и пользователю выводится сообщение об успешном добавлении спрачоника в очередь построения индекса.         \n      requestBody:\n        $ref: '#/components/requestBodies/SearchIndexRequestBody'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример синхронного создания индекса:\n                  $ref: '#/components/examples/SearchIndexSynchCreatedResponse'\n                Пример асинхронного создания индекса (добавлен в очередь):\n                  $ref: '#/components/examples/SearchIndexAsynchCreatedResponse'\n        '400':\n          $ref: '#/components/responses/SearchIndexBadRequestResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный dictId справочника не существует.\n              - Запрошенный столбец dictColTechName справочника не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий dictId справочника:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryNotFoundError'\n                Несуществующий столбец dictColTechName справочника:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryTechColumnNotFoundError'\n        '500':\n          description: |-\n            ### Возможные внутренние ошибки:\n              - Ошибка синхронного создания поискового индекса.\n              - Ошибка добавления индекса в очередь построения индекса.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/InternalServerError'\n              examples:\n                Ошибка синхронного создания поискового индекса:\n                  $ref: '#/components/examples/SearchIndexSynchCreatedError'\n                Ошибка добавления поискового индекса в очередь на построение:\n                  $ref: '#/components/examples/SearchIndexAsynchCreatedError'\n    delete:\n      tags:\n        - searchIndexes\n      summary: Удаление поискового индекса\n      description: |-\n        Удаляет поисковые индексы по переданным идентификаторам.\n        \n        Если поисковый индекс используется хотя бы в одном каталоге (атрибуте), \n        будет возвращена ошибка и удаление всех переданных поисковых индексов не будет выполнено.\n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SearchIndexesDeletedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Один или несколько из переданных поисковых индексов используются в атрибутах каталога.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Поисковый индекс используется в атрибуте каталога:\n                  $ref: '#/components/examples/SearchIndexIsUsedInCatalogsError'\n\n  /searchIndexes/{indexId}:\n    put:\n      tags:\n        - searchIndexes\n      summary: Изменение информации о поисковом индексе\n      description: |-\n        Обновляет информацию о поисковом индексе.\n        \n        В запросе передается:\n          - новое наименование поискового индекса в поле `name`\n          - новое техническое наименование поискового индекса в поле `techName`\n          - новое русскоязычное описание поискового индекса в поле `description`, \n          которые должны быть уникальными.\n        \n        При редактировании данных о поисковом индексе должны выполняться следующие правила:\n          - нельзя изменять идентификатор справочника, по которому настроен индекс\n          - нельзя изменять наименование столбца справочника, по которому настроен индекс\n      parameters: \n        - $ref: '#/components/parameters/searchIndexIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/SearchIndexRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SearchIndexEditedResponse'\n        '400':\n          $ref: '#/components/responses/SearchIndexBadRequestPutResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id поискового индекса не существует.\n              - Запрошенный dictId справочника не существует.\n              - Запрошенный столбец dictColTechName справочника не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id поискового индекса:\n                  $ref: '#/components/examples/SearchIndexNotFoundError'\n                Несуществующий dictId справочника:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryNotFoundError'\n                Несуществующий столбец dictColTechName справочника:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryTechColumnNotFoundError'\n\n  /searchIndexes/{indexId}/dictionary:\n     get:\n      tags:\n        - searchIndexes\n      summary: Получение информации о справочнике, по которому построен поисковый индекс\n      description: |-\n        Метод возвращает информацию о справочнике по идентификатору поискового индекса.\n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: object\n                allOf:\n                  - $ref: '#/components/schemas/SearchIndexDictionaryInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SearchIndexDictionaryInfoResponse'\n        '404':\n          $ref: '#/components/responses/SearchIndexNotFoundErrorResponse'\n\n  /searchIndexes/{indexId}/query:\n    get:\n      tags:\n        - searchIndexes\n      summary: Запрос к поисковому индексу\n      description: |- \n        Возвращает список значений поискового индекса, удовлетворяющих запросу. \n        На вывод отображается первые 50 значений индекса подходящих под запрос.  \n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdPathParam'\n        - $ref: '#/components/parameters/queryQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: string\n              examples:\n                Пример:\n                  $ref: '#/components/examples/IndexValueArrayResponse'    \n        '404':\n          $ref: '#/components/responses/SearchIndexNotFoundErrorResponse'\n\n  /searchIndexes/{indexId}/rebuild:\n    post:\n      tags:\n        - searchIndexes\n      summary: Полное перестроение индекса\n      description: |- \n        Выполняется запуск полного перестроение существующего индекса.\n\n        Полное перестроение запускается в случае, если у индекса статус \"Ошибка построения\".\n        Полное перестроение индекса выполняется всегда в асинхронном врежиме и пользователю выводится сообщение об успешном добавлении индекса в очередь построения индекса.         \n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример асинхронного запуска перестроения индекса (добавлен в очередь):\n                  $ref: '#/components/examples/SearchIndexAsynchRebuildResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id поискового индекса не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id поискового индекса:\n                  $ref: '#/components/examples/SearchIndexNotFoundError'\n        '500':\n          description: |-\n            ### Возможные внутренние ошибки:\n              - Ошибка синхронного перестроения поискового индекса.\n              - Ошибка добавления индекса в очередь перестроения индекса.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/InternalServerError'\n              examples:\n                Ошибка синхронного создания поискового индекса:\n                  $ref: '#/components/examples/SearchIndexSynchRebuildError'\n                Ошибка добавления поискового индекса в очередь на построение:\n                  $ref: '#/components/examples/SearchIndexAsynchRebuildError'\n\n  /searchIndexes/{indexId}/resendErrors:\n    post:\n      tags:\n        - searchIndexes\n      summary: Повторная обработка ошибочных записей\n      description: |- \n        Выполняется запуск повторной обработки ошибочных записей обновления индекса.\n\n        Если у поискового индекса статус `Ошибки обновления`, то для индекса возможно запустить повторну обработку ошибочных записей, \n        что бы избежать необходимости запускать полное перестроение поискового индекса по методу `/searchIndexes/{indexId}/rebuild`.\n        Повторная обработка выполняется всегда в асинхронном врежиме и пользователю выводится сообщение об успешном добавлении записей в очередь обновления индекса.\n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример запуска повторной обработки ошибочных записей индекса:\n                  $ref: '#/components/examples/SearchIndexSynchResenderrorsResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id поискового индекса не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id поискового индекса:\n                  $ref: '#/components/examples/SearchIndexNotFoundError'\n\n  # Связанные сущности поискового индекса \n  /searchIndexes/{indexId}/catalogAttributes/search:\n    post:\n      tags:\n        - searchIndexes\n      summary: Получение информации о каталогах и атрибутах, в которых используется поисковый индекс\n      description: |-\n        Возвращает информацию о неудаленных каталогах и атрибутах, в которых используется поисковый индекс.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `id`, `fullName`, `attributeRusName` и `attributeEnName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/searchIndexIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов и атрибутов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов и атрибутов.\n            Поиск производится по полям `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            В ответе будут представлены только те каталоги и атрибуты, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги с атрибутами, идентификатор каталога или наименование каталога или атрибута которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `fullName`, `attributeRusName` и `attributeEnName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - attributeRusName\n              - attributeEnName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов и атрибутов, в которых используется поисковый индекс\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - fullName\n                              - attributeRusName\n                              - attributeEnName\n            examples:\n              Пример:\n                $ref: '#/components/examples/SearchIndexCatalogSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'attributes.yaml#/components/schemas/CatalogAttributeInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SearchIndexCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/SearchIndexNotFoundErrorResponse'\n\ncomponents:\n  schemas:\n    CommonSearchIndexInfo:\n      description: |-\n       Общая информация о поисковом индексе в списке поисковых индексов\n      type: object\n      properties:\n        id:\n          description: Идентификатор поискового индекса\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование поискового индекса\n          type: string\n      required:\n        - id\n        - name\n\n    SearchIndexListItem:\n      description: |-\n       Информация о поисковом индексе в списке поисковых индексов\n      type: object\n      readOnly: true\n      allOf:\n        - $ref: '#/components/schemas/CommonSearchIndexInfo'\n      properties:\n        techName:\n          description: Техническое наименование поискового индекса (латиница)\n          type: string\n        description:\n          description: русскоязычное описание поискового индекса\n          type: string          \n        dictName:\n          description: Наименование справочника, по которому настроен индекс\n          type: string\n        dictColumnName:\n          description: Наименование столбца справочника, по которому настроен индекс\n          type: string\n        status:\n          allOf:\n            - $ref: '#/components/schemas/SearchIndexStatus'\n      required:\n        - techName\n        - dictName\n        - dictColumnName\n        - status\n\n    SearchIndexStatusTagIdEnum:\n      description: |-\n        Статус поискового индекса:\n          - `waitWork` - ожидает обработки\n          - `inWork` - в обработке\n          - `done` - актуален\n          - `errorBuild` - ошибка построения\n          - `errorsUpdate` - ошибки обновления\n      oneOf:\n        - type: string\n          enum:\n            - waitWork\n            - inWork\n            - done\n            - errorBuild\n            - errorsUpdate\n\n    SearchIndexStatusNameEnum:\n      description: Наименование статуса поискового индекса\n      oneOf:\n        - type: string\n          # enum:\n          #   - Ожидает обработки\n          #   - В обработке\n          #   - Актуален\n          #   - Ошибка построения\n          #   - Ошибки обновления\n\n    SearchIndexStatus:\n      description: |-\n        Статус поискового индекса\n      type: object\n      properties:\n        id:\n          description: Идентификатор статуса поискового индекса\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/SearchIndexStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/SearchIndexStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    SearchIndex:\n      allOf:\n        - $ref: '#/components/schemas/CommonSearchIndexInfo' \n      description: Поисковый индекс\n      type: object\n      properties:\n        techName:\n          description: Техническое наименование поискового индекса (латиница)\n          type: string\n        description:\n          description: Описание поискового индекса\n          type: string\n        dictId:\n          description: Идентификатор справочника, по которому настроен индекс\n          type: integer\n          format: int32\n          writeOnly: true\n        dictionary:\n          description: Информация о справочнике, по которому настроен индекс\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/CommonDictionaryInfo'\n          readOnly: true\n        dictColTechName:\n          description: Наименование столбца справочника, по которому настроен индекс\n          type: string\n          writeOnly: true\n        dictColumn:\n          description: Информация о столбце справочника, по которому настроен индекс\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/DictionaryColumn'\n          readOnly: true\n        status:\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/SearchIndexStatus'\n        statusTag:\n          description: Техническое наименование статуса поискового индекса\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/SearchIndexStatusTagIdEnum'\n      required:\n        - techName\n        - description\n        - dictId\n        - dictionary\n        - dictColTechName\n        - dictColumn\n        - status\n        - statusTag\n\n    SearchIndexDictionaryInfo:\n      description: |-\n        Общая информация о справочнике, в котором используется поисковый индекс.\n      $ref: 'dictionaries.yaml#/components/schemas/CommonDictionaryInfo'\n\n  parameters:\n    searchIndexIdPathParam:\n      name: indexId\n      in: path\n      description: |-\n        Идентификатор индекса.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 6\n\n    queryQueryParam:\n      name: query\n      in: query\n      description: Значение поискового запроса\n      required: true\n      schema:\n        type: string\n      example: проспект Ленина 16\n\n    searchIndexIdsQueryParam:\n      name: indexIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов поисковых индексов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7,12]\n\n    searchIndexStatusesQueryParam:\n      name: objectStatuses\n      in: query\n      description: |-\n        Статусы возвращаемых поисковых индексов, используется для фильтрации по статусу индекса.\n\n        В массиве передаются технические названия статусов. Массив не может быть пустым.\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/SearchIndexStatusTagIdEnum'\n        minItems: 1\n\n  requestBodies:\n    SearchIndexRequestBody:\n      description: Пример тела запроса с информацией о поисковом индексе.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/SearchIndex'\n          examples:\n            Пример:\n              $ref: '#/components/examples/SearchIndexRequest'\n\n  responses:\n    SearchIndexNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id поискового индекса не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id поискового индекса:\n              $ref: '#/components/examples/SearchIndexNotFoundError'\n\n    SearchIndexBadRequestResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Поисковый индекс с переданным наиеменованием `name` уже существует;\n          - Поисковый индекс с переданным техническим наиеменованием `techName` уже существует;\n          - В русскоязычном наиеменовании поискового индекса `name`  переданы запрещенные символы;\n          - В техническом наиеменовании поискового индекса `techName` переданы запрещенные символы;\n          - Поисковый индекс с переданной комбинацией справочника и столбца справочника уже существует;\n      content:\n        application/json:\n          schema:\n              oneOf:\n              - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n              - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n          examples:\n            Неуникальное русскоязычное название поискового индекса:\n              $ref: '#/components/examples/SearchIndexNameNotUniqueError'\n            Неуникальное техническое название поискового индекса:\n              $ref: '#/components/examples/SearchIndexTechNameNotUniqueError'\n            В русскоязычном названии поискового индекса присутствуют запрещенные символы:\n              $ref: '#/components/examples/SearchIndexBadNameError'\n            В техническом названии поискового индекса присутствуют запрещенные символы:\n              $ref: '#/components/examples/SearchIndexBadTechNameError'\n            Неуникальная комбинация справочника и столбца справочника:\n              $ref: '#/components/examples/SearchIndexDictAndColDictNotUniqueError'\n\n    SearchIndexBadRequestPutResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Поисковый индекс с переданным наиеменованием `name` уже существует;\n          - Поисковый индекс с переданным техническим наиеменованием `techName` уже существует;\n          - В русскоязычном наиеменовании поискового индекса `name`  переданы запрещенные символы;\n          - В техническом наиеменовании поискового индекса `techName` переданы запрещенные символы;\n          - Переданны измененные параметры идентификатора справочника и/или наименования столбца справочника, по которому(ым) настроен поисковый индекс \n      content:\n        application/json:\n          schema:\n              oneOf:\n              - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n              - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n          examples:\n            Неуникальное русскоязычное название поискового индекса:\n              $ref: '#/components/examples/SearchIndexNameNotUniqueError'\n            Неуникальное техническое название поискового индекса:\n              $ref: '#/components/examples/SearchIndexTechNameNotUniqueError'\n            В русскоязычном названии поискового индекса присутствуют запрещенные символы:\n              $ref: '#/components/examples/SearchIndexBadNameError'\n            В техническом названии поискового индекса присутствуют запрещенные символы:\n              $ref: '#/components/examples/SearchIndexBadTechNameError'\n            Измененная комбинация справочника и столбца справочника:\n              $ref: '#/components/examples/SearchIndexDictAndColDictChangeError'\n\n    SearchIndexesNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Один или несколько из переданных поисковых индексов не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id поискового индекса:\n              $ref: '#/components/examples/SearchIndexNotFoundError'\n     \n  examples:\n    SearchIndexesSearchRequest:\n      description: Пример тела запроса для поиска по списку поисковых индексов \n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 5\n          - attribute: name\n            operator: contains\n            value: Адреса БТИ\n\n    SearchIndexesListItemArrayResponse:\n      description: Пример ответа с массивом поисковых индексов\n      value:\n        - id: 7\n          name: Адреса БТИ с классом строений\n          techName: address_BTI\n          description: Адреса БТИ с классом строений по справочнику с реестром расхождений \n          dictName: Реестр расхождений адресов справочника\n          dictColumnName: Полный адрес\n          status:\n            - id: 3\n              name: Актуален\n              tagId: done\n\n    SearchIndexesArrayResponse:\n      description: Пример ответа с полной информацией о поисковых индексах \n      value:\n        - id: 7\n          name: Индекс по Адреса БТИ с классом строений\n          techName: address_BTI\n          description: Адреса БТИ с классом строений по справочнику с реестром расхождений \n          dictionary: \n            - id: 4\n              name: Адреса БТИ с классом строений\n          dictColumn: \n            - techName: address_BTI \n              rusName: Полный адрес\n          status:\n            - id: 2\n              name: В обработке\n              tagId: inWork\n          statusTag: inWork\n        - id: 12\n          name: Индекс по  поиску улицы\n          techName: found_streets\n          description: Улицы по справочнику Справочник улиц для индекса \n          dictionary: \n            - id: 4\n              name: Справочник улиц для индекса\n          dictColumn: \n            - techName: full_address \n              rusName: Полный адрес\n          status:\n            - id: 3\n              name: Актуален\n              tagId: done\n          statusTag: done\n\n    IndexValueArrayResponse:\n      description: Пример ответа с массивом значений индексов\n      value:\n        - г.Москва ул. Ленина 16 корпус 1\n        - г.петрозаводск пр. Ленина 16\n        - пгт. Вьюжный пр. Ленина 16\n\n    SearchIndexNotFoundError:\n      description: |-\n        Указанный индекс не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Поисковый индекс с идентификатором {indexId} не существует.\n\n    SearchIndexesDeletedResponse:\n      description: Пример ответа при удалении поисковых индексов\n      value:\n        code: 200\n        messageType: Ok\n        message: Поисковые индексы успешно удалены!\n\n    SearchIndexIsUsedInCatalogsError:\n      description: |-\n        Удаляется поисковый индекс, который используется в атрибутах каталогов.\n      value:\n        id: 7\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Поисковый индекс (id {indexId}) не может может быть удален, так как используется в одном или нескольких атрибутах каталогов. \n          Удаление поисковых индексов не выполнено.\n\n    SearchIndexRequest:\n      description: Пример тела запроса с информацией о поисковом индексе\n      value:\n        name: Адреса БТИ с классом строений\n        techName: address_BTI\n        description: Адреса БТИ с классом строений по справочнику с реестром расхождений \n        dictId: 1232\n        dictColTechName: full_address\n\n    SearchIndexSynchCreatedResponse:\n      description: Пример ответа при синхронном создании поискового индекса\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Поисковый индекс успешно создан!\n\n    SearchIndexAsynchCreatedResponse:\n      description: Пример ответа при асинхронном создании поискового индекса\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Поисковый индекс успешно создан и добавлен в очередь на построение! Построение индекса будет выполнено в асинхронном режиме. Дальнейший статус индекса можно посмотреть в настройках индекса.\n\n    SearchIndexNameNotUniqueError:\n      description: |-\n        Передано неуникальное русскоязычное наименование поискового индекса.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Поисковый индекс с таким русскоязычным наименованием уже существует. Русскоязычное наименование должно быть уникальным.\n\n    SearchIndexTechNameNotUniqueError:\n      description: |-\n        Передано неуникальное техническое наименование поискового индекса.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Поисковый индекс с таким техническим наименованием уже существует. Техническое наименование должно быть уникальным.\n\n    SearchIndexSynchCreatedError:\n      description: Пример ответа при ошибке синхронного создания поискового индекса\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Возникла ошибка при создании поискового индекса, попробуйте позже.\n\n    SearchIndexAsynchCreatedError:\n      description: Пример ответа при ошибке добавления индекса в очередь асинхронного построения индекса\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Возникла ошибка при добавлении индекса в очередь построения индекса, попробуйте позже.\n\n    SearchIndexSynchRebuildError:\n      description: Пример ответа при ошибке синхронного перестроения поискового индекса\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Возникла ошибка при перестроении поискового индекса, попробуйте позже.\n\n    SearchIndexAsynchRebuildError:\n      description: Пример ответа при ошибке добавления индекса в очередь асинхронного перестроения индекса\n      value:\n        id: 7\n        code: 201\n        messageType: Created\n        message: Возникла ошибка при добавлении индекса в очередь перестроения индекса, попробуйте позже.\n\n    SearchIndexNotRebuildError:\n      description: |-\n        Поисковый индекс не может быть перестроен.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Поисковый индекс не может быть перестроен. Или индекс актуален или необходимо дождаться окончания обработки индекса и повторить действие.\n\n    SearchIndexBadNameError:\n      description: |-\n        В русскоязычном наименовании поискового индекса переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: |-\n          В русскоязычном наименовании поискового индекса переданы запрещенные символы. \n          Русскоязычное наименование может включать все символы, кроме < и >.\n\n    SearchIndexBadTechNameError:\n      description: |-\n        В техническом наименовании поискового индекса переданы запрещенные символы.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: |-\n          В техническом наименовании поискового индекса переданы запрещенные символы. \n          Техническое наименование может включать буквы английского алфавита, цифры, символ нижнего подчеркивания _, а также дефис -. Название не может начинаться и заканчиваться данными символами.\n\n    SearchIndexDictAndColDictNotUniqueError:\n      description: |-\n        Передана неуникальная комбинация справочника и столбца справочника поискового индекса.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: |-\n          Поисковый индекс с такой комбинацией справочника и столбца справочника уже существует.\n          Комбинация справочника и столбца справочника должна быть уникальна.\n\n    SearchIndexDictAndColDictChangeError:\n      description: |-\n        Передана измененная комбинация справочника и/или столбца справочника поискового индекса.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: |-\n          Передана измененная комбинация справочника и/или столбца справочника поискового индекса.\n          Редактирование данных справочника и столбца справочника запрещено.\n\n    SearchIndexEditedResponse:\n      description: Пример ответа при изменении поискового индекса\n      value:\n        code: 200\n        messageType: Ok\n        message: Поисковый индекс успешно изменен!\n\n    SearchIndexCatalogSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется поисковый индекс\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    SearchIndexCatalogInfoArrayResponse:\n      description: Пример ответа из массива каталогов и атрибутов, в которых используется поисковый индекс\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          attributeRusName: Номер телефона\n          attributeEnName: Number\n        - id: 76\n          fullName: Тоннели\n          attributeRusName: Категория\n          attributeEnName: Category\n\n    SearchIndexDictionaryInfoResponse:\n      description: Пример ответа со справочником, в котором используется индекс\n      value:\n          id: 654\n          name: Актуальные адреса БТИ\n\n    SearchIndexSynchRebuildResponse:\n      description: Пример ответа при синхронном перестроении индекса\n      value:\n        code: 200\n        messageType: Ok\n        message: Поисковый индекс успешно перестроен!\n\n    SearchIndexAsynchRebuildResponse:\n      description: Пример ответа при асинхронном перестроении индекса\n      value:\n        code: 200\n        messageType: Ok\n        message: Запущено полное перестроение поискового индекса! Перестроение индекса будет выполнено в асинхронном режиме. Дальнейший статус индекса можно посмотреть в настройках индекса.\n\n    SearchIndexSynchResenderrorsResponse:\n      description: Пример ответа при запуске повторной обработке ошибочных записей\n      value:\n        code: 200\n        messageType: Ok\n        message: Повторная обработка ошибочных записей успешно запущена. Дальнейший статус индекса можно посмотреть в настройках индекса.\n\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с геоданными\n  version: 1.0.0\n\npaths:\n  /geodata/validate:\n    post:\n      tags:\n        - geodata\n      summary: (внутр.) Первичная валидация геоданных объекта.\n      description: |-\n        Проводит первичную валидацию корректности геоданных объекта с использованием функции PostGIS - ST_IsValidDetail.\n        Для валидации доступны только координаты в СК EPSG:4326\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectGeodata'  \n            examples:\n              Пример валидных геоданных:\n                $ref: '#/components/examples/GeodataObject' \n              Пример невалидных геоданных:\n                $ref: '#/components/examples/InvalidGeodataObject'  \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ValidateResponse'\n              examples:\n                Валидные геоданные:\n                  $ref: '#/components/examples/TrueValidateResponse'  \n                Невалидные геоданные:\n                  $ref: '#/components/examples/FalseValidateResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Некорректный формат массива координат\n              - Недоступная система координат для валидации\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Некорректный формат массива координат:\n                  $ref: '#/components/examples/IncorrectCoordinatesArrayBadRequestResponse'\n                Недоступная система координат:\n                  $ref: '#/components/examples/NotAllowedSrsBadRequestResponse'  \n\n\n  /geodata/reprojection:\n    post:\n      tags:\n        - geodata\n      summary: (внутр.) Перепроецирование координат\n      description: |- \n        Производит перепроицирование координат геоданных объекта из одной системы координат (СК) в другую.\n        Используется сервис перепроецирования от Цифрового двойника, метод GdalTasks/ConvertGeometryData.\n      parameters:\n        - name: sourceSrs\n          description: Входящая СК\n          in: query\n          required: false\n          schema:\n            $ref: '#/components/schemas/SpatialReferenceSystemEnum' \n        - name: targetSrs\n          description: Исходящая СК\n          in: query \n          required: false\n          schema: \n            $ref: '#/components/schemas/SpatialReferenceSystemEnum' \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ObjectGeodata'\n            examples:\n              Пример:\n                $ref: '#/components/examples/ReprojectionRequest' \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectGeodata'\n              examples:\n                МСК->ВГС:\n                  $ref: '#/components/examples/ReprojectionResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Некорректный формат массива координат\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Некорректный формат массива координат:\n                  $ref: '#/components/examples/IncorrectCoordinatesArrayBadRequestResponse'           \n\n  /geodata/tileEGKO/{z}/{x}/{y}.png:\n    get:\n      tags:\n        - geodata\n      summary: Получение тайлов ЕГКО\n      description: |-\n        Метод получения тайлов ЕГКО.\n        Используется сервис от Цифрового двойника, метод vks3/cache_moscow_egko_map\n        Каждый тайл имеет фиксированный размер (256x256 пикселей).\n      parameters:\n        - name: z\n          description: Уровень масштабирования или зум. Доступно от 0 до 19.\n          in: path\n          required: true\n          schema:\n            type: integer\n            minimum: 1\n            maximum: 19\n        - name: x\n          description: Координата тайла по горизонтали (осевая координата).\n          in: path\n          required: true\n          schema:\n            type: integer\n        - name: y\n          description: Координата тайла по вертикали (осевая координата).\n          in: path\n          required: true\n          schema:\n            type: integer    \n      responses:\n        '200':\n          description: Успешное получение тайла.\n          content:\n            image/png:\n              schema:\n                type: string\n                format: binary\n\ncomponents:\n  schemas:\n    \n    # GeoTypeTagIdEnum:\n    #   description: Техническое название типов геометрии\n    #   oneOf:\n    #     - type: string\n    #       enum:\n    #         - Point\n    #         - MultiPoint\n    #         - MultiLineString\n    #         - MultiPolygon  \n\n    GeoType:\n      description: Тип геометрии\n      type: object\n      properties:\n        id:\n          description: Идентификатор типа геометрии\n          type: integer\n          format: int32\n        name:\n          description: Название типа геометрии\n          type: string\n      required:\n        - id\n        - name\n\n    GeojsonGeoTypeTagIdEnum:\n      description: Типы геометрии в geojson\n      oneOf:\n        - type: string\n          enum:\n            - Point\n            - MultiPoint \n            - MultiLineString\n            - MultiPolygon\n\n    GeojsonGeoPublTypeTagIdEnum:\n      description: Типы геометрии в geojson\n      oneOf:\n      - type: string\n        enum:\n          - Point\n          - MultiPoint \n          - MultiLineString\n          - MultiPolygon\n          - Polygon\n\n    SpatialReferenceSystemEnum:\n      description: Система координат (пространственная система отсчёта - spatial reference system)\n      type: string\n      enum:\n        - EPSG:4326\n        - MSK:77  \n\n    Point:\n      description: Точка\n      type: array\n      items:\n        type: number\n      minItems: 2\n      maxItems: 2\n    \n    MultiPoint:\n      description: Мультиточка\n      type: array\n      items:\n        $ref: '#/components/schemas/Point'\n      minItems: 1  \n\n    MultiLineString:\n      description: Мультилиния\n      type: array\n      items:\n        $ref: '#/components/schemas/MultiPoint'\n      minItems: 1  \n\n    Polygon:\n      description: Полигон (необходим для обратной совместимости мигрированных объектов каталога публикации из ЕХД1)\n      type: array\n      items:\n        $ref: '#/components/schemas/MultiPoint'\n      minItems: 1  \n\n    MultiPolygon:\n      description: Полигон\n      type: array\n      items:\n        $ref: '#/components/schemas/MultiLineString'\n      minItems: 1\n\n    ObjectGeodata:\n      description: Геоданные объекта в формате GeoJSON.\n      type: object\n      properties:\n        type:\n          description: Тип объекта GeoJSON. Всегда принимает значение Feature. \n          type: string\n          enum:\n            - Feature\n        properties:\n          description: Дополнительные свойства для геоданных объекта \n          type: object\n          properties:\n            srs:\n              description: |-\n                Система координат (пространственная система отсчёта - spatial reference system)\".\n                По-умолчанию устанавливается СК, выбранная на каталоге.\n              type: string\n              enum:\n                - EPSG:4326\n                - MSK:77 \n            # isManualGeo:\n            #   description: Признак, указывающий, что геоданные заполнены вручную, а не процессом блока \"На карту\" (при условии, что настройки блока позволяют ручной ввод).\n            #   type: boolean\n            #   default: false\n            # isManualLocation:\n            #   description: Признак, указывающий, что атрибуты с координатами геометрии заполнены вручную, а не процессом блока \"Из карты\" (при условии, что настройки блока позволяют ручной ввод).\n            #   type: boolean\n            #   default: false\n          required:\n            - srs\n            # - isManualGeo\n            # - isManualLocation         \n        geometry:\n          description: Описание геометрии объекта\n          type: object\n          properties:\n            type:\n              description: Тип геометрии объекта. Всегда принимает значение GeometryCollection. \n              type: string\n              enum:\n                - GeometryCollection\n            geometries:\n              description: Массив типов геометрии и их координат, которые заполнены для объекта.\n              type: array\n              items:\n                type: object\n                properties:\n                  coordinates:\n                    description: Массив координат\n                    oneOf:\n                      - $ref: 'geodata.yaml#/components/schemas/Point'\n                      - $ref: 'geodata.yaml#/components/schemas/MultiPoint'\n                      - $ref: 'geodata.yaml#/components/schemas/MultiLineString'\n                      - $ref: 'geodata.yaml#/components/schemas/MultiPolygon'\n                  type:\n                    $ref: 'geodata.yaml#/components/schemas/GeojsonGeoTypeTagIdEnum'\n                required:\n                  - coordinates\n                  - type\n          required:\n            - type\n            - geometries              \n      required:\n        - type\n        - geometry \n\n    PublicationObjectGeodata:\n      description: Геоданные объекта каталога публикации в формате GeoJSON.\n      type: object\n      properties:\n        type:\n          description: Тип объекта GeoJSON. Всегда принимает значение Feature. \n          type: string\n          enum:\n            - Feature\n        properties:\n          description: Дополнительные свойства для геоданных объекта \n          type: object\n          properties:\n            srs:\n              description: |-\n                Система координат (пространственная система отсчёта - spatial reference system)\".\n                По-умолчанию устанавливается СК, выбранная на каталоге.\n              type: string\n              enum:\n                - EPSG:4326\n                - MSK:77 \n            isManualInput:\n              description: Признак, указывающий, что геоданные должны быть заполнены вручную, а не процессом блока \"На карту\" (при условии, что настройки блока позволяют ручной ввод)\n              type: boolean\n              default: false\n          required:\n            - srs\n            - isManualInput          \n        geometry:\n          description: Описание геометрии объекта\n          type: object\n          properties:\n            type:\n              description: Тип геометрии объекта. Всегда принимает значение GeometryCollection. \n              type: string\n              enum:\n                - GeometryCollection\n            geometries:\n              description: Массив типов геометрии и их координат, которые заполнены для объекта.\n              type: array\n              items:\n                type: object\n                properties:\n                  coordinates:\n                    description: Массив координат\n                    oneOf:\n                      - $ref: 'geodata.yaml#/components/schemas/Point'\n                      - $ref: 'geodata.yaml#/components/schemas/MultiPoint'\n                      - $ref: 'geodata.yaml#/components/schemas/MultiLineString'\n                      - $ref: 'geodata.yaml#/components/schemas/MultiPolygon'\n                      - $ref: 'geodata.yaml#/components/schemas/Polygon'\n                  type:\n                    $ref: 'geodata.yaml#/components/schemas/GeojsonGeoPublTypeTagIdEnum'\n                required:\n                  - coordinates\n                  - type\n          required:\n            - type\n            - geometries              \n      required:\n        - type\n        - geometry \n\n    ValidateResponse:\n      description: Схема ответа первичной валидации геоданных\n      type: object\n      properties:\n        isValid:\n          description: Признак, обозначающий результат валидации геоданных\n          type: boolean\n        details:\n          description: Массив причин почему геоданные невалидны. Если геоданные валидны, то передаётся пустой массив\n          type: array\n          items:\n            type: object\n            properties:\n              typeGeo:\n                description: Тип геоданных, координаты которого являются невалидными\n                $ref: '#/components/schemas/GeojsonGeoTypeTagIdEnum' \n              reason:\n                description: Причина невалидности геоданных. Указывается строка, которую вернула функция ST_IsValidDetail\n                type: string\n              location:\n                description: Местоположение (точка), в которой геоданные являются невалидными. \n                allOf:\n                  - $ref: '#/components/schemas/Point'\n                  \n            required:\n              - typeGeo\n              - reason\n      required:\n        - isValid \n        - details          \n\n    FeatureCollectionObjectGeodata:\n      type: object\n      properties:\n        type: \n          type: string\n          enum:\n            - FeatureCollection\n        name:\n          type: string\n        features: \n          type: array \n          items:\n            $ref: '#/components/schemas/ObjectGeodata'    \n\n  parameters:\n    FetchGeodataQueryParam:\n      name: fetchGeodata\n      in: query\n      description:  |-\n        Признак, указывающий на включение в ответ геоданных объекта в заданной системе координат.\n        Доступны следующие варианты:\n          - `признак не передаётся` - объект возвращается без геоданных,\n          - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n          - `MSK:77` - геоданные объекта возвращаются в системе координат MSK77,\n          - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.\n      schema:\n        type: string\n        enum:\n          - EPSG:4326\n          - MSK:77\n          - default\n      required: false  \n\n    FetchGeodataPublQueryParam:\n      name: fetchGeodata\n      in: query\n      description:  |-\n        Признак, указывающий на включение в ответ геоданных объекта публикации. \n        В публикации геоданные объекта хранятся в системе координат WGS84. \n      schema:\n        type: boolean\n        default: true\n      required: false  \n\n    FetchGeodataExportQueryParam:\n      name: fetchGeodata\n      in: query\n      description:  |-\n        Признак, указывающий на включение в экспорт каталога заполнения геоданных объектов в заданной системе координат.\n        Доступны следующие варианты:\n          - `признак не передаётся` - объекты возвращаются без геоданных,\n          - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n          - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.\n      schema:\n        type: string\n        enum:\n          - EPSG:4326\n          - default\n      required: false  \n\n    FetchGeodataExportPublQueryParam:\n      name: fetchGeodata\n      in: query\n      description:  |-\n        Признак, указывающий на включение в экспорт каталога публикации геоданных объектов.\n        В каталоге публикации геоданные возвращаются в системе координат WGS84.\n      schema:\n        type: boolean\n        default: false\n      required: false  \n\n  examples:\n\n    GeodataObject:\n      value:\n        type: Feature\n        properties: \n          srs: EPSG:4326\n#          isManualGeo: false\n#          isManualLocation: false\n        geometry:\n          type: GeometryCollection\n          geometries:\n            - type: Point\n              coordinates: \n                - 37.57488596826171\n                - 55.753835074882915\n            - type: MultiLineString\n              coordinates:\n                -\n                  -\n                    - 37.20208680549581\n                    - 55.75991514505003\n                  -\n                    - 38.401608888302064\n                    - 55.60775947055342\n                -\n                  -\n                    - 39.2929204707026\n                    - 55.38448524332469\n                  -\n                    - 38.62012154676003\n                    - 55.445280980775465\n            - type: MultiPolygon\n              coordinates:\n                -\n                  -\n                    -\n                      - 38.63968631610595\n                      - 55.59156664817431\n                    -\n                      - 38.61372729774422\n                      - 55.513883281785866\n                    -\n                      - 38.77855209164545\n                      - 55.55705844341085\n                    - \n                      - 38.63968631610595\n                      - 55.59156664817431\n\n    InvalidGeodataObject:\n      value:\n        type: Feature\n        properties: \n          srs: EPSG:4326\n#          isManualGeo: false\n#          isManualLocation: false\n        geometry:\n          type: GeometryCollection\n          geometries:\n            - type: Point\n              coordinates: \n                - 37.57488596826171\n                - 55.753835074882915\n            - type: MultiLineString\n              coordinates:\n                -\n                  -\n                    - 37.20208680549581\n                    - 55.75991514505003\n                  -\n                    - 38.401608888302064\n                    - 55.60775947055342\n                -\n                  -\n                    - 39.2929204707026\n                    - 55.38448524332469\n            - type: MultiPolygon\n              coordinates:\n                -\n                  -\n                    -\n                      - 37.59239740779398\n                      - 55.775788234487976\n                    -\n                      - 37.59878184633874\n                      - 55.77811319647961\n                    -\n                      - 37.592377303910865\n                      - 55.78106190260283\n                    - \n                      - 37.589620714605246\n                      - 55.77712306112244\n                    -\n                      - 37.59239740779398\n                      - 55.775788234487976\n                  -\n                    -\n                      - 37.5854096048011\n                      - 55.77649032984644\n                    -\n                      - 37.59075861392756\n                      - 55.77316523346548\n                    -\n                      - 37.59878184633874\n                      - 55.77811319647961\n                    -\n                      - 37.592377303910865\n                      - 55.78106190260283\n                    -\n                      - 37.5854096048011\n                      - 55.77649032984644    \n\n\n    TrueValidateResponse:\n      description: Пример ответа если геоданные валидные\n      value:\n        isValid: true\n        details: []\n\n    FalseValidateResponse:\n      description: Пример ответа если геоданные невалидные\n      value:\n        isValid: false\n        details:\n          - typeGeo: MultiPolygon\n            reason: Self-intersection\n            location: \n              type: Point\n              coordinates: \n                - 39.292920471\n                - 55.384485243\n\n    ReprojectionRequest:\n      description: Пример ответа на перепроецирование\n      value:\n        type: Feature\n        geometry:\n          type: GeometryCollection\n          geometries:\n            - type: Point\n              coordinates: \n                - 4812.835633351082834\n                - 9669.263478575914633\n            - type: MultiLineString\n              coordinates:\n                -\n                  -\n                    - -18591.673615443683957\n                    - 10384.0988308696069\n                  -\n                    - 56931.783284404387814\n                    - -6228.272549342384082\n                -\n                  -\n                    - 113739.786332447722089\n                    - -29992.016346169279132\n                -\n                  -\n                    - 70993.649835672214977\n                    - -24115.816010102389555\n\n    ReprojectionResponse:\n      description: Пример запроса на перепроецирование\n      value:\n        type: Feature\n        geometry:\n          type: GeometryCollection\n          geometries:\n            - type: Point\n              coordinates: \n                - 37.57488596826171\n                - 55.753835074882915\n            - type: MultiLineString\n              coordinates:\n                -\n                  -\n                    - 37.20208680549581\n                    - 55.75991514505003\n                  -\n                    - 38.401608888302064\n                    - 55.60775947055342\n                -\n                  -\n                    - 39.2929204707026\n                    - 55.38448524332469\n                -\n                  -\n                    - 38.62012154676003\n                    - 55.445280980775465\n\n    IncorrectCoordinatesArrayBadRequestResponse:\n      description: |-\n        Пример ответа при некорректном формате геоданных для заданного типа геометрии. Например:\n          - массив, обозначающий одну точку, содержит более или менее 2х значений\n          - структура массива координат не соответствует указанному типу геометрии\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Неверно переданы координаты для типа геометрии {typeGeo}\n\n    NotAllowedSrsBadRequestResponse:\n      description: |-\n        Пример ответа при указанном srs: MSK:77 в запросе на валидацию данных\n      value:\n        code: 400\n        messageType: Bad request\n        message: |-\n          Для валидации доступны геоданные только в системе координат EPSG:4326\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с каталогами публикации\n  version: 1.0.0\n\n\npaths:\n  /publicationCatalogs/search:\n    post:\n      tags:\n      - publicationCatalogs\n      summary: Поиск по списку каталогов публикации\n      description: |-\n        Возвращает список неудалённых каталогов публикации. Используется для отображения информации в разделах `Данные по ...`\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации по столбцам списка используется тело запроса.\n\n        Метод позволяет фильтровать каталоги публикации по связанному каталогу заполнения (параметр `fillingCatalogId`).\n\n        Дополнительно метод позволяет возвращать информации о всех каталогах публикации, связанных с каталогом заполнения.\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.\n            Поиск производится по атрибутам `id` и `fullName`.\n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - countActiveObjects\n              - countObjects\n              - responsiblePerson\n              - sourceCatalogId\n              - dateNextUpdate\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - name: publicationStatus\n          in: query\n          required: false\n          description: |-\n            Статус каталога публикации. Может принимать следующие значения:\n              - `unpublished` - не опубликован\n              - `manualPublication` - публикуется вручную\n              - `autoPublication` - публикуется автоматически\n              - `archive` - архивный\n          schema:\n            type: array\n            items:\n              type: string\n            allOf:\n              - $ref: '#/components/schemas/PublicationCatalogStatusTagIdEnum'\n        - name: hasUnpublishedChanges\n          in: query\n          required: false\n          description: |-\n            Наличие неопубликованных изменений\n          schema:\n            type: boolean\n            default: false\n        - $ref: 'catalogs.yaml#/components/parameters/fillingCatalogIdOptQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/publicationCatalogListRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n\n            Если переданы несуществующие идентификаторы категории, ОИВ, системы-потребителя, то также возвращается пустой массив вместо 404 ошибки.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationCatalogListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /publicationCatalogs/lite/search:\n    get:\n      tags:\n      - publicationCatalogs\n      summary: Поиск по списку каталогов публикации с минимальным набором свойств\n      description:  >\n        Возвращает список неудалённых каталогов публикации с минимальным набором свойств (`id`, `name`)\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            default: 1000\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.\n            Поиск производится по полному наименованию каталога и является регистронезависимым.\n            Запрос со значением `тест` вернет все каталоги, полное наименование которых содержит подстроку `тест` независимо от регистра.\n          schema:\n            type: string\n        - $ref: 'catalogs.yaml#/components/parameters/fillingCatalogIdOptQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/forLinksCatalogQueryParam'\n        - $ref: '#/components/parameters/forDatasetQueryParam'\n        - $ref: '#/components/parameters/userIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/RefCatalogInfo'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/RefCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  # /publicationCatalogs/duplicate:\n  #   get:\n  #     tags:\n  #       - publicationCatalogs\n  #     summary: Получение информации о настройках каталога при дублировании\n  #     description: |-\n  #       Метод используется при создании каталога публикации.\n  #       Возвращает текущие настройки дублируемого каталога заполнения в формате настроек для каталога публикации.\n\n  #       Ответ включает общую информацию, атрибутивный состав и метаданные.\n  #       Ответ выводится в интерфейсе создания каталога публикации.\n\n  #       Настройки синхронизируемых полей `syncedPropertiesTagIds` для общей информации и метаданных\n  #       по умолчанию содержат все возможные поля из соответствующих справочников.\n\n  #       Приоритет публикации по умолчанию равен 5.\n\n  #       Периодичность обновления в КП отличается. Минимальная периодичность равна \"Ежедневно\".\n  #       Поэтому, если в КЗ выбрана периодичность чаще, чем \"Ежедневно\", она автоматически к ней приводится.\n  #       Если такая периодичность входит в состав множественной, то она также заменяется на \"Ежедневно\".\n\n  #       Идентификационный номер `identNumber` формируется в формате \"<ИНН ОИВ>-<Транслитированное наименование каталога заполнения>\".\n\n  #       Идентификатор каталога и идентификаторы атрибутов `catalogAttrId` возвращаются отрицательными.\n  #       Для ссылочных атрибутов в поле `refCatalog` возвращается пустой объект.\n  #       Для табличных атрибутов в поле `childCatalogId` возвращается отрицательный идентификатор.\n  #       При создании каталога публикации они должны быть заменены и передаваться по правилам метода `POST /publicationCatalogs`.\n  #     parameters:\n  #       - $ref: 'catalogs.yaml#/components/parameters/fillingCatalogIdQueryParam'\n  #     responses:\n  #       '200':\n  #         description: Успешный ответ\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: object\n  #               properties:\n  #                 generalInfo:\n  #                   description: Общая информация каталога заполнения в формате каталога публикации\n  #                   allOf:\n  #                     - $ref: '#/components/schemas/PublicationCatalogGeneralInfo'\n  #                 attributes:\n  #                   description: Атрибуты каталога публикации\n  #                   type: array\n  #                   items:\n  #                     $ref: '#/components/schemas/PublicationCatalogAttribute'\n  #                   minItems: 1\n  #                 meta:\n  #                   $ref: '#/components/schemas/PublicationCatalogMetadata'\n  #               required:\n  #                 - generalInfo\n  #                 - attibutes\n  #                 - meta\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/DuplicateCatalogInfoResponse'\n\n  /publicationCatalogs:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Cохранение каталога публикации\n      description: |-\n        Метод используется при создании каталога публикации.\n        При создании каталога необходимо обязательно заполнить общую информацию, атрибутивный состав, указать наличие геопривязки,\n        а также указать идентификатор каталога заполения, с которым связан каталог публикации.\n\n        Если при сохранении передается условие ограничения выборки, оно валидируется.\n\n        В случае наличия ошибок в настройках каталога возвращается одна.\n\n        Атрибут с типом ссылка и таблица не может быть использован в условии огранчиения выборки.\n\n        Если каталог имеет английскую версию, то поля `fullNameEn`, `shortNameEn`, `accountingObjectEn` и `keywordsEn` являются обязательными.\n\n        Если следующие поля не являются синхронизируемыми, то они являются обязательными:\n          - `accountingObject`\n          - `thematicCategoryId`\n          - `typeCatalogId`\n          - `oivsIds`\n          - `keywords`\n          - `periodUpdate`\n          - `hasGeo`\n\n        В настройках публикации помимо атрибутов каталога передаются системные атрибуты:\n          - `global_id` (attrId=-1),\n          - `system_object_id` (attrId=-2),\n          - `is_deleted` (attrId=-7),\n          - `signature_date` (attrId=-12, только для корневого каталога),\n          - `global_object_id` (attrId=-3, только для табличных атрибутов).\n\n        Данные атрибуты можно получить вызовом системного справочника\n        (через метод `/dictionaries/aux/sysColumns`) и фильтрацией полученных атрибутов\n        по `forPublSettings` (1 или 2).\n        Уровень, на котором используется атрибут, определяется полем `forNested`.\n\n        В идентификационном номере, а также SEF URL настроек публикации для системы Портал открытых данных разрешается использование латинских букв, цифр и дефиса.\n\n        В результате сохранения каталога также создаются соответствующие структуры для объектов каталога в БД публикации.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicationCatalogSettings'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationCatalogSettingsRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogCreatedResponse'\n        '400':\n          $ref: '#/components/responses/PublicationCatalogBadRequestPostResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogNotFoundResponse'\n    delete:\n      tags:\n        - publicationCatalogs\n      summary: Отметка каталога публикации удалённым\n      description: |-\n        Метод используется для отметки удалёнными одного или нескольких каталогов.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogDeletedResponse'\n\n  /publicationCatalogs/{catalogId}/checkConditionsChange:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Проверка изменения условий ограничения выборки\n      description: |-\n        Проверяет изменение условий ограничения выборки перед сохранением настроек каталога публикации.\n\n        На вход передается строка с условием.\n        Метод возвращает результат проверки в виде `true`,\n        если переданное условие отличается от того, которое сохранено в каталоге публикации,\n        и каталог находится в статусе \"Публикуется автоматически\".\n\n        Используется для запроса подтверждения перепубликации объектов каталога публикации,\n        если он публикуется автоматически.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      requestBody:\n        required: true\n        content:\n          text/plain:\n            schema:\n              type: string\n            examples:\n              Пример:\n                value: \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: boolean\n              examples:\n                Пример:\n                  value: true\n        '404':\n          $ref: '#/components/responses/PublicationCatalogIdNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}:\n    put:\n      tags:\n        - publicationCatalogs\n      summary: Изменение настроек каталога публикации\n      description: |-\n        Изменяет настройки каталога публикации.\n\n        Настройки вкладок \"Общая информация\" и \"Атрибуты\" передаются всегда.\n        Остальные - только при изменении настроек на этих вкладках.\n\n        Если при изменении передается условие ограничения выборки, оно валидируется.\n\n        В случае наличия ошибок в настройках каталога возвращается одна.\n\n        Если каталог имеет английскую версию, то поля `fullNameEn`, `shortNameEn`, `accountingObjectEn` и `keywordsEn` являются обязательными.\n\n        Если следующие поля не являются синхронизируемыми, то они являются обязательными:\n          - `accountingObject`\n          - `thematicCategoryId`\n          - `typeCatalogId`\n          - `oivsIds`\n          - `keywords`\n          - `periodUpdate`\n\n        В настройках публикации помимо атрибутов каталога передаются системные атрибуты:\n          - `global_id` (attrId=-1),\n          - `system_object_id` (attrId=-2),\n          - `is_deleted` (attrId=-7),\n          - `signature_date` (attrId=-12, только для корневого каталога),\n          - `global_object_id` (attrId=-3, только для табличных атрибутов).\n\n        Данные атрибуты можно получить вызовом системного справочника\n        (через метод `/dictionaries/aux/sysColumns`) и фильтрацией полученных атрибутов\n        по `forPublSettings` (1 или 2).\n        Уровень, на котором используется атрибут, определяется полем `forNested`.\n\n        В идентификационном номере, а также SEF URL настроек публикации для системы Портал открытых данных разрешается использование латинских букв, цифр и дефиса.\n\n        Атрибут с типом ссылка и таблица не может быть использован в условии огранчиения выборки\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicationCatalogSettings'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationCatalogSettingsRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogEditedResponse'\n        '400':\n          $ref: '#/components/responses/PublicationCatalogBadRequestPutResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/generalInfo:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение общей информации каталога публикации\n      description: |-\n        Возвращает общую информацию каталога публикации для соответствующей вкладки в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicationCatalogGeneralInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogGeneralInfoResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/attributes:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение атрибутов каталога публикации\n      description: |-\n        Возвращает атрибутивный состава каталога для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationCatalogAttribute'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogAttributesResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/meta:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение метаданных каталога публикации\n      description: |-\n        Возвращает метаданные каталога для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicationCatalogMetadata'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogMetadataResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n    put:\n      tags:\n        - publicationCatalogs\n      summary: Изменение метаданных каталога публикации\n      description: |-\n        Изменяет метаданные каталога публикации.\n\n        Используется для редактирования каталога пользователем, не являющимся суперпользователем.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: 'catalogs.yaml#/components/schemas/CommonCatalogMetadata'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationCatalogMetadataRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Метаданные каталога изменены\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Email ответственного не прошел проверку на соответствие регулярному выражению.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Email ответственного не прошел проверку на соответствие регулярному выражению:\n                  $ref: 'catalogs.yaml#/components/examples/InvalidRespPersonEmail'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/lite/{catalogId}/attributes:\n    get:\n      tags:\n      - publicationCatalogs\n      summary: Получение списка атрибутов каталога публикации с минимальным набором свойств\n      description: Возвращает список атрибутов заданного каталога публикации с минимальным набором свойств (ответ включает только id и название).\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/forLinksCatalogAttributeQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/RefCatalogAttributeInfoWithAttrId'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/RefCatalogAttributeInfoWithAttrIdArrayResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/userPrivileges:\n    get:\n      tags:\n      - publicationCatalogs\n      summary: Получение списка привилегий пользователя, доступных для данного каталога публикации\n      description: Возвращает список технических наименований привилегий.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ. Если у пользователя нет доступа к каталогу, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                $ref: 'users.yaml#/components/schemas/UserPrivilegePubl'\n              examples:\n                Пример:\n                  value:\n                    canView : true\n                    canExport : true\n                    canEditMeta : true\n                    canPubl : true\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/systemPublicationSettings:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение настроек публикации каталога публикации\n      description: |-\n        Возвращает настройки публикации каталога для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/SystemPublicationSettings'\n                    - $ref: '#/components/schemas/OpodSystemPublicationSettings'\n                    - $ref: '#/components/schemas/YandexSystemPublicationSettings'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogSystemPublicationSettingsResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/sortings:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение настроек сортировки атрибутов каталога публикации\n      description: |-\n        Возвращает настройки сортировки атрибутов каталога для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationSorting'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogSortingsResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/publicationConditions:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение условий ограничения выборки каталога публикации\n      description: |-\n        Возвращает условия ограничения выборки каталога для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            text/plain:\n              schema:\n                type: string\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogConditionsResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/publicationConditions/validate:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Валидация настройки ограничения выборки\n      description: |-\n        Производит валидацию настроек ограничения выборки каталога, описанных в формате TOML.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                publicationConditions:\n                  description: |-\n                    Настройка ограничения выборки, описанная пользователем в формате TOML. Передаётся в качестве строки с экранированием символов.\n                  type: string\n                attributes:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/PublicationCatalogAttributeForValidation'\n              required:\n                - publicationConditions\n                - attributes\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkPublicationConditionsValidateResponse'\n        '400':\n          description: Ошибки, обнаруженные при валидации настроек. В результате проверки должны быть найдены все ошибки, допущенные в описании настроек ограничения выборки.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicationConditionsValidationError'\n\n  /publicationCatalogs/{catalogId}/map:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение настроек карты каталога публикации\n      description: |-\n        Возвращает настройки карты каталога публикации для отображения в соответствующей вкладке в настройках каталога публикации.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/versionQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicationCatalogMap'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogMapResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/status:\n    put:\n      tags:\n        - publicationCatalogs\n      summary: Изменение статуса каталога публикации\n      description: |-\n        Позволяет изменить статус каталога публикации.\n\n        При изменении статуса на \"Публикуется автоматически\" или \"Публикуется вручную\", запускается процесс публикации,\n        если в связанном каталоге заполнения есть объекты, требующие публикации.\n\n        При изменении статуса на \"Не опубликован\" или \"Архивный\",\n        процесс публикации может быть остановлен, если он запущен в текущий момент.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/newPublicationCatalogStatusQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Статус изменен, текущий процесс публикации остановлен:\n                  $ref: '#/components/examples/PublicationCatalogStatusChangedWithPublicationCancelledResponse'\n                Статус изменен, процесс публикации объектов запущен:\n                  $ref: '#/components/examples/PublicationCatalogStatusChangedWithPublicationStartResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogIdNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/access:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение систем-потребителей, которым доступен каталог публикации\n      description: |-\n        Возвращает перечень систем-потребителей каталога публикации с указанием их доступа к каталогу.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationCatalogSystemAccess'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogSystemAccessResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n    put:\n      tags:\n        - publicationCatalogs\n      summary: Изменение доступа систем-потребителей к каталогу публикации\n      description: |-\n        Позволяет изменить доступ систем-потребителей к каталогу публикации.\n\n        В параметрах запроса передается список идентификаторов систем-потребителей каталога, для которых будет виден.\n        Остальным системам, добавленным в настройках каталога, но которые не входят в этот список, каталог будет не доступен.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/grantedQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogAccessChangedResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogAccessNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/publish:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Запуск публикации каталога\n      description: |-\n        Запускает публикацию каталога публикации.\n        При вызове метода происходит наполнение внутреннего лога публикации, который обрабатывается в фоновом режиме.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogStartResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Попытка публикации каталога, который не находится в статусе \"Публикуется вручную\";\n              - Каталог уже находится в процессе публикации.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Каталог не находится в статусе \"Публикуется вручную\":\n                  $ref: '#/components/examples/PublicationCannotBeStartedResponse'\n                Публикация уже выполняется:\n                  $ref: '#/components/examples/CatalogIsAlreadyBeingPublishedResponse'\n\n  /publicationCatalogs/{catalogId}/versions:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение версий каталога публикации\n      description: |-\n        Возвращает список версий каталога публикации отсортированных по убыванию номера версии.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationCatalogVersion'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogVersionArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogIdNotFoundResponse'\n\n  /publicationCatalogs/versions:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Создание новой версии каталога публикации\n      description: |-\n        Внутренний метод сервиса каталогов публикации. Создает новые версии для каталогов публикации при изменении атрибутов через классификатор атрибутов, которые в них используются.\n\n        На вход принимается объект с изменениями атрибута.\n\n        Если передан несуществующий идентификатор каталога,\n        или в каталоге нет переданного атрибута,\n        или передан несуществующий атрибут,\n        или передано несуществующий идентификатор альтернативного наименования атрибута,\n        то изменение к каталогу не применяется (ошибка не возвращается).\n\n        Если измененные наименования атрибута (основное или альтернативные), не используются в каталоге,\n        то для него новая версия каталога не создается.\n        Идентификаторы каталогов, для которых новая версия была создана, перечисляются в сообщении ответа.\n\n        Если версии каталогов не были созданы ни для одного из каталогов, возвращается ответ 200 с соответствующим сообщением.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdsQueryParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicationAttributeChange'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationAttributeChangeRequest'\n      responses:\n        '200':\n          description: Успешный ответ, версии не созданы\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogVersionNotCreatedResponse'\n        '201':\n          description: Успешный ответ, версии созданы\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogVersionCreatedResponse'\n\n  /publicationCatalogs/syncProperties:\n    put:\n      tags:\n        - publicationCatalogs\n      summary: Изменение синхронизируемых свойств каталогов публикации\n      description: |-\n        Меняет настройки каталогов публикации в зависимости от изменений, сохраненных в связанный каталог заполнения.\n        Синхронизируемые настройки хранятся в массиве `synced_properties` в настройках каталога публикации.\n\n        Метод также позволяет обновить параметр `maxLength` для атрибутов каталога публикации, что используется для версионирования.\n\n        На вход принимается объект с изменениями настроек каталога заполнения.\n\n        Если передан несуществующий идентификатор каталога или в каталоге нет переданного атрибута,\n        то изменение к данному каталогу не применяется (ошибка не возвращается).\n\n        Если измененные настройки не входят в список синхронизируемых для каталога, то для него такие настройки не изменяются.\n        Идентификаторы каталогов, для которых настройки были изменены, перечисляются в сообщении ответа.\n\n        Если настройки не были изменены ни для одного из переданных каталогов, возвращается ответ 200 с соответствующим сообщением.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdsQueryParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicationCatalogSyncChange'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationCatalogSyncChangeRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n\n            ### Возвращается в двух случаях:\n              - Настройки каталогов не были изменены;\n              - Настройки каталогов были изменены (в ответе перечисляются идентификаторы измененных каталогов).\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Настройки каталогов изменены:\n                  $ref: '#/components/examples/PublicationCatalogSettingsSyncedResponse'\n                Настройки каталогов не изменены:\n                  $ref: '#/components/examples/PublicationCatalogSettingsNotSyncedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - У переданного атрибута нет свойства `maxLength`.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                У переданного атрибута нет свойства `maxLength`:\n                  $ref: '#/components/examples/NoMaxLentghFieldErrorResponse'\n\n  /publicationCatalogs/identNumber:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение идентификационного номера для каталога публикации\n      description: |-\n        Генерирует значение идентификационного номера для связанного каталога публикации\n        с учетом транслитерации названия в формате \"<ИНН ОИВ КЗ>-<Транслитированное краткое наименование КЗ>\".\n\n        На вход передается идентификатор каталога заполнения.\n\n        Если у КЗ несколько ОИВ, то ИНН берется для первого из них.\n        Если ИНН не найден, то числовая часть заполняется нулями.\n        В случае ошибки возвращается пустая строка.\n\n        При транслитерации из названия КЗ удаляются все спецсимволы и пробелы кроме дефисов.\n        Итого, разрешается использование латинских букв, цифр и дефиса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n          content:\n            text/plain:\n              schema:\n                type: string\n              example:\n                \"7719261558-Adresnyyreestr\"\n\n  /publicationCatalogs/{catalogId}/releases/search:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Получение релизов каталога публикации\n      description: |-\n        Возвращает список релизов каталога публикации.\n\n        Метод позволяет выполнять сортировку, фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации по столбцам списка используется тело запроса.\n\n        Сортировка списка по умолчанию - по убыванию даты создания релиза.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых релизов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/publicationCatalogReleasesRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. Если для каталога публикации не найдено релизов, то возвращается пустой список.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationCatalogRelease'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogIdNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/releases:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Ручное создание релиза каталога публикации\n      description: |-\n        Запуск формирования релиза каталога публикации.\n        Выполняется пользователем, если необходимо выпустить релиз, не дожидаясь выполнения фонового процесса по генерации релизов.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '201':\n          description: |-\n            Успешный ответ, о создании релиза.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogReleaseCreatedResponse'\n        '404':\n          $ref: '#/components/responses/PublicationCatalogReleaseNotFoundResponse'\n\n  /publicationCatalogs/{catalogId}/releases/checkObjects:\n    get:\n      tags:\n        - publicationCatalogs\n      summary: Получение статистики по опубликованным объектам, которые доступны для формирования релиза.\n      description: |-\n        Возвращает статистику по опубликованным объектам каталога публикации, которые не были обработаны фоновым процессом генерации релизов.\n\n        Данная статистика помогает пользователю перед запуском ручного формирования релиза.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            Поля id и createDate не имеют значений, так как эти поля относятся только к сформированным релизам.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicationCatalogRelease'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n            - Запрошенный id каталога публикации не существует;\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Запрошенный id каталога публикации не существует:\n                  $ref: '#/components/examples/PublicationCatalogNotFoundError'\n\n# Метод на проверку\n  /publicationCatalogs/{catalogId}/checkSettingsChange:\n    post:\n      tags:\n        - publicationCatalogs\n      summary: Проверка изменения настроек каталога публикации (атрибутов, ограничение выборки, геометрии)\n      description: |-\n        Проверяет изменение настроек каталога публикации перед сохранением каталога публикации.\n\n        На вход передаются настройки каталога:\n        - вкладка \"Атрибуты\"\n        - вкладка \"Ограничение выборки\"\n        - вкладка \"Карта\"\n        \n        Метод возвращает результат проверки в виде `true`, если\n        каталог находится в статусе \"Публикуется автоматически\" и\n        выполнено одно или более из условий:\n        - в настройках атрибутов были добавлены атрибуты,\n        - изменилось условие ограничение выборки,\n        - в настройках карты была включена геометрия или добавлены типы геометрии.\n\n        Используется для запроса подтверждения перепубликации объектов каталога публикации,\n        если он публикуется автоматически.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PublicationCatalogSettingsChange'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationCatalogSettingsChangeRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: boolean\n              examples:\n                Пример:\n                  value: true\n        '404':\n          $ref: '#/components/responses/PublicationCatalogIdNotFoundResponse'\n\ncomponents:\n  schemas:\n    # Каталоги публикации\n    PublicationCatalogStatusTagIdEnum:\n      description: |-\n        Статус публикации каталога публикации:\n          - `unpublished` - не опубликован\n          - `manualPublication` - публикуется вручную\n          - `autoPublication` - публикуется автоматически\n          - `archive` - архивный\n      oneOf:\n        - type: string\n          enum:\n            - unpublished\n            - manualPublication\n            - autoPublication\n            - archive\n\n    PublicationCatalogStatusNameEnum:\n      description: Наименование статуса публикации каталога публикации\n      oneOf:\n        - type: string\n          # enum:\n          #   - Не опубликован\n          #   - Опубликован\n          #   - Архивный\n\n    GeneralInfoSyncedPropertyTagIdEnum:\n      description: |-\n        Техническое наименование поля общей информации каталога заполнения, которое синхронизируется с каталогом публикации:\n          - `accountingObject` - объект учета\n          - `thematicCategoryId` - тематическая категория\n          - `periodUpdate` - периодичность обновления\n          - `kindCatalogId` - вид каталога\n          - `typeCatalogId` - тип каталога\n          - `oivsIds` - поставщики информации\n          - `keywords` - ключевые слова\n      oneOf:\n        - type: string\n          enum:\n            - accountingObject\n            - thematicCategoryId\n            - periodUpdate\n            - kindCatalogId\n            - typeCatalogId\n            - oivsIds\n            - keywords\n\n    GeneralInfoSyncedPropertyNameEnum:\n      description: Наименование поля общей информации каталога заполнения, которое синхронизируется с каталогом публикации\n      oneOf:\n        - type: string\n          # enum:\n          #   - Объект учета\n          #   - Тематическая категория\n          #   - Периодичность обновления\n          #   - Вид каталога\n          #   - Тип каталога\n          #   - Поставщики информации\n          #   - Ключевые слова\n\n    MetadataSyncedPropertyTagIdEnum:\n      description: |-\n        Техническое наименование поля метаданных каталога заполнения, которое синхронизируется с каталогом публикации:\n          - `respPersonFIO` - ФИО ответсвенного\n          - `respPersonEmail` - Email ответственного\n          - `respPersonPhone` - телефон ответственного\n          - `description` - описание каталога\n      oneOf:\n        - type: string\n          enum:\n            - respPersonFIO\n            - respPersonEmail\n            - respPersonPhone\n            - description\n\n    MetadataSyncedPropertyNameEnum:\n      description: Наименование поля метаданных каталога заполнения, которое синхронизируется с каталогом публикации\n      oneOf:\n        - type: string\n          # enum:\n          #   - ФИО ответственного\n          #   - Email ответвтенного\n          #   - Телефон ответственного\n          #   - Описание каталога\n\n    MapSyncedPropertyTagIdEnum:\n      description: |-\n        Техническое наименование поля карты каталога заполнения, которое синхронизируется с каталогом публикации:\n          - `hasGeo` - Наличие геопривязки\n          - `typeGeoTagIds` - Тип геометрии\n      oneOf:\n        - type: string\n          enum:\n            - hasGeo\n            - typeGeoTagIds\n\n    PublicationCatalogReleasePeriodicityNameEnum:\n      description: Название периодичности формирования релизов каталога публикации\n      oneOf:\n        - type: string\n        #   enum:\n        #     - Ежедневно\n        #     - Еженедельно\n        #     - Ежемесячно\n        #     - Ежеквартально\n        #     - Ежегодно\n        #     - Настраиваемая (произвольный срок)\n        #     - Настраиваемая (календарные дни)\n        #     - Множественная периодичность\n        #     - По мере поступления изменений из источников актуализации\n\n    PublicationCatalogReleasePeriodicityTagIdEnum:\n      description: Техническое название периодичности формирования релизов каталога публикации\n      oneOf:\n        - type: string\n          enum:\n            - daily\n            - weekly\n            - monthly\n            - quarterly\n            - yearly\n            - numDays\n            - calendarDays\n            - multiple\n            - withChanges\n\n    GeneralInfoSyncedProperty:\n      description: Поле общей информации каталога заполнения, которое синхронизируется с каталогом публикации\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/GeneralInfoSyncedPropertyTagIdEnum'\n        name:\n          $ref: '#/components/schemas/GeneralInfoSyncedPropertyNameEnum'\n      required:\n        - tagId\n        - name\n\n    MetadataSyncedProperty:\n      description: Поле метаданных каталога заполнения, которое синхронизируется с каталогом публикации\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/MetadataSyncedPropertyTagIdEnum'\n        name:\n          $ref: '#/components/schemas/MetadataSyncedPropertyNameEnum'\n      required:\n        - tagId\n        - name\n\n    MapSyncedProperty:\n      description: Поле метаданных каталога заполнения, которое синхронизируется с каталогом публикации\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/MapSyncedPropertyTagIdEnum'\n        name:\n          description: |-\n            Наименование поля настройки карты каталога заполнения, которое синхронизируется с каталогом публикации.\n            Возможны следующие значения:\n              - hasGeo - Наличие геопривязки\n              - typeGeoTagIds - Тип геометрии\n          type: string\n      required:\n        - tagId\n        - name\n\n\n    PublicationCatalogPriority:\n      description: Приоритет публикации каталога\n      type: integer\n      format: int32\n      minimum: 1\n      maximum: 11\n\n    PublicationCatalogStatus:\n      description: Cтатус публикации каталога публикации\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/PublicationCatalogStatusTagIdEnum'\n        name:\n          $ref: '#/components/schemas/PublicationCatalogStatusNameEnum'\n      required:\n        - tagId\n        - name\n\n    CommonPublicationCatalogInfo:\n      description: Общая информация о каталоге публикации\n      type: object\n      properties:\n        publicationStatus:\n          $ref: '#/components/schemas/PublicationCatalogStatusTagIdEnum'\n        periodUpdate:\n          $ref: '#/components/schemas/PublicationCatalogReleasePeriodicityNameEnum'\n        dateNextUpdate:\n          description: |-\n            Рассчитанная дата следующей публикации каталога, вычисленной на основе даты последней публикации и периодичности формирования релизов.\n            Формат даты: DD.MM.YYYY\n      required:\n        - publicationStatus\n        - periodUpdate\n        - dataNextUpdate\n\n    PublicationCatalogListItem:\n      description: Элемент списка каталогов публикации\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogListItem'\n      properties:\n        publicationStatus:\n          $ref: '#/components/schemas/PublicationCatalogStatusTagIdEnum'\n        hasUnpublishedChanges:\n          description: Наличие неопубликованных изменений\n          type: boolean\n        sourceCatalogId:\n          description: Идентификатор каталога-источника\n          type: integer\n        userPrivileges:\n          $ref: 'users.yaml#/components/schemas/UserPrivilegePubl'\n      required:\n        - publicationStatus\n        - hasUnpublishedChanges\n        - sourceCatalogId\n        - userPrivileges\n    # Нужен рефакторинг с КЗ\n    PublicationCatalogUpdatePeriodicity:\n      description: Периодичность формирования релизов каталога публикации\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/PublicationCatalogReleasePeriodicityTagIdEnum'\n        name:\n          allOf:\n            - $ref: '#/components/schemas/PublicationCatalogReleasePeriodicityNameEnum'\n          readOnly: true\n        numDays:\n          description: Настройки периодичности \"Настраиваемая (произвольный срок)\". Обязателен, если tagId = numDays.\n          type: integer\n        calendarDays:\n          description: Настройки периодичности \"Настраиваемая (Календарные дни)\". Обязателен, если tagId = calendarDays.\n          type: array\n          items:\n            type: object\n            properties:\n              day:\n                description: День месяца в формате DD.MM\n                type: string\n                pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])$'\n          minItems: 1\n        isCheckLastDay:\n          description: Дополнительное свойство для периодичности \"Ежемесячно\" - \"Обновлять не позднее последнего дня следующего месяца за месяцем последнего подписания\"\n          type: boolean\n        multiple:\n          description: Настройки периодичности \"Множественная периодичность\". Обязателен, если tagId = multiple.\n          type: array\n          items:\n            type: object\n            properties:\n                tagId:\n                  $ref: '#/components/schemas/PublicationCatalogReleasePeriodicityTagIdEnum'\n                name:\n                  allOf:\n                    - $ref: '#/components/schemas/PublicationCatalogReleasePeriodicityNameEnum'\n                  readOnly: true\n                dateStart:\n                  description: Дата начала действия указанной периодичности. Используется формат DD.MM\n                  type: string\n                  pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])$'\n                numDays:\n                  description: Настройки периодичности \"Настраиваемая (произвольный срок)\". Обязателен, если tagId = numDays.\n                  type: integer\n                calendarDays:\n                  description: Настройки периодичности \"Настраиваемая (Календарные дни)\". Обязателен, если tagId = calendarDays.\n                  type: array\n                  items:\n                    type: object\n                    properties:\n                      day:\n                        description: День месяца в формате DD.MM\n                        type: string\n                        pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])$'\n                  minItems: 1\n                isCheckLastDay:\n                  description: Дополнительное свойство для периодичности \"Ежемесячно\" - \"Обновлять не позднее последнего дня следующего месяца за месяцем последней публкиации\"\n                  type: boolean\n            required:\n                - tagId\n                - name\n                - dateStart\n          minItems: 1\n      required:\n        - tagId\n        - name\n\n    PublicationCatalogGeneralInfo:\n      description: Общая информация каталога публикации\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogGeneralInfo'\n      properties:\n        fillingCatalogId:\n          description: Идентификатор каталога заполнения\n          type: integer\n          format: int32\n        identNumber:\n          description: Идентификационный номер каталога публикации\n          type: string\n        syncedProperties:\n          description: Синхронизируемые параметры общей информации из каталога заполнения, которые автоматически обновляются в каталоге публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneralInfoSyncedProperty'\n          readOnly: true\n        syncedPropertiesTagIds:\n          description: Технические названия синхронизируемых параметров общей информации из каталога заполнения, которые автоматически обновляются в каталоге публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/GeneralInfoSyncedPropertyTagIdEnum'\n          writeOnly: true\n        defaultPriority:\n          description: Приоритет публикации каталога по умолчанию\n          allOf:\n            - $ref: '#/components/schemas/PublicationCatalogPriority'\n          default: 5\n        periodUpdate:\n          $ref: '#/components/schemas/PublicationCatalogUpdatePeriodicity'\n        hasEnglishVersion:\n          description: |-\n            Признак наличия английской версии у каталога.\n            По умолчанию каталог не имеет английской версии.\n\n            Если имеет значение `true`, то поля `fullNameEn`, `shortNameEn`, `accountingObjectEn` и `keywordsEn` являются обязательными.\n          type: boolean\n        fullNameEn:\n          description: Полное наименование каталога на английском языке\n          type: string\n          minLength: 1\n        shortNameEn:\n          description: Краткое наименование каталога на английском языке\n          type: string\n          minLength: 1\n        accountingObjectEn:\n          description: Объект учёта каталога на английском языке\n          type: string\n          minLength: 1\n        keywordsEn:\n          description: Ключевые слова каталога на английском языке\n          type: string\n          minLength: 1\n      required:\n        - fillingCatalogId\n        - syncedProperties\n        - syncedPropertiesTagIds\n        - defaultPriority\n        - hasEnglishVersion\n\n    CommonPublicationCatalogAttribute:\n      description: Общая информация атрибута каталога публикации.\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogAttribute'\n      properties:\n        rown:\n          description: Уникальный идентификатор атрибута каталога в БД публикации (используется в REST API публикации)\n          readOnly: true\n          type: string\n        maxLength:\n          description: |-\n            Максимальная длина значения (используется в REST API публикации)\n\n            Для всех типов кроме строки, целое число и дробное число возвращается 4000 по умолчанию\n          readOnly: true\n          type: integer\n      required:\n        - rown\n        - maxLength\n\n    StringPublicationCatalogAttribute:\n      description: Строковый атрибут каталога публикации\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n\n    IntegerPublicationCatalogAttribute:\n      description: Целочисленный атрибут каталога публикации\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n\n    FloatPublicationCatalogAttribute:\n      description: Атрибут каталога публикации с типом дробное число\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n\n    DatePublicationCatalogAttribute:\n      description: Атрибут каталога публикации с типом дата (и время)\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n\n    FilePublicationCatalogAttribute:\n      description: Файловый атрибут каталога публикации\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n\n    BooleanPublicationCatalogAttribute:\n      description: Атрибут каталога публикации с типом флаг\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n\n    DictPublicationCatalogAttribute:\n      description: Справочный атрибут каталога публикации\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n        - properties:\n            attribute:\n              $ref: 'attributes.yaml#/components/schemas/DictionaryAttribute'\n      properties:\n        defaultColDictTechName:\n          description: Столбец справочника, который будет отображаться в каталоге. По умолчанию поле \"Наименование\".\n          type: string\n          writeOnly: true\n        defaultColDict:\n          type: object\n          description: Столбец справочника, который будет отображаться в каталоге.\n          allOf:\n            - $ref: 'dictionaries.yaml#/components/schemas/DictionaryColumn'\n          readOnly: true\n      required:\n        - defaultColDictTechName\n        - defaultColDict\n\n    LinkPublicationCatalogAttribute:\n      description: Ссылочный атрибут каталога публикации\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n      properties:\n        refCatalog:\n          description: Каталог публикации, на объекты которого ссылается объект\n          type: object\n          readOnly: true\n          properties:\n            id:\n              description: Идентификатор каталога\n              type: integer\n            name:\n              description: Полное наименование каталога\n              type: string\n            mainAttrId:\n              description: Идентификатор главного атрибута\n          required:\n            - id\n            - name\n            - mainAttrId\n        refCatalogId:\n          description: Идентификатор каталога публикации, на объекты которого ссылается объект\n          type: integer\n          writeOnly: true\n      required:\n        - refCatalog\n        - refCatalogId\n\n    TablePublicationCatalogAttribute:\n      description: Табличный атрибут каталога публикации\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttribute'\n      properties:\n        childCatalogId:\n          description: |-\n            Идентификатор вложенного каталога, хранящего значения объектов табличного атрибута.\n\n            При создании передается отрицательный идентификатор, уникальный в пределах запроса.\n          type: integer\n          format: int32\n        attributes:\n          description: Атрибутивный состав вложенного каталога (табличного атрибута)\n          type: array\n          minItems: 1\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/StringPublicationCatalogAttribute'\n              - $ref: '#/components/schemas/IntegerPublicationCatalogAttribute'\n              - $ref: '#/components/schemas/FloatPublicationCatalogAttribute'\n              - $ref: '#/components/schemas/DatePublicationCatalogAttribute'\n              - $ref: '#/components/schemas/FilePublicationCatalogAttribute'\n              - $ref: '#/components/schemas/BooleanPublicationCatalogAttribute'\n              - $ref: '#/components/schemas/DictPublicationCatalogAttribute'\n              - $ref: '#/components/schemas/LinkPublicationCatalogAttribute'\n              - $ref: '#/components/schemas/TablePublicationCatalogAttribute'\n      required:\n        - childCatalogId\n        - attributes\n\n    PublicationCatalogAttribute:\n      description: Атрибут каталога публикации\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/StringPublicationCatalogAttribute'\n        - $ref: '#/components/schemas/IntegerPublicationCatalogAttribute'\n        - $ref: '#/components/schemas/FloatPublicationCatalogAttribute'\n        - $ref: '#/components/schemas/DatePublicationCatalogAttribute'\n        - $ref: '#/components/schemas/FilePublicationCatalogAttribute'\n        - $ref: '#/components/schemas/BooleanPublicationCatalogAttribute'\n        - $ref: '#/components/schemas/DictPublicationCatalogAttribute'\n        - $ref: '#/components/schemas/LinkPublicationCatalogAttribute'\n        - $ref: '#/components/schemas/TablePublicationCatalogAttribute'\n\n    CommonAttributePublicationSettings:\n      description: Общие настройки публикации атрибута для систем\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        order:\n          description: Порядковый номер атрибута для системы\n          type: integer\n          format: int32\n        isVisible:\n          description: Является ли атрибут видимым для системы\n          type: boolean\n        isMain:\n          description: Является ли атрибут главным для системы\n          type: boolean\n        systemAttributeId:\n          description: Идентификатор системного атрибута, сопоставленного с атрибутом каталога\n          type: integer\n          format: int32\n        attributeGroupId:\n          description: Идентификатор группы атрибутов, сопоставленной с атрибутом каталога\n          type: integer\n          format: int32\n        childCatalogId:\n          description: |-\n            Идентификатор вложенного каталога.\n\n            При создании передается отрицательный идентификатор, уникальный в пределах запроса, который совпадает в идентифкиатором, указанном в поле `attributes` для табличных атрибутов.\n\n            Указывается только для табличных атрибутов.\n          type: integer\n          format: int32\n        attributes:\n          description: Атрибуты, входящие в табличный атрибут\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonAttributePublicationSettings'\n      required:\n        - attrId\n        - order\n        - isVisible\n        - isMain\n\n    AttributePublicationSettings:\n      description: Настройки публикации атрибута для системы\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonAttributePublicationSettings'\n\n    OpodAttributePublicationSettings:\n      description: Настройки публикации атрибута для системы \"Портал открытых данных\"\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        order:\n          description: Порядковый номер атрибута для системы\n          type: integer\n          format: int32\n        isVisible:\n          description: Является ли атрибут видимым для системы\n          type: boolean\n        isMain:\n          description: Является ли атрибут главным для системы\n          type: boolean\n        systemAttributeId:\n          description: Идентификатор системного атрибута, сопоставленного с атрибутом каталога\n          type: integer\n          format: int32\n        attributeGroupId:\n          description: Идентификатор группы атрибутов, сопоставленной с атрибутом каталога\n          type: integer\n          format: int32\n        isDefaultVisible:\n          description: Является ли атрибут видимым по умолчанию на Портале открытых данных\n          type: boolean\n        childCatalogId:\n          description: |-\n            Идентификатор вложенного каталога.\n\n            При создании передается отрицательный идентификатор, уникальный в пределах запроса, который совпадает в идентифкиатором, указанном в поле `attributes` для табличных атрибутов.\n\n            Указывается только для табличных атрибутов.\n          type: integer\n          format: int32\n        attributes:\n          description: Атрибуты, входящие в табличный атрибут\n          type: array\n          items:\n            $ref: '#/components/schemas/OpodAttributePublicationSettings'\n      required:\n        - attrId\n        - order\n        - isVisible\n        - isMain\n        - isDefaultVisible\n\n    CommonSystemPublicationSettings:\n      description: Общие настройки публикации для системы\n      type: object\n      properties:\n        systemId:\n          description: Идентификатор системы\n          type: integer\n          format: int32\n        catalogRusName:\n          description: Русскоязычное полное наименование каталога для системы\n          type: string\n\n        catalogEnName:\n          description: Англоязычное полное наименование каталога для системы\n          type: string\n\n        catalogRusShortName:\n          description: Русскоязычное краткое наименование каталога для системы\n          type: string\n\n        catalogEnShortName:\n          description: Англоязычное краткое наименование каталога для системы\n          type: string\n\n        catalogTechName:\n          description: Техническое наименование каталога для системы\n          type: string\n\n        attributeSettings:\n          description: Настройки публикации атрибутов\n          type: array\n          items:\n            $ref: '#/components/schemas/CommonAttributePublicationSettings'\n          minItems: 1\n      required:\n        - systemId\n        - attributeSettings\n\n\n    OpodSystemPublicationSettings:\n      description: Настройки публкиации для системы \"Портал открытых данных\"\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonSystemPublicationSettings'\n        - properties:\n            attributeSettings:\n              items:\n                $ref: '#/components/schemas/OpodAttributePublicationSettings'\n      properties:\n        titleSn:\n          description: Заголовок набора данных для социальных сетей\n          type: string\n\n        descriptionSn:\n          description: Опсиание набора данных для социальных сетей\n          type: string\n\n        seasonalityTagId:\n          $ref: 'datasets.yaml#/components/schemas/DatasetSeasonalityTagIdEnum'\n        tags:\n          description: Тэги набора данных\n          type: string\n        sefUrl:\n          description: SEF URL, разрешается использование латинских букв, цифр и дефиса.\n          type: string\n        polygonsSortingTagId:\n          description: Идентификатор сортировки полигональных объектов\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/SortingOrderTagIdEnum'\n\n        isClusteredByDistrict:\n          description: Включена ли сортировка по округам и районам\n          type: boolean\n        isIsoIndicatorsDataset:\n          description: Содержит ли набор показатели ISO37120 и U4SSC\n          type: boolean\n        isAvailableDataset:\n          description: Относится ли набор данных к категории \"Доступная среда\"\n          type: boolean\n        forumLink:\n          description: Ссылка на форум\n          type: string\n        dictTypeId:\n          $ref: 'datasets.yaml#/components/schemas/DatasetDictionaryTypeTagIdEnum'\n\n    YandexSystemPublicationSettings:\n      description: Настройки публкиации для системы \"Яндекс\"\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonSystemPublicationSettings'\n        - properties:\n            attributeSettings:\n              items:\n                $ref: '#/components/schemas/AttributePublicationSettings'\n      properties:\n        rubricatorId:\n          description: Идентификатор рубрикатора каталога для системы \"Яндекс\".\n          type: integer\n          format: int32\n          writeOnly: true\n        rubricator:\n          allOf:\n            - $ref: '#/components/schemas/Rubric'\n          readOnly: true\n\n\n    Rubric:\n      description: Данные рубрикатора для системы \"Яндекс\".\n      type: object\n      properties:\n        id:\n          description: Идентификатор рубрикатора\n          type: integer\n          format: int32\n        name:\n          description: Наименование рубрикатора\n          type: string\n      required:\n        - id\n        - name\n\n\n    SystemPublicationSettings:\n      description: Настройки публкиации для системы\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonSystemPublicationSettings'\n        - properties:\n            attributeSettings:\n              items:\n                $ref: '#/components/schemas/AttributePublicationSettings'\n\n    PublicationSorting:\n      description: Сортировка по атрибуту в каталоге публикации\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута каталога, по которому определена сортировка\n          type: integer\n          format: int32\n        sortingOrder:\n          $ref: '_common.yaml#/components/schemas/SortingOrderTagIdEnum'\n      required:\n        - attrId\n        - sortingOrder\n\n    PublicationCatalogMetadata:\n      description: Метаданные каталога публикации\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogMetadata'\n      properties:\n        syncedProperties:\n          description: Синхронизируемые параметры метаданных из каталога заполнения, которые автоматически обновляются в каталоге публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/MetadataSyncedProperty'\n          readOnly: true\n        syncedPropertiesTagIds:\n          description: Технические названия синхронизируемых параметров метаданных из каталога заполнения, которые автоматически обновляются в каталоге публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/MetadataSyncedPropertyTagIdEnum'\n          writeOnly: true\n      required:\n        - syncedPropertiesTagIds\n\n    PublicationCatalogSettings:\n      description: Настройки каталога публикации\n      type: object\n      properties:\n        generalInfo:\n          $ref: '#/components/schemas/PublicationCatalogGeneralInfo'\n        attributes:\n          description: Атрибуты каталога публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationCatalogAttribute'\n          minItems: 1\n        meta:\n          $ref: '#/components/schemas/PublicationCatalogMetadata'\n        systemPublicationSettings:\n          description: Настройки публикации для систем-потребителей\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/SystemPublicationSettings'\n              - $ref: '#/components/schemas/OpodSystemPublicationSettings'\n              - $ref: '#/components/schemas/YandexSystemPublicationSettings'\n        sortings:\n          description: |-\n            Настройки сортировки каталога публикации.\n            Передается в виде массива объектов, вклчюающий идентификатор атрибута в каталоге и порядок сортировки.\n\n            Несколько объектов определяют многоуровневую сортировку.\n            Порядок объектов в массиве определяет уровни сортировки.\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationSorting'\n        publicationConditions:\n          description: |-\n            Условия ограничения выборки каталога публикации.\n\n            Передается в виде строки, имеющий синтаксис, аналогичный синтаксису условий в конструкторе процессов.\n          type: string\n        map:\n          $ref: '#/components/schemas/PublicationCatalogMap'\n      required:\n        - generalInfo\n        - attributes\n        - map\n\n    PublicationCatalogSystemAccess:\n      description: Информация о доступе системы к каталогу публикации\n      type: object\n      allOf:\n        - $ref: 'systems.yaml#/components/schemas/CommonSystemInfo'\n      properties:\n        access:\n          description: Признак доступа системы к каталогу публикации\n          type: boolean\n      required:\n        - access\n\n    CommonPublicationCatalogAttributeForValidation:\n      description: Основные свойства атрибута кататалога заполнения, необходимые для проведения валидации настроек конструктора проверок, групповой и условной уникальностей\".\n      type: object\n      properties:\n        techName:\n          description: Техническое наименование атрибута.\n          type: string\n        typeTagId:\n          $ref: 'attributes.yaml#/components/schemas/AttributeTypeTagIdEnum'\n      required:\n        - techName\n        - typeTagId\n\n    DictPublicationCatalogAttributeForValidation:\n      description: Свойства справочного атрибута каталога публикации, необходимые для проведения валидации настроек огранчиения выборки\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttributeForValidation'\n        - properties:\n            dictionaryId:\n              description: Идентификатор справочника, который используется в справочном атрибуте\n              type: integer\n          required:\n            - dictionaryId\n\n    PublicationCatalogAttributeForValidation:\n      description: Атрибут каталога публикации с набором свойств, необходимых для проведения валидации настроек огранчиения выборки\n      type: object\n      oneOf:\n        - $ref: '#/components/schemas/CommonPublicationCatalogAttributeForValidation'\n        - $ref: '#/components/schemas/DictPublicationCatalogAttributeForValidation'\n\n    PublicationConditionsValidationError:\n      type: object\n      properties:\n        code:\n          description: HTTP-код ошибки\n          type: integer\n          format: int32\n          example: 400\n        messageType:\n          description: Тип ответа\n          type: string\n          example: Bad request\n        errors:\n          description: Массив ошибок, обнаруженных при валидации настройки ограничения выборки\n          type: array\n          items:\n            type: string\n            enum:\n              - \"Недопустимое выражение '{expression}'.\"\n              - \"Найдено {symbol/expression}. Ожидалось {symbol/expression}.\"\n              - \"В каталоге отсутсвует указанный атрибут attr.{techName}.\"\n              - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n              - \"Передан некорректный набор входных параметров в {operator}.\"\n              - \"Не найден справочник с идентификатором {dictId}.\"\n              - \"Не найден элемент справочника {elementId} в справочнике {dictId}.\"\n              - \"Атрибут с типом {type} недоступен для оператора {operator}.\"\n              - \"Не найден каталог с идентификатором {catalogId}.\"\n              - \"Не найдено регулярное выражение с идентификатором {regexpId}.\"\n              - \"В справочнике отсутсвует указанный атрибут attr.{dictTechName}.{columnTechName}/dictAttr.{techName}\"\n              - \"Атрибут с типом ссылка и таблица не может быть использован в условии огранчиения выборки\"\n      required:\n        - code\n        - messageType\n        - errors\n\n    PublicationAttributeChange:\n      description: Изменение в атрибуте каталога публикации\n      type: object\n      properties:\n        id:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        newRusName:\n          description: Новое русскоязычное наименование атрибута\n          type: string\n        newEnName:\n          description: Новое англоязычное наименование атрибута\n          type: string\n        newTechName:\n          description: Новое техническое наименование атрибута\n          type: string\n        alterNameChanges:\n          description: Изменения в альтернативных наименованиях атрибута\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                description: Идентификатор альтернативного наименования атрибута\n                type: integer\n                format: int32\n              newRusName:\n                description: Новое русскоязычное альтернативное наименование атрибута\n                type: string\n              newEnName:\n                description: Новое англоязычное альтернативное наименование атрибута\n                type: string\n            required:\n              - id\n        deletedAlterNameIds:\n          description: Идентификаторы удаленных альтернативных наименований атрибута\n          type: array\n          items:\n            type: integer\n            format: int32\n\n    PublicationCatalogSyncChange:\n      description: Синхронизируемое изменение настроек каталога публикации\n      type: object\n      properties:\n        maxLengthChanges:\n          description: Изменения значения максимальной длины атрибутов\n          type: array\n          items:\n            type: object\n            properties:\n              attrId:\n                description: Идентификатор атрибута\n                type: integer\n                format: int32\n              newValue:\n                description: Новое значение для атрибута\n                type: integer\n                format: int32\n              childCatalogId:\n                description: Идентификатор вложеннего каталога, если атрибут принадлежит табличному\n                type: integer\n                format: int32\n            required:\n              - attrId\n              - newValue\n        syncedPropertyChanges:\n          description: Изменения синхронизируемых полей настроек каталога публикации\n          type: array\n          items:\n            type: object\n            properties:\n              tagId:\n                description: Техническое наименование измененного поля из списка синхронизируемых\n                allOf:\n                  - $ref: '#/components/schemas/GeneralInfoSyncedPropertyTagIdEnum'\n                  - $ref: '#/components/schemas/MetadataSyncedPropertyTagIdEnum'\n                  - $ref: '#/components/schemas/MapSyncedPropertyTagIdEnum'\n              newValue:\n                description: Новое значение синхронизируемого поля\n                oneOf:\n                  - type: array\n                    items:\n                      type: integer\n                      format: int32\n                  - type: string\n                  - type: integer\n                    format: int32\n            required:\n              - tagId\n              - newValue\n\n    PublicationCatalogCatalogAttributeInfo:\n      description: |-\n        Информация о каталоге и атрибуте, в котором используется каталог.\n      type: object\n      readOnly: true\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      properties:\n# Если сделать CommonAttributeInfo из идентификатора и наименовыания, то можно этот common много где использовать.\n# Пока он очень большой, с лишней информацией, поэтому отдельно прописываем.\n        attributeId:\n          description: Идентификатор атрибута ЕХД\n          type: integer\n          format: int32\n        attributeName:\n          description: Русскоязычное наименование атрибута\n          type: string\n      required:\n        - attributeId\n        - attributeName\n\n    PublicationCatalogMap:\n      description: Настройки карты каталога публикации\n      type: object\n      properties:\n        hasGeo:\n          description: Наличие геопривязки в каталоге\n          type: boolean\n          default: false\n        typeGeoTagIds:\n          description: Массив строковых идентификаторов типов геометрии\n          type: array\n          items:\n            $ref: 'geodata.yaml#/components/schemas/GeojsonGeoTypeTagIdEnum'\n          # writeOnly: true\n        # typeGeo:\n        #   description: Массив типов геометрии\n        #   type: array\n        #   items:\n        #     $ref: 'catalogs.yaml#/components/schemas/GeoType'\n        #   readOnly: true\n        syncedProperties:\n          description: Синхронизируемые параметры карты из каталога заполнения, которые автоматически обновляются в каталоге публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/MapSyncedProperty'\n          readOnly: true\n        syncedPropertiesTagIds:\n          description: Технические названия синхронизируемых параметров карты из каталога заполнения, которые автоматически обновляются в каталоге публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/MapSyncedPropertyTagIdEnum'\n          writeOnly: true\n      required:\n        - syncedProperties\n        - syncedPropertiesTagIds\n\n    #Релизы КП\n\n    PublicationCatalogRelease:\n      description: |-\n        Информация об одном релизе КП.\n      type: object\n      properties:\n        id:\n          description: Уникальный идентификатор релиза\n          type: integer\n        createDate:\n          description: Дата создания релиза\n          $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        cntPublished:\n          description: Количество новых опубликованных объектов в рамках релиза.\n          type: integer\n          minimum: 0\n        cntDeleted:\n          description: Количество помеченных удалёнными объектов в рамках релиза.\n          type: integer\n          minimum: 0\n        cntRestored:\n          description: Количество восстановленных объектов в рамках релиза.\n          type: integer\n          minimum: 0\n        cntUpdated:\n          description: Количество изменённых объектов в рамках релиза.\n          type: integer\n          minimum: 0\n        cntPassed:\n          description: Количество обработанных записей каталога, которые не были опубликованы, изменены, удалены или восстановлены в БД публикации в связи с несоответствием условию ограничения выборки.\n          type: integer\n          minimum: 0\n        cntActive:\n          description: Общее количество активных объектов каталога публикации, получившееся в рамках релиза.\n          type: integer\n          minimum: 0\n        cntAll:\n          description: Общее количество всех объектов каталога публикации, получившееся в рамках релиза.\n          type: integer\n          minimum: 0\n      required:\n        - cntPublished\n        - cntDeleted\n        - cntRestored\n        - cntUpdated\n        - cntPassed\n        - cntActive\n        - cntAll\n\n    #Версии КП\n\n    PublicationCatalogVersion:\n      type: object\n      properties:\n        versionNum:\n          description: Номер версии настроек каталога публикации\n          type: integer\n          minimum: 1\n        dateFrom:\n          allOf:\n            - description: Дата создания версии\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateUntil:\n          allOf:\n          - description: Дата окончания актуальности версии\n          - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n\n# Проверка изменений настроек КП\n    PublicationCatalogSettingsChange:\n      description: Настройки каталога публикации для проверки запуска перепубликации\n      type: object\n      properties:\n        attributes:\n          description: Настройки атрибутов каталога публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationCatalogAttribute'\n        conditions:\n          description: Настройки ограничения выборки каталога публикации\n          type: string\n        map:\n          description: Настройки карты каталога публикации\n          type: object\n          allOf:\n            - $ref: '#/components/schemas/PublicationCatalogMap'\n      required:\n        - attributes\n        - conditions\n        - mapShort\n\n  parameters:\n    publicationCatalogIdQueryParam:\n      name: publicationCatalogId\n      in: query\n      description: Идентификатор каталога публикации\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 197400\n\n    versionQueryParam:\n      name: version\n      in: query\n      description: |-\n        Номер версии каталога публикаци.\n\n        По умолчанию возвращается последняя версия.\n      required: false\n      schema:\n        type: integer\n        format: int32\n        minimum: 1\n\n    newPublicationCatalogStatusQueryParam:\n      name: status\n      in: query\n      description: |-\n        Новый статус каталога публикации.\n      required: true\n      schema:\n        $ref: '#/components/schemas/PublicationCatalogStatusTagIdEnum'\n\n    grantedQueryParam:\n      name: granted\n      in: query\n      description: |-\n        Список идентификаторов систем, для которых доступен каталог публикации.\n        От `1` до `100`.\n\n        Если параметр `granted` не указан, то каталог не доступен для всех систем.\n      required: false\n      schema:\n        type: array\n        items:\n          type: integer\n          format: int32\n        minItems: 1\n        maxItems: 100\n\n    forDatasetQueryParam:\n      name: forDataset\n      in: query\n      description: |-\n        Признак, который указывает, что в ответе должны быть каталоги публикации доступные для связи с набором данных.\n        Данные каталоги:\n          - не имеют связей с версиями наборов данных,\n          - в поле \"Системы-потребители\" КП указан Портал открытых данных,\n          - имеет хотя бы 1 релиз КП\n        С другими параметрами, которые так же влияют на выборку сочетается через оператор \"И\".\n      required: false\n      schema:\n        type: boolean\n\n    userIdQueryParam:\n      name: userId\n      in: query\n      description: Идентификатор пользователя. Необязательный параметр. Если указан, следует исключать из выборки все каталоги, имеющие связи с пользователем\n      schema:\n        type: integer\n        format: int32\n      required: false\n      example: 189776\n\n  requestBodies:\n    publicationCatalogListRequestBody:\n      description: Пример тела запроса для поиска по списку каталогов публикации\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: 'catalogs.yaml#/components/schemas/CatalogFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName\n                            - responsiblePerson\n                            - countActiveObjects\n                            - countObjects\n                            - dateNextUpdate\n                            - sourceCatalogId\n                            # - objectCategories\n                            - thematicCategory\n                            - oivs\n                            - periodUpdate\n                            - systemsConsumers\n          examples:\n            Пример:\n              $ref: 'catalogs.yaml#/components/examples/CatalogSearchRequest'\n      required: false\n\n    publicationCatalogReleasesRequestBody:\n      description: Тело запроса для поиска по списку релизов каталога публикации\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - createDate\n                            - cntPublished\n                            - cntDeleted\n                            - cntRestored\n                            - cntUpdated\n                            - cntPassed\n                            - cntActive\n                            - cntAll\n          examples:\n            Пример:\n              $ref: '#/components/examples/PublicationCatalogReleasesSearchRequestBody'\n      required: false\n\n  responses:\n    PublicationCatalogBadRequestPostResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Передана комбинация полного и технического наименований, которая уже используется в другом каталоге;\n          - Свойство \"Главный атрибут\" присвоено более чем 1 атрибуту или вложенному атрибуту;\n          - Email ответственного не прошел проверку на соответствие регулярному выражению;\n          - Ограничение выборки не проходит валидацию;\n          - В SEF URL используются запрещенные символы;\n          - Видимость (поле `isVisible`) для атрибутов global_id, Дата подписания и Признак удаления в настройках публикации для системы не может быть передана со значением `false`;\n          - Не заполнены обязательные поля при наличии геопривязки;\n          - Типы геометрии Точка и Мультиточка не могут быть выбраны одновременно;\n      content:\n        application/json:\n          schema:\n              oneOf:\n                - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                - $ref: '_common.yaml#/components/schemas/BadRequestError'\n          examples:\n            Неуникальная комбинация полного и технологического наименования каталога:\n              $ref: '#/components/examples/PublicationCatalogNotUniqueNameError'\n            Свойство \"Главный атрибут\" присвоено более чем 1 атрибуту:\n              $ref: 'catalogs.yaml#/components/examples/MultipleMainAttributesInCatalogError'\n            Email ответственного не прошел проверку на соответствие регулярному выражению:\n              $ref: 'catalogs.yaml#/components/examples/InvalidRespPersonEmail'\n            # Несоответствие id КЗ и категории объектов:\n            #   $ref: '#/components/examples/WrongObjectCategoryForFillingCatalogError'\n            В идентификационном номере используются запрещенные символы:\n              $ref: '#/components/examples/IdentNumberFormatError'\n            В SEF URL используются запрещенные символы:\n              $ref: '#/components/examples/SefUrlFormatError'\n            Ограничение выборки не прошло валидацию:\n              $ref: '#/components/examples/PublicationConditionsValidationError'\n            Системный атрибут должен быть видимым в настройках публикации:\n              $ref: '#/components/examples/PublicationSettingsSystemAttributeShouldBeVisibleError'\n            Не заполнены обязательные поля при наличии геопривязки:\n              $ref: '#/components/examples/PublicationCatalogMissingMapFieldsError'\n            Типы геометрии Точка и Мультиточка не могут быть выбраны одновременно:\n              $ref: 'catalogs.yaml#/components/examples/IncorrectGeoTypeArrayError'\n    PublicationCatalogBadRequestPutResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Передана комбинация полного и технического наименований, которая уже используется в другом каталоге;\n          - Свойство \"Главный атрибут\" присвоено более чем 1 атрибуту или вложенному атрибуту;\n          - Email ответственного не прошел проверку на соответствие регулярному выражению;\n          - Передан измененный атрибут, который синхронизируется с каталогом заполнения;\n          - Передан измененный идентификатор каталога заполнения;\n          - В SEF URL используются запрещенные символы;\n          - Ограничение выборки не проходит валидацию;\n          - Видимость (поле `isVisible`) для атрибутов global_id, Дата подписания и Признак удаления в настройках публикации для системы не может быть передана со значением `false`.\n      content:\n        application/json:\n          schema:\n              oneOf:\n                - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                - $ref: '_common.yaml#/components/schemas/ResourceCannotBeEditedError'\n          examples:\n            Неуникальная комбинация полного и технологического наименования каталога:\n              $ref: '#/components/examples/PublicationCatalogNotUniqueNameError'\n            Свойство \"Главный атрибут\" присвоено более чем 1 атрибуту:\n              $ref: 'catalogs.yaml#/components/examples/MultipleMainAttributesInCatalogError'\n            Email ответственного не прошел проверку на соответствие регулярному выражению:\n              $ref: 'catalogs.yaml#/components/examples/InvalidRespPersonEmail'\n            Попытка изменить синхронизируемый атрибут:\n              $ref: '#/components/examples/SyncedPropertyChangedError'\n            Попытка изменить связанный каталог заполнения:\n              $ref: '#/components/examples/FillingCatalogChangedError'\n            # Попытка изменить категорию объектов:\n            #   $ref: '#/components/examples/ObjectCategoryChangedError'\n            В идентификационном номере используются запрещенные символы:\n              $ref: '#/components/examples/IdentNumberFormatError'\n            В SEF URL используются запрещенные символы:\n              $ref: '#/components/examples/SefUrlFormatError'\n            Ограничение выборки не прошло валидацию:\n              $ref: '#/components/examples/PublicationConditionsValidationError'\n            Системный атрибут должен быть видимым в настройках публикации:\n              $ref: '#/components/examples/PublicationSettingsSystemAttributeShouldBeVisibleError'\n\n    PublicationCatalogNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Передан несуществующий id вида каталога;\n          - Передан несуществующий id типа каталога;\n          - Передан несуществующий id тематической категории;\n          - Передан несуществующий id ОИВа;\n          - Передан несуществующий id системы;\n          - Передан id системы, которая не добавлена в каталог в качетсве потребителя;\n          - Передан несуществующий id атрибута;\n          - Передан несуществующий в каталоге заполнения id атрибута;\n          - Передан id альтернативного названия атрибута, не найденный в атрибуте;\n          - Передан несуществующий столбец справочника;\n          - Передан несуществующий id каталога;\n          - Передан несуществующий id системного атрибута;\n          - Передан несуществующий id группы атрибутов;\n          - Передан несуществующий id рубрикатора (для yandex).\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id вида каталога:\n              $ref: 'catalogs.yaml#/components/examples/CatalogKindNotFoundError'\n            Несуществующий id типа каталога:\n              $ref: 'catalogs.yaml#/components/examples/CatalogTypeNotFoundError'\n            Несуществующий id тематической категории:\n              $ref: 'thematicCategories.yaml#/components/examples/ThematicCategoryNotFoundError'\n            # Несуществующий id категории объектов:\n            #   $ref: 'objectCategories.yaml#/components/examples/ObjectCategoryNotFoundError'\n            Несуществующий id ОИВа:\n              $ref: 'oivs.yaml#/components/examples/OivNotFoundError'\n            Несуществующий id системы:\n              $ref: 'systems.yaml#/components/examples/SystemNotFoundError'\n            Несуществующий в каталоге публикации id системы:\n              $ref: '#/components/examples/SystemNotFoundInPublicationCatalogError'\n            Несуществующий id атрибута:\n              $ref: 'attributes.yaml#/components/examples/AttributeNotFoundError'\n            Несуществующий в каталоге заполнения id атрибута:\n              $ref: '#/components/examples/AttributeNotFoundInFillingCatalogError'\n            Альтернативное название не найдено в атрибуте:\n              $ref: 'attributes.yaml#/components/examples/AttributeAlterNameNotFoundError'\n            Несуществующий столбец справочника:\n              $ref: 'dictionaries.yaml#/components/examples/DictionaryColumnNotFoundError'\n            Несуществующий id каталога:\n              $ref: '#/components/examples/PublicationCatalogNotFoundError'\n            Несуществующий id системного атрибута:\n              $ref: 'attributes.yaml#/components/examples/SystemAttributeNotFoundError'\n            Несуществующий id группы атрибутов:\n              $ref: 'attributes.yaml#/components/examples/AttributeGroupNotFoundError'\n            Несуществующий id рубрикатора (для yandex):\n              $ref: '#/components/examples/RubricatorNotFoundError'\n\n    PublicationCatalogIdNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога публикации не существует;\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога публикации:\n              $ref: '#/components/examples/PublicationCatalogNotFoundError'\n\n    PublicationCatalogOrVersionNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога публикации не существует;\n          - Указанной версии каталога публикации не существует;\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога публикации:\n              $ref: '#/components/examples/PublicationCatalogNotFoundError'\n            Несуществующий версия каталога публикации:\n              $ref: '#/components/examples/PublicationCatalogVersionNotFoundError'\n\n    PublicationCatalogAccessNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога публикации не существует;\n          - Передан несуществующий id системы;\n          - Передан id системы, которая не добавлена в каталог в качетсве потребителя;\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога публикации:\n              $ref: '#/components/examples/PublicationCatalogNotFoundError'\n            Несуществующий id системы:\n              $ref: 'systems.yaml#/components/examples/SystemNotFoundError'\n            Несуществующий в каталоге публикации id системы:\n              $ref: '#/components/examples/SystemNotFoundInPublicationCatalogError'\n\n    PublicationCatalogReleaseNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога публикации не существует;\n          - Не найдены опубликованные объекты для формирования релиза\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Запрошенный id каталога публикации не существует:\n              $ref: '#/components/examples/PublicationCatalogNotFoundError'\n            Не найдены опубликованные объекты для формирования релиза:\n              $ref: '#/components/examples/PublicationCatalogReleaseNotFoundDataErrorResponse'\n\n  examples:\n\n    PublicationCatalogListItemArrayResponse:\n      value:\n        - id: 213679\n          fullName: Реестр мест захоронений (тест)\n          # objectCategories: Места захоронения\n          thematicCategory: Земля и имущество\n          oivs: Тестовая организация\n          countActiveObjects: 100001\n          countObjects: 123213\n          systemsConsumers: Портал открытых данных\n          responsiblePerson: Иванов Иван Иванович, ivanov@example.com, +7 (999) 11-22-333\n          publicationStatus: unpublished\n          hasUnpublishedChanges: false\n          sourceCatalogId: 213678\n          periodUpdate: Ежедневно\n          dateNextUpdate: \"24.07.2024\"\n          userPrivileges:\n            canView : true\n            canExport : true\n            canEditMeta : true\n            canPubl : true\n\n    PublicationCatalogSettingsRequest:\n      value:\n        generalInfo:\n          fillingCatalogId: 8456\n          fullName: Нестационарные торговые объекты по реализации печатной продукции\n          technicalName: Нестационарные торговые объекты по реализации печатной продукции\n          shortName: Нестационарные торговые объекты по реализации печатной продукции\n          kindCatalogId: 8\n          typeCatalogId: 1\n          identNumber: 7541218-Nestacionarnye-torgovye-objecty\n          thematicCategoryId: 16\n          # objectCategoriesIds: [22900]\n          oivsIds: [13478]\n          accountingObject: Нестационарные торговые объекты по реализации печатной продукции, расположенные в пределах установленных границ города Москвы.\n          keywords: киоск, киоски, пресс-стенд, пресс-стенды, газетный киоск, газетные киоски, печать, печатная продукция, реализация, нестационарный торговый объект\n          systemsConsumersIds: [10, 28]\n          isShowDeleteObjects: true\n          hasEnglishVersion: false\n          fullNameEn: null\n          shortNameEn: null\n          accountingObjectEn: null\n          keywordsEn: null\n          syncedPropertiesTagIds:\n            - accountingObject\n            - keywords\n          defaultPriority: 5\n        periodUpdate:\n          tagId: numDays\n          numDays: 50\n        attributes:\n          - attrId: 1\n            selectedAlterNameId: null\n            order: 1\n            isMain: false\n          - attrId: 34\n            selectedAlterNameId: null\n            order: 2\n            isMain: false\n          - attrId: 98\n            selectedAlterNameId: null\n            order: 3\n            isMain: false\n          - attrId: 198\n            selectedAlterNameId: 12\n            order: 4\n            isMain: false\n          - attrId: 54\n            selectedAlterNameId: null\n            order: 5\n            isMain: false\n          - attrId: 84325\n            selectedAlterNameId: null\n            order: 6\n            isMain: false\n          - attrId: 3892\n            selectedAlterNameId: null\n            order: 7\n            isMain: false\n            defaultColDictTechName: NAME\n          - attrId: 348\n            selectedAlterNameId: null\n            order: 8\n            isMain: false\n            refCatalogId: 194700\n          - attrId: 10\n            selectedAlterNameId: null\n            order: 9\n            isMain: false\n            childCatalogId: 194701\n            attributes:\n              - attrId: 12\n                selectedAlterNameId: null\n                order: 1\n                isMain: false\n        meta:\n          respPersonFIO: Иванов Иван Иванович\n          respPersonEmail: ivanov@mail.ru\n          respPersonPhone: +79876543210\n          description: Описание каталога публикации\n          syncedPropertiesTagIds:\n            - description\n            - respPersonPhone\n            - respPersonEmail\n        systemPublicationSettings:\n          - systemId: 34\n            catalogRusName: Нестационарные торговые объекты по реализации печатной продукции\n            catalogEnName: null\n            catalogRusShortName: Нестационарные торговые объекты по реализации печатной продукции\n            catalogEnShortName: null\n            catalogTechName: Нестационарные торговые объекты по реализации печатной продукции\n            attributeSettings:\n              - attrId: 1\n                order: 1\n                isVisible: true\n                isMain: false\n                systemAttributeId: 2\n                attributeGroupId: 3\n              - attrId: 2\n                order: 2\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 3\n                order: 3\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 4\n                order: 4\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 5\n                order: 5\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 6\n                order: 6\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 7\n                order: 7\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 8\n                order: 8\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 10\n                order: 9\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                childCatalogId: 194701\n                attributes:\n                  - attrId: 12\n                    order: 1\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -1\n                    order: 2\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -2\n                    order: 3\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -7\n                    order: 4\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -3\n                    order: 5\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n              - attrId: -1\n                order: 10\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: -2\n                order: 11\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: -7\n                order: 12\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: -12\n                order: 13\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n          - systemId: 2\n            catalogRusName: Нестационарные торговые объекты по реализации печатной продукции\n            catalogEnName: null\n            catalogRusShortName: Нестационарные торговые объекты по реализации печатной продукции\n            catalogEnShortName: null\n            catalogTechName: Нестационарные торговые объекты по реализации печатной продукции\n            titleSn: Нестационарные торговые объекты\n            descriptionSn: Нестационарные торговые объекты\n            seasonalityTagId: 1\n            tags: null\n            sefUrl: data.mos.ru/dataset/nestacionarnye-torgovye-objekty\n            polygonsSortingTagId: null\n            isClusteredByDistrict: false\n            isIsoIndicatorsDataset: false\n            isAvailableDataset: false\n            forumLink: null\n            dictTypeTagId: regular\n            attributeSettings:\n              - attrId: 1\n                order: 1\n                isVisible: true\n                isMain: false\n                systemAttributeId: 2\n                attributeGroupId: 3\n                isDefaultVisible: true\n              - attrId: 2\n                order: 2\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 3\n                order: 3\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 4\n                order: 4\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 5\n                order: 5\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 6\n                order: 6\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 7\n                order: 7\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 8\n                order: 8\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n              - attrId: 10\n                order: 9\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                isDefaultVisible: true\n                childCatalogId: 194701\n                attributes:\n                  - attrId: 12\n                    order: 1\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    isDefaultVisible: true\n                    attributeGroupId: null\n                  - attrId: -1\n                    order: 2\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    isDefaultVisible: true\n                    attributeGroupId: null\n                  - attrId: -2\n                    order: 3\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    isDefaultVisible: true\n                    attributeGroupId: null\n                  - attrId: -7\n                    order: 4\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    isDefaultVisible: true\n                    attributeGroupId: null\n                  - attrId: -3\n                    order: 5\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    isDefaultVisible: true\n                    attributeGroupId: null\n              - attrId: -1\n                order: 10\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                isDefaultVisible: true\n                attributeGroupId: null\n              - attrId: -2\n                order: 11\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                isDefaultVisible: true\n                attributeGroupId: null\n              - attrId: -7\n                order: 12\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                isDefaultVisible: true\n                attributeGroupId: null\n              - attrId: -12\n                order: 13\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                isDefaultVisible: true\n                attributeGroupId: null\n          - systemId: 198\n            catalogRusName: Нестационарные торговые объекты по реализации печатной продукции\n            catalogEnName: null\n            catalogRusShortName: Нестационарные торговые объекты по реализации печатной продукции\n            catalogEnShortName: null\n            catalogTechName: Нестационарные торговые объекты по реализации печатной продукции\n            rubricatorId: 7\n            attributeSettings:\n              - attrId: 1\n                order: 1\n                isVisible: true\n                isMain: false\n                systemAttributeId: 2\n                attributeGroupId: 3\n              - attrId: 2\n                order: 2\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 3\n                order: 3\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 4\n                order: 4\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 5\n                order: 5\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 6\n                order: 6\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 7\n                order: 7\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 8\n                order: 8\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: 10\n                order: 9\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n                childCatalogId: 194701\n                attributes:\n                  - attrId: 12\n                    order: 1\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -1\n                    order: 2\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -2\n                    order: 3\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -7\n                    order: 4\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n                  - attrId: -3\n                    order: 5\n                    isVisible: true\n                    isMain: false\n                    systemAttributeId: null\n                    attributeGroupId: null\n              - attrId: -1\n                order: 10\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: -2\n                order: 11\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: -7\n                order: 12\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n              - attrId: -12\n                order: 13\n                isVisible: true\n                isMain: false\n                systemAttributeId: null\n                attributeGroupId: null\n        sortings:\n          - attrId: 6\n            sortingOrder: asc\n          - attrId: 1\n            sortingOrder: desc\n        publicationConditions: \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n        map:\n          hasGeo: true\n          typeGeoTagIds:\n            - Point\n            - MultiLineString\n            - MultiPolygon\n          syncedPropertiesTagIds:\n            - hasGeo\n            - typeGeoTagIds\n\n    PublicationCatalogNotUniqueNameError:\n      description: |-\n        Неуникальная комбинация наименований каталога публикации.\n        Проверка должна производится среди активных корневых каталогов.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: |-\n          Каталог публикации с такой комбинацией полного и технологического наименования уже существует.\n          Комбинация полей fullName, technicalName должна быть уникальна.\n\n    WrongObjectCategoryForFillingCatalogError:\n      description: |-\n        Передан id категории объектов, которого нет в каталоге заполнения.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Категория объектов {objectCategoryId} не соответствует переданному каталогу заполнения {fillingCatalogId}.\n\n    PublicationConditionsValidationError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Условие ограничения выборки не прошло валидацию.\n\n    IdentNumberFormatError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: В идентификационном номере могут использоваться только латинские буквы, цифры и дефисы.\n\n    SefUrlFormatError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: В SEF URL могут использоваться только латинские буквы, цифры и дефисы.\n\n    PublicationSettingsSystemAttributeShouldBeVisibleError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Системный атрибут {global_id / Признак удаления} в настройках публикации должен быть видимым. Значение поля isVisible должно быть true.\n\n    SyncedPropertyChangedError:\n      description: |-\n        Попытка изменить настройку каталога публикации, которая входит в список синхронизируемых.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Нельзя изменить параметр {syncedPropertyName}, так как он входит в список синхронизируемых с каталогом заполнения.\n\n    FillingCatalogChangedError:\n      description: |-\n        Попытка изменить каталог заполнения, с которым связан каталог публикации.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Нельзя изменить связанный каталог заполнения.\n\n    ObjectCategoryChangedError:\n      description: |-\n        Попытка изменить категорию объектов в каталоге публикации.\n      value:\n        code: 400\n        messageType: Resource cannot be edited\n        message: Нельзя изменить категорию объектов.\n\n    PublicationCatalogGeneralInfoResponse:\n      description: Пример ответа с общей информацией каталога публикации\n      value:\n        id: 29697\n        fillingCatalogId: 8456\n        fullName: Нестационарные торговые объекты по реализации печатной продукции\n        technicalName: Нестационарные торговые объекты по реализации печатной продукции\n        shortName: Нестационарные торговые объекты по реализации печатной продукции\n        kindCatalog:\n          id: 8\n          name: Перечень\n        typeCatalog:\n          id: 1\n          name: Городской межотраслевой (межведомственный)\n        thematicCategory:\n          - id: 16\n            rusName: Торговля\n        objectCategories:\n          - id: 22900\n            rusName: НТО по реализации печатной продукции\n        oivs:\n          - id: 13478\n            name: Департамент средств массовой информации и рекламы города Москвы\n        accountingObject: Нестационарные торговые объекты по реализации печатной продукции, расположенные в пределах установленных границ города Москвы.\n        keywords: киоск, киоски, пресс-стенд, пресс-стенды, газетный киоск, газетные киоски, печать, печатная продукция, реализация, нестационарный торговый объект\n        systemsConsumers:\n          - id: 10\n            name: АИС ГИН\n          - id: 28\n            name: Цифровой двойник\n        isShowDeleteObjects: true\n        hasEnglishVersion: false\n        fullNameEn: null\n        shortNameEn: null\n        accountingObjectEn: null\n        keywordsEn: null\n        identNumber: 7541218-Nestacionarnye-torgovye-objecty\n        syncedProperties:\n          - tagId: accountingObject\n            name: Объект учета\n          - tagId: keywords\n            name: Ключевые слова\n        periodUpdate:\n          tagId: numDays\n          name: Настраиваемая (Произвольный срок)\n          numDays: 50\n        defaultPriority: 5\n\n    # DuplicateCatalogInfoResponse:\n    #   value:\n    #     generalInfo:\n    #       id: -1\n    #       fillingCatalogId: 6404\n    #       fullName: Нестационарные торговые объекты по реализации печатной продукции\n    #       technicalName: Нестационарные торговые объекты по реализации печатной продукции\n    #       shortName: Нестационарные торговые объекты по реализации печатной продукции\n    #       kindCatalog:\n    #         id: 8\n    #         name: Перечень\n    #       typeCatalog:\n    #         id: 1\n    #         name: Городской межотраслевой (межведомственный)\n    #       thematicCategory:\n    #         - id: 16\n    #           rusName: Торговля\n    #       objectCategories:\n    #         - id: 22900\n    #           rusName: НТО по реализации печатной продукции\n    #       oivs:\n    #         - id: 13478\n    #           name: Департамент средств массовой информации и рекламы города Москвы\n    #       accountingObject: Нестационарные торговые объекты по реализации печатной продукции, расположенные в пределах установленных границ города Москвы.\n    #       keywords: киоск, киоски, пресс-стенд, пресс-стенды, газетный киоск, газетные киоски, печать, печатная продукция, реализация, нестационарный торговый объект\n    #       systemsConsumers:\n    #         - id: 10\n    #           name: АИС ГИН\n    #         - id: 28\n    #           name: Цифровой двойник\n    #       isShowDeleteObjects: true\n    #       hasEnglishVersion: false\n    #       fullNameEn: null\n    #       shortNameEn: null\n    #       accountingObjectEn: null\n    #       keywordsEn: null\n    #       identNumber: 7541218-Nestacionarnye-torgovye-objecty\n    #       syncedProperties:\n    #         - tagId: accountingObject\n    #           name: Объект учета\n    #         - tagId: keywords\n    #           name: Ключевые слова\n    #         - tagId: thematicCategoryId\n    #           name: Тематическая категория\n    #         - tagId: periodUpdate\n    #           name: Периодичность обновления\n    #         - tagId: kindCatalogId\n    #           name: Вид каталога\n    #         - tagId: typeCatalogId\n    #           name: Тип каталога\n    #         - tagId: oivsIds\n    #           name: Поставщики информации\n    #       periodUpdate:\n    #         tagId: numDays\n    #         name: Настраиваемая (Произвольный срок)\n    #         numDays: 50\n    #       defaultPriority: 5\n    #     attributes:\n    #       - attribute:\n    #           id: 1\n    #           techName: name\n    #           rusName: Наименование\n    #           enName: Name\n    #           type:\n    #             id: 1\n    #             name: Строка\n    #             typeTag: string\n    #           description: Имя\n    #         catalogAttrId: -1\n    #         selectedAlterNameId: null\n    #         order: 1\n    #         isMain: false\n    #       - attribute:\n    #           id: 34\n    #           techName: age\n    #           rusName: Возраст\n    #           enName: Age\n    #           type:\n    #             id: 9\n    #             name: Целое число\n    #             typeTag: integer\n    #           description: Возраст\n    #         catalogAttrId: -2\n    #         selectedAlterNameId: null\n    #         order: 2\n    #         isMain: false\n    #       - attribute:\n    #           id: 98\n    #           techName: price\n    #           rusName: Цена\n    #           enName: Price\n    #           type:\n    #             id: 9\n    #             name: Дробное число\n    #             typeTag: float\n    #           description: Цена\n    #         catalogAttrId: -3\n    #         selectedAlterNameId: null\n    #         order: 3\n    #         isMain: false\n    #       - attribute:\n    #           id: 198\n    #           techName: birthday\n    #           rusName: Дата рождения\n    #           enName: Birthday\n    #           type:\n    #             id: 3\n    #             name: Дата\n    #             typeTag: date\n    #           description: Дата рождения\n    #           alterNames:\n    #           - id: 12\n    #             rusAlterName: День рождения\n    #             enAlterName: Birthday\n    #         catalogAttrId: -4\n    #         selectedAlterNameId: 12\n    #         order: 4\n    #         isMain: false\n    #       - attribute:\n    #           id: 54\n    #           techName: goodman\n    #           rusName: Хороший человек\n    #           enName: Good man\n    #           type:\n    #             id: 7\n    #             name: Флаг\n    #             typeTag: boolean\n    #           description: Признак, что человек хороший\n    #         catalogAttrId: -5\n    #         selectedAlterNameId: null\n    #         order: 5\n    #         isMain: false\n    #       - attribute:\n    #           id: 84325\n    #           techName: photo\n    #           rusName: Фото\n    #           enName: Photo\n    #           type:\n    #             id: 6\n    #             name: Файл\n    #             typeTag: file\n    #           description: Фото\n    #         catalogAttrId: -6\n    #         selectedAlterNameId: null\n    #         order: 6\n    #         isMain: false\n    #       - attribute:\n    #           id: 3892\n    #           techName: characteristic\n    #           rusName: Характеристика\n    #           enName: Characteristic\n    #           type:\n    #             id: 4\n    #             name: Справочник\n    #             typeTag: dict\n    #           description: null\n    #           dictionary:\n    #             id: 123\n    #             name: Характеристики человека\n    #             parentId: 122\n    #         catalogAttrId: -7\n    #         selectedAlterNameId: null\n    #         order: 7\n    #         isMain: false\n    #         defaultColDict:\n    #           techName: NAME\n    #           rusName: Наименование\n    #       - attribute:\n    #           id: 348\n    #           techName: friend\n    #           rusName: Друг\n    #           enName: Friend\n    #           type:\n    #             id: 8\n    #             name: Ссылка на объект\n    #             typeTag: link\n    #           description: null\n    #         catalogAttrId: -8\n    #         selectedAlterNameId: null\n    #         order: 8\n    #         isMain: false\n    #         refCatalog: {}\n    #       - attribute:\n    #           id: 10\n    #           techName: education\n    #           rusName: Образование\n    #           enName: Education\n    #           type:\n    #             id: 5\n    #             name: Таблица\n    #             typeTag: table\n    #           description: null\n    #         catalogAttrId: -9\n    #         selectedAlterNameId: null\n    #         order: 9\n    #         isMain: false\n    #         childCatalogId: -1\n    #         attributes:\n    #           - attribute:\n    #               id: 12\n    #               techName: institution\n    #               rusName: Учебное заведение\n    #               enName: Institution\n    #               type:\n    #                 id: 1\n    #                 name: Строка\n    #                 typeTag: string\n    #               description: Имя\n    #             selectedAlterNameId: null\n    #             catalogAttrId: -10\n    #             order: 1\n    #             isMain: false\n    #     meta:\n    #       respPersonFIO: Иванов Иван Иванович\n    #       respPersonEmail: ivanov@mail.ru\n    #       respPersonPhone: +79876543210\n    #       description: Описание каталога заполнения\n    #       syncedProperties:\n    #         - tagId: description\n    #           name: Описание каталога\n    #         - tagId: respPersonEmail\n    #           name: Email ответственного\n    #         - tagId: respPersonPhone\n    #           name: ФИО ответственного\n    #         - tagId: respPersonFIO\n    #           name: Телефон ответственного\n\n    PublicationCatalogAttributesResponse:\n      description: Пример ответа с атрибутами каталога публикации\n      value:\n        - attribute:\n            id: 1\n            techName: name\n            rusName: Наименование\n            enName: Name\n            type:\n              id: 1\n              name: Строка\n              typeTag: string\n            description: Имя\n          catalogAttrId: 190\n          selectedAlterNameId: null\n          order: 1\n          isMain: false\n          maxLength: 100\n          rown: \"12.6265791785946940419871855171236118985E37\"\n        - attribute:\n            id: 34\n            techName: age\n            rusName: Возраст\n            enName: Age\n            type:\n              id: 9\n              name: Целое число\n              typeTag: integer\n            description: Возраст\n          catalogAttrId: 191\n          selectedAlterNameId: null\n          order: 2\n          isMain: false\n          maxLength: 3\n          rown: \"12.6265791785946940419879897474386118985E37\"\n        - attribute:\n            id: 98\n            techName: price\n            rusName: Цена\n            enName: Price\n            type:\n              id: 9\n              name: Дробное число\n              typeTag: float\n            description: Цена\n          catalogAttrId: 192\n          selectedAlterNameId: null\n          order: 3\n          isMain: false\n          maxLength: 20\n          rown: \"12.6265791785946940419871837674386118985E37\"\n        - attribute:\n            id: 198\n            techName: birthday\n            rusName: Дата рождения\n            enName: Birthday\n            type:\n              id: 3\n              name: Дата\n              typeTag: date\n            description: Дата рождения\n            alterNames:\n            - id: 12\n              rusAlterName: День рождения\n              enAlterName: Birthday\n          catalogAttrId: 193\n          selectedAlterNameId: 12\n          order: 4\n          isMain: false\n          maxLength: 4000\n          rown: \"12.6265791785946940419874785174386118985E37\"\n        - attribute:\n            id: 54\n            techName: goodman\n            rusName: Хороший человек\n            enName: Good man\n            type:\n              id: 7\n              name: Флаг\n              typeTag: boolean\n            description: Признак, что человек хороший\n          catalogAttrId: 194\n          selectedAlterNameId: null\n          order: 5\n          isMain: false\n          maxLength: 4000\n          rown: \"12.6265791785946940419871855574386118985E37\"\n        - attribute:\n            id: 84325\n            techName: photo\n            rusName: Фото\n            enName: Photo\n            type:\n              id: 6\n              name: Файл\n              typeTag: file\n            description: Фото\n          catalogAttrId: 196\n          selectedAlterNameId: null\n          order: 6\n          isMain: false\n          maxLength: 4000\n          rown: \"12.6265791785946940419871855345386118985E37\"\n        - attribute:\n            id: 3892\n            techName: characteristic\n            rusName: Характеристика\n            enName: Characteristic\n            type:\n              id: 4\n              name: Справочник\n              typeTag: dict\n            description: null\n            dictionary:\n              id: 123\n              name: Характеристики человека\n              parentId: 122\n          catalogAttrId: 197\n          selectedAlterNameId: null\n          order: 7\n          isMain: false\n          defaultColDict:\n            techName: NAME\n            rusName: Наименование\n          maxLength: 4000\n          rown: \"12.6265791785946941234987185517438611895E37\"\n        - attribute:\n            id: 348\n            techName: friend\n            rusName: Друг\n            enName: Friend\n            type:\n              id: 8\n              name: Ссылка на объект\n              typeTag: link\n            description: null\n          catalogAttrId: 198\n          selectedAlterNameId: null\n          order: 8\n          isMain: false\n          refCatalog:\n            id: 194700\n            name: Персоны\n            mainAttrId: 361\n          maxLength: 4000\n          rown: \"12.6265791785946912319871855174386118985E37\"\n        - attribute:\n            id: 10\n            techName: education\n            rusName: Образование\n            enName: Education\n            type:\n              id: 5\n              name: Таблица\n              typeTag: table\n            description: null\n          catalogAttrId: 199\n          selectedAlterNameId: null\n          order: 9\n          isMain: false\n          childCatalogId: 194701\n          maxLength: 4000\n          rown: \"12.6265791785946940419871855174386112385E37\"\n          attributes:\n            - attribute:\n                id: 12\n                techName: institution\n                rusName: Учебное заведение\n                enName: Institution\n                type:\n                  id: 1\n                  name: Строка\n                  typeTag: string\n                description: Имя\n              selectedAlterNameId: null\n              catalogAttrId: 201\n              order: 1\n              isMain: false\n              maxLength: 200\n              rown: \"12.6265791785946940419871855174386118384E37\"\n\n    PublicationCatalogMetadataRequest:\n      value:\n        respPersonFIO: Иванов Иван Иванович\n        respPersonEmail: ivanov@mail.ru\n        respPersonPhone: \"+79876543210\"\n        description: Описание каталога публикации\n\n    PublicationCatalogMetadataResponse:\n      description: Пример ответа с метаданными каталога публикации\n      value:\n        respPersonFIO: Иванов Иван Иванович\n        respPersonEmail: ivanov@mail.ru\n        respPersonPhone: \"+79876543210\"\n        description: Описание каталога публикации\n        syncedProperties:\n          - tagId: description\n            name: Описание каталога\n          - tagId: respPersonEmail\n            name: Email ответственного\n          - tagId: respPersonPhone\n            name: Телефон ответственного\n\n    PublicationCatalogSystemPublicationSettingsResponse:\n      description: Пример ответа с настройками публикации каталога публикации\n      value:\n        - systemId: 34\n          catalogRusName: Нестационарные торговые объекты по реализации печатной продукции\n          catalogEnName: null\n          catalogRusShortName: Нестационарные торговые объекты по реализации печатной продукции\n          catalogEnShortName: null\n          catalogTechName: Нестационарные торговые объекты по реализации печатной продукции\n          attributeSettings:\n            - attrId: 1\n              order: 1\n              isVisible: true\n              isMain: false\n              systemAttributeId: 2\n              attributeGroupId: 3\n            - attrId: 2\n              order: 2\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 3\n              order: 3\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 4\n              order: 4\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 5\n              order: 5\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 6\n              order: 6\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 7\n              order: 7\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 8\n              order: 8\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 10\n              order: 9\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              childCatalogId: 194701\n              attributes:\n                - attrId: 12\n                  order: 1\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -1\n                  order: 2\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -2\n                  order: 3\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -7\n                  order: 4\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -3\n                  order: 5\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n            - attrId: -1\n              order: 10\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: -2\n              order: 11\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: -7\n              order: 12\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: -12\n              order: 13\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n        - systemId: 2\n          catalogRusName: Нестационарные торговые объекты по реализации печатной продукции\n          catalogEnName: null\n          catalogRusShortName: Нестационарные торговые объекты по реализации печатной продукции\n          catalogEnShortName: null\n          catalogTechName: Нестационарные торговые объекты по реализации печатной продукции\n          titleSn: Нестационарные торговые объекты\n          descriptionSn: Нестационарные торговые объекты\n          seasonalityTagId: 1\n          tags: null\n          sefUrl: data.mos.ru/dataset/nestacionarnye-torgovye-objekty\n          polygonsSortingTagId: null\n          isClusteredByDistrict: false\n          isIsoIndicatorsDataset: false\n          isAvailableDataset: false\n          forumLink: null\n          dictTypeTagId: regular\n          attributeSettings:\n            - attrId: 1\n              order: 1\n              isVisible: true\n              isMain: false\n              systemAttributeId: 2\n              attributeGroupId: 3\n              isDefaultVisible: true\n            - attrId: 2\n              order: 2\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 3\n              order: 3\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 4\n              order: 4\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 5\n              order: 5\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 6\n              order: 6\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 7\n              order: 7\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 8\n              order: 8\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n            - attrId: 10\n              order: 9\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              isDefaultVisible: true\n              childCatalogId: 194701\n              attributes:\n                - attrId: 12\n                  order: 1\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  isDefaultVisible: true\n                  attributeGroupId: null\n                - attrId: -1\n                  order: 2\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  isDefaultVisible: true\n                  attributeGroupId: null\n                - attrId: -2\n                  order: 3\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  isDefaultVisible: true\n                  attributeGroupId: null\n                - attrId: -7\n                  order: 4\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  isDefaultVisible: true\n                  attributeGroupId: null\n                - attrId: -3\n                  order: 5\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  isDefaultVisible: true\n                  attributeGroupId: null\n            - attrId: -1\n              order: 10\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              isDefaultVisible: true\n              attributeGroupId: null\n            - attrId: -2\n              order: 11\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              isDefaultVisible: true\n              attributeGroupId: null\n            - attrId: -7\n              order: 12\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              isDefaultVisible: true\n              attributeGroupId: null\n            - attrId: -12\n              order: 13\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              isDefaultVisible: true\n              attributeGroupId: null\n        - systemId: 198\n          catalogRusName: Нестационарные торговые объекты по реализации печатной продукции\n          catalogEnName: null\n          catalogRusShortName: Нестационарные торговые объекты по реализации печатной продукции\n          catalogEnShortName: null\n          catalogTechName: Нестационарные торговые объекты по реализации печатной продукции\n          rubricatorId: 7\n          attributeSettings:\n            - attrId: 1\n              order: 1\n              isVisible: true\n              isMain: false\n              systemAttributeId: 2\n              attributeGroupId: 3\n            - attrId: 2\n              order: 2\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 3\n              order: 3\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 4\n              order: 4\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 5\n              order: 5\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 6\n              order: 6\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 7\n              order: 7\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 8\n              order: 8\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: 10\n              order: 9\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n              childCatalogId: 194701\n              attributes:\n                - attrId: 12\n                  order: 1\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -1\n                  order: 2\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -2\n                  order: 3\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -7\n                  order: 4\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n                - attrId: -3\n                  order: 5\n                  isVisible: true\n                  isMain: false\n                  systemAttributeId: null\n                  attributeGroupId: null\n            - attrId: -1\n              order: 10\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: -2\n              order: 11\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: -7\n              order: 12\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n            - attrId: -12\n              order: 13\n              isVisible: true\n              isMain: false\n              systemAttributeId: null\n              attributeGroupId: null\n\n    PublicationCatalogSortingsResponse:\n      description: Пример ответа с настройками сортировки каталога публикации\n      value:\n        - attrId: 6\n          sortingOrder: asc\n        - attrId: 1\n          sortingOrder: desc\n\n    PublicationCatalogConditionsResponse:\n      description: Пример ответа с условиями ограничения выборки каталога публикации\n      value: \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n\n    PublicationCatalogSystemAccessResponse:\n      description: Пример ответа с информацией о доступе систем к каталогу публикации\n      value:\n        - id: 2\n          name: Портал открытых данных\n          access: true\n        - id: 72\n          name: yandex\n          access: false\n\n    PublicationCatalogMapResponse:\n      value:\n        hasGeo: true\n        typeGeoTagIds:\n          - Point\n          - MultiLineString\n          - MultiPolygon\n        syncedProperties:\n          - tagId: hasGeo\n            name: Наличие геопривязки\n          - tagId: typeGeoTagIds\n            name: Тип геометрии\n\n\n    OkPublicationConditionsValidateResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Настройки описаны корректно!\n\n    AttributeNotFoundInFillingCatalogError:\n      description: |-\n        Указанный атрибут не найден в связанном каталоге заполнения.\n      value:\n        code: 404\n        messageType: Resource not found\n        message:\n          Атрибута с идентификатором {attrId} нет в каталоге {catalogId}.\n\n    SystemNotFoundInPublicationCatalogError:\n      description: |-\n        Указанная в настройках публикации система не добавлена в каталог публикации.\n      value:\n        code: 404\n        messageType: Resource not found\n        message:\n          Системы с идентификатором {systemId} нет в данном каталоге.\n\n    PublicationCatalogNotFoundError:\n      description: |-\n        Указанный каталог публикации не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Каталога публикации с идентификатором {catalogId} не существует.\n\n    PublicationCatalogVersionNotFoundError:\n      description: |-\n        Указанная версия каталога публикации не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Каталога публикации версии {version} не существует.\n\n    RubricatorNotFoundError:\n      description: |-\n        Указанный рубрикатор не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Рубрикатора с идентификатором {rubricatorId} не существует.\n\n    PublicationCatalogStatusChangedResponse:\n      description: |-\n        Статус каталога публикации успешно изменен.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Статус каталога публикации успешно изменен на {'Не опубликован'/'Публикуется вручную'/'Публикуется автоматически'/'Архивный'}.\n\n    PublicationCatalogStatusChangedWithPublicationCancelledResponse:\n      description: |-\n        Статус каталога публикации успешно изменен.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Статус каталога публикации успешно изменен на {'Не опубликован'/'Архивный'}.\n\n    PublicationCatalogStatusChangedWithPublicationStartResponse:\n      description: |-\n        Статус каталога публикации успешно изменен.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Статус каталога публикации успешно изменен на {'Публикуется автоматически'/'Публикуется вручную'}.\n          Процесс публикации объектов запущен.\n\n    PublicationCatalogAccessChangedResponse:\n      description: |-\n        Доступ систем к каталогу публикации успешно изменен.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Доступ систем к каталогу публикации успешно изменен.\n\n    PublicationCatalogStartResponse:\n      description: |-\n        Публикация каталога запущена.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Публикация каталога запущена.\n\n    PublicationCannotBeStartedResponse:\n      description: |-\n        Публикация каталога не запущена, так как каталог находится в статусе, который не предусмотривает отдельный запуск процесса.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Публикация не может быть запущена. Каталог должен находиться в статусе \"Публикуется вручную\".\n\n    CatalogIsAlreadyBeingPublishedResponse:\n      description: |-\n        Публикация каталога не запущена, так как каталог уже находится в процессе публикации.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Каталог уже находится в процессе публикации.\n\n    PublicationAttributeChangeRequest:\n      description: Пример запроса с изменением атрибута публикации\n      value:\n        id: 6123\n        newRusName: Федеральный округ\n        newEnName: Federal area\n        newTechName: fed_area\n        alterNameChanges:\n            - id: 41431\n              newRusName: округ\n              newEnName: area\n            - id: 41432\n              newRusName: Фед. округ\n              newEnName: Fed Area\n        deletedAlterNameIds: [41433, 41434]\n\n    PublicationCatalogVersionNotCreatedResponse:\n      description: Пример ответа, когда при создании новой версии каталога публикации, этого не требуются.\n      value:\n        code: 200\n        messageType: Ok\n        message: Создание новых версий каталогов не требуются, так как изменение атрибута не влияет на настройки каталогов.\n\n    PublicationCatalogVersionCreatedResponse:\n      description: Пример ответа при создании новой версии каталога публикации.\n      value:\n        code: 201\n        messageType: Created\n        message: Новые версии успешно созданы для каталогов {catalogIds}. Версии не созданы для каталогов {catalogIds}, так как изменение атрибута для этих каталогов не влияет на настройки каталогов.\n\n    PublicationCatalogSyncChangeRequest:\n      description: Пример запроса с изменением настроек каталога публикации\n      value:\n        maxLengthChanges:\n          - attrId: 213\n            newValue: 30\n            childCatalogId: 124367\n          - attrId: 215\n            newValue: 31\n        syncedPropertyChanges:\n          - tagId: kindCatalogId\n            newValue: 3\n          - attrId: thematicCategoryId\n            newValue: 455\n          - tagId: accountingObject\n            newValue: Больницы\n          - tagId: hasGeo\n            newValue: false\n\n    PublicationCatalogSettingsNotSyncedResponse:\n      description: Пример ответа, когда при изменение синхронизируемых параметров не требуется.\n      value:\n        code: 200\n        messageType: Ok\n        message: Изменение настроек каталогов не требуется, так как переданные поля не входят в список синхронизируемых для переданных каталогов.\n\n    PublicationCatalogSettingsSyncedResponse:\n      description: Пример ответа при создании новой версии каталога публикации.\n      value:\n        code: 200\n        messageType: Ok\n        message: Настройки успешно изменены для каталогов {catalogIds}.\n\n    DifferentFillingCatalogsErrorResponse:\n      description: Попытка изменения каталогов публикации, связанных с разными каталогами заполнения.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Нельзя применить метод для каталогов, связанных с разными каталогами заполнения.\n\n    NoMaxLentghFieldErrorResponse:\n      description: У изменяемого атрибута нет свойства `maxLength`.\n      value:\n        code: 400\n        messageType: Bad request\n        message: У атрибута {attrId} нет свойства maxLength.\n\n    PublicationCatalogMissingMapFieldsError:\n      description: Проверяется, чтобы передавалось свойство typeGeoTagIds, если hasGeo = true\n      value:\n        code: 400\n        messageType: Missing request body fields\n        message: При наличии гепривязки должно быть заполнено поле typeGeoTagIds.\n\n    PublicationCatalogReleasesSearchRequestBody:\n      description: Пример тела запроса поиска по списку релизов с фильтрами.\n      value:\n        filters:\n          - attribute: 'createDate'\n            operator: 'greaterThan'\n            value: '16.09.2024'\n\n    PublicationCatalogReleaseCreatedResponse:\n      description: Пример ответа при успешном создании релиза.\n      value:\n        id: 10941\n        code: 201\n        messageType: Created\n        message: Релиз успешно создан!\n\n    PublicationCatalogReleaseNotFoundDataErrorResponse:\n      description: |-\n        Пример ответа, если не найдены опубликованные объекты для формирования релиза.\n      value:\n        code: 404\n        messageType: Data not found\n        message: >\n          Релиз не может быть сформирован, так как не найдены опубликованные версии объектов данного каталога публикации.\n\n    PublicationCatalogVersionArrayResponse:\n      description: |-\n        Пример ответа со списком версий каталога публикации.\n      value:\n        - versionNum: 2\n          dateFrom: 01.06.2024 13:45:00\n          dateUntil: 01.01.2999 00:00:00\n        - versionNum: 1\n          dateFrom: 01.01.2024 11:10:00\n          dateUntil: 01.06.2024 13:45:00\n\n    PublicationCatalogCatalogsSearchRequest:\n      description: Пример тела запроса для поиска по списку каталогов, в которых используется каталог публикации\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    PublicationCatalogCatalogsAttributesInfoArrayResponse:\n      description: Пример ответа из массива каталогов и атрибутов, в которых используется каталог\n      value:\n        - id: 1234\n          fullName: Каталог сотрудников\n          attributeId: 34081\n          attributeName: Номер телефона\n        - id: 76\n          fullName: Тоннели\n          attributeId: 4363\n          attributeName: Категория\n\n    PublicationCatalogSettingsChangeRequest:\n      description: Пример запроса с настройками каталога публикации для проверки запуска перепубликации\n      value:\n        attributes:\n          - attrId: 1\n            selectedAlterNameId: null\n            order: 1\n            isMain: false\n          - attrId: 3892\n            selectedAlterNameId: null\n            order: 2\n            isMain: false\n            defaultColDictTechName: NAME\n          - attrId: 348\n            selectedAlterNameId: null\n            order: 3\n            isMain: false\n            refCatalogId: 194700\n          - attrId: 10\n            selectedAlterNameId: null\n            order: 4\n            isMain: false\n            childCatalogId: 194701\n            attributes:\n              - attrId: 12\n                selectedAlterNameId: null\n                order: 1\n                isMain: false\n        conditions: \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n        map:\n          hasGeo: true\n          typeGeoTagIds:\n            - Point\n            - MultiLineString\n            - MultiPolygon\n          syncedProperties:\n            - tagId: hasGeo\n              name: Наличие геопривязки\n            - tagId: typeGeoTagIds\n              name: Тип геометрии\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с группами каталогов\n  version: 1.0.0\n\n\npaths:\n\n  /catalogGroups/search:\n    post:\n      tags:\n        - catalogGroups\n      summary: Получение списка групп каталогов\n      description: Возвращает список групп каталогов\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых групп каталогов (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке групп каталогов. Поиск производится по атрибутам `id` и `name`. Запрос со значением `12` вернет все Группы каталогов, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `name`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - $ref: '#/components/parameters/userIdQueryParam'\n      requestBody:\n        description: Пример тела запроса для поиска по списку групп каталогов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            type: string\n                            enum:\n                              - id\n                              - name\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGroupListRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogGroupListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /catalogGroups:\n    get:\n      tags:\n        - catalogGroups\n      summary: Получение групп каталогов по идентификаторам\n      description: |-\n        Возвращает полную информацию о группах каталогов по идентификаторам.\n\n        Если группа каталогов с указанными идентификатором не найден, он не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogGroup'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupArrayResponse'\n\n    post:\n      tags:\n        - catalogGroups\n      summary: Создание группы каталогов\n      description: |-\n        Создает новую группу каталогов\n\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogGroup'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGroupCreateRequest'\n\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupCreatedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Наименование неуникально.\n              - Одновременно выбрано \"Добавлять все новые каталоги\" и \"Добавлять каталоги выбранных ОИВ\".\n              - Не выбраны \"ОИВ\" при выбранном значении \"Добавлять каталоги выбранных ОИВ\".\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Наименование неуникально:\n                  $ref: '#/components/examples/CatalogGroupNotUniqueNameError'\n                Одновременно выбрано \"Добавлять все новые каталоги\" и \"Добавлять каталоги выбранных ОИВ\":\n                  $ref: '#/components/examples/CatalogGroupAtrributeError'\n                Не выбраны \"ОИВ\" при выбранном значении \"Добавлять каталоги выбранных ОИВ\":\n                  $ref: '#/components/examples/CatalogGroupOivEmptyError'\n    delete:\n      tags:\n        - catalogGroups\n      summary: Удаление группы каталогов\n      description: |-\n        Метод используется для удаления групп каталогов, не имеющих связи с пользователями.\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupDeletedResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            Ошибка может быть в параметре, заголовке или полях тела запроса.\n            В зависимости от этого текст ошибки может отличаться.\n\n            ### Возможные ошибки бизнес-логики:\n              - Одна или несколько из переданных группа каталогов используются в настройках пользователей (спецроли и рассылки).\n\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Группа каталогов используется в настройках пользователя (спецроли и рассылки):\n                  $ref: '#/components/examples/CatalogGroupConnectedUserError'\n\n  /catalogGroups/{catalogGroupId}:\n    put:\n      tags:\n        - catalogGroups\n      summary: Изменение данных группы каталогов\n      description: |-\n        Изменение данных группы каталогов\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogGroup'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGroupModifyRequest'\n\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupOkResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Наименование неуникально.\n              - Одновременно выбрано \"Добавлять все новые каталоги\" и \"Добавлять каталоги выбранных ОИВ\".\n              - Не выбраны \"ОИВ\" при выбранном значении \"Добавлять каталоги выбранных ОИВ\".\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/UniqueValueError'\n                  - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Наименование неуникально:\n                  $ref: '#/components/examples/CatalogGroupNotUniqueNameError'\n                Одновременно выбрано \"Добавлять все новые каталоги\" и \"Добавлять каталоги выбранных ОИВ\":\n                  $ref: '#/components/examples/CatalogGroupAtrributeError'\n                Не выбраны \"ОИВ\" при выбранном значении \"Добавлять каталоги выбранных ОИВ\":\n                  $ref: '#/components/examples/CatalogGroupOivEmptyError'\n        '404':\n          $ref: '#/components/responses/CatalogGroupNotFoundResponse'\n\n  /catalogGroups/{catalogGroupId}/catalogs/search:\n    post:\n      tags:\n        - catalogGroups\n      summary: Поиск неудалённых каталогов, связанных с группой каталогов\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения, которые входят в группу.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id` и `fullName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов.\n            Поиск производится по полям `id` и `fullName`.\n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n\n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id` и `fullName`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса для поиска по списку каталогов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            type: string\n                            enum:\n                              - id\n                              - fullName\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogListRequest'\n      responses:\n        '200':\n          description:\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupFillingCatalogListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует группы каталогов с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Не существует группы каталогов с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogGroupNotFoundError'\n\n  /catalogGroups/{catalogGroupId}/catalogs:\n    post:\n      tags:\n        - catalogGroups\n      summary: Добавление каталогов в группу каталогов\n      description: |-\n        Создает связь между группой каталогов и каталогами заполнения\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogGroupCatalogRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGroupCatalogRequest'\n\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupCatalogResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует группы каталогов с указанным идентификатором.\n              - Не существует каталога с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Не существует группы каталогов с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogGroupNotFoundError'\n                Не существует каталога с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogNotFoundError'\n\n    delete:\n      tags:\n        - catalogGroups\n      summary: Удаление каталогов из группы каталогов\n      description: |-\n        Метод используется для удаления каталогов из групп каталогов.\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogGroupCatalogRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGroupCatalogRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogCatalogGroupDeletedResponse'\n        '404':\n          $ref: '#/components/responses/CatalogGroupNotFoundResponse'\n\n  # Связанные сущности группы каталогов\n  /catalogGroups/{catalogGroupId}/userSpecPrivileges/search:\n    post:\n      tags:\n        - catalogGroups\n      summary: Поиск неудалённых пользователей, связанных с группой каталогов через специальные привилегии\n      description: |-\n        Возвращает информацию о пользователях, в специальных привилегиях которых используется группа каталога.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `login` и `userFio` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/catalogGroupIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых пользователей (число от `1` до `200`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку пользователей.\n            Поиск производится по полям `id`, `login` и `userFio`.\n            В ответе будут представлены только те пользователи, в указанных полях которых содержится поисковое значение.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `login` и `userFio`.\n\n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - login\n              - userFio\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        description: Пример тела запроса для поиска по списку пользователей и спецролей\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            type: string\n                            enum:\n                              - id\n                              - login\n                              - userFio\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGroupUserSpecPrivilegesRequest'\n      responses:\n        '200':\n          description: Успешный ответ.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/UserSpecPrivilegeCatalogGroup'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGroupUserSpecPrivilegesListInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/CatalogGroupNotFoundResponse'\n\n\ncomponents:\n\n  schemas:\n\n    CommonCatalogGroupInfo:\n      description: Основная информация группы каталогов\n      type: object\n      properties:\n        id:\n          description: Идентификатор группы каталогов\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование группы каталогов\n          type: string\n      required:\n        - id\n        - name\n\n\n    CatalogGroupListItem:\n      description: Информация о группах каталогов в списке групп каталогов\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogGroupInfo'\n\n\n    CatalogGroup:\n      description: Информация о группах каталогов в списке групп каталогов\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogGroupInfo'\n      properties:\n        addNewCat:\n          description: Добавлять все новые каталоги в группу\n          type: boolean\n        addNewCatOiv:\n          description: Добавлять все каталоги выбранных ОИВ в группу\n          type: boolean\n        oivs:\n          description: Перечень ОИВов, выбранных при addNewCatOiv=true\n          type: array\n          items:\n            $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          readOnly: true\n        oivIds:\n          description: Перечень ОИВов, выбранных при addNewCatOiv=true\n          writeOnly: true\n          type: array\n          items:\n            type: integer\n      required:\n        - addNewCat\n        - addNewCatOiv\n\n    CatalogGroupCatalogRequest:\n      description: Информация о каталогах, добавляемых в группу каталогов (список идентификаторов)\n      type: array\n      items:\n        type: integer\n\n    UserSpecPrivilegeCatalogGroup:\n      description: Информация о пользователе и спецпривилегиях для группы каталогов\n      properties:\n        id:\n          description: Идентификатор пользователя\n          type: integer\n          format: int32\n          readOnly: true\n        login:\n          description: Логин пользователя\n          type: string\n        userFio:\n          description: ФИО пользователя\n          type: string\n      required:\n        - id\n        - login\n        - userFio\n\n  parameters:\n\n    catalogGroupIdPathParam:\n      name: catalogGroupId\n      in: path\n      description: Идентификатор группы каталогов.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 25\n\n    catalogGroupIdsQueryParam:\n      name: catalogGroupIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов групп каталогов.\n\n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n\n    oivIdFilterQueryParam:\n      name: catalogGroupId\n      in: query\n      required: false\n      description: Идентификатор поставщика данных (ОИВ). Используется для фильтрации по ОИВ.\n      schema:\n        type: integer\n\n    userIdQueryParam:\n      name: userId\n      in: query\n      description: Идентификатор пользователя. Необязательный параметр. Если указан, следует исключать из выборки все группы каталогов, имеющие связи с пользователем\n      schema:\n        type: integer\n        format: int32\n      required: false\n      example: 189776\n\n  responses:\n    CatalogGroupNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Не существует группы каталогов с указанным идентификатором.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Не существует группы каталогов с указанным идентификатором:\n              $ref: '#/components/examples/CatalogGroupNotFoundError'\n\n  examples:\n\n    CatalogGroupListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка групп каталогов\n      value:\n        - id: 2\n          name: Группа 2\n        - id: 13\n          name: Группа общегородских каталогов\n\n\n    CatalogGroupArrayResponse:\n      description: Пример ответа с массивом групп каталогов\n      value:\n        - id: 13\n          name: Группа общегородских каталогов\n          addNewCat: true\n          addNewCatOiv: false\n          oivs:\n            - id: 56\n              name: Префектура западного района\n            - id: 678\n              name: Управа Восточного округа\n\n    CatalogGroupCreateRequest:\n      description: |-\n        Создание группы каталогов.\n      value:\n        name: Каталоги ОИВов\n        addNewCat: true\n        addNewCatOiv: true\n        oivIds:\n          - 56\n          - 678\n\n    CatalogGroupModifyRequest:\n      description: |-\n        Изменение данных группы каталогов.\n      value:\n        name: Каталоги ОИВов 2\n        addNewCat: false\n        addNewCatOiv: true\n        oivIds:\n          - 56\n          - 678\n\n\n    CatalogGroupCreatedResponse:\n      description: |-\n        Группы пользователей создана.\n      value:\n        id: 12\n        code: 201\n        messageType: Created\n        message: >\n          Группа пользователей успешно создана\n\n    CatalogGroupOkResponse:\n      description: |-\n        Данные группы каталогов обновлены.\n      value:\n        id: 16\n        code: 200\n        messageType: Ok\n        message: >\n          Группа каталогов успешно изменена\n\n    CatalogGroupNotUniqueNameError:\n      description: |-\n        Наименование группы каталогов неуникально.\n      value:\n        code: 400\n        messageType: Unique value error\n        message: >\n          Группа каталогов с таким наименованием уже существует\n\n    CatalogGroupAtrributeError:\n      description: |-\n        Одновременно выбрано \"Добавлять все новые каталоги\" и \"Добавлять каталоги выбранных ОИВ\".\n      value:\n        code: 400\n        messageType: Bad Request\n        message: >\n          Одновременно выбрано \"Добавлять все новые каталоги\" и \"Добавлять каталоги выбранных ОИВ\"\n\n    CatalogGroupOivEmptyError:\n      description: |-\n        Не выбраны \"ОИВ\" при выбранном значении \"Добавлять каталоги выбранных ОИВ\".\n      value:\n        code: 400\n        messageType: Bad Request\n        message: >\n          Не выбраны \"ОИВ\" при выбранном значении \"Добавлять каталоги выбранных ОИВ\"\n\n    CatalogGroupDeletedResponse:\n      description: |-\n        Группы каталогов удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Выбранные группы каталогов удалены\n\n    CatalogCatalogGroupDeletedResponse:\n      description: |-\n        Каталоги из группы каталогов удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Выбранные каталоги из группы каталогов удалены.\n\n    CatalogGroupConnectedUserError:\n      description: |-\n        Удаляется группа каталогов, которая используется в настройках пользователях (спецроли и рассылки).\n      value:\n        code: 400\n        messageType: Resource cannot be deleted\n        message: |-\n          Группа каталогов (id {catalogGroupId}) не может быть удалена, так как используется в настройках одного или нескольких пользователях (спецроли и рассылки). \n          Удаление группы каталогов не выполнено.\n\n    CatalogGroupFillingCatalogListItemArrayResponse:\n      value:\n        - id: 29697\n          fullName: Нестационарные торговые объекты по реализации печатной продукции\n\n    CatalogListRequest:\n      value:\n        filters:\n          - attribute: 'fullName'\n            operator: 'contains'\n            value: 'парк'\n\n    CatalogGroupListRequest:\n      value:\n        filters:\n          - attribute: 'name'\n            operator: 'contains'\n            value: 'Группа Б'\n\n    CatalogGroupCatalogRequest:\n      value:\n        - 2342\n        - 334\n        - 4416\n\n    CatalogGroupUserSpecPrivilegesRequest:\n      value:\n        filters:\n          - attribute: id\n            operator: greaterThan\n            value: 30\n\n    CatalogGroupCatalogResponse:\n      description: |-\n        Выбранные каталоги добавлены в группу каталогов.\n      value:\n        code: 200\n        messageType: Ok\n        message: >\n          Выбранные каталоги добавлены в группу каталогов\n\n    CatalogNotFoundError:\n      description: |-\n        Указанный каталог не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталога с идентификатором {catalogId} не существует.\n\n    CatalogGroupNotFoundError:\n      description: |-\n        Указанная группа каталогов не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Группа каталогов с идентификатором {catalogGroupId} не существует.\n\n    CatalogGroupNotFoundDeleteError:\n      description: |-\n        Указанная группа каталогов не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Группа каталогов с идентификатором {catalogGroupId} не существует. Удаление каталогов из группы не выполнено.\n\n    CatalogGroupUserSpecPrivilegesListInfoArrayResponse:\n      description: Пример ответа из массива пользователей и спецролей по группам каталогов, в которых используется группа каталога\n      value:\n        - id: 347\n          login: popov\n          userFio: Попов Александр Сергеевич\n        - id: 531\n          login: ivanov\n          userFio: Иванов Андрей Васильевич\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с наборами данных\n  version: 1.0.0\n\npaths:\n\n  /datasets/search:\n    post:\n      tags:\n        - datasets\n      summary: Поиск по списку наборов данных\n      description: |-\n        Возвращает список наборов данных, отсортированный по возрастанию идентификатора набора данных.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации по столбцам списка используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке наборов данных.\n            Поиск производится по атрибутам `id`, `fullName`, `publicationCatalogId`.\n            Запрос со значением `12` вернет все наборы, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - actualVersionNum\n              - actualVersionOpenDate\n              - actualReleaseNum\n              - actualReleaseOpenDate\n              - actualReleaseCntObj\n              - publicationCatalogId\n              - publicationCatalogFullName\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n        - name: publicationStatus\n          in: query\n          required: false\n          description: |-\n            Параметр для фильтрации по статусам публикации наборов данных. Передается техническое наименование статуса.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/DatasetPublicationStatusTagIdEnum'\n        - $ref: '#/components/parameters/publicationCatalogHasNewVersionQueryParam'      \n      requestBody:\n        $ref: '#/components/requestBodies/datasetsListRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /datasets/lite/search:\n    get:\n      tags:\n      - datasets\n      summary: Поиск по списку наборов данных с минимальным набором свойств\n      description:  >\n        Возвращает список неудалённых наборов данных с минимальным набором свойств (`id`, `fullName`).\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            default: 1000\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в наборе данных.\n            Поиск производится по наименованию и идентификатору набора и является регистронезависимым.\n            Запрос со значением `тест` вернет все наборы данных, полное наименование которых содержит подстроку `тест` независимо от регистра.\n          schema:\n            type: string\n        - $ref: '#/components/parameters/isDictQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ. Если не было найдено соответствующих запросу записей, то возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetLiteListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetLiteArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /datasets:\n    post:\n      tags:\n        - datasets\n      summary: Создание набора данных\n      description: |-\n        Первичное сохранение набора данных с присвоением ему уникального идентификатора, связываением с каталогом публикации и созданием новых первой версии и релиза.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateDatasetSettings'\n            examples:\n              Пример: \n                $ref: '#/components/examples/DatasetSettingsCreateRequestBody' \n      responses:\n        '201':\n          description: |-\n            Успешный ответ, о создании набора данных.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetCreatedResponse'\n        '400':\n          $ref: '#/components/responses/DatasetBadRequestResponses'\n        '404':\n          $ref: '#/components/responses/DatasetNotFoundResponses'    \n    delete:\n      tags:\n        - datasets\n      summary: Отметка наборов данных удалёнными\n      description: |-\n        Метод используется для отметки удалёнными одного или нескольких наборов данных\n      parameters:\n        - $ref: '#/components/parameters/datasetIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetDeletedResponse'\n        '404':\n          description: |-\n            Ошибки\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: '#/components/examples/DatasetNotFoundResponse'      \n\n  /datasets/{datasetId}/generalInfo:\n    get:\n      tags:\n        - datasets\n      summary: Получение настроек общей информации набора данных\n      description: |-\n        Получение настроек общей информации набора данных.\n      parameters:\n        - $ref: '#/components/parameters/datasetIdPathParam'\n      responses:\n        '200':\n          description: |-\n            Настройки общей информации набора данных\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatasetGeneralInfo'\n              examples:\n                Пример: \n                  $ref: '#/components/examples/DatasetGeneralInfoResponse'\n        '404':\n          description: |-\n            Ошибки\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: '#/components/examples/DatasetNotFoundResponse'          \n\n  /datasets/{datasetId}:\n    put:\n      tags:\n        - datasets\n      summary: Изменение настроек набора данных\n      description: |-\n        Метод позволяет изменить настройки общей информации, а также создавать новую версию НД и изменять новую и актуальную версию НД.\n      parameters:\n        - $ref: '#/components/parameters/datasetIdPathParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateDatasetSettings'\n            examples:\n              Пример: \n                $ref: '#/components/examples/DatasetSettingsUpdateRequestBody' \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetEditedResponse'\n        '400':\n          $ref: '#/components/responses/DatasetBadRequestResponses'\n        '404':\n          $ref: '#/components/responses/DatasetNotFoundResponses'                 \n\n  /datasets/{datasetId}/status:\n    put:\n      tags:\n        - datasets\n      summary: Изменение статуса публикации набора данных\n      description: |-\n        Изменение статуса публикации набора данных\n      parameters:\n        - $ref: '#/components/parameters/datasetIdPathParam'\n        - $ref: '#/components/parameters/datasetPublicationStatusQueryParam'\n      responses:  \n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n        '404':\n          description: |-\n            Ошибки\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: '#/components/examples/DatasetNotFoundResponse'\n        '400':\n          $ref: '#/components/responses/DatasetBadRequestStatusResponses'                        \n\n  /datasets/{datasetId}/versions:\n    get:\n      tags:\n        - datasets\n      summary: Получение версий набора данных\n      description: |-\n        Получение списка версий набора данных без настроек атрибутовСписок версий отдается по убыванию номера версии.\n      parameters:\n        - $ref: '#/components/parameters/datasetIdPathParam'\n      responses:\n        '200':\n          description: |-\n            Массив версий набора данных\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetVersion'\n                minItems: 1\n              examples:\n                value:\n                  $ref: '#/components/examples/DatasetVersionArrayResponse'\n        '404':\n          description: |-\n            Ошибки\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: '#/components/examples/DatasetNotFoundResponse'\n\n  /datasets/{datasetId}/versions/{versionNum}/attributes:\n    get:\n      tags:\n        - datasets\n      summary: Получение настроек атрибутов в версии НД\n      description: |-\n        Получение настроек атрибутов в версии НД. Список атрибутов выдаётся по возрастанию поля order\n      parameters:\n        - $ref: '#/components/parameters/datasetIdPathParam'\n        - $ref: '#/components/parameters/datasetVersionNumPathParam'\n      responses:\n        '200':\n          description: |-\n            Настройки атрибутов в версии НД\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetAttributeSettings'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetVersionAttributesResponse'\n        '404':\n          description: |-\n            Ошибки\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: '#/components/examples/DatasetNotFoundResponse' \n                Несуществующий номер версии НД:\n                  $ref: '#/components/examples/DatasetVersionNotFoundResponse'\n\n  /datasets/{datasetId}/versions/{versionNum}/releases:\n    get:\n      tags:\n        - datasets\n      summary: Получение релизов версии набора данных\n      description: |-\n        Получение релизов версии набора данных. Список релизов выдаётся по убыванию номера релизов.\n      parameters:\n        - $ref: '#/components/parameters/datasetIdPathParam'\n        - $ref: '#/components/parameters/datasetVersionNumPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых релизов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - $ref: '_common.yaml#/components/parameters/filterOutIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetRelease'\n                minItems: 1\n              examples:\n                Пример: \n                  $ref: '#/components/examples/DatasetVersionReleasesListResponse' \n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          description: |-\n            Ошибки бизнес-логики\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: '#/components/examples/DatasetNotFoundResponse'\n                В наборе данных не существует версии с указанным номером:\n                  $ref: '#/components/examples/DatasetVersionNotFoundResponse'\n\n  /datasets/season:\n    put:\n      tags:\n        - datasets\n      summary: Назначение сезонности в ОПОД\n      description: |-\n        Устанавливает сезоность, которая будет учитываться при формировании сезонных наборов данных в ОПОД\n      parameters:\n        - name: seasonalityTagId\n          in: query\n          required: true\n          description: |-\n            Строковый идентификатор сезонности, которую нужно назначить текущей\n          schema:\n            $ref: '#/components/schemas/DatasetSeasonalityTagIdEnum'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SeasonalityChangeResponse'  \n\ncomponents:\n\n  schemas:\n    DatasetPublicationStatusTagIdEnum:\n      description: |-\n        Статус публикации набора данных:\n          - `unpublished` - не опубликован\n          - `onCheck` - на проверке\n          - `published` - опубликован\n          - `archive` - архивный\n      oneOf:    \n        - type: string\n          enum:\n            - unpublished\n            - onCheck\n            - published\n            - archive\n\n    VersionPublicationStatusTagIdEnum:\n      description: |-\n        Статус публикации версии набора данных:\n          - `new` - Новая\n          - `actual` - Актуальная\n          - `historical` - Историческая\n      oneOf:    \n        - type: string\n          enum:\n            - new\n            - actual\n            - historical\n\n    ReleasePublicationStatusTagIdEnum:\n      description: |-\n        Статус публикации версии набора данных:\n          - `new` - Новый\n          - `actual` - Актуальный\n          - `historical` - Исторический\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - actual\n            - historical            \n\n    DatasetKind:\n      description: |-\n        Вид набора данных: классификатор, справочник и т.п.\n      type: object\n      properties:\n        id:\n          description: |-\n            Идентификатор вида набора данных \n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование вида набора данных\n          type: string\n      required:\n        - id\n        - name\n\n    DatasetType:\n      description: |-\n        Тип набора данных: общероссийский, городской отраслевой (ведомственный) и т.п.\n      type: object\n      properties:\n        id:\n          description: Идентификатор типа набора данных\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование типа набора данных\n          type: string\n      required:\n        - id\n        - name    \n\n    DatasetPublicationStatusNameEnum:\n      description: Наименование статуса публикации набора данных\n      oneOf:\n        - type: string\n          # enum:\n          #   - Не опубликован\n          #   - Опубликован\n          #   - Архивный\n\n    DatasetSeasonalityTagIdEnum:\n      description: |-\n        Техническое наименование сезонности набора данных:\n          - `notSeasonal` - Несезонный набор данных;\n          - `winter` - Зимний набор данных;\n          - `summer` - Летний набор данных;\n          - `allSeasonal` - Всесезонный набор данных.\n      oneOf:\n        - type: string\n          enum:\n            - notSeasonal\n            - winter\n            - summer\n            - allSeasonal\n\n    DatasetSeasonalityNameEnum:\n      description: Наименование сезонности набора данных\n      oneOf:\n        - type: string\n          # enum:\n          #   - Несезонный набор данных\n          #   - Зимний набор данных\n          #   - Летний набор данных\n          #   - Всесезонный набор данных\n\n    DatasetSeasonality:\n      description: Сезонность набора данных\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/DatasetSeasonalityTagIdEnum'\n        name:\n          $ref: '#/components/schemas/DatasetSeasonalityNameEnum'\n      required:\n        - tagId\n        - name\n\n    DatasetDictionaryTypeTagIdEnum:\n      description: |-\n        Техническое наименование типа справочника для набора данных:\n          - `regular` - Обычный;\n          - `regional` - Региональный;\n          - `federal` - Федеральный.\n      oneOf:\n        - type: string\n          enum:\n            - regular\n            - regional\n            - federal\n\n    DatasetDictionaryTypeNameEnum:\n      description: Наименование типа справочника для набора данных.\n      oneOf:\n        - type: string\n          # enum:\n          #   - Обычный\n          #   - Региональный\n          #   - Федеральный\n\n    DatasetDictionaryType:\n      description: Тип справочника для набора данных\n      type: object\n      properties:\n        tagId:\n          $ref: '#/components/schemas/DatasetDictionaryTypeTagIdEnum'\n        name:\n          $ref: '#/components/schemas/DatasetDictionaryTypeNameEnum'\n      required:\n        - tagId\n        - name\n\n    DatasetAttributeTypeTagIdEnum:\n      description: Техническое название типа данных атрибута. Список содержит типы данных атрибутов ЕХД и дополнительный тип array, который используется для атрибутов, описывающих геоданные.\n      oneOf:\n        - type: string\n          enum:\n            - string\n            - integer\n            - date\n            - dict\n            - table\n            - file\n            - boolean\n            - link\n            - float\n            - array\n\n    DatasetAttributeType:\n      description: |-\n        Тип атрибута набора даных\n      type: object\n      properties:\n        name:\n          description: |-\n            Наименование типа атрибута:\n            - Строка\n            - Целое число\n            - Дата\n            - Справочник\n            - Таблица\n            - Файл\n            - Флаг\n            - Ссылка на объект\n            - Дробное число\n            - Массив (для атрибутов с координатами)\n          type: string\n        typeTag:\n          $ref: '#/components/schemas/DatasetAttributeTypeTagIdEnum'\n      required:\n        - name\n        - typeTag         \n\n    DatasetListItem:\n      type: object\n      properties:\n        id:\n          description: Идентификатор набора данных\n          type: integer\n        fullName:\n          description: Полное наименование набора данных\n          type: string\n        publicationStatusTagId:\n          $ref: '#/components/schemas/DatasetPublicationStatusTagIdEnum'\n        actualVersionNum:\n          description: Номер актуальной версии набора данных\n          type: integer\n        actualVersionOpenDate:\n          description: Дата открытия актуальной версии набора данных\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n        actualReleaseNum:\n          description: Номер актуального релиза набора данных\n          type: integer\n        actualReleaseOpenDate:\n          description: Дата открытия актуального релиза набора данных\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        actualReleaseCntObj:\n          description: Количество объектов в актуальном релизе набора данных\n          type: integer  \n        releaseMode:\n          description: |-\n            Режим выпуска релизов набора данных. Значение формируется на основе поля БД is_manual_release:\n              - true - Ручной режим\n              - false - Автоматический режим\n          type: string    \n        publicationCatalogId:\n          description: |-\n            Идентификатор каталога публикации.\n            Берётся КП, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: integer\n        publicationCatalogFullName:\n          description: |-\n            Русскоязычное полное наименование каталога публикации.\n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string    \n        publicationCatalogHasNewVersion:\n          description: |-\n            Признак наличия новых версий каталога публикации, связанного с актуальной версией НД. \n            Соответственно проверка происходит следующим образом: \n              1) находим актуальную версию НД,\n              2) берём id связанной версии КП,\n              3) проверяем, есть ли в КП версии выпущенные после версии из п.2:\n                3.1) версии есть - возвращаем true.\n                3.2) версий нет - возвращаем false.\n          type: boolean\n      required:\n        - id\n        - fullName \n        - publicationStatusTagId\n        - isManualRelease\n        - publicationCatalogId\n        - publicationCatalogFullName\n        - publicationCatalogHasNewVersion\n\n    DatasetCommonGeneralInfo:\n      type: object\n      properties:\n        fullName:\n          description: Русскоязычное полное наименование набора данных\n          type: string\n        fullNameEn:\n          description: Англоязычное полное наименование набора данных\n          type: string\n        publicationStatusTagId:\n          allOf:\n            - $ref: '#/components/schemas/DatasetPublicationStatusTagIdEnum'\n          readOnly: true          \n        identNumber:\n          description: Идентификационный номер набора данных\n          type: object\n          properties:\n            inn:\n              description: ИНН организации, которая является поставщиком информации (ответственный ОИВ)\n              type: string\n            identName:\n              description: |-\n                Сокращенное англоязычное название набора открытых данных, указывается в одно слово. \n                Данное поле предзаполняется транслитерацией наименования набора данных и может быть изменено оператором данных.\n        oivId:\n          description: Идентификатор поставщика информации ответственноого за наполнение набора данных (ответственный ОИВ)\n          type: integer\n          writeOnly: true\n        oiv: \n          description: Поставщик информации набора данных (ответственный ОИВ)\n          type: object\n          allOf:\n            - $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          readOnly: true\n        respPersonFIO:\n          description: |-\n            ФИО ответственного за набор данных. \n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string\n          readOnly: true\n        respPersonEmail:\n          description: |-\n            Адрес электронной почты ответственного за набор данных. \n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string\n          readOnly: true\n        respPersonPhone:\n          description: |-\n            Телефон ответственного за набор данных. \n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string\n          readOnly: true\n        thematicCategory:  \n          description: |- \n            Тематическая категория набора данных. \n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: object\n          allOf:\n            - $ref: 'thematicCategories.yaml#/components/schemas/CommonThematicCategoryInfo'\n          readOnly: true  \n        kindDataset:\n          description: Вид набора данных\n          type: object\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/DatasetKind'\n        kindDatasetId:\n          description: Идентификатор вида набора данных\n          type: integer\n          writeOnly: true\n        typeDataset:\n          description: Тип набора данных\n          type: object\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/DatasetType'\n        typeDatasetId:\n          description: Идентификатор типа набора данных\n          type: integer\n          writeOnly: true\n        keywords:\n          description: Перечень отдельных слов или словосочетаний, характеризующих набор данных, его объекты, тематическую категорию.\n          type: string\n        keywordsEn:\n          description: Ключевые слова каталога на английском языке\n          type: string  \n        accountingObject:\n          description: Объект учёта, краткое описание набора данных\n          type: string\n        accountingObjectEn:\n          description: Объект учёта каталога на английском языке\n          type: string  \n        periodUpdate: \n          description: |-\n            Периодичность обновления набора данных. \n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string\n          readOnly: true\n        firstPublicationDate:\n          description: Дата публикации набора данных на ОПОД. Устанавливается автоматически в момент, когда У НД впервые меняют статус на \"Опубликовано\"\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n          readOnly: true                            \n        seasonalityTagId:\n          allOf:\n            - $ref: '#/components/schemas/DatasetSeasonalityTagIdEnum'\n            - default: allSeasonal\n            - writeOnly: true\n        seasonality:\n          allOf:\n            - $ref: '#/components/schemas/DatasetSeasonality'\n            - readOnly: true\n        sefUrl:\n          description: |-\n            SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n            {ИНН ОИВ}-{Транслитерация полного наименования НД}\n            Допустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.\n          type: string\n        polygonsSortingTagId:\n          description: Идентификатор сортировки полигональных объектов\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/SortingOrderTagIdEnum'\n          default: asc  \n        isClusteredByDistrict:\n          description: Признак наличия кластеризации по округам и районам\n          type: boolean\n          default: false\n        isIsoIndicator:\n          description: Признак, содержит ли набор показатели ISO37120 и U4SSC\n          type: boolean\n          default: false\n        isAvailableIndicator:\n          description: Признак, относится ли набор данных к категории \"Доступная среда\"\n          type: boolean\n          default: false\n        forumLink:\n          description: Ссылка на обсуждение в социальных сетях\n          type: string\n        isDict:\n          description: Признак, что набор данных раскрывается на ОПОД как справочник\n          type: boolean\n          default: false\n        dictTypeTagId:\n          description: Тип справочника\n          type: string\n        useInDatasetsIds:\n          description: |-\n            Массив идентификаторов наборов данных или наборов данных - справочников, которые связаны с текущим набором данных.\n            В зависимости от значения isDict определяются допустимые НД в массиве:\n              - true - массив должен состоять из НД где isDict: false\n              - false - массив должен состоять из НД где isDict: true\n          writeOnly: true\n          type: array\n          items:\n            type: integer\n        useInDatasets:\n          description: Массив объектов из идентификаторов и наименований наборов данных, наборов данных - справочников, которые используются в текущем наборе данных.\n          type: object\n          properties:\n            id:\n              description: Идентификатор набора данных - справочника\n              type: integer\n            name:\n              description: Полное наименование набора данных\n              type: string\n          readOnly: true\n        description:\n          description: |-\n            Расширенное описание набора данных в формате markdown. \n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string \n          readOnly: true\n      required:\n        - fullName\n        - fullNameEn\n        - publicationStatusTagId\n        - identNumber\n        - oivId\n        - oiv\n        - respPersonFIO\n        - respPersonEmail\n        - respPersonPhone\n        - thematicCategoryId  \n        - thematicCategory   \n        - kindDataset\n        - kindDatasetId\n        - typeDataset\n        - typeDatasetId\n        - keywords\n        - keywordsEn\n        - accountingObject\n        - accountingObjectEn\n        - periodUpdate      \n        - seasonalityTagId\n        - seasonality\n        - sefUrl\n        - polygonsSortingTagId\n        - isClusteredByDistrict\n        - isIsoIndicator\n        - isAvailableIndicator\n        - isDict\n        - description  \n\n    DatasetGeneralInfo:\n      allOf:\n        - $ref: '#/components/schemas/DatasetCommonGeneralInfo'\n      type: object\n      properties:\n        publicationCatalogId:\n          description: |-\n            Идентификатор каталога публикации.\n            Берётся КП, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          readOnly: true\n          type: integer\n        publicationCatalogFullName:\n          description: |-\n            Русскоязычное полное наименование каталога публикации.\n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string\n          readOnly: true  \n        publicationCatalogStatus:\n          description: |-\n            Статус публикации каталога публикациИ.\n            Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n            Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          readOnly: true\n          allOf:\n            - $ref: 'publicationCatalogs.yaml#/components/schemas/PublicationCatalogStatusTagIdEnum'\n        publicationCatalogHasNewVersion:\n          description: |-\n            Признак наличия новых версий каталога публикации, связанного с актуальной версией НД. \n            Соответственно проверка происходит следующим образом: \n              1) находим актуальную версию НД,\n              2) берём id связанной версии КП,\n              3) проверяем, есть ли в КП версии выпущенные после версии из п.2:\n                3.1) версии есть - возвращаем true.\n                3.2) версий нет - возвращаем false.\n          type: boolean\n          readOnly: true\n        isManualRelease:\n          description: Признак, что релизы набора данных выпускаются вручную\n          type: boolean\n          default: false\n        accessKey:\n          description: |-\n            Ключ доступа в формате UUID, при помощи которого возможен просмотр новых релизов НД в опубликованном НД или самого НД, если он находится в статусе \"На проверке\".\n            Значение присваивается при создании набора данных и остаётся неизменным.\n          type: string\n          readOnly: true \n      required:\n        - publicationCatalogId\n        - publicationCatalogStatus\n        - isManualRelease\n        - accessKey  \n\n    DatasetGeneralInfoOld:\n      type: object\n      properties:\n        fullName:\n          description: Русскоязычное полное наименование набора данных\n          type: string\n        fullNameEn:\n          description: Англоязычное полное наименование набора данных\n          type: string\n        publicationStatusTagId:\n          allOf:\n            - $ref: '#/components/schemas/DatasetPublicationStatusTagIdEnum'\n          readOnly: true       \n        publicationCatalogId:\n          description: Идентификатор каталога публикации, с которым связана актуальная версия набора данных. Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          readOnly: true\n          type: integer\n        publicationCatalogFullName:\n          description: Русскоязычное полное наименование каталога публикации, с которым связана актуальная версия набора данных. Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          type: string\n          readOnly: true  \n        publicationCatalogStatus:\n          description: Статус публикации каталога публикации, с которым связана актуальная версия набора данных. Если набор данных содержит только первую новую версию, то КП берётся с неё.\n          readOnly: true\n          allOf:\n            - $ref: 'publicationCatalogs.yaml#/components/schemas/PublicationCatalogStatusTagIdEnum'\n        publicationCatalogHasNewVersion:\n          description: Признак наличия новых версий каталога публикации, которые были созданы позже публикации актуальной версии набора данных\n          type: boolean\n          readOnly: true    \n        identNumber:\n          description: Идентификационный номер набора данных\n          type: object\n          properties:\n            inn:\n              description: ИНН организации, которая является поставщиком информации (ответственный ОИВ)\n              type: string\n            identName:\n              description: |-\n                Сокращенное англоязычное название набора открытых данных, указывается в одно слово. \n                Данное поле предзаполняется транслитерацией наименования набора данных и может быть изменено оператором данных.\n        oivId:\n          description: Идентификатор поставщика информации ответственноого за наполнение набора данных (ответственный ОИВ)\n          type: integer\n          writeOnly: true\n        oiv: \n          description: Поставщик информации набора данных (ответственный ОИВ)\n          type: object\n          allOf:\n            - $ref: 'oivs.yaml#/components/schemas/CommonOivInfo'\n          readOnly: true\n        respPersonFIO:\n          description: ФИО ответственного за набор данных. Берётся из каталога публикации, с которым связана актуальная версия набора данных\n          type: string\n          readOnly: true\n        respPersonEmail:\n          description: Адрес электронной почты ответственного за набор данных. Берётся из каталога публикации, с которым связана актуальная версия набора данных\n          type: string\n          readOnly: true\n        respPersonPhone:\n          description: Телефон ответственного за набор данных. Берётся из каталога публикации, с которым связана актуальная версия набора данных\n          type: string\n          readOnly: true\n        thematicCategory:  \n          description: Тематическая категория набора данных. Берётся из каталога публикации, с которым связана актуальная версия набора данных\n          type: object\n          allOf:\n            - $ref: 'thematicCategories.yaml#/components/schemas/CommonThematicCategoryInfo'\n          readOnly: true  \n        kindDataset:\n          description: Вид набора данных\n          type: object\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/DatasetKind'\n        kindDatasetId:\n          description: Идентификатор вида набора данных\n          type: integer\n          writeOnly: true\n        typeDataset:\n          description: Тип набора данных\n          type: object\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/DatasetType'\n        typeDatasetId:\n          description: Идентификатор типа набора данных\n          type: integer\n          writeOnly: true\n        keywords:\n          description: Перечень отдельных слов или словосочетаний, характеризующих набор данных, его объекты, тематическую категорию.\n          type: string\n        keywordsEn:\n          description: Ключевые слова каталога на английском языке\n          type: string  \n        accountingObject:\n          description: Объект учёта, краткое описание набора данных\n          type: string\n        accountingObjectEn:\n          description: Объект учёта каталога на английском языке\n          type: string  \n        periodUpdate: \n          description: Периодичность обновления набора данных. Берётся из каталога публикации, с которым связана актуальная версия набора данных\n          type: string\n          readOnly: true\n        firstPublicationDate:\n          description: Дата публикации набора данных на ОПОД. Устанавливается автоматически в момент, когда У НД впервые меняют статус на \"Опубликовано\"\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n          readOnly: true                            \n        seasonalityTagId:\n          allOf:\n            - $ref: '#/components/schemas/DatasetSeasonalityTagIdEnum'\n            - default: allSeasonal\n            - writeOnly: true\n        seasonality:\n          allOf:\n            - $ref: '#/components/schemas/DatasetSeasonality'\n            - readOnly: true\n        sefUrl:\n          description: |-\n            SEF URL, который может использоваться в ссылке набора данных. Формируется по следующим правилам:\n            {ИНН ОИВ}-{Транслитерация технического наименования для ОПОД}\n            Допустимые символы [a-zA-Z0-9-]. Пробелы и нижнее подчёркивание заменяются дефисом.\n          type: string\n        polygonsSortingTagId:\n          description: Идентификатор сортировки полигональных объектов\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/SortingOrderTagIdEnum'\n          default: asc  \n        isClusteredByDistrict:\n          description: Признак наличия кластеризации по округам и районам\n          type: boolean\n          default: false\n        isIsoIndicator:\n          description: Признак, содержит ли набор показатели ISO37120 и U4SSC\n          type: boolean\n          default: false\n        isAvailableIndicator:\n          description: Признак, относится ли набор данных к категории \"Доступная среда\"\n          type: boolean\n          default: false\n        forumLink:\n          description: Ссылка на обсуждение в социальных сетях\n          type: string\n        isDict:\n          description: Признак, что набор данных раскрывается на ОПОД как справочник\n          type: boolean\n          default: false\n        dictTypeTagId:\n          description: Тип справочника\n          type: string\n          writeOnly: true\n        isManualRelease:\n          description: Признак, что релизы набора данных выпускаются вручную\n          type: boolean\n          default: false\n        accessKey:\n          description: |-\n            Ключ доступа в формате UUID, при помощи которого возможен просмотр новых релизов НД в опубликованном НД или самого НД, если он находится в статусе \"На проверке\".\n            Значение присваивается при создании набора данных и остаётся неизменным.\n          type: string\n          readOnly: true \n        useInDatasetsIds:\n          description: |-\n            Массив идентификаторов наборов данных или наборов данных - справочников, которые связаны с текущим набором данных.\n            В зависимости от значения isDict определяются допустимые НД в массиве:\n              - true - массив должен состоять из НД где isDict: false\n              - false - массив должен состоять из НД где isDict: true\n          writeOnly: true\n          type: array\n          items:\n            type: integer\n        useInDatasets:\n          description: Массив объектов из идентификаторов и наименований наборов данных, наборов данных - справочников, которые используются в текущем наборе данных.\n          type: object\n          properties:\n            id:\n              description: Идентификатор набора данных - справочника\n              type: integer\n            name:\n              description: Полное наименование набора данных\n              type: string\n          readOnly: true\n        description:\n          description: Расширенное описание набора данных. Берётся из каталога публикации, с которым связана актуальная версия набора данных\n          type: string \n          readOnly: true\n      required:\n        - fullName\n        - fullNameEn\n        - publicationCatalogId\n        - publicationCatalogStatus\n        - identNumber\n        - oivId\n        - oiv\n        - respPersonFIO\n        - respPersonEmail\n        - respPersonPhone\n        - thematicCategoryId  \n        - thematicCategory   \n        - kindDataset\n        - kindDatasetId\n        - typeDataset\n        - typeDatasetId\n        - keywords\n        - keywordsEn\n        - accountingObject\n        - accountingObjectEn\n        - periodUpdate      \n        - seasonalityTagId\n        - seasonality\n        - sefUrl\n        - polygonsSortingTagId\n        - isClusteredByDistrict\n        - isIsoIndicator\n        - isAvailableIndicator\n        - forumLink\n        - isDict\n        - isManualRelease\n        - accessKey\n        - description\n\n    DatasetVersion:\n      description: Версия набора данных\n      type: object\n      properties:\n        id: \n          description: Идентификатор версии\n          type: integer\n        versionNum:\n          description: Номер версии набора данных\n          type: integer\n        openDate:\n          allOf:\n            - description: Дата открытия версии набора данных\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n        publicationStatusTagId:\n          $ref: '#/components/schemas/VersionPublicationStatusTagIdEnum'\n        hasGeo:\n          description: |-\n            Наличие геопривязки в версии набора данных. \n            Если признак установлен, то массив атрибутов должен содержать поля geoData, geoData.coordinates, geoData.type, geodata_center.   \n          type: boolean\n          default: false  \n        publicationCatalogId:\n          description: Идентификатор каталога публикации, который привязан к версии набора данных.\n          type: integer\n        publicationCatalogFullName:\n          description: |-\n            Полное наименование каталога публикации.\n            Берётся из последней версии настроек каталога публикации, с которым связана данная версия набора данных.\n          type: string   \n        publicationCatalogVersionNum:\n          description: Номер версии каталога публикации, связанной с данной версией набора данных.\n          type: integer\n\n    DatasetRelease:\n      description: Релиз набора данных\n      type: object\n      properties:\n        id:\n          description: Идентификатор релиза\n          type: integer\n        releaseNum:\n          description: Номер релиза набора данных в рамках версии, указанной в параметрах запроса.\n          type: integer\n        createDate:\n          allOf:\n            - description: Дата создания релиза\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        openDate:\n          allOf:\n            - description: Дата, когда релиз сделали доступным пользователям ОПОД, то есть установили статус \"Актуальный\".\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        publicationStatus:\n          $ref: '#/components/schemas/ReleasePublicationStatusTagIdEnum'\n        cntObjects:\n          description: Количество объектов в релизе\n          type: integer\n        publicationCatalogReleaseId:\n          description: Номер релиза каталога публикации, который связан с данным релизом набора данных.\n          type: integer  \n\n    CommonDatasetAttributeSettings:\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута в рамках ГИС ЕХД\n          type: integer\n          format: int32\n        techName:\n          description: Техническое наименование атрибута, не может иметь значение \"id\"\n          type: string\n        name:\n          description: Русскоязычное наименование атрибута\n          type: string\n        enName:\n          description: Англоязычное наименование атрибута\n          type: string\n        type:\n          allOf:\n            - $ref: '#/components/schemas/DatasetAttributeType'\n        order:\n          description: Порядковый номер атрибута в каталоге\n          type: integer\n        isDisplay:\n          description: Признак, что атрибут должен отображаться в наборе данных.\n          type: boolean\n          default: true  \n        isDisplayInTable:\n          description: Признак, что атрибут должен отображаться в таблице набора данных при открытии его на портале. Для атрибутов с типом \"Таблица\" всегда принимает значение false.\n          type: boolean\n          default: true  \n        isDisplayInExport:\n          description: Признак, что атрибут должен попадать в файл экспорта содержимого набора данных.\n          type: boolean\n          default: true\n        systemAttr:\n          description: |-\n            Массив системных атрибутов ОПОД, в качестве которых выступает данных атрибут. Возможные значения:\n              - `name` - атрибут отображается в первом закреплённом столбце в таблице с объектами набора данных\n              - `address` - атрибут используется в полнотекстовом поиске в поле \"Адресный ориентир\"\n          type: array\n          items:\n            type: string\n            enum: \n              - name\n              - address\n      required:\n        - attrId\n        - name\n        - enName\n        - type\n        - order\n        - isDisplay\n        - isDisplayInTable\n        - isDisplayInExport            \n\n    DictDatasetAttributeSettings:\n      allOf:\n        - $ref: '#/components/schemas/CommonDatasetAttributeSettings'\n      properties:\n        dictId:\n          description: |-\n            Идентификатор справочника, который используется в атрибуте. Указывается только для атрибута с типом dict.\n          type: integer\n          format: int32\n\n    TableDatasetAttributeSettings:\n      allOf:\n        - $ref: '#/components/schemas/CommonDatasetAttributeSettings'\n      properties:            \n        childCatalogId:\n          description: |-\n            Идентификатор вложенного каталога, хранящего значения объектов табличного атрибута. Указывается только для атрибута с типом table\n          type: integer\n          format: int32\n        attributes:\n          description: Массив атрибутов таблицы. Указывается только для атрибута с типом table.\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetAttributeSettings'\n\n    DatasetAttributeSettings:\n      oneOf:\n        - $ref: '#/components/schemas/CommonDatasetAttributeSettings'\n        - $ref: '#/components/schemas/DictDatasetAttributeSettings'\n        - $ref: '#/components/schemas/TableDatasetAttributeSettings'     \n\n    CommonDatasetVersionSettings:\n      description: Набор общих настроек версии набора данных\n      type: object\n      properties: \n        attributes:\n          description: Настройки атрибутов версии\n          type: array\n          items:\n            $ref: '#/components/schemas/DatasetAttributeSettings'\n\n    NewDatasetVersionSettings:\n      description: |-\n        Настройки новой версии набора данных. \n        Если в наборе не было новой версии, то она создаётся, если есть, то изменяется. Набор может иметь только одну новую версию.\n        Передавать данный объект только в случае, если производились изменения в рамках новой версии.\n      type: object\n      properties:\n        publicationCatalogId:\n          description: Идентификатор каталога публикации, который привязан к версии набора данных\n          type: integer\n        publicationCatalogVersionNum:\n          description: Номер версии каталога публикации, связанной с данной версией набора данных\n          type: integer\n        hasGeo:\n          description: |-\n            Наличие геопривязки в версии набора данных. \n            Если признак установлен, то массив атрибутов должен содержать поля geoData, geoData.coordinates, geoData.type, geodata_center. Данные поля со значениями их свойств указаны в примере.    \n          type: boolean\n          default: false     \n      allOf:\n        - $ref: '#/components/schemas/CommonDatasetVersionSettings'\n      required:\n        - publicationCatalogId \n        - publicationCatalogVersionNum\n        - hasGeo\n        - attributes              \n\n    CreateDatasetSettings:\n      description: Набор настроек набора данных, включающий общую информацию и новую версию. Данный набор необходим для создания НД.\n      type: object\n      properties:\n        generalInfo:\n          $ref: '#/components/schemas/DatasetGeneralInfo'\n        newVersion:\n          $ref: '#/components/schemas/NewDatasetVersionSettings'                   \n      required:\n        - generalInfo\n        - newVersion         \n\n    UpdateDatasetSettings:\n      type: object\n      properties:\n        generalInfo:\n          $ref: '#/components/schemas/DatasetGeneralInfo'\n        newVersion:\n          description: |-\n            Настройки новой версии набора данных. \n            Если в наборе не было новой версии, то она создаётся, если есть, то изменяется. Набор может иметь только одну новую версию.\n            Передавать данный объект только в случае, если производились изменения в рамках новой версии.\n          type: object\n          properties:\n           setStatusActual:\n              description: Указывает, что необходимо присвоить новой версии статус \"Актуальная\"\n              type: boolean\n              default: false\n          allOf:\n            - $ref: '#/components/schemas/NewDatasetVersionSettings'\n          required:\n            - setStatusActual\n            - publicationCatalogId \n            - publicationCatalogVersionNum\n            - hasGeo\n            - attributes    \n        actualVersion:\n          description: |-\n            Настройки актуальной версии набора данных.\n            Передавать данный объект только в случае, если производились изменения в рамках актуальной версии и ее релизах.\n            Если данное поле передаётся для НД, в котором нет актуальной версии, то данное поле игнорируется.\n          type: object\n          properties:\n            releases:\n              type: object\n              properties:\n                actualReleaseId:\n                  description: Идентификатор релиза, которому нужно установить статус \"Актуальный\"\n                  type: integer\n                deleteReleaseIds:\n                  description: Идентификаторы релизов, которые нужно пометить удалёнными\n                  type: array\n                  items:\n                    type: integer\n          allOf:\n            - $ref: '#/components/schemas/CommonDatasetVersionSettings'                \n\n    DatasetLiteListItem:\n      description: Минимальная информация о наборе данных для выпадающих списков\n      type: object\n      properties:\n        id:\n          description: Идентификатор набора данных\n          type: integer\n        name:\n          description: Полное наименование набора данных\n          type: string\n      required:\n        - id\n        - fullName\n\n  parameters:\n    datasetIdPathParam:\n      name: datasetId\n      in: path\n      description: Идентификатор набора данных\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 64033\n\n    datasetVersionNumPathParam:\n      name: versionNum\n      in: path\n      description: |-\n        Номер версии набора данных\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 1\n\n    datasetReleaseNumPathParam:\n      name: releaseNum\n      in: path\n      description: |-\n        Номер релиза набора данных в рамках конкретной версии\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 15\n\n    datasetIdsQueryParam:\n      name: datasetIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов наборов данных.\n\n        Число элементов в списке от `1` до `500`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 500\n      example: [64033, 64011, 1133]\n\n    isDictQueryParam:\n      name: isDict\n      required: false\n      in: query\n      description: |-\n        Признак, что нужно получить список наборов данных - справочников.\n      schema:\n        type: boolean\n\n    datasetPublicationStatusQueryParam:\n      name: status\n      required: true\n      in: query\n      description: |-\n        Новый статус набора данных\n      schema:\n        $ref: '#/components/schemas/DatasetPublicationStatusTagIdEnum'\n\n    publicationCatalogHasNewVersionQueryParam:\n      name: publicationCatalogHasNewVersion\n      required: false\n      in: query\n      description: |-\n        Параметр для фильтрации признаку наличия новой версии настроек связанного КП\n      schema:\n        type: boolean  \n\n  requestBodies:\n    datasetsListRequestBody:\n      description: Пример тела запроса для поиска по списку наборов данных\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName\n                            - actualVersionNum\n                            - actualVersionOpenDate\n                            - actualReleaseNum\n                            - actualReleaseOpenDate\n                            - actualReleaseCntObj\n                            - releaseMode\n                            - publicationCatalogId\n                            - publicationCatalogFullName\n          examples:\n            Пример:\n              value:\n                filters:\n                  - attribute: 'lastReleaseDate'\n                    operator: 'greaterThan'\n                    value: '16.09.2022'\n      required: false\n\n  responses:\n    DatasetNotFoundResponses:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Передан несуществующий id каталога публикации, с которым должен быть связан набор данных;\n          - В новой версии указана несуществующая версия КП\n\n        ### При изменении набора дополнительно возможны ошибки:\n          - Несуществующий id НД\n          - Несуществующий id релиза\n          - Попытка удаления актуального релиза\n          - Попытка удаления релиза, выпущенного раньше актуального  \n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога публикации:\n              $ref: '#/components/examples/PublicationCatalogForDatasetNotFoundResponse'\n            Несуществующая версия каталога публикации: \n              $ref: '#/components/examples/PublicationCatalogVersionNotFoundResponse'\n            Несуществующий id НД:\n              $ref: '#/components/examples/DatasetNotFoundResponse'\n            В наборе данных не существует релиза с указанным идентификатором:\n              $ref: '#/components/examples/DatasetReleaseNotFoundResponse'\n            Нельзя удалить актуальный релиз:\n              $ref: '#/components/examples/DatasetStatusIsNotPublished'\n            Нельзя удалить исторический релиз, выпущенный раньше актуального:\n              $ref: '#/components/examples/DatasetReleaseDeleteBeforeActualReleaseResponse'           \n\n    DatasetBadRequestResponses:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - В настройках каталога публикации не указана система-потребитель \"Портал открытых данных\";\n          - В каталоге публикации отсутствуют релизы;\n          - Каталог публикации уже связан с другим набором данных;\n          - В связанном каталоге публикации отсутствует указанный ОИВ;\n          - Некорректный sefUrl;\n          - Некорректная связь НД и НД-справочника;\n          - Некорректная связь НД-справочника и НД;\n          - В версии КП не существует атрибута с указанным attrId;\n          - В версии КП не существует атрибута с указанным techName;\n          - В настройках версии указано наличие геопривязки, но не предеаны настройки атрибутов, связанных с гео;\n          - В настройках версии отсутствует геопривязки, но передаются атрибуты, связанные с гео;\n          - В версии КП не существует связки с указанными attrId и childCatalogId;\n          - Наименование атрибута не соответствует тегу\n\n        ### При изменении набора дополнительно возможны ошибки:\n          - Пытаются назначить актуальными версии и релизы в неопубликованном НД\n          - Пытаются создать новую версию в архивном НД\n          \n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/BadRequestError'\n          examples:\n            В КП не указан ОПОД как система-потребитель:\n              $ref: '#/components/examples/OPODNotContainInSystemsConsumersPublicationCatalogResponse'\n            В КП отсутствуют релизы:\n              $ref: '#/components/examples/ReleaseNotFoundInPublicationCatalogResponse'    \n            КП уже связан с другим набором данных:\n              $ref: '#/components/examples/PublicationCatalogAlredyConnectedAnotherDatasetResponse'\n            В связанном КП отсутствует указанный ОИВ:\n              $ref: '#/components/examples/OIVNotContainInPublicationCatalogResponse'\n            Некорректный sefUrl:\n              $ref: '#/components/examples/IncorrectSefUrlResponse'\n            Некорректная связь НД и НД-справочника:\n              $ref: '#/components/examples/IncorrectRefDatasetDictResponse'\n            Некорректная связь НД-справочника и НД:\n              $ref: '#/components/examples/IncorrectRefDictDatasetResponse'\n            В версии КП не существует атрибута с указанным attrId:\n              $ref: '#/components/examples/AttrIdNotFoundInPublicationCatalogResponse'\n            В версии КП не существует атрибута с указанным techName:\n              $ref: '#/components/examples/AttrTechNameNotFoundInPublicationCatalogResponse'\n            Статус НД не равен \"Опубликован\" для назначения актуальными версий и релизов:\n              $ref: '#/components/examples/DatasetStatusIsNotPublished'\n            Создание новой версии в архивном НД:\n              $ref: '#/components/examples/DatasetStatusIsArchive'\n            Указано наличие геопривязки, но нет геоатрибутов: \n              $ref: '#/components/examples/VersionHasGeoResponse'\n            Отсутствет геопривязка, но указаны геоатрибуты:\n              $ref: '#/components/examples/VersionNotHasGeoResponse'  \n            В версии КП не существует связки с указанными attrId и childCatalogId:\n              $ref: '#/components/examples/IncorrectChildCatalogId'\n            Наименование атрибута не соответствует тегу:\n              $ref: '#/components/examples/MismatchAttributeNameWithTagId'      \n\n    DatasetBadRequestStatusResponses:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Статусы НД \"На проверке\", \"Опубликован\", \"Архивный\" при статусе КП \"Не опубликован\"\n          - Статус НД \"Опубликован\", при статусе КП\"Архивный\"\n          \n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/BadRequestError'\n          examples:\n            Статусы НД \"На проверке\", \"Опубликован\", \"Архивный\" при статусе КП \"Не опубликован\":\n              $ref: '#/components/examples/ChangeStatusDatasetWhenPublicationCatalogStatusIsUnpublishedResponse'\n            Статус НД \"Опубликован\", при статусе КП\"Архивный\":\n              $ref: '#/components/examples/ChangeStatusDatasetWhenPublicationCatalogStatusIsArchiveResponse'\n\n\n  examples:\n    # Примеры запросов\n    DatasetSettingsCreateRequestBody:\n      value:\n        generalInfo:\n          fullName: Объекты культурного наследия\n          fullNameEn: Objects of cultural heritage  \n          identNumber:\n            inn: 7705021556\n            identName: Obektykulturnogonaslediya\n          oivId: 1201 \n          kindDatasetId: 7\n          typeDatasetId: 2\n          keywords: памятник, культурное наследие, культура, наследие\n          keywordsEn: monument, cultural heritage, culture, heritage\n          accountingObject: Объекты культурного наследия и выявленные объекты культурного наследия, в том числе с разделением по категориям, расположенные в пределах установленных границ города Москвы.\n          accountingObjectEn: Objects of cultural heritage and identified cultural heritage sites located within the established boundaries of the city of Moscow.                           \n          seasonalityTagId: allSeasonal\n          sefUrl: 7705021556-obekty-kulturnogo-naslediya-i-vyyavlennye-obekty-kulturnogo-naslediya\n          polygonsSortingTagId: asc \n          isClusteredByDistrict: false\n          isIsoIndicator: false\n          isAvailableIndicator: false\n          forumLink: null\n          isDict: false\n          dictTypeTagId: null\n          isManualRelease: false\n          useInDatasetsIds: []\n        newVersion:\n          publicationCatalogId: 9773\n          publicationCatalogVersionNum: 3\n          hasGeo: true\n          attributes:\n            - attrId: 1035661\n              techName: ObjectNameOnDoc\n              name: Наименование объекта по документам\n              enName: Name of the object according to the documents\n              type:\n                name: Строка\n                typeTag: string \n              order: 1\n              isDisplay: true\n              isDisplayInTable: true\n              isDisplayInExport: true\n              systemAttr:\n                - name\n            - attrId: 1185896\n              techName: Location\n              name: Местоположение объекта\n              enName: Location\n              type:\n                name: Таблица\n                typeTag: table \n              order: 2\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []   \n              attributes: \n                - attrId: 1185900\n                  techName: Address\n                  name: Адрес/Адресный ориентир/Местоположение\n                  enName: Address\n                  type:\n                    name: Строка\n                    typeTag: string \n                  order: 3\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n                - attrId: 1185901\n                  techName: UNOM\n                  name: УНОМ\n                  enName: UNOM\n                  type:\n                    name: Целое число\n                    typeTag: integer \n                  order: 4\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n            - attrId: -17\n              techName: geoData\n              name: Геоданные\n              enName: Geodata\n              type:\n                name: Таблица\n                typeTag: table\n              order: n\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []\n              attributes:\n                - attrId: -30\n                  techName: coordinates\n                  name: Координаты\n                  enName: Coordinates\n                  type: \n                    name: Массив\n                    typeTag: array\n                  order: n\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n                - attrId: -31\n                  techName: type\n                  name: Тип геоданных\n                  enName: Type of geodata\n                  type:\n                    name: Строка\n                    typeTag: string\n                  order: n\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n            - attrId: -23\n              techName: geodata_center\n              name: Центроид\n              enName: Centroid\n              type: \n                name: Массив\n                typeTag: array\n              order: n\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []          \n\n    DatasetSettingsUpdateRequestBody:\n      value:\n        generalInfo:\n          fullName: Объекты культурного наследия\n          fullNameEn: Objects of cultural heritage  \n          identNumber:\n            inn: 7705021556\n            identName: Obektykulturnogonaslediya\n          oivId: 1201 \n          kindDatasetId: 7\n          typeDatasetId: 2\n          keywords: памятник, культурное наследие, культура, наследие\n          keywordsEn: monument, cultural heritage, culture, heritage\n          accountingObject: Объекты культурного наследия и выявленные объекты культурного наследия, в том числе с разделением по категориям, расположенные в пределах установленных границ города Москвы.\n          accountingObjectEn: Objects of cultural heritage and identified cultural heritage sites located within the established boundaries of the city of Moscow.                           \n          seasonalityTagId: allSeasonal\n          sefUrl: 7705021556-obekty-kulturnogo-naslediya-i-vyyavlennye-obekty-kulturnogo-naslediya\n          polygonsSortingTagId: asc \n          isClusteredByDistrict: false\n          isIsoIndicator: false\n          isAvailableIndicator: false\n          forumLink: null\n          isDict: false\n          dictTypeTagId: null\n          isManualRelease: false\n          useInDatasetsIds: []\n        newVersion:\n          setStatusActual: false\n          publicationCatalogId: 9773\n          publicationCatalogVersionNum: 3\n          hasGeo: true\n          attributes:\n            - attrId: 1035661\n              techName: ObjectNameOnDoc\n              name: Наименование объекта по документам\n              enName: Name of the object according to the documents\n              type:\n                name: Строка\n                typeTag: string \n              order: 1\n              isDisplay: true\n              isDisplayInTable: true\n              isDisplayInExport: true\n              systemAttr:\n                - name\n            - attrId: 1185896\n              techName: Location\n              name: Местоположение объекта\n              enName: Location\n              type:\n                name: Таблица\n                typeTag: table \n              order: 2\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []   \n              attributes: \n                - attrId: 1185900\n                  techName: Address\n                  name: Адрес/Адресный ориентир/Местоположение\n                  enName: Address\n                  type:\n                    name: Строка\n                    typeTag: string \n                  order: 3\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n                - attrId: 1185901\n                  techName: UNOM\n                  name: УНОМ\n                  enName: UNOM\n                  type:\n                    name: Целое число\n                    typeTag: integer \n                  order: 4\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n            - attrId: -17\n              techName: geoData\n              name: Геоданные\n              enName: Geodata\n              type:\n                name: Таблица\n                typeTag: table\n              order: n\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []\n              attributes:\n                - attrId: -30\n                  techName: coordinates\n                  name: Координаты\n                  enName: Coordinates\n                  type: \n                    name: Массив\n                    typeTag: array\n                  order: n\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n                - attrId: -31\n                  techName: type\n                  name: Тип геоданных\n                  enName: Type of geodata\n                  type:\n                    name: Строка\n                    typeTag: string\n                  order: n\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n            - attrId: -23\n              techName: geodata_center\n              name: Центроид\n              enName: Centroid\n              type: \n                name: Массив\n                typeTag: array\n              order: n\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []                  \n        actualVersion:\n          releases:\n            actualReleaseId: 9863\n            deleteReleaseIds:\n              - 9864\n              - 9865\n\n\n    # Примеры ответов-сущностей\n\n    DatasetListItemArrayResponse:\n      value:\n        - id: 530\n          fullName: Объекты культурного наследия\n          publicationStatusTagId: published\n          actualVersionNum: 2\n          actualVersionOpenDate: 10.11.2024\n          actualReleaseNum: 5\n          actualReleaseOpenDate: 15.05.2025 15:13:54\n          actualReleaseCntObj: 156 \n          releaseMode: Автоматический режим\n          publicationCatalogId: 123456\n          publicationCatalogFullName: Объекты культурного наследия\n          publicationCatalogHasNewVersion: true\n        - id: 60749\n          fullName: Закон о бюджете города Москвы на 2015 год и плановый период 2016 и 2017 годов. Распределение бюджетных ассигнований по государственным программам города Москвы и подпрограммам государственных программ города Москвы\n          publicationStatusTagId: archive\n          actualVersionNum: 6\n          actualVersionOpenDate: 30.04.2023\n          actualReleaseNum: 185\n          actualReleaseOpenDate: 13.05.2025 18:03:36\n          actualReleaseCntObj: 56\n          releaseMode: Ручной режим\n          publicationCatalogId: 100873\n          publicationCatalogFullName: Закон о бюджете города Москвы на 2015\n          publicationCatalogHasNewVersion: false\n\n    DatasetVersionArrayResponse:\n      value:\n        - id: 8543\n          versionNum: 2\n          openDate: null\n          hasGeo: true\n          publicationStatusTagId: new\n          publicationCatalogId: 193456\n          publicationCatalogFullName: Объекты культурного наследия\n          publicationCatalogVersionNum: 4\n        - id: 6739\n          versionNum: 1\n          openDate: 01.09.2024\n          hasGeo: true\n          publicationStatusTagId: historical\n          publicationCatalogId: 193456\n          publicationCatalogFullName: Объекты культурного наследия\n          publicationCatalogVersionNum: 3\n\n    DatasetLiteArrayResponse:\n      value:\n        - id: 530\n          name: Объекты культурного наследия\n        - id: 60749\n          name: Закон о бюджете города Москвы на 2015 год и плановый период 2016 и 2017 годов. Распределение бюджетных ассигнований по государственным программам города Москвы и подпрограммам государственных программ города Москвы\n\n    DatasetGeneralInfoResponse:\n      value:\n        fullName: Объекты культурного наследия\n        fullNameEn: Objects of cultural heritage\n        publicationStatusTagId: published\n        publicationCatalogId: 9773\n        publicationCatalogFullName: Объекты культурного наследия\n        publicationCatalogStatus: Публикуется автоматически\n        publicationCatalogHasNewVersion: false  \n        identNumber:\n          inn: 7705021556\n          identName: Obektykulturnogonaslediya\n        oiv: \n          id: 1201\n          name: Департамент культурного наследия города Москвы\n        respPersonFIO: Иванов Иван Иванович\n        respPersonEmail: ivanovii@mail.ru\n        respPersonPhone: +79876543210\n        thematicCategory:  \n          id: 107\n          name: Культура \n        kindDataset:\n          id: 7\n          name: Список\n        typeDataset:\n          id: 2 \n          name: Городской отраслевой (ведомственный)\n        keywords: памятник, культурное наследие, культура, наследие\n        keywordsEn: monument, cultural heritage, culture, heritage\n        accountingObject: Объекты культурного наследия и выявленные объекты культурного наследия, в том числе с разделением по категориям, расположенные в пределах установленных границ города Москвы.\n        accountingObjectEn: Objects of cultural heritage and identified cultural heritage sites located within the established boundaries of the city of Moscow.                           \n        periodUpdate: Ежемесячно\n        firstPublicationDate: 17.06.2014                           \n        seasonality:\n          tagId: allSeasonal\n          name: Всесезонный набор данных\n        sefUrl: 7705021556-obekty-kulturnogo-naslediya-i-vyyavlennye-obekty-kulturnogo-naslediya\n        polygonsSortingTagId: asc \n        isClusteredByDistrict: false\n        isIsoIndicator: false\n        isAvailableIndicator: false\n        forumLink: null\n        isDict: false\n        dictTypeTagId: null\n        isManualRelease: false\n        accessKey: 020178a3-aafd-471b-95a6-7429b7e4361c\n        useInDatasetsIds: []\n        description: |-\n          Набор данных \"Объекты культурного наследия города Москвы\" содержит информацию об объектах, находящихся в соответствии с Федеральным законом от 25 июня 2002 г. № 73-ФЗ \"Об объектах культурного наследия (памятниках истории и культуры) народов Российской Федерации\" под государственной охраной, а именно: объектах культурного наследия, включенных в единый государственный реестр объектов культурного наследия (памятников истории и культуры) народов Российской Федерации, и выявленных объектах культурного наследия.\n\n    DatasetVersionAttributesResponse:\n      value:\n        - attrId: 1035661\n          techName: ObjectNameOnDoc\n          name: Наименование объекта по документам\n          enName: Name of the object according to the documents\n          type: \n            name: Строка\n            typeTag: string \n          order: 1\n          isDisplay: true\n          isDisplayInTable: true\n          isDisplayInExport: true\n          systemAttr:\n            - name\n        - attrId: 1185896\n          techName: Location\n          name: Местоположение объекта\n          enName: Location\n          type:\n            name: Таблица\n            typeTag: table \n          order: 2\n          isDisplay: true\n          isDisplayInTable: false\n          isDisplayInExport: true\n          systemAttr: []   \n          attributes: \n            - attrId: 1185900\n              techName: Address\n              name: Адрес/Адресный ориентир/Местоположение\n              enName: Address\n              type: \n                name: Строка\n                typeTag: string \n              order: 3\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []\n            - attrId: 1185901\n              techName: UNOM\n              name: УНОМ\n              enName: UNOM\n              type:\n                name: Целое число\n                typeTag: integer \n              order: 4\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []\n\n    DatasetVersionReleasesListResponse:\n      value:\n        - id: 1954\n          releaseNum: 3\n          createDate: 03.05.2025 10:01:00\n          openDate: null\n          publicationStatus: new\n          cntObjects: 10\n          publicationCatalogReleaseId: 15\n        - id: 1953\n          releaseNum: 2\n          createDate: 02.05.2025 18:25:00\n          openDate: 02.05.2025 20:59:00\n          publicationStatus: actual\n          cntObjects: 11\n          publicationCatalogReleaseId: 13\n        - id: 1952\n          releaseNum: 1\n          createDate: 01.05.2025 12:30:00\n          openDate: 01.05.2025 12:31:00\n          publicationStatus: historical\n          cntObjects: 10\n          publicationCatalogReleaseId: 12\n\n    # Примеры успешных стандартных ответов\n\n    DatasetCreatedResponse:\n      description: Пример ответа при успешном создании набора данных.\n      value:\n        id: 64033\n        code: 201\n        messageType: Created\n        message: Набор данных успешно создан!\n\n    DatasetEditedResponse:\n      description: Пример ответа при успешном изменении набора данных.\n      value:\n        id: 64033\n        code: 200\n        messageType: Ok\n        message: Набор данных успешно изменён!\n\n    DatasetDeletedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные наборы данных успешно удалены!\n\n    DatasetVersionCreatedResponse:\n      description: Пример ответа при успешном создании новой набора данных.\n      value:\n        id: 15693\n        code: 201\n        messageType: Created\n        message: Версия набора данных успешно создана!\n\n    DatasetVersionOpenedResponse:\n      description: Пример ответа при успешном открытии версии набора данных.\n      value:\n        id: 15693\n        code: 200\n        messageType: Ok\n        message: Статус версии успешно изменён на \"Актуальная\".\n\n    DatasetReleaseSetActualResponse:\n      description: Пример ответа при успешном назначении релиза актуальным\n      value:\n        id: 6539\n        code: 200\n        messageType: Ok\n        message: Статус релиза успешно изменён на \"Актуальный\".\n\n    DatasetReleaseDeletedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Релиз набора данных успешно удалён!\n\n    SeasonalityChangeResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Сезонность успешно изменена!\n\n    # Примеры стандартных ответов об ошибке\n\n    PublicationCatalogForDatasetNotFoundResponse:\n      description: Передан несуществующий id каталога публикации, с которым должен быть связан набор данных.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталог публикации с идентификатором {publicationCatalogId} не существует.\n\n    PublicationCatalogVersionNotFoundResponse:\n      description: Передан несуществующий номер версии связанного каталога публикации.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталога публикации версии {publicationCatalogVersionNum} не существует.\n\n    DatasetNotFoundResponse:\n      description: Передан несуществующий id набора данных.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Набора данных с идентификатором {datasetId} не существует.\n\n    DatasetVersionNotFoundResponse:\n      description: Передан несуществующий номер версии набора данных.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Версии с номером {versionNum} у набора данных {datasetId} не существует.\n\n    DatasetReleaseNotFoundResponse:\n      description: Проверяется существование релиза в рамках указанного набора данных.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Релиза с идентификатором {releaseId} не существует в наборе данных {datasetId}.\n\n    PublicationCatalogReleaseForDatasetReleaseNotFoundResponse:\n      description: Передан несуществующий id набора данных, который указан как используемый в качестве справочника;\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Не найден релиз каталога публикации {publicationCatalogId}, на основе которого можно создать релиз набора данных.\n\n    OPODNotContainInSystemsConsumersPublicationCatalogResponse:\n      description: В настройках каталога публикации не указана система-потребитель \"Портал открытых данных\"\n      value:\n        code: 400\n        messageType: BadRequest\n        message: В каталоге публикации {publicationCatalogId} среди систем-потребителей не указан \"Портал открытых данных\".\n\n    PublicationCatalogAlredyConnectedAnotherDatasetResponse:\n      description: Каталог, который выбрали для связи с набором данных или его версией уже используется в другом наборе данных.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Каталог публикации {publicationCatalogId} уже связан с другим набором данных {datasetId}\".\n\n    DatasetVersionAlredyCreatedResponse:\n      description: Набор данных уже имеет закрытую версию, которая должна быть открыта.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Набор данных {datasetId} уже имеет закрытую версию {versionNumber}\".\n\n    DatasetVersionIsNotNewResponse:\n      description: Указанная версия не находится в статусе \"Новая\"\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Для версии с номером {number} у набора данных {datasetId} невозможно установить статус \"Актуальная\", так как версия не имеет статус \"Новая\".\n\n    OIVNotContainInPublicationCatalogResponse:\n      description: Ответственный ОИВ - oivId, указанный в запросе, не содержится в списке поставщиков каталога публикации, указанного в актуальной или первой новой версии\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указанный поставщик информации {oivId}, не содержится в списке поставщиков связанного каталога публикации.\n    \n    IncorrectSefUrlResponse:\n      description: Значение поля sefUrl не соответствует правилам\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указано некорректное значение поля sefUrl. Значение поля может содержать только символы [a-zA-Z0-9-]\n\n    IncorrectRefDatasetDictResponse:\n      description: Некорректный список связанных справочных наборов данных.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указан некорректный список связанных справочных наборов данных. Список должен содержать наборы данных с признаком \"Справочник\". \n    \n    IncorrectRefDictDatasetResponse:\n      description: Некорректный список связанных наборов данных для справочного НД.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указан некорректный список связанных наборов данных. Список должен содержать наборы данных без признака \"Справочник\".\n\n    AttrIdNotFoundInPublicationCatalogResponse:\n      description: Переданный в настройках новой версии attrId не найден в связанной версии каталога публикации.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указанный идентификатор атрибута {attrId} отсутствует в списке атрибутов связанного каталога публикации.\n\n    AttrTechNameNotFoundInPublicationCatalogResponse:\n      description: Переданный в настройках новой версии techName не найден в связанной версии каталога публикации.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указанное техническое наименование атрибута {techName} отсутствует в списке атрибутов связанного каталога публикации.          \n\n    ReleaseNotFoundInPublicationCatalogResponse:\n      description: Проверяется чтобы каталог публикации, указанный в настройках версии набора данных, содержал хотя бы 1 релиз.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Каталог публикации {publicationCatalogId} не может быть связан с версией набора данных, так как в каталоге отсутсвуют релизы.\n\n    DatasetStatusIsNotPublished:\n      description: Проверяется чтобы НД находился в статусе \"Опубликован\", когда пытаются назначить актуальными версию или релиз\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Невозможно назначить актуальными версии и релизы набора данных, так как набор данных не находится в статусе \"Опубликован\".\n\n    DatasetActualReleaseDeleteResponse:\n      description: Проверяется статус релиза при удалении. Актуальный релиз недоступен для удаления.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Невозможно удалить релиз, так как он имеет статус \"Актуальный\".\n\n    DatasetReleaseDeleteBeforeActualReleaseResponse:\n      description: Проверяется дата выпуска релиза при удалении. Релиз, выпущенный раньше актуального релиза, недоступен для удаления.\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Невозможно удалить релиз, так как он выпущен раньше релиза в статусе \"Актуальный\".\n\n    DatasetStatusIsArchive:\n      description: Проверяется чтобы набор данных НЕ находился в статусе \"Архивный\", когда пытаются создать новую версию\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Невозможно создать новую версию, так как набор данных находится в статусе \"Архивный\"\n\n    ChangeStatusDatasetWhenPublicationCatalogStatusIsUnpublishedResponse:\n      description: Проверяется чтобы при изменении статуса НД на \"На проверке\", \"Опубликован\", \"Архивный\", статус связанного КП был отличным от \"Не опубликован\"\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Набор данных не может быть переведён в статусы \"На проверке\", \"Опубликован\", \"Архивный\", так как связанный каталог публикации находится в статусе \"Не опубликован\"          \n\n    ChangeStatusDatasetWhenPublicationCatalogStatusIsArchiveResponse:\n      description: Проверяется чтобы при изменении статуса НД на \"Опубликован\", статус связанного КП был отличным от \"Архивный\"\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Набор данных не может быть переведён в статус \"Опубликован\", так как связанный каталог публикации находится в статусе \"Архивный\"\n\n    ChangeStatusDatasetWhenPublicationCatalogStatusIsPublishedResponse:\n      description: Проверяется чтобы при изменении статуса НД на \"Архивный\", статус связанного КП был отличным от \"Публикуется\"\n      value:\n        code: 400\n        messageType: BadRequest\n        message: Набор данных не может быть переведён в статус \"Архивный\", так как связанный каталог публикации находится в статусе \"Публикуется\"\n\n    VersionHasGeoResponse:\n      description: |-\n        Проверяется чтобы при hasGeo: true, передавались атрибуты с идентификаторами -17, -30, -31, -23 \n      value:\n        code: 400\n        messageType: BadRequest\n        message: \"В настройках версии при наличии геопривязки должны передаваться настройки атрибутов, связанных с геоданными: Геоданные, Координаты, Тип геоданных, Центроид.\"\n\n    VersionNotHasGeoResponse:\n      description: |-\n        Проверяется чтобы при hasGeo: false, НЕ передавались атрибуты с идентификаторами -17, -30, -31, -23 \n      value:\n        code: 400\n        messageType: BadRequest\n        message: \"В настройках версии при отсутствии геопривязки не должны передаваться настройки атрибутов, связанных с геоданными: Геоданные, Координаты, Тип геоданных, Центроид.\"\n\n    IncorrectChildCatalogId:\n      description: |-\n        Проверяется чтобы для табличного атрибута указывался childCatalogId, равный тому, который указан в связанной версии КП  \n      value:\n        code: 400\n        messageType: BadRequest\n        message: Указанный childCatalogId в атрибуте {techName} не соответствует тому, который указан для этого атрибута в связанной версии КП.\n\n    MismatchAttributeNameWithTagId:\n      description: |-\n        Проверяется чтобы переданные attributes.type.name и attributes.type.tagId соответствовали друг другу  \n      value:\n        code: 400\n        messageType: BadRequest\n        message: Наименование типа атрибута не соответсвует указанному тегу типа атрибута.          ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с объектами и списком объектов каталогов заполнения\n  version: 1.0.0\n\npaths:\n  /catalogObjects/columns:\n    get:\n      tags:\n        - catalogObjects\n      summary: Получение столбцов для открытия списка объектов каталога\n      description: |-\n        Возвращает информацию о столбцах списка объектов каталога.\n        Ответ включает технические столбцы, например: статус объекта, дата создания объекта, информация о последнем изменении объекта и т.п.,\n        а также атрибуты каталога.\n\n        Каждый столбец в ответе содержит информацию о типе столбца, его названии, отображаемом в интерфейсе,\n        а также названиях полей, которые используются в JSON объекта в методе `POST /catalogObjects/search`.\n\n        Техническое наименование столбца для атрибута каталога возвращается в формате `field_{attrId}`,\n        где `attrId` - идентификатор атрибута в ЕХД.\n\n        При наличии ручного ввода атрибутов при Автозаполнении в каталоге возвращаются столбцы вида `field_{attrId}_manual`,\n        обозначающие признак введения пользователем значение атрибута в поле `field_{attrId}` вручную.\n        Такие столбцы возвращаются typeTag=boolean, columnType=manualInput и тем же attrId, что и для самого атрибута.\n\n        При наличии ручного ввода для геоданных или ручного ввода местоположения в каталоге возвращаются столбцы\n        `isManualGeo` или `isManualLocation`, обозначающие признак введения пользователем значения геоданных вручную (блок \"На карту\") или \n        значения атрибутов местоположения вручную (блок \"Из карты\"). Такие столбцы возвращаются typeTag=boolean, columnType=manualInput.\n        Идентификатор столбца attrId для ручного ввода местоположения равен -1011.\n        Идентификатор столбца attrId для ручного ввода геоданных (для блока \"На карту\") равен отрицательному значению идентификатора атрибута в каталоге \n        (catalogAttrId), который используется для сопоставления со справочником, минус 1000.\n\n\n        Столбцы возвращаются в порядке следования в таблице.\n\n        Для табличных атрибутов (вложенных каталогов) возвращаются только столбцы с идентификаторами\n        (global_id, system_object_id) и атрибуты каталога.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogObjectListColumn'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectListColumnArrayResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/search:\n    post:\n      tags:\n        - catalogObjects\n      summary: Поиск по списку объектов корневого каталога\n      description: |-\n        Возвращает информацию об объектах корневого каталога, удовлетворяющих условиям поиска.\n        Каждый объект содержит значения по атрибутам, которые возвращаются в методе `GET /catalogObjects/columns`.\n\n        В теле запроса передаются объекты фильтров и сортировки\n        Метод позволяет выполнять многоуровневую сортировку.\n\n        Порядок сортировки определяется порядком следования объектов сортировки в теле запроса.\n\n        По умолчанию объекты сортируются в порядке возрастания глобального идентификатора.\n\n        Метод позволяет выполнять фильтрацию по вложенным каталогам первого уровня.\n        Для таких фильтров передается поле `childCatalogId`.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: '#/components/parameters/objectStatusesQueryParam'\n        - $ref: '#/components/parameters/globalIdsQueryParam'\n        - $ref: '#/components/parameters/signedVersionQueryParam'\n        - $ref: '#/components/parameters/isErrorQueryParam'\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataQueryParam' \n      requestBody:\n        $ref: '#/components/requestBodies/CatalogObjectsSearchFilters'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogObjectListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/CatalogObjectSearchNotFoundResponse'\n\n  /catalogObjects/child/search:\n    post:\n      tags:\n        - catalogObjects\n      summary: Поиск по списку объектов вложенного каталога\n      description: |-\n        Возвращает информацию об объектах вложенного каталога в привязке к родительскому объекту (передается в пути запроса).\n        Каждый объект содержит значения по атрибутам, которые возвращаются в методе `GET /catalogObjects/columns`.\n        \n        В теле запроса передаются объекты фильтров и сортировки. Метод позволяет выполнять многоуровневую сортировку.\n\n        Порядок сортировки определяется порядком следования объектов сортировки в теле запроса.\n\n        По умолчанию объекты сортируются в порядке возрастания глобального идентификатора.\n      parameters:\n        - $ref: '#/components/parameters/parentGlobalIdQueryParam'\n        - $ref: '#/components/parameters/rootGlobalIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/parentCatalogIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/rootCatalogIdQueryParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: '#/components/parameters/signedVersionQueryParam'    \n      requestBody:\n        description: Пример тела запроса с фильтрами и сортировками по списку объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ChildCatalogObjectListFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogObjectChildSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ChildCatalogObjectListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ChildCatalogObjectListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/ChildCatalogObjectSearchNotFoundResponse'\n\n  /catalogObjects:\n    post:\n      tags:\n        - catalogObjects\n      summary: Сохранение объекта\n      description: |-\n        Метод используется для сохранения объекта, его изменений, удаления в каталоге заполнения.\n\n        Объект передается полностью, если значение атрибута не передано, оно считается пустым.\n\n        В метод можно передавать объекты, относящиеся только к одному каталогу заполнения.\n      requestBody:\n        description: Тело запроса для сохранения объекта в каталоге\n        content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/FillingCatalogObject'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectRequest'\n      responses:\n        '200':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OkCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkCatalogObjectResponse'\n        '207':\n          description: |-\n            Ответ при успешной обработке запроса, при наличии ошибок для некоторых объектов.\n            Ошибки могут как относиться к бизнес-логике, так и быть техническими.\n            Для каждого объекта возвращается отдельный код ответа.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК).\n                Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/OkCatalogObjectResponse'\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/MultiStatusCatalogObjectResponse'\n        '400':\n          description: |-\n            Ответ, возвращаемый, если для всех объектов в запросе получена ошибка бизнес-логики при сохранении\n            или данные не могут сохранены, так как каталог находится в процессе подписания.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК). Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге;\n              - Каталог находится в процессе подписания;\n              - Для объектов передан разный корневой каталог.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Объекты не прошли проверку форматно-логического контроля или не найдены:\n                  $ref: '#/components/examples/IncorrectDataCatalogObjectResponse'\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogObjectCatalogIsSigningResponse'\n                Попытка записи в разные каталоги:\n                  $ref: '#/components/examples/WriteToDifferentCatalogsResponse'\n                Геоданные объекта не прошли первичную валидацию:\n                  $ref: '#/components/examples/IncorrectGeodataCatalogObjectResponse'\n\n    get:\n      tags:\n        - catalogObjects\n      summary: Получение данных объекта\n      description: |-\n        Возвращает полную информацию об объектах по идентификаторам.\n\n        Для поиска могут быть использованы глобальные идентификаторы или идентификаторы в системе-поставщике.\n        Результат поиска будет слит в общий массив, в котором объект будет повторяться один раз.\n\n        Если оба массива не будут переданы или объекты по переданным идентификаторам не будут найдены, то вернется пустой массив.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: globalIds\n          in: query\n          required: false\n          description: |-\n            Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\n            Число элементов в массиве: до `100`.\n          schema:\n            type: array\n            maxItems: 100\n            items:\n              type: integer\n              format: int64\n        - $ref: '#/components/parameters/objectStatusesQueryParam'\n        - name: systemObjectIds\n          in: query\n          required: false\n          description: |-\n            Идентификаторы объектов каталога в системе-поставищике, которые нужно вернуть.\n\n            Число элементов в массиве: до `100`.\n          schema:\n            type: array\n            maxItems: 100\n            items:\n              type: string\n        - name: returnStatus\n          description: |-\n            Возвращать ли поля статуса объекта.\n            Если передан true, то в ответ включаются следующие поля:\n              - статус объекта (поле `objectStatus`);\n              - наличие ошибок фоновой проверки в объекте (поле `isError`).\n\n            Эти поля также возвращаются в методе `POST  /catalogObjects/search`.\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: verbose\n          description: |-\n            Возвращать ли подробный ответ для ссылочных и справочных объектов.\n\n            При передаче `true` в значениях ссылочных и справочных атрибутов возвращается объект,\n            содержащий идентификатор объекта ссылочного каталога `globalId` или элемента справочника `dictElementId`,\n            а также строковое значение `value` того атрибута, которое выбрано для отображения в каталоге.\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: returnSystem\n          description: |-\n            Возвращать ли системные атрибуты в ответе.\n\n            Системные атрибуты включают:\n              - дату создания (attrId = -16);\n              - дату подписания (attrId = -4);\n              - информацию о подписи объекта (attrId = -12);\n              - дату последнего изменения (attrId = -11);\n              - тип последнего изменения (attrId = -10);\n              - актора, совершившего последнее изменение, пользователя или систему (attrId = -13);\n              - наличие геоданных (attrId = -22).\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataQueryParam'    \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: '#/components/schemas/FillingCatalogObject'\n                    - $ref: '#/components/schemas/FillingCatalogObjectVerbose'\n              examples:\n                verbose = false, returnStatus=false, returnSystem = false, fetchGeodata = EPSG:4326:\n                  $ref: '#/components/examples/CatalogObjectResponse'\n                verbose = true, returnStatus=true, returnSystem = true, fetchGeodata = EPSG:4326:\n                  $ref: '#/components/examples/CatalogObjectVerboseReturnSystemResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/errors:\n    get:\n      tags:\n        - catalogObjects\n      summary: Получение ошибок объекта каталога, обнаруженных при фоновой проверке\n      description: |-\n        Возвращает информацию об ошибках объекта каталога. Ответ включает ошибки конструктора проверок, свойтв атрибутов, а также условной и групповой уникальности.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/globalIdsRequiredQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogObjectErrors'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectsErrorsArrayResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/editProperties:\n    get:\n      tags:\n        - catalogObjects\n      summary: Получение свойств редактирования каталога для карточки объекта\n      description: |-\n        Метод возвращает свойства каталога и атрибутов, которые влияют на отображение карточки объекта при её открытии.\n\n        Если среди корневых атрибутов КЗ есть атрибут, изменяемых при удалении, то `hasDelOperModeAttr` возвращается как true.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      responses:\n        '200':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/EditProperties'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/EditPropertiesResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/rollback:\n    post:\n      tags:\n        - catalogObjects\n      summary: Отмена изменений объекта\n      description: |-\n        Метод используется для отмены неподписанных изменений в объектах и приведения их к последнему подписанному состоянию.\n\n        Переход по статусам осуществляется в соответствии с правилами:\n          - toModification -> signed, \n          - toDeletion -> signed, \n          - toRecovery -> deleted,\n          - new, deleted, signed -> игнорируются.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      requestBody:\n        description: Тело запроса с массивом идентификаторов объектов\n        content:\n            application/json:\n              schema:\n                type: array\n                description: Глобальные идентификаторы объектов\n                items:\n                  type: integer\n                minItems: 1\n                maxItems: 500\n              example:\n                - 843645422\n                - 645340803\n                - 656542982\n                - 322456767\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectRollbackResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Каталог находится в процессе подписания;\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogObjectCatalogIsSigningResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/recover:\n    post:\n      tags:\n        - catalogObjects\n      summary: Восстановление объекта\n      description: |-\n        Метод используется для восстановления объектов из статуса `Удаленный`.\n\n        Переход по статусам осуществляется в соответствии с правилами:\n          - deleted -> toRecovery\n\n        Если переданы объекты в статусах, отличных от `deleted`, они будут проигнорированы.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      requestBody:\n        description: Тело запроса с массивом идентификаторов объектов\n        content:\n            application/json:\n              schema:\n                type: array\n                description: Глобальные идентификаторы объектов\n                items:\n                  type: integer\n                minItems: 1\n                maxItems: 500\n              example:\n                - 843645422\n                - 645340803\n                - 656542982\n                - 322456767\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectRecoveredResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Каталог находится в процессе подписания;\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogObjectCatalogIsSigningResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/delete:\n    post:\n      tags:\n        - catalogObjects\n      summary: Удаление объекта\n      description: |-\n        Метод используется для удаления выбранных объектов.\n\n        Переход по статусам осуществляется в соответствии с правилами:\n          - new -> удаляется целиком,\n          - signed -> toDeletion, \n          - toModification -> toDeletion,\n          - toRecovery, toDeletion, deleted -> игнорируются.\n\n        В теле запроса передаются данные атрибутов, заполняемых при удалении объекта.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      requestBody:\n        description: Тело запроса с данными объектов для удаления\n        content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ObjectsDataForDeletion'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectsDataForDeletionRequest'\n      responses:\n        '200':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OkCatalogObjectDeletedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkCatalogObjectDeletedResponse'\n        '207':\n          description: |-\n            Ответ при успешной обработке запроса, при наличии ошибок для некоторых объектов.\n            Ошибки могут как относиться к бизнес-логике, так и быть техническими.\n            Для каждого объекта возвращается отдельный код ответа.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК).\n                Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/OkCatalogObjectResponse'\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/MultiStatusCatalogObjectDeletedResponse'\n        '400':\n          description: |-\n            Ответ, возвращаемый, если для всех объектов в запросе получена ошибка бизнес-логики при сохранении\n            или данные не могут сохранены, так как каталог находится в процессе подписания.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК). Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге;\n              - Каталог находится в процессе подписания;\n              - Для объектов передан разный корневой каталог.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Объекты не прошли проверку форматно-логического контроля или не найдены:\n                  $ref: '#/components/examples/IncorrectDataCatalogObjectDeletedResponse'\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogObjectCatalogIsSigningResponse'\n                Попытка записи в разные каталоги:\n                  $ref: '#/components/examples/WriteToDifferentCatalogsResponse'\n                Геоданные объекта не прошли первичную валидацию:\n                  $ref: '#/components/examples/IncorrectGeodataCatalogObjectDeletedResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/clear:\n    post:\n      tags:\n        - catalogObjects\n      summary: Удаление всех объектов каталога\n      description: |-\n        Метод используется для запуска фонового процесса удаления всех объектов выбранного каталога.\n\n        Переход по статусам осуществляется в соответствии с правилами:\n          - new -> удаляется целиком,\n          - signed -> toDeletion, \n          - toModification -> toDeletion,\n          - toDeletion -> toDeletion (статус не меняется, но обработка выполняется),\n          - toRecovery, deleted -> игнорируются.\n\n        В теле запроса передаются данные атрибутов, заполняемых при удалении объекта.\n        Также при удалении запускается конструктор, если он настроен для каталога. \n        Запускается главный пакет конструктора и другие пакеты с параметрами (должны выполняться оба условия):\n          - event = change / delete\n          - mode = event / eventAndBackground \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      requestBody:\n        description: Тело запроса с данными атрибутов объектов для удаления\n        content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    description: Массив атрибутов и их значений в рамках удаляемых объектов\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/FillingCatalogObjectDataItem'\n                required:\n                  - data\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ObjectsDataForClearingRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DeletionCreatedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Каталог находится в процессе подписания;\n              - Каталог находится в процессе импорта;\n              - Для каталога НЕ выставлен флаг \"Возможно одновременное удаление всех объектов\";\n              - Для каталога уже запущено удаление;\n              - Для каталога запущена фоновая проверка.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogObjectCatalogIsSigningResponse'\n                Для каталога запущена фоновая проверка:\n                  $ref: '#/components/examples/CatalogIsBackCheckResponse'\n                Каталог находится в процессе импорта:\n                  $ref: '#/components/examples/CatalogIsImportingResponse'\n                Для каталога НЕ выставлен флаг \"Возможно одновременное удаление всех объектов\":\n                  $ref: '#/components/examples/AllObjectsDeletionNotAllowedResponse'\n                Для каталога уже запущено удаление:\n                  $ref: '#/components/examples/CatalogInDeletionError'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /catalogObjects/clear/{deletionId}/cancel:\n    get:\n      tags:\n        - catalogObjects\n      summary: Отмена удаления всех объектов каталога\n      description: |-\n        Метод позволяет отменить выбранный процесс удаления всех объектов каталога. \n      parameters:\n        - $ref: '#/components/parameters/deletionIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DeletionCanceledByUserResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Удаление уже завершено.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Удаление уже завершено:\n                  $ref: '#/components/examples/DeletionFinishedError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id удаление не существует. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id удаления:\n                  $ref: '#/components/examples/DeletionNotFoundError'\n          \n  /catalogObjects/clear/history:\n    post:\n      tags:\n        - catalogObjects\n      summary: Получение истории удаления всех объектов каталога\n      description: |-\n        Метод позволяет получить историю удаления всех объектов выбранного каталога.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `userName`, `dateStart`, `dateEnd`, используется тело запроса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка истории удаления (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - userName\n                              - dateStart\n                              - dateEnd\n            examples:\n              Пример:\n                  $ref: '#/components/examples/ObjectDeletionHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogObjDeletionHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/CatalogObjDeletionHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n\ncomponents:\n  schemas:\n    CommonChildObjectListItem:\n      description: |-\n        Информация об объекте, выводимая в списке объектов вложенного каталога (заполнения и публикации)\n      type: object\n      readOnly: true\n      properties:\n        globalObjectId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer\n          format: int64\n      required:\n        - globalObjectId\n\n    CommonObjectSignInfo:\n      description: Общая информация о подписании корневых объектов в списке объектов каталога заполнения\n      type: object\n      readOnly: true\n      properties:\n        subjectName:\n          description: Информация о подписанте\n          type: string\n        issuerName:\n          description: Информация о том, кто выпустил сертификат\n          type: string\n        signDate:\n          description: Дата подписания\n          type: string\n          format: date\n\n    CommonObjectListItem:\n      description: |-\n        Общая информация об объекте, выводимая в списке объектов каталога и вложенного каталога (каталогов заполнения и публикации)\n      type: object\n      readOnly: true\n      properties:\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        globalId:\n          description: Глобальный идентификатор объекта\n          type: integer\n          format: int64\n        attributes:\n          additionalProperties:\n            description: |-\n              - <*> = \"field_{attrId}\" для каталога заполнения\n              - <*> = \"field_{attrId}_manual\" для каталога заполнения при наличии ручного ввода у атрибута\n              - <*> = \"field_{catalogAttrId}\" для каталога публикации\n                  - attrId - идентификатор атрибута в ЕХД\n                  - catalogAttrId - идентификатор атрибута каталога\n              - <*> = \"isManualGeo\" ручной ввод геоданных для объекта каталога заполнения\n              - <*> = \"isManualLocation\" ручной ввод местоположения для объекта каталога заполнения\n\n              Значения атрибутов объекта, возвращаются в JSON в виде пары ключ - значение, где ключ записывается в формате \"field_{attrId}\". Возвращаются все атрибуты, кроме табличных. Незаполненные атрибуты имеют значение `null`. Значения формируются по следующим правилам в зависимости от типа:\n                - Строка - значение возвращается с типом string;\n                - Целое число - значение возвращается с типом integer;\n                - Дробное число - значение возвращается с типом number;\n                - Дата - значение возвращается в виде строки с типом string;\n                - Флаг - возвращается в виде объекта. Объект содержит строку `tableValue` со значением \"да\"/\"нет\"/\"\", а также соответствующее логическое значение в поле `boolValue`;\n                - Файл - возвращается в виде объекта. Объект содержит строку `tableValue` со значением \"Файлов: N\", где N - число файлов в значении атрибута, а также массив идентификаторов файлов `fileIds`;\n                - Справочник - возвращается в виде объекта. Объект содержит строку `tableValue` со значениями выбранных элементов справочника, разделенных точкой с запятой, а также массив объектов `dictElements` с данными выбранных элементов справочника. В данных объектах передаются `dictElementId` - идентификатор элемента справочника и `value` - значение атрибута справочника, выбранного для показа в каталоге.\n                В качестве значения выступает атрибут справочника, выбранный в настройках атрибута каталога;\n                - Ссылка - возвращается в виде объекта. Объект содержит строку `tableValue` со значениями выбранных элементов ссылочного каталога, разделенных точкой с запятой, а также массив объектов `linkObjects` с данными выбранных объектов-ссылок. В данных объектах передаются `globalId` - глобавльный идентификатор объекта из ссылочного каталога и `value` - значение атрибута ссылочного каталога, выбранного для показа в каталоге.\n                В качестве значения выступает атрибут ссылочного каталога, выбранный в настройках атрибута каталога.\n                - Таблица - возвращается в виде булевого значения, гдe `true` указывает на наличие вложенных объектов, `false` - на отсутствие.\n\n            oneOf:\n              - description: Значение строкового атрибута\n                type: string\n              - description: Значение целочисленного атрибута\n                type: integer\n              - description: Значение атрибута с типом дробное число\n                type: number\n              - description: Значение атрибута с типом дата\n                type: string\n              - description: Значение атрибута с типом флаг\n                type: object\n                properties:\n                  tableValue:\n                    description: Строковое значение атрибута типа Флаг для отображения в столбце таблицы объектов.\n                    type: string\n                  boolValue:\n                    description: Логическое значение атрибута типа Флаг. Имеет значение `null`, если объект не имеет значения атрибута. Возвращается только для атрибутов типа Флаг.\n                    type: boolean\n                required:\n                  - tableValue\n              - description: Значение атрибута с типом файл\n                type: object\n                properties:\n                  tableValue:\n                    description: |-\n                      Строковое значение атрибута типа Файл для отображения в столбце таблицы объектов.\n                      Имеет значение `Файлов: N`, где N - число файлов в значении атрибута\n                    type: string\n                  fileIds:\n                    description: Идентификаторы файлов значения файлового атрибута. Имеет значение `null`, если объект не имеет значения атрибута.\n                    type: array\n                    items:\n                      type: string\n                required:\n                  - tableValue\n              - description: Значение справочного атрибута\n                type: object\n                properties:\n                  tableValue:\n                    description: |-\n                      Строковое значение справочного атрибута для отображения в столбце таблицы объектов.\n                      Имеет значение из выбранных элементов справочника (из столбца, выбранного для отображения в каталоге), разделенных точкой с запятой.\n                    type: string\n                  dictElements:\n                    description: Массив элементов справочника, выбранных в качестве значения справочного атрибута. Имеет значение `null`, если объект не имеет значения атрибута.\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        dictElementId:\n                          description: Идентификатор элемента справочника.\n                          type: string\n                        value:\n                          description: Значение атрибута выбранного элемента справочника.\n                          oneOf:\n                            - type: string\n                            - type: number\n                            - type: integer\n                required:\n                  - tableValue\n              - description: Значение ссылочного атрибута\n                type: object\n                properties:\n                  tableValue:\n                    description: |-\n                      Строковое значение ссылочного атрибута для отображения в столбце таблицы объектов.\n                      Имеет значение из выбранных элементов ссылочного каталога (из главного атрибута ссылочного каталога), разделенных точкой с запятой.\n                    type: string\n                  linkObjects:\n                    description: Массив объектов ссылочного каталога, выбранных в качестве значения ссылочного атрибута. Имеет значение `null`, если объект не имеет значения атрибута.\n                    type: array\n                    items:\n                      type: object\n                      properties:\n                        globalId:\n                          description: Глобальный идентификатор ссылочного объекта.\n                          type: integer\n                        value:\n                          description: Значение атрибута выбранного объекта ссылочного каталога.\n                          oneOf:\n                            - type: string\n                            - type: number\n                            - type: integer\n                required:\n                  - tableValue\n              - description: Значение табличного атрибута. Значение `true` указывает на наличие вложенных объектов, `false` - на отсутствие.\n                type: boolean\n      required:\n        - globalId\n        - attributes\n        - systemObjectId\n\n    ObjectsDataForDeletion:\n      description: |-\n        Информация об объектах, передаваемая при удалении\n      type: object\n      properties:\n        globalIds:\n          description: Массив глобальных идентификаторов объектов\n          type: array\n          items:\n            type: integer\n            format: int64\n          minItems: 1\n          maxItems: 500\n        data:\n          description: Массив атрибутов и их значений в рамках удаляемых объектов\n          type: array\n          items:\n            $ref: '#/components/schemas/FillingCatalogObjectDataItem'\n      required:\n        - globalIds\n        - data\n\n    CatalogObjDeletionHistoryItem:\n      description: Элемент истории удаления всех объектов каталога \n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор процесса удаления\n          type: integer\n          format: int32\n        userName: \n          description: Имя пользователя, запустившего удаление\n          type: string\n        dateStart:\n          description: Дата старта процесса удаления\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата окончания процесса удаления\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        countInWorkObj:\n          description: Количество объектов, взятых в работу при запуске удаления\n          type: integer\n        countDeletedObj:\n          description: Количество удаленных объектов (по окончании процесса удаления)\n          type: integer\n        countErrorObj:\n          description: Количество ошибочных объектов (по окончании процесса удаления)\n          type: integer\n        logFileId:\n          description: Идентификатор (uuid) файла лога\n          type: string\n        status:\n          $ref: '#/components/schemas/ObjectDeletionHistoryStatus'\n      required:\n        - id\n        - userName\n        - dateStart\n        - countInWorkObj\n        - countDeletedObj\n        - status\n        - logFileId\n\n    ObjectDeletionHistoryStatus:\n      description: Статус в истории удаления всех объектов каталога заполнения\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/ObjectDeletionHistoryStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ObjectDeletionHistoryStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: В работе\n        tagId: inWork\n\n    ObjectDeletionHistoryStatusNameEnum:\n      description: Название статуса в истории удаления всех объектов каталога заполнения\n      oneOf:\n        - type: string\n          # enum:\n          #   - Новый\n          #   - В работе\n          #   - Удаление завершено успешно\n          #   - Удаление завершено с ошибками\n    \n    ObjectDeletionHistoryStatusTagIdEnum:\n      description: |-\n        Технчиеское наименование статуса в истории удаления всех объектов каталога заполнения\n          - `new` - Новый, \n          - `inWork` - В работе, \n          - `finishedSuccess` - Удаление завершено успешно,\n          - `finishedError` - Удаление завершено с ошибками.\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - inWork\n            - finishedSuccess\n            - finishedError\n\n    ObjectStatusTagIdEnum:\n      description: Техническое наименование статуса объекта\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - signed\n            - toModification\n            - toDeletion\n            - deleted\n            - toRecovery\n\n    ObjectStatusNameEnum:\n      description: Наименование статуса объекта\n      oneOf:\n        - type: string\n          # enum:\n          #   - Новый\n          #   - Подписанный\n          #   - На изменении\n          #   - На удалении\n          #   - Удаленный\n          #   - На восстановлении\n\n    ObjectProcess:\n      description: Процесс, запущенный на каталоге или объекте каталога\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор процесса\n        name:\n          $ref: '#/components/schemas/ObjectProcessNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ObjectProcessTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: Фоновая проверка\n        tagId: backgroundCheck\n\n    ObjectProcessNameEnum:\n      description: Название процесса\n      oneOf:\n        - type: string\n          # enum:\n          #   - Фоновая проверка\n          #   - Подписание\n          #   - Импорт\n    \n    ObjectProcessTagIdEnum:\n      description: |-\n        Технчиеское наименование процесса, запущенного на каталоге или объекте каталога\n          - `backgroundCheck` - Фоновая проверка, \n          - `signing` - Подписание, \n          - `import` - Импорт\n      oneOf:\n        - type: string\n          enum:\n            - backgroundCheck\n            - signing\n            - import\n        \n    CatalogObjectListColumnTypeTagIdEnum:\n      description: |-\n        Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога:\n          - `technical` - техническая информация\n          - `attribute` - атрибут каталога\n          - `manualInput` - признак ручного ввода для атрибута каталога или для геоданных объекта или для атрибутов определяющих местоположения\n      oneOf:\n        - type: string\n          enum:\n            - technical\n            - attribute\n            - manualInput\n\n    CatalogObjectActionTagIdEnum:\n      description: |-\n        Тип действия с объектом при сохранении:\n          - `added` - создание нового объекта,\n          - `modified` - изменение существующего объекта,\n          - `deleted` - удаление существующего объекта\n\n        Не передается в пуш-уведомлении\n      oneOf:\n        - type: string\n          enum:\n            - added\n            - modified\n            - deleted\n\n    CatalogObjectResponseActionTagIdEnum:\n      description: |-\n        Тип действия с объектом, к которому относится возвращаемый ответ:\n          - `added` - сохранение объекта;\n          - `modified` - редактирование объекта;\n          - `deleted` - удаление объекта;\n          - `recovered` - восстановление объекта;\n      oneOf:\n        - type: string\n          enum:\n            - added\n            - modified\n            - deleted\n            - recovered\n\n    ObjectStatus:\n      description: Статус объекта\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: Идентификатор статуса\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/ObjectStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ObjectStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: Новый\n        tagId: new\n\n    LastChangeTypeTagIdEnum:\n      description: |-\n        Тип последнего изменения объекта:\n          - `added` - Создание,\n          - `modified` - Изменение,\n          - `signatured` - Подписание,\n          - `deleted` - Удаление,\n          - `recovered` - Восстановление,\n      oneOf:\n        - type: string\n          enum:\n            - added\n            - modified\n            - signatured\n            - deleted\n            - recovered\n\n    LastChangeTypeNameEnum:\n      description: Наименование типа последнего изменения объекта\n      oneOf:\n        - type: string\n          # enum:\n          #   - Создание\n          #   - Изменение\n          #   - Подписание\n          #   - Удаление\n          #   - Восстановление\n\n    LastChangeType:\n      description: Тип последнего изменения объекта\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: Идентификатор типа изменения\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/LastChangeTypeNameEnum'\n        tagId:\n          $ref: '#/components/schemas/LastChangeTypeTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: Создание\n        tagId: added\n\n    CatalogObjectListColumn:\n      description: Информация о столбце в списке объектов каталога\n      type: object\n      readOnly: true\n      properties:\n        attrId:\n          description: |-\n            Идентификатор атрибута или системного атрибута\n          type: integer\n          format: int32\n        name:\n          description: Название столбца в списке\n          type: string\n        objectFieldName:\n          description: |-\n            Название поля, используемое в объекте каталога\n\n\n            Для столбцов ручного ввода, связанных с геоданными, названия следующие:\n             - Ручной ввод геоданных (для блока \"На карту\");\n             - Ручной ввод местоположения (для блока \"Из карты\").\n          type: string\n        dictionaryId:\n          description: Идентификатор справочника, возвращается для справочных атрибутов каталога\n          type: integer\n          format: int32\n        catalogId:\n          description: Идентификатор каталога, возвращается для табличных (вложенных) и ссылочных атрибутов каталога\n          type: integer\n          format: int32\n        columnType:\n          $ref: '#/components/schemas/CatalogObjectListColumnTypeTagIdEnum'\n        typeTag:\n          $ref: 'attributes.yaml#/components/schemas/AttributeTypeTagIdEnum'\n      required:\n        - attrId\n        - name\n        - columnType\n        - typeTag\n      example:\n        attrId: 2342\n        typeTag: string\n        name: Фамилия\n        objectFieldName: field_2342\n        columnType: attribute\n\n    CommonCatalogObjectListFilter:\n      description: Объект, используемый для фильтров по списку объектов\n      type: object\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/Filter'\n      example:\n        attribute: field_34\n        operator: equals\n        value: \"Иванов\"\n\n    RootCatalogObjectListFilter:\n      type: object\n      description: |-\n        Объект фильтрации, используемый для фильтрации по списку объектов корневого каталога.\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogObjectListFilter'\n      properties:\n        childCatalogId:\n          description: |-\n            Идентификатор вложенного каталога, по атриубту которого производят фильтрацию.\n            Фильтрация производится только по первому уровню вложенности.\n          type: integer\n      example:\n        attribute: field_34\n        operator: equals\n        value: \"Иванов\"\n        childCatalogId: 1624\n\n    ChildCatalogObjectListFilter:\n      type: object\n      description: |-\n        Объект фильтрации, используемый для фильтрации по списку объектов вложенного каталога.\n\n        В отличие от фильтрации по корневому каталогу, не позволяет производить фильтрацию по вложенным каталогам (т.е. по вложенным 2, 3 уровня и т.д.) через поле `childCatalogId`.\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogObjectListFilter'\n      example:\n        attribute: field_34\n        operator: equals\n        value: \"Иванов\"\n\n    CommonCatalogObjectListItem:\n      allOf:\n        - $ref: '#/components/schemas/CommonObjectListItem'\n      description: Общая информация об объекте в списке объектов каталога заполнения\n      type: object\n      readOnly: true\n\n    CatalogObjectListItem:\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogObjectListItem'\n        - $ref: '#/components/schemas/CommonObjectSignInfo'\n      description: |-\n        Информация об объекте, выводимая в списке объектов каталога\n      type: object\n      readOnly: true\n      properties:\n        objectStatus:\n          $ref: '#/components/schemas/ObjectStatus'\n        # TODO: Доделать вывод процесса в рамках блокировок  \n        # objectProcess:\n        #   $ref: '#/components/schemas/ObjectProcess'\n        isError: \n          description: Есть ли на объекте ошибки фоновой проверки\n          type: boolean\n        creationDate:\n          description: Дата создания объекта\n          type: string\n        lastChangeType:\n          description: Тип последнего изменения объекта\n          type: string\n# ??? на проверку Тип последнего изменения\n#          $ref: '#/components/schemas/LastChangeTypeTagIdEnum'\n        lastChangeDate:\n          description: Дата последнего изменения объекта\n          type: string\n        lastChangeActorName:\n          description: Имя пользователя или название информационной системы, совершившая последнее действие над объектом\n          type: string\n        hasGeoObj: \n          description: Признак наличия геоданных в объекте. Указывается только в каталогах, где включено наличие геопривязки.\n          type: boolean\n        geodata: \n          $ref: 'geodata.yaml#/components/schemas/ObjectGeodata'\n      required:\n        - objectStatus\n        - isError\n        - creationDate\n        - lastChangeType\n        - lastChangeDate\n        - lastChangeActorName\n\n    ChildCatalogObjectListItem:\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogObjectListItem'\n        - $ref: '#/components/schemas/CommonChildObjectListItem'\n      description: |-\n        Информация о объекте, выводимая в списке объектов вложенного каталога\n      type: object\n      readOnly: true\n\n    FillingNestedCatalogObject:\n      type: object\n      description: |-\n        Объект вложенного каталога.\n\n        Для идентификации обязательна передача `globalId` или `systemobjectId`.\n        При создании без `systemObjectId` может быть передан отрицательный `globalId` для идентификации возможных ошибок в ответе.\n        В таком случае он должен быть уникальным в рамкха запроса.\n\n        При чтении объектов `action` не указывается.\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/CatalogObjectActionTagIdEnum'\n          writeOnly: true\n        globalId:\n          description: Глобальный идентификатор объекта.\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        parentSystemObjectId:\n          description: Идентификатор родительского объекта в системе-поставщике\n          type: string\n        parentGlobalId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer\n        rootGlobalId:\n          description: Идентификатор глобального объекта\n          type: integer\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        parentCatalogId:\n          description: Идентификатор родительского каталога\n          type: integer\n        rootCatalogId:\n          description: Идентификатор корневого каталога\n          type: integer\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/FillingCatalogObjectDataItem'\n          minItems: 1\n      required:\n        - action\n        - catalogId\n        - parentCatalogId\n        - rootCatalogId\n        - data\n\n    FillingNestedCatalogObjectVerbose:\n      type: object\n      description: |-\n        Объект вложенного каталога с расширенной схемой для справочных и ссылочных атрибутов.\n\n        Для идентификации обязательна передача `globalId` или `systemobjectId`.\n        При создании без `systemObjectId` может быть передан отрицательный `globalId` для идентификации возможных ошибок в ответе.\n        В таком случае он должен быть уникальным в рамкха запроса.\n\n        При чтении объектов `action` не указывается.\n      readOnly: true\n      properties:\n        globalId:\n          description: |-\n            Глобальный идентификатор объекта.\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        parentSystemObjectId:\n          description: Идентификатор родительского объекта в системе-поставщике\n          type: string\n        parentGlobalId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer\n        rootGlobalId:\n          description: Идентификатор глобального объекта\n          type: integer\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        parentCatalogId:\n          description: Идентификатор родительского каталога\n          type: integer\n        rootCatalogId:\n          description: Идентификатор корневого каталога\n          type: integer\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/FillingCatalogObjectDataItemVerbose'\n          minItems: 1\n      required:\n        - globalId\n        - parentGlobalId\n        - rootGlobalId\n        - catalogId\n        - parentCatalogId\n        - rootCatalogId\n        - data\n\n    FillingCatalogObjectDataItem:\n      description: |-\n        Значение атрибута объекта.\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        catalogAttrId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          format: int32\n          readOnly: true\n        isManualInput:\n          description: Заполнен ли атрибут с использованием ручного ввода.\n\n            `true` указывается только для тех атрибутов, которые сопоставляются со справочником в Автозаполнении.\n            Для самих автозаполняемых указывается `false` (если они не используются для сопоставления со справочником в других блоках Автозаполнение).\n          type: boolean\n        value:\n          description: |-\n            Значение атрибута, передаваемое при сохранении или чтении, если verbose=false.\n            Для типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.\n          oneOf:\n            - description: Значение атрибута типа строка\n              type: string\n            - description: Значение атрибута типа целое число\n              type: integer\n            - description: Значение атрибута типа дробное число\n              type: number\n            - description: Значение атрибута типа флаг\n              type: boolean\n            - description: Значение атрибута типа дата (без времени) в формате dd.MM.YYYY\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n            - description: Значение атрибута типа дата (со временем) в формате dd.MM.YYYY hh:mm:ss\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n            - description: Значение атрибута типа файл, в массиве передается id (uuid) файла, загруженного на файловый сервер\n              type: array\n              items:\n                type: string\n            - description: Значение атрибута типа справочник, в массиве передается id элемента справочника\n              type: array\n              items:\n                type: string\n            - description: Значение атрибута типа ссылка, в массиве передается gloabl_id объекта, на который ссылается объект\n              type: array\n              items:\n                type: integer\n            - description: Значение атрибута типа таблица\n              type: array\n              items:\n                $ref: '#/components/schemas/FillingNestedCatalogObject'\n      required:\n        - attrId\n        - isManualInput\n\n    FillingCatalogObjectDataItemVerbose:\n      description: |-\n        Значение атрибута объекта.\n      type: object\n      readOnly: true\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        catalogAttrId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          format: int32\n        isManualInput:\n          description: |-\n            Заполнен ли атрибут с использованием ручного ввода.\n\n            `true` указывается только для тех атрибутов, которые сопоставляются со справочником в Автозаполнении.\n            Для самих автозаполняемых указывается `false` (если они не используются для сопоставления со справочником в других блоках Автозаполнение).\n          type: boolean\n        value:\n          description: |-\n            Значение атрибута, передаваемое при сохранении или чтении, если verbose=true.\n            Для типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.\n          oneOf:\n            - description: Значение атрибута типа строка\n              type: string\n            - description: Значение атрибута типа целое число\n              type: integer\n            - description: Значение атрибута типа дробное число\n              type: number\n            - description: Значение атрибута типа флаг\n              type: boolean\n            - description: Значение атрибута типа дата (без времени) в формате dd.MM.YYYY\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n            - description: Значение атрибута типа дата (со временем) в формате dd.MM.YYYY hh:mm:ss\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n            - description: Значение атрибута типа файл, в массиве передается uuid файла, загруженного на файловый сервер\n              type: array\n              items:\n                type: string\n            - description: Значение атрибута типа справочник\n              type: array\n              items:\n                type: object\n                properties:\n                  dictElementId:\n                    description: Идентификатор элемента справочника\n                    type: string\n                  value:\n                    description: Значение элемента справочника из столбца, выбранного в каталоге для отображения\n                    type: string\n            - description: Значение атрибута типа ссылка\n              type: array\n              items:\n                type: object\n                properties:\n                  globalId:\n                    description: Глобальный идентификатор объекта, записанного в значении ссылочного атрибута\n                    type: integer\n                    format: int64\n                  value:\n                    description: Значение главного атрибута объекта, записанного в значении ссылочного атрибута\n                    type: string\n            - description: Значение атрибута типа таблица\n              type: array\n              items:\n                $ref: '#/components/schemas/FillingNestedCatalogObjectVerbose'\n      required:\n        - attrId\n        - isManualInput\n\n    FillingCatalogObject:\n      description: |-\n        Объект каталога.\n\n        Для идентификации обязательна передача `globalId` или `systemobjectId`.\n        При создании без `systemObjectId` может быть передан отрицательный `globalId` для идентификации возможных ошибок в ответе.\n\n        При чтении объектов `action` не указывается.\n      type: object\n      properties:\n        action:\n          allOf:\n            - $ref: '#/components/schemas/CatalogObjectActionTagIdEnum'\n          writeOnly: true\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        globalId:\n          description: |-\n            Глобальный идентификатор объекта.\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        objectStatus:\n          allOf:\n            - $ref: '#/components/schemas/ObjectStatus'\n          readOnly: true\n        isError:\n          description: Есть ли на объекте ошибки фоновой проверки\n          type: boolean\n          readOnly: true\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/FillingCatalogObjectDataItem'\n          minItems: 1\n        isManualGeo:\n          description: Признак, указывающий, что геоданные заполнены вручную, а не процессом блока \"На карту\" (при условии, что настройки блока позволяют ручной ввод).\n          type: boolean\n          default: false\n        isManualLocation:\n          description: Признак, указывающий, что атрибуты с координатами геометрии заполнены вручную, а не процессом блока \"Из карты\" (при условии, что настройки блока позволяют ручной ввод).\n          type: boolean\n          default: false\n        geodata: \n          $ref: 'geodata.yaml#/components/schemas/ObjectGeodata' \n      required:\n        - action\n        - catalogId\n        - data\n\n    FillingCatalogObjectVerbose:\n      description: |-\n        Объект каталога с расширенной схемой для справочных и ссылочных атрибутов.\n\n        Для идентификации обязательна передача `globalId` или `systemobjectId`.\n        При создании без `systemObjectId` может быть передан отрицательный `globalId` для идентификации возможных ошибок в ответе.\n\n        При чтении объектов `action` не указывается.\n      type: object\n      readOnly: true\n      properties:\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        globalId:\n          description: |-\n            Глобальный идентификатор объекта.\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        objectStatus:\n          allOf:\n            - $ref: '#/components/schemas/ObjectStatus'\n          readOnly: true\n        isError:\n          description: Есть ли на объекте ошибки фоновой проверки\n          type: boolean\n          readOnly: true\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/FillingCatalogObjectDataItemVerbose'\n          minItems: 1\n        isManualGeo:\n          description: Признак, указывающий, что геоданные заполнены вручную, а не процессом блока \"На карту\" (при условии, что настройки блока позволяют ручной ввод).\n          type: boolean\n          default: false\n        isManualLocation:\n          description: Признак, указывающий, что атрибуты с координатами геометрии заполнены вручную, а не процессом блока \"Из карты\" (при условии, что настройки блока позволяют ручной ввод).\n          type: boolean\n          default: false\n        geodata: \n          $ref: 'geodata.yaml#/components/schemas/ObjectGeodata'   \n      required:\n        - catalogId\n        - globalId\n        - data\n\n    # CatalogObjectDataItemSOAP:\n    #   type: object\n    #   properties:\n    #     catalogAttrId:\n    #       description: Идентификатор атрибута в связке с каталогом\n    #       type: integer\n    #     type:\n    #       $ref: 'attributes.yaml#/components/schemas/AttributeTypeTagIdEnum'\n    #     name:\n    #       description: Наименование атрибута\n    #       type: string\n    #     isManual:\n    #       description: Признак ручного ввода значения атрибута\n    #       type: boolean\n    #     value:\n    #       description: Значение атрибута\n\n    #       oneOf:\n    #         - type: string\n    #         - type: integer\n    #         - type: number\n    #         - type: boolean\n    #         - type: array\n    #           items:\n    #             oneOf:\n    #               - type: string\n    #               - type: integer\n    #               - $ref: '#/components/schemas/NestedCatalogObject'\n    #   required:\n    #     - catalogAttrId\n    #     - value\n\n    # DataItemValueFileSOAP:\n    #   description: Формат объекта с информацией о файле, получаемой от поставщика\n    #   type: object\n    #   properties:\n    #     name:\n    #       description: Наименование файла\n    #       type: string\n    #     extension:\n    #       description: Расширение файла\n    #       type: string\n    #     content:\n    #       description: Код файла в формате base64\n    #       type: string\n    #   required:\n    #     - name\n    #     - extension\n    #     - content\n\n    OkCatalogObjectResponse:\n      description: Ответ при сохранении объекта каталога\n      type: object\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/OkResponse'\n      properties:\n        globalId:\n          description: Глобальный идентификатор объекта, присвоенный в ГИС ЕХД\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        requestAction:\n          $ref: '#/components/schemas/CatalogObjectActionTagIdEnum'\n        responseAction:\n          $ref: '#/components/schemas/CatalogObjectResponseActionTagIdEnum'\n      required:\n        - globalId\n        - systemObjectId\n        - catalogId\n        - requestAction\n\n    OkCatalogObjectDeletedResponse:\n      description: Ответ при удалении объекта каталога\n      type: object\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/OkResponse'\n      properties:\n        globalId:\n          description: Глобальный идентификатор объекта, присвоенный в ГИС ЕХД\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        requestAction:\n          $ref: '#/components/schemas/CatalogObjectActionTagIdEnum'\n      required:\n        - globalId\n        - systemObjectId\n        - catalogId\n        - requestAction\n\n    IncorrectDataCatalogObjectResponse:\n      description: Ошибочный ответ проверки ФЛК при сохранении объекта\n      type: object\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/BadRequestError'\n        - $ref: '_common.yaml#/components/schemas/NotFoundError'\n        - properties:\n            messageType:\n              enum:\n                - Incorrect data\n      properties:\n        globalId:\n          description: Глобальный идентификатор объекта, для которого вернулась ошибка\n          type: integer\n          format: int64\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        requestAction:\n          $ref: '#/components/schemas/CatalogObjectActionTagIdEnum'\n        responseAction:\n          $ref: '#/components/schemas/CatalogObjectResponseActionTagIdEnum'\n        errorInfo:\n          description: Информация об ошибках ФЛК\n          type: object\n          properties:\n            mismatchWithProperties:\n              description: Ошибки, обнаруженные при проверке соответствия переданных значений свойствам атрибутов.\n              type: array\n              items:\n                $ref: '#/components/schemas/IncorrectDataAttributeCatalogObjectResponse'\n            mismatchWithConditions:\n              description: Ошибки, обнаруженные при проверке условий, настроенных в конструкторе проверок.\n              type: array\n              items:\n                $ref: '#/components/schemas/IncorrectDataProcessCatalogObjectResponse'\n            mismatchWithGeoProperties:\n              description: Ошибки, обнаруженные при проверке геоданных объекта\n              type: array\n              items:\n                $ref: '#/components/schemas/IncorrectGeodataCatalogObjectResponse'\n      required:\n        - globalId\n        - systemObjectId\n        - catalogId\n        - requestAction\n        - errorInfo\n\n    CatalogObjectErrors:\n      description: Ошибки объекта каталога заполнения\n      type: object\n      properties:\n        globalId:\n          description: Глобальный идентификатор объекта, для которого вернулась ошибка\n          type: integer\n          format: int64\n        errorInfo:\n          description: Информация об ошибках ФЛК\n          type: object\n          properties:\n            mismatchWithProperties:\n              description: Ошибки, обнаруженные при проверке соответствия переданных значений свойствам атрибутов.\n              type: array\n              items:\n                $ref: '#/components/schemas/IncorrectDataAttributeCatalogObjectResponse'\n            mismatchWithConditions:\n              description: Ошибки, обнаруженные при проверке условий, настроенных в конструкторе проверок.\n              type: array\n              items:\n                $ref: '#/components/schemas/IncorrectDataProcessCatalogObjectResponse'\n            mismatchWithGeoProperties:\n              description: Ошибки, обнаруженные при проверке геоданных объекта\n              type: array\n              items:\n                $ref: '#/components/schemas/IncorrectGeodataCatalogObjectResponse'     \n      required:\n        - globalId\n        - errorInfo\n\n    IncorrectDataAttributeCatalogObjectResponse:\n      description: Ошибка ФЛК для атрибута при сохранении объекта\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута, для которого вернулась ошибка\n          type: integer\n          format: int32\n        catalogAttrId:\n          description: Идентификатор атрибута каталога, для которого вернулась ошибка\n          type: integer\n          format: int32\n        catalogAttrName:\n          description: Наименование атрибута в каталоге, для которого вернулась ошибка\n          type: string\n        catalogId:\n          description: Идентификатор корневого или вложенного каталога, для объекта которого вернулась ошибка\n          type: integer\n          format: int32\n        parentCatalogId:\n          description: Идентификатор родительского каталога\n          type: integer\n          format: int32\n        globalId:\n          description: Глобальный идентификатор объекта корневого или вложенного каталога, для которого вернулась ошибка\n          type: integer\n          format: int64\n        parentGlobalId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer\n          format: int64\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        parentSystemObjectId:\n          description: Идентификатор родительского объекта в системе-поставщике\n          type: string\n        value:\n          description: Значение атрибута\n          additionalProperties:\n            oneOf:\n              - type: string\n              - type: integer\n              - type: number\n              - type: boolean\n              - type: array\n                items:\n                  oneOf:\n                    - type: string\n                    - type: integer\n        text:\n          description: Сообщение об ошибке\n          type: string\n      required:\n        - attrId\n        - catalogAttrId\n        - catalogAttrName\n        - сatalogId\n        - value\n        - text\n\n    IncorrectDataProcessCatalogObjectResponse:\n      description: Ошибка ФЛК конструктора проверок при сохранении объекта\n      type: object\n      properties:\n        packageName:\n          description: |-\n            Название пакета, в котором произошла ошибка.\n            Не указывается для корневого пакета конструктора.\n          type: string\n        text:\n          description: Сообщение об ошибке\n          type: string\n      required:\n        - text\n\n    IncorrectGeodataCatalogObjectResponse:\n      description: Ошибки соответсвия геоданных настройкам карты и правилам первичной валидации.\n      type: object\n      properties:\n        text:\n          description: Сообщение об ошибке в геоданных объекта\n          type: string\n\n    EditProperties:\n      description: Свойства редактирования каталога для карточки объекта\n      type: object\n      readOnly: true\n      properties:\n        catalogProperties:\n          description: Свойства редактирования объектов каталога\n          type: object\n          properties:\n            catalogStatus:\n              $ref: 'catalogs.yaml#/components/schemas/FillingCatalogObjectsStatusTagIdEnum'\n            hasGeo: \n              description: |-\n                Признак наличия геопривязки в каталоге. \n                Если принимает значение true, то при открытии карточки объекта необходимо дополнительно получить настройки карты каталога.\n              type: boolean \n            hasDelOperModeAttr:\n              description: Признак наличия в каталоге атрибутов, измеяемых при удалении\n              type: boolean\n            isCopyObjects:\n              description: Признак \"Возможно копирование объектов\"\n              type: boolean\n            isDeleteAllObjects:\n              description: Признак \"Возможно одновременное удаление всех объектов\"\n              type: boolean\n            isBlockEditObjectsGUI:\n              description: Признак \"Заблокировать редактирование данных (веб)\"\n              type: boolean   \n          required:\n            - catalogStatus\n            - hasGeo\n            - hasDelOperModeAttr\n            - isCopyObjects\n            - isDeleteAllObjects\n            - isBlockEditObjectsGUI\n        # attributeProperties:\n        #   type: array\n        #   items:\n        #     $ref: 'catalogs.yaml#/components/schemas/FillingCatalogAttributeConstructorEditProperties'\n        dictionaryProperties:\n          type: array\n          items:\n            $ref: 'dictionaries.yaml#/components/schemas/DictionaryListItem'\n        # userPrivileges:\n        #   description: |-\n        #     Список технических наименований привилегий пользователя,\n        #     которые могут применяться к каталогу в соответствии с ролью пользователя.\n\n        #     Возвращается, если передан идентификатор пользователя.\n        #   type: array\n        #   items:\n        #     $ref: 'users.yaml#/components/schemas/UserPrivilegeTagIdEnum'\n      required:\n        - catalogProperties\n        # - attributeProperties\n        - dictionaryProperties      \n\n  parameters:\n    globalIdPathParam:\n      name: globalId\n      in: path\n      description: |-\n        Глобальный идентификатор объекта.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 124376127\n\n    parentGlobalIdQueryParam:\n      name: parentGlobalId\n      in: query\n      description: |-\n        Глобальный идентификатор родительского объекта.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 1243761423\n\n    rootGlobalIdQueryParam:\n      name: rootGlobalId\n      in: query\n      description: |-\n        Глобальный идентификатор корневого объекта (объекта в корневом каталоге, которому принадлежат вложенные объекты).\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 3249874123\n\n    globalIdQueryParam:\n      name: globalId\n      in: query\n      description: |-\n        Глобальный идентификатор объекта.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 124376127\n\n    globalIdsQueryParam:\n      name: globalIds\n      in: query\n      required: false\n      description: |-\n        Глобальные идентификаторы объектов каталога.\n\n        Массив не может быть пустым.\n      schema:\n        type: array\n        minItems: 1\n        items:\n          type: integer\n          format: int64\n\n    globalIdsRequiredQueryParam:\n      name: globalIds\n      in: query\n      required: true\n      description: |-\n        Глобальные идентификаторы объектов каталога.\n\n        Массив не может быть пустым.\n      schema:\n        type: array\n        minItems: 1\n        items:\n          type: integer\n          format: int64\n\n    objectStatusesQueryParam:\n      name: objectStatuses\n      in: query\n      description: |-\n        Статусы возвращаемых объектов, используется для фильтрации по статусу объекта.\n\n        В массиве передаются технические названия статусов. Массив не может быть пустым.\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/ObjectStatusTagIdEnum'\n        minItems: 1\n\n    objectIdsQueryParam:\n      name: objectIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов объектов каталога.\n\n        Число элементов в списке от `1` до `500`.\n      schema:\n        type: array\n        items:\n          type: integer\n          format: int64\n        minItems: 1\n        maxItems: 500\n      example: [454, 323, 783]\n\n    signedVersionQueryParam:\n      name: signedVersion\n      description: |-\n        Указывает, что необходимо получить последние подписанные версии объектов.\n        Такие версии есть у объектов во всех статусах, кроме new. \n      in: query\n      required: false\n      schema:\n        type: boolean\n        default: false  \n\n    isErrorQueryParam:\n      name: isError\n      description: |-\n        Указывает, что необходимо получить объекты, имеющие статус \"Ошибка\". \n        Если параметр не передан или имеет значение null, тогда возвращаются все объекты каталога.\n      in: query\n      required: false\n      schema:\n        type: boolean\n\n    deletionIdPathParam:\n      name: deletionId\n      in: path\n      description: |-\n        Идентификатор процесса удаления всех объектов каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 5392\n\n  requestBodies:\n    CatalogObjectsSearchFilters:\n      required: false\n      description: Тело запроса с фильтрами и сортировками по списку объектов\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  $ref: '#/components/schemas/RootCatalogObjectListFilter'\n              sortings:\n                type: array\n                items:\n                  $ref: '_common.yaml#/components/schemas/Sorting'\n          examples:\n            Пример:\n              $ref: '#/components/examples/CatalogObjectSearchRequest'\n\n  responses:\n    CatalogObjectSearchNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога не существует;\n          - Переданный в фильтре или сортировке атрибут `attribute` не существует в корневом или вложенном каталоге;\n          - id вложенного каталога `childCatalogId`, переданный в фильтре, не существует;\n          - id вложенного каталога `childCatalogId`, переданный в фильтре, не существует в корневом каталоге.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога:\n              $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n            Атрибут фильтра или сортировки не существует в каталоге:\n              $ref: '_common.yaml#/components/examples/FilterSortingAttributeNotFoundError'\n            Несуществующий id вложенного каталога в фильтре:\n              $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n            Вложенный каталог не найден в каталоге:\n              $ref: 'catalogs.yaml#/components/examples/ChildCatalogNotFoundInCatalogError'\n    ChildCatalogObjectSearchNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога (в т.ч. родительского и корневого) не существует;\n          - Запрошенный объект (вложенный, родительский, корневой) не существует в переданном каталоге (вложенном, родительском, корневом);\n          - Запрошенный каталог (вложенный или родительский) не входит в (родительский или корневой) каталог;\n          - Запрошенный объект (вложенный или родительский) не входит в (родительский или корневой) объект;\n          - Переданный в фильтре или сортировке атрибут `attribute` не существует в корневом каталоге.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога:\n              $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n            Объект не найден в соответствующей каталоге:\n              $ref: '#/components/examples/CatalogObjectNotFoundError'\n            Вложенный каталог не найден в каталоге:\n              $ref: 'catalogs.yaml#/components/examples/ChildCatalogNotFoundInCatalogError'\n            Вложенный объект не входит в родительский объект:\n              $ref: '#/components/examples/ChildObjectNotFoundInObjectError'\n            Атрибут фильтра или сортировки не существует в каталоге:\n              $ref: '_common.yaml#/components/examples/FilterSortingAttributeNotFoundError'\n\n  examples:\n    CatalogObjectSearchRequest:\n      value:\n        filters:\n          - attribute: field_4212\n            operator: greaterThan\n            value: 30\n          - attribute: field_4212_manual\n            operator: equals\n            value: \"да\"\n          - attribute: field_53\n            operator: notEmpty\n          - attribute: field_34\n            operator: equals\n            value: \"Иванов\"\n            childCatalogId: 1624\n        sortings:\n          - attribute: field_124\n            order:  asc\n          - attribute: globalId\n            order:  desc\n\n    CatalogObjectChildSearchRequest:\n      value:\n        filters:\n          - attribute: field_4212\n            operator: greaterThan\n            value: 30\n          - attribute: field_4212_manual\n            operator: equals\n            value: \"да\"\n          - attribute: field_53\n            operator: notEmpty\n          - attribute: field_34\n            operator: equals\n            value: \"Иванов\"            \n        sortings:\n          - attribute: field_124\n            order:  asc\n          - attribute: globalId\n            order:  desc\n\n    ChildCatalogObjectSearchRequest:\n      value:\n        filters:\n          - attribute: field_4212\n            operator: greaterThan\n            value: 30\n          - attribute: field_53\n            operator: notEmpty\n        sortings:\n          - attribute: field_124\n            order:  asc\n          - attribute: globalId\n            order:  desc\n\n    CatalogObjectRequest:\n      value:\n        - catalogId: 8432\n          action: modified\n          globalId: 1249763289\n          systemObjectId: object_7236\n          data:\n            - attrId: 30\n              value: Петров\n              isManualInput: true\n            - attrId: 33\n              value: 33\n              isManualInput: false\n            - attrId: 36\n              value: \"10.10.1980\"\n              isManualInput: false\n            - attrId: 39\n              value: true\n              isManualInput: false\n            - attrId: 42\n              value:\n                - 34342\n              isManualInput: false\n            - attrId: 45\n              value:\n                - 1983723\n                - 1386430\n              isManualInput: false\n            - attrId: 846\n              value:\n                - 1\n                - 3\n              isManualInput: false\n            - attrId: 84645\n              value:\n                - 791c351c-641b-4f27-b212-fec14e9b7b39\n                - dfc4a850-8279-4b45-8224-b7ecaa628f31\n                - f33b881e-a87d-4a47-9458-fe2e2256ec66\n              isManualInput: false\n            - attrId: 48\n              isManualInput: false\n              value:\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  action: added\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  systemObjectId: единица-1\n                  data:\n                    - attrId: 51\n                      value: ООО Кошки мышки\n                      isManualInput: false\n                    - attrId: 54\n                      value: \"10.10.1980\"\n                      isManualInput: false\n                    - attrId: 57\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          action: added\n                          parentSystemObjectId: единица-1\n                          rootGlobalId: 1249763289\n                          systemObjectId: единица-1-1\n                          data:\n                            - attrId: 60\n                              value: Иванов П.И.\n                              isManualInput: false\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  action: modified\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  globalId: 7654321\n                  systemObjectId: единица-2\n                  data:\n                    - attrId: 51\n                      value: ООО Рога и копыта\n                      isManualInput: false\n                    - attrId: 54\n                      value: \"21.07.2000\"\n                      isManualInput: false\n                    - attrId: 57\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          action: modified\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          globalId: 987654\n                          systemObjectId: единица-2-1\n                          data:\n                            - attrId: 60\n                              value: Иванова К.И.\n                              isManualInput: false\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          action: added\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          systemObjectId: единица-2-2\n                          data:\n                            - attrId: 60\n                              value: Иванов Р.И.\n                              isManualInput: false\n          isManualGeo: true\n          isManualLocation: false\n          geodata:\n            type: Feature\n            properties: \n              srs: EPSG:4326\n            geometry:\n              type: GeometryCollection\n              geometries:\n                - type: Point\n                  coordinates: \n                    - 37.57488596826171\n                    - 55.753835074882915\n                - type: MultiLineString\n                  coordinates:\n                    -\n                      -\n                        - 37.20208680549581\n                        - 55.75991514505003\n                      -\n                        - 38.401608888302064\n                        - 55.60775947055342\n                    -\n                      -\n                        - 39.2929204707026\n                        - 55.38448524332469\n                      -\n                        - 38.62012154676003\n                        - 55.445280980775465\n                - type: MultiPolygon\n                  coordinates:\n                    -\n                      -\n                        -\n                          - 38.63968631610595\n                          - 55.59156664817431\n                        -\n                          - 38.61372729774422\n                          - 55.513883281785866\n                        -\n                          - 38.77855209164545\n                          - 55.55705844341085\n                        - \n                          - 38.63968631610595\n                          - 55.59156664817431\n\n    CatalogObjectVerboseReturnSystemResponse:\n      value:\n        - catalogId: 8432\n          globalId: 1249763289\n          systemObjectId: object_7236\n          objectStatus:\n            id: 1\n            name: Новый\n            tagId: new\n          isError: false\n          data:\n            - catalogAttrId: -16\n              attrId: -16\n              value: \"22.06.2024\"\n              isManualInput: false\n            - catalogAttrId: -4\n              attrId: -4\n              value: \"23.06.2024\"\n              isManualInput: false\n            - catalogAttrId: -12\n              attrId: -12\n              value: \"Запись подписана 23.06.2024 12:53:51, CN=Иванов Иван Иванович, OU=Users, OU=DataCenterEM01, DC=passport, DC=local, CN=sec-ca02, DC=passport, DC=local\"\n              isManualInput: false\n            - catalogAttrId: -11\n              attrId: -11\n              value: \"23.06.2024\"\n              isManualInput: false\n            - catalogAttrId: -10\n              attrId: -10\n              value: Подписание\n              isManualInput: false\n            - catalogAttrId: -13\n              attrId: -13\n              value: Иванов Иван Иванович \n              isManualInput: true\n            - catalogAttrId: -22\n              attrId: -22\n              value: true \n              isManualInput: false  \n            - catalogAttrId: 30\n              attrId: 130\n              value: Петров\n              isManualInput: false\n            - catalogAttrId: 33\n              attrId: 133\n              value: 33\n              isManualInput: false\n            - catalogAttrId: 36\n              attrId: 136\n              value: \"10.10.1980\"\n              isManualInput: false\n            - catalogAttrId: 39\n              attrId: 139\n              value: true\n              isManualInput: false\n            - catalogAttrId: 45\n              attrId: 145\n              value:\n                - globalId: 1983723\n                  value: Петров В.В\n                - globalId: 1386430\n                  value: Петров К.Р.\n              isManualInput: false\n            - catalogAttrId: 846\n              attrId: 3456\n              value:\n                - dictElementId: 1\n                  value: Понедельник\n                - dictElementId: 3\n                  value: Среда\n              isManualInput: false\n            - catalogAttrId: 84645\n              attrId: 1233\n              value:\n                - 791c351c-641b-4f27-b212-fec14e9b7b39\n                - dfc4a850-8279-4b45-8224-b7ecaa628f31\n                - f33b881e-a87d-4a47-9458-fe2e2256ec66\n              isManualInput: false\n            - catalogAttrId: 48\n              attrId: 148\n              isManualInput: false\n              value:\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  systemObjectId: единица-1\n                  globalId: 123123112\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Кошки мышки\n                      isManualInput: false\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"10.10.1980\"\n                      isManualInput: false\n                    - catalogAttrId: 57\n                      attrId: 157\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentSystemObjectId: единица-1\n                          rootGlobalId: 1249763289\n                          parentGlobalId: 123123112\n                          systemObjectId: единица-1-1\n                          globalId: 1012349862378\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов П.И.\n                              isManualInput: false\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  globalId: 7654321\n                  systemObjectId: единица-2\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Рога и копыта\n                      isManualInput: false\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"21.07.2000\"\n                      isManualInput: false\n                    - catalogAttrId: 57\n                      attrId: 157\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          globalId: 987654\n                          systemObjectId: единица-2-1\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванова К.И.\n                              isManualInput: false\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          systemObjectId: единица-2-2\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов Р.И.\n                              isManualInput: false\n          isManualGeo: true\n          isManualLocation: false\n          geodata:\n            type: Feature\n            properties: \n              srs: EPSG:4326\n            geometry:\n              type: GeometryCollection\n              geometries:\n                - type: Point\n                  coordinates: \n                    - 37.57488596826171\n                    - 55.753835074882915\n                - type: MultiLineString\n                  coordinates:\n                    -\n                      -\n                        - 37.20208680549581\n                        - 55.75991514505003\n                      -\n                        - 38.401608888302064\n                        - 55.60775947055342\n                    -\n                      -\n                        - 39.2929204707026\n                        - 55.38448524332469\n                    -\n                      -\n                        - 38.62012154676003\n                        - 55.445280980775465\n                - type: MultiPolygon\n                  coordinates:\n                    -\n                      -\n                        -\n                          - 38.63968631610595\n                          - 55.59156664817431\n                        -\n                          - 38.61372729774422\n                          - 55.513883281785866\n                        -\n                          - 38.77855209164545\n                          - 55.55705844341085\n                        - \n                          - 38.63968631610595\n                          - 55.59156664817431                    \n\n    CatalogObjectResponse:\n      value:\n        - catalogId: 8432\n          globalId: 1249763289\n          systemObjectId: object_7236\n          data:\n            - catalogAttrId: 30\n              attrId: 130\n              value: Петров\n              isManualInput: true\n            - catalogAttrId: 33\n              attrId: 133\n              value: 33\n              isManualInput: false\n            - catalogAttrId: 36\n              attrId: 136\n              value: \"10.10.1980\"\n              isManualInput: false\n            - catalogAttrId: 39\n              attrId: 139\n              value: true\n              isManualInput: false\n            - catalogAttrId: 45\n              attrId: 145\n              value:\n                - 1983723\n                - 1386430\n              isManualInput: false\n            - catalogAttrId: 846\n              attrId: 3456\n              value:\n                - 1\n                - 3\n              isManualInput: false\n            - catalogAttrId: 84645\n              attrId: 1233\n              value:\n                - 791c351c-641b-4f27-b212-fec14e9b7b39\n                - dfc4a850-8279-4b45-8224-b7ecaa628f31\n                - f33b881e-a87d-4a47-9458-fe2e2256ec66\n              isManualInput: false\n            - catalogAttrId: 48\n              attrId: 148\n              isManualInput: false\n              value:\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  systemObjectId: единица-1\n                  globalId: 123123112\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Кошки мышки\n                      isManualInput: false\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"10.10.1980\"\n                      isManualInput: false\n                    - catalogAttrId: 57\n                      attrId: 157\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentSystemObjectId: единица-1\n                          rootGlobalId: 1249763289\n                          parentGlobalId: 123123112\n                          systemObjectId: единица-1-1\n                          globalId: 1012349862378\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов П.И.\n                              isManualInput: false\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  globalId: 7654321\n                  systemObjectId: единица-2\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Рога и копыта\n                      isManualInput: false\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"21.07.2000\"\n                      isManualInput: false\n                    - catalogAttrId: 57\n                      attrId: 157\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          globalId: 987654\n                          systemObjectId: единица-2-1\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванова К.И.\n                              isManualInput: false\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          systemObjectId: единица-2-2\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов Р.И.\n                              isManualInput: false\n          isManualGeo: true\n          isManualLocation: false\n          geodata:\n            type: Feature\n            properties: \n              srs: EPSG:4326\n            geometry:\n              type: GeometryCollection\n              geometries:\n                - type: Point\n                  coordinates: \n                    - 37.57488596826171\n                    - 55.753835074882915\n                - type: MultiLineString\n                  coordinates:\n                    -\n                      -\n                        - 37.20208680549581\n                        - 55.75991514505003\n                      -\n                        - 38.401608888302064\n                        - 55.60775947055342\n                    -\n                      -\n                        - 39.2929204707026\n                        - 55.38448524332469\n                    -\n                      -\n                        - 38.62012154676003\n                        - 55.445280980775465\n                - type: MultiPolygon\n                  coordinates:\n                    -\n                      -\n                        -\n                          - 38.63968631610595\n                          - 55.59156664817431\n                        -\n                          - 38.61372729774422\n                          - 55.513883281785866\n                        -\n                          - 38.77855209164545\n                          - 55.55705844341085\n                        - \n                          - 38.63968631610595\n                          - 55.59156664817431\n\n    CatalogObjectListColumnArrayResponse:\n      value:\n        - attrId: -1\n          typeTag: integer\n          name: global_id\n          objectFieldName: globalId\n          columnType: technical\n        - attrId: -2\n          typeTag: string\n          name: system_object_id\n          objectFieldName: systemObjectId\n          columnType: technical\n        - attrId: 123\n          typeTag: string\n          name: Фамилия\n          objectFieldName: field_123\n          columnType: attribute\n        - attrId: 124\n          typeTag: integer\n          name: Возраст\n          objectFieldName: field_124\n          columnType: attribute\n        - attrId: 124\n          typeTag: boolean\n          name: Возраст (ручной ввод)\n          objectFieldName: field_124_manual\n          columnType: manualInput\n        - attrId: 125\n          typeTag: date\n          name: Дата рождения\n          objectFieldName: field_125\n          columnType: attribute\n        - attrId: 125\n          typeTag: boolean\n          name: Дата рождения (ручной ввод)\n          objectFieldName: field_125_manual\n          columnType: manualInput\n        - attrId: 126\n          typeTag: dict\n          name: Национальность\n          objectFieldName: field_126\n          dictionaryId: 42\n          columnType: attribute\n        - attrId: 127\n          typeTag: table\n          name: Родственники\n          catalogId: 194680\n          columnType: attribute\n        - attrId: 128\n          typeTag: file\n          name: Фото\n          objectFieldName: field_128\n          columnType: attribute\n        - attrId: 129\n          typeTag: boolean\n          name: Есть дети\n          objectFieldName: field_129\n          columnType: attribute\n        - attrId: 130\n          typeTag: link\n          name: Ссылка на запись о ребенке\n          objectFieldName: field_130\n          catalogId: 198155\n          columnType: attribute\n        - attrId: 131\n          typeTag: float\n          name: Рост\n          objectFieldName: field_131\n          columnType: attribute\n        - attrId: -10\n          typeTag: string\n          name: Тип последнего изменения\n          objectFieldName: lastChangeType\n          columnType: technical\n        - attrId: -13\n          typeTag: string\n          name: Актор, совершивший изменение\n          objectFieldName: lastChangeActorName\n          columnType: technical\n        - attrId: -11\n          typeTag: date\n          name: Дата последнего изменения\n          objectFieldName: lastChangeDate\n          columnType: technical\n        - attrId: -16\n          typeTag: date\n          name: Дата создания\n          objectFieldName: creationDate\n          columnType: technical\n        - attrId: -22\n          typeTag: boolean\n          name: Наличие геоданных\n          objectFieldName: hasGeoObj\n          columnType: technical  \n        - attrId: -8456\n          typeTag: boolean\n          name: Ручной ввод геоданных\n          objectFieldName: isManualGeo\n          columnType: manualInput\n        - attrId: -1011\n          typeTag: boolean\n          name: Ручной ввод местоположения \n          objectFieldName: isManualLocation\n          columnType: manualInput\n\n    CatalogObjectListItemArrayResponse:\n      value:\n        - globalId: 1249763289\n          systemObjectId: object_7236\n          objectStatus:\n            id: 1\n            name: Новый\n            tagId: new\n          isError: false\n          subjectName: Иванов Иван Иванович\n          issuerName: CN=Казначейство России\n          signDate: 22.07.2017 17:00:00\n          creationDate: 11.07.2017 17:32:28\n          lastChangeType: Создание\n          lastChangeDate: 21.07.2017 17:32:28\n          lastChangeActorName: Иванов Иван Иванович\n          hasGeoObj: true\n          attributes:\n            field_2421: Петров\n            field_4212: 33\n            field_4212_manual:\n              tableValue: да\n              boolValue: true\n            field_4231: \"10.10.1980\"\n            field_53:\n              tableValue: русский; татарин\n              dictElements:\n                - dictElementId: 1\n                  value: русский\n                - dictElementId: 3\n                  value: татарин\n            field_124:\n              tableValue: \"Файлов: 3\"\n              fileIds:\n                - 07fc8647-0051-41e4-b928-7be6cbb52dc4\n                - 96017089-1af2-4e02-a160-f621d157e38e\n                - 6d8b2016-730a-425e-a132-05e34f1de074\n            field_220:\n              tableValue: да\n              boolValue: true\n            field_98:\n              tableValue: Иванов П.И.; Иванова К.И; Иванов Р.И\n              linkObjects:\n                - globalId: 6352936\n                  value: Иванов П.И.\n                - globalId: 8366419\n                  value: Иванова К.И.\n                - globalId: 75237097\n                  value: Иванов Р.И.\n            field_232: true\n            field_102: 145.7\n            isManualGeo: \n              tableValue: да\n              boolValue: true\n            isManualLocation: \n              tableValue: нет\n              boolValue: false\n          geodata:            \n            type: feature\n            properties: \n              srs: EPSG:4326\n            geometry:\n              type: GeometryCollection\n              geometries:\n                  - coordinates:                   \n                    - 37.48264616864711,55.88373558940018\n                    type: Point\n                  - coordinates:                                                                      \n                      - \n                        - 6260.07010778\n                        - 15862.06985372                                        \n                      - \n                        - 6259.44001736\n                        - 15865.4903631\n                      - \n                        - 6268.25009624\n                        - 15867.19995669\n                      - \n                        - 6270.11001739\n                        - 15867.56036315\n                      - \n                        - 6270.74971739\n                        - 15863.97176307\n                      - \n                        - 6271.81001739\n                        - 15864.16036307\n                      - \n                        - 6272.02001739\n                        - 15862.96036304\n                      - \n                        - 6266.51001738\n                        - 15861.98036302\n                      - \n                        - 6266.35711738\n                        - 15862.85396303\n                      - \n                        - 6264.97681738\n                        - 15862.60556304\n                      - \n                        - 6260.07010778\n                        - 15862.06985372\n                    type: MultiPolygon\n\n    ChildCatalogObjectListItemArrayResponse:\n      value:\n        - globalId: 4767812323\n          globalObjectId: 1249763289\n          systemObjectId: object_7236\n          attributes:\n            field_2421: Петров\n            field_4212: 33\n            field_4212_manual:\n              tableValue: да\n              boolValue: true\n            field_4231: 10.10.1980\n            field_53:\n              tableValue: русский; татарин\n              dictElements:\n                - dictElementId: 1\n                  value: русский\n                - dictElementId: 3\n                  value: татарин\n            field_124:\n              tableValue: \"Файлов: 3\"\n              fileIds:\n                - 07fc8647-0051-41e4-b928-7be6cbb52dc4\n                - 817617-cd2b-4987-ba78-b753fac27be\n                - e1dc0893-c8a6-46c1-a14f-aaddf01f52c5\n            field_220:\n              tableValue: да\n              boolValue: true\n            field_98:\n              tableValue: Иванов П.И.; Иванова К.И; Иванов Р.И\n              linkObjects:\n                - globalId: 6352936\n                  value: Иванов П.И.\n                - globalId: 8366419\n                  value: Иванова К.И.\n                - globalId: 75237097\n                  value: Иванов Р.И.\n            field_232: true\n            field_102: 145.7\n\n    ObjectsDataForDeletionRequest:\n      value:\n        globalIds: \n          - 1249763289\n          - 1249763290          \n        data:\n          - attrId: 234\n            value: Петров\n            isManualInput: false\n          - attrId: 4212\n            value: 33\n            isManualInput: false\n          - attrId: 4219\n            value: 145.7\n            isManualInput: false\n          - attrId: 4231\n            value: \"10.10.1980\"\n            isManualInput: false\n          - attrId: 53\n            value:\n              - \"12\"\n              - \"13\"\n              - \"14\"\n            isManualInput: false\n          - attrId: 124\n            value: \n              - 07fc8647-0051-41e4-b928-7be6cbb52dc4\n              - 96017089-1af2-4e02-a160-f621d157e38e\n              - 6d8b2016-730a-425e-a132-05e34f1de074\n            isManualInput: false\n          - attrId: 220\n            value: true\n            isManualInput: false\n          - attrId: 220\n            value:\n              - 6352936\n              - 8366419\n              - 75237097\n            isManualInput: false\n\n    ObjectsDataForClearingRequest:\n      value:\n        data:\n          - attrId: 234\n            value: Петров\n            isManualInput: false\n          - attrId: 4212\n            value: 33\n            isManualInput: false\n          - attrId: 4219\n            value: 145.7\n            isManualInput: false\n          - attrId: 4231\n            value: \"10.10.1980\"\n            isManualInput: false\n          - attrId: 53\n            value:\n              - \"12\"\n              - \"13\"\n              - \"14\"\n            isManualInput: false\n          - attrId: 124\n            value: \n              - 07fc8647-0051-41e4-b928-7be6cbb52dc4\n              - 96017089-1af2-4e02-a160-f621d157e38e\n              - 6d8b2016-730a-425e-a132-05e34f1de074\n            isManualInput: false\n          - attrId: 220\n            value: true\n            isManualInput: false\n          - attrId: 220\n            value:\n              - 6352936\n              - 8366419\n              - 75237097\n            isManualInput: false\n\n    OkCatalogObjectResponse:\n      description: Пример ответа при успешном сохранении объектов в запросе\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: added\n          responseAction: added\n\n    OkCatalogObjectDeletedResponse:\n      description: Пример ответа при успешном удалении объектов в запросе\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: deleted\n\n    CatalogObjectsErrorsArrayResponse:\n      description: Пример ответа с массивом ошибок объектов каталога заполнения\n      value:\n        - globalId: 987432554\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - globalId: 987432553\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 846\n                catalogAttrId: 314\n                catalogAttrName: Описание места преступления\n                catalogId: 124582\n                globalId: 987432553\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n        - globalId: 987432554\n          errorInfo:\n            mismatchWithGeoProperties:\n              - text: Не указаны геоданные объекта. Настройки каталога предусматривают обязательность геоданных.     \n                \n\n\n    MultiStatusCatalogObjectResponse:\n      description: |-\n        Пример ответа при успешной обработке запроса сохранения объектов,\n        но с ошибками бизнес-логики для некоторых объектов\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: added\n          responseAction: added\n        - code: 400\n          messageType: Incorrect data\n          globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: modified\n          responseAction: modified\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: modified\n          responseAction: modified\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          responseAction: deleted\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    MultiStatusCatalogObjectDeletedResponse:\n      description: |-\n        Пример ответа при успешной обработке запроса удаления объектов,\n        но с ошибками бизнес-логики для некоторых объектов\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: deleted\n        - code: 400\n          messageType: Incorrect data\n          globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: deleted\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: deleted\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    IncorrectDataCatalogObjectResponse:\n      description: Пример ответа c ошибками сохранения для всех объектов\n      value:\n        - globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: added\n          responseAction: added\n          code: 400\n          messageType: Incorrect data\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: modified\n          responseAction: modified\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          responseAction: deleted\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    IncorrectDataCatalogObjectDeletedResponse:\n      description: Пример ответа c ошибками удаления для всех объектов\n      value:\n        - globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: deleted\n          code: 400\n          messageType: Incorrect data\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: deleted\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    IncorrectGeodataCatalogObjectResponse:\n      description: Пример ответа c ошибкой по первичной валидации при сохранения геоданных объекта\n      value:\n        - globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: added\n          code: 400\n          messageType: Incorrect data\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithGeoProperties:\n              - text: |-\n                  Геоданные не удовлетворяют правилам первичной валидаци: MultiPolygon - Self-intersection - Point [39.292920471,55.384485243]\n\n    IncorrectGeodataCatalogObjectDeletedResponse:\n      description: Пример ответа c ошибкой по первичной валидации при сохранения геоданных объекта\n      value:\n        - globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: deleted\n          code: 400\n          messageType: Incorrect data\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithGeoProperties:\n              - text: |-\n                  Геоданные не удовлетворяют правилам первичной валидаци: MultiPolygon - Self-intersection - Point [39.292920471,55.384485243]\n\n    CatalogObjectMissingFieldResponse:\n      description: |-\n        Проверяется наличие в запросе обязательных параметров, соответствующих их action.\n        При этом если запрос не содержит всех объектов каталога или содержит лишний объект, то такие данные игнорируются. Соответственно можно передавать запрос только с изменяемыми атрибутами объекта.\n      value:\n        code: 400\n        messageType: Missing request body fields\n        message: В теле запроса отсутствует или не заполнено обязательное поле {fieldName}\n\n    CatalogObjectCatalogIsSigningResponse:\n      description: |-\n        Невозможно добавить или отредактировать объект каталога, который находится в процессе подписания.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Каталог находится в процессе подписания, добавление или редактирование объекта невозможно.\n\n    CatalogIsBackCheckResponse:\n      description: |-\n        Для каталога запущена фоновая проверка.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Для каталога запущена фоновая проверка, запуск удаления всех объектов недоступен. \n\n    CatalogIsImportingResponse:\n      description: |-\n        Невозможно выполнить операцию для каталога, который находится в процессе подписания.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Каталог находится в процессе импорта, изменение объектов невозможно.\n\n    CatalogObjectNotSignResponse:\n      description: |-\n        Невозможно подписать метаданные каталога, пока не подписаны объекты каталога.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Объекты не подписаны, подписание метаданных каталога невозможно.\n    \n    WriteToDifferentCatalogsResponse:\n      description: Метод сохранения не предусматривает сохранение объектов в разные каталоги\n      value:\n        code: 400\n        messageType: Bad request\n        message: Сохранение объектов может выполняться только в один и тот же каталог.\n\n    CatalogObjectNotFoundError:\n      description: |-\n        Переданный объект не найден в каталоге.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Объект {globalId} не найден в каталоге {catalogId}.\n\n    ObjectNotFoundError:\n      description: |-\n        Указанный объект не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Объекта с идентификатором {globalId} не существует.\n\n    ChildObjectNotFoundInObjectError:\n      description: |-\n        Переданный вложенный объект не входит в родительский объект.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Вложенный объект {globalId} не входит в объект {parentGlobalId/rootGlobalId}.\n\n    EditPropertiesResponse:\n      description: Пример ответа со свойствами редактирования для карточки объекта\n      value:\n        catalogProperties:\n          catalogStatus: archive\n          # isAddObjects: true\n          isCopyObjects: false\n          isDeleteAllObjects: true\n          isBlockEditObjectsGUI: false\n          hasGeo: true\n          hasDelOperModeAttr: true\n        # attributeProperties:\n        #   - attrId: 4843\n        #     catalogId: 124563\n        #     isManualInput: true\n        #     dependencies: [8425, 87366, 84288]\n        #   - attrId: 8997\n        #     catalogId: 124563\n        #     isManualInput: false\n        #     dependencies: [98742]\n        #   - attrId: 864231\n        #     catalogId: 124564\n        #     isManualInput: false\n        #     dependencies: []\n        dictionaryProperties:\n          - id: 58\n            name: Актуальные адреса БТИ\n            elementsCount: 500\n          - id: 1231\n            name: Справочник округов\n            elementsCount: 98\n        # userPrivileges:\n        #   - canView\n        #   - canExport\n        #   - canEdit\n        #   - canSign\n        #   - canCancelModification\n        #   - canImport\n        #   - canEditMeta\n        #   - canSignMeta\n        #   - canSignNoChangeFact\n        #   - canViewPubl\n        #   - canExportPubl\n        #   - canPubl\n\n    ObjectRollbackResponse:\n      description: Пример ответа при успешном сбросе измененний с объекта\n      value:\n        code: 200\n        messageType: Ok\n        message: Выполнена отмена изменений на выбранных объектах\n\n    ObjectRecoveredResponse:\n      description: Пример ответа при успешном восстановлении объекта\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные объекты восстановлены\n\n    ObjectDeletedResponse:\n      description: Пример ответа при успешном удалении объекта\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные объекты удалены\n\n    DeletionCreatedResponse:\n      description: Пример ответа при успешном запуске удаления объектов\n      value:\n        id: 452\n        code: 201\n        messageType: Created\n        message: Удаление запущено, процесс будет осуществляться в фоне. \n\n    AllObjectsDeletionNotAllowedResponse:\n      description: Для каталога НЕ выставлен флаг \"Возможно одновременное удаление всех объектов\"\n      value:\n        code: 400\n        messageType: Bad request\n        message: Удаление недоступно. Для каталога НЕ выставлен флаг \"Возможно одновременное удаление всех объектов\"\n\n    CatalogInDeletionError:\n      description: Пример ответа с ошибкой, если каталог находится в процессе удаления\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          На каталоге уже запущено фоновое удаление, необходимо дождаться его окончания или отменить.\n\n    ObjectDeletionHistoryRequest:\n      description: Пример тела запроса для получения истории удаления всех объектов каталога\n      value:\n        filters:\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024 15:25:05\n          - attribute: userName\n            operator: contains\n            value: Иван\n\n    CatalogObjDeletionHistoryItemArrayResponse:\n      description: Пример ответа с историей удаления всех объектов каталога\n      value:\n        - id: 2\n          dateStart: 28.09.2023 13:18:13\n          dateEnd: 28.09.2023 13:27:54\n          countInWorkObj: 2500\n          countErrorObj: 260\n          logFileId: c7b50ccd-dc45-4381-8606-6eaae7e43e66\n          status:\n            id: 4\n            tagId: finishedError\n            name: Удаление завершено с ошибками\n\n    DeletionCanceledByUserResponse:\n      description: Пример ответа при отмене удаления объектов пользователем\n      value:\n        code: 200\n        messageType: Ok\n        message: Удаление всех объектов отменено пользователем.\n\n    DeletionNotFoundError:\n      description: |-\n        Указанный процесс удаления не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Удаления с идентификатором {deletionId} не существует.\n\n    DeletionFinishedError:\n      description: Пример ответа с ошибкой, если удаление объектов  каталога завершено до отмены\n      value:\n        id: 75\n        code: 400\n        messageType: Bad request\n        message: Удаление объектов каталога было завершено. Отмена удаления невозможна.",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с объектами и списком объектов каталогов публикации\n  version: 1.0.0\n\npaths:\n  /publicationObjects/columns:\n    get:\n      tags:\n        - publicationObjects\n      summary: Получение столбцов для открытия списка объектов каталога публикации\n      description: |-\n        Возвращает информацию о столбцах списка объектов каталога.\n        Ответ включает технические столбцы, например: статус объекта, дата публикации и т.п.,\n        а также атрибуты каталога.\n\n        Каждый столбец в ответе содержит информацию о типе столбца, его названии, отображаемом в интерфейсе,\n        а также названиях полей, которые используются в JSON объекта в методе `POST /publicationObjects/search`.\n\n        Техническое наименование столбца возвращается в формате `field_{catalogAttrId}`,\n        где `catalogAttrId` - идентификатор атрибута в каталоге.\n\n        Столбцы возвращаются в порядке следования в таблице.\n\n        Для табличных атрибутов (вложенных каталогов) возвращаются только столбцы с идентификаторами\n        (global_id, system_object_id) и атрибуты каталога.\n      parameters:\n#        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/rootCatalogIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogObjects.yaml#/components/schemas/CatalogObjectListColumn'\n              examples:\n                Пример:\n                  $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectListColumnArrayResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n  \n  /publicationObjects/search:\n    post:\n      tags:\n        - publicationObjects\n      summary: Поиск по списку объектов корневого каталога публикации\n      description: |-\n        Возвращает информацию об объектах корневого каталога, удовлетворяющих условиям поиска.\n        \n        В теле запроса передаются объекты фильтров и сортировки. Метод позволяет выполнять многоуровневую сортировку.\n        \n        Порядок сортировки определяется порядком следования объектов сортировки в теле запроса.\n        \n        По умолчанию объекты сортируются в порядке возрастания глобального идентификатора.\n        \n        Метод позволяет выполнять фильтрацию по вложенным каталогам первого уровня. Для таких фильтров передается поле `childCatalogId`.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: 'catalogObjects.yaml#/components/parameters/globalIdsQueryParam'\n        - $ref: '#/components/parameters/publicationStatusesQueryParam'\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataPublQueryParam'    \n      requestBody:\n        description: Пример тела запроса с фильтрами и сортировками по списку объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    $ref: 'catalogObjects.yaml#/components/schemas/RootCatalogObjectListFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n            examples:\n              Пример:\n                $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PublicationObjectListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationObjectListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n#          $ref: 'catalogObjects.yaml#/components/responses/CatalogObjectSearchNotFoundResponse'\n          $ref: '#/components/responses/PublicationObjectSearchNotFoundResponse'\n \n\n  /publicationObjects/child/search:\n    post:\n      tags:\n        - publicationObjects\n      summary: Поиск по списку объектов вложенного каталога публикации\n      description: |-\n        Возвращает информацию об объектах вложенного каталога в привязке к родительскому объекту (передается в параметрах запроса).\n        \n        В теле запроса передаются объекты фильтров и сортировки. Метод позволяет выполнять многоуровневую сортировку.\n\n        Порядок сортировки определяется порядком следования объектов сортировки в теле запроса.\n        \n        По умолчанию объекты сортируются в порядке возрастания глобального идентификатора.\n      parameters:\n        - $ref: 'catalogObjects.yaml#/components/parameters/parentGlobalIdQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/rootGlobalIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/parentCatalogIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/rootCatalogIdQueryParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n      requestBody:\n        description: Пример тела запроса с фильтрами и сортировками по списку объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    $ref: 'catalogObjects.yaml#/components/schemas/ChildCatalogObjectListFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n            examples:\n              Пример:\n                $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ChildPublicationObjectListItem'\n              examples:\n                Пример:\n                  $ref: 'catalogObjects.yaml#/components/examples/ChildCatalogObjectListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n#          $ref: 'catalogObjects.yaml#/components/responses/ChildCatalogObjectSearchNotFoundResponse'\n          $ref: '#/components/responses/ChildPublicationObjectSearchNotFoundResponse'\n\n  /publicationObjects:\n    get:\n      tags:\n        - publicationObjects\n      summary: Получение данных объекта каталога публикации\n      description: |-\n        Возвращает полную информацию об объектах по идентификаторам.\n\n        Для поиска могут быть использованы глобальные идентификаторы или идентификаторы в системе-поставщике.\n        Результат поиска будет слит в общий массив, в котором объект будет повторяться один раз.\n\n        Если оба массива не будут переданы или объекты по переданным идентификаторам не будут найдены, то вернется пустой массив.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: globalIds\n          in: query\n          required: false\n          description: |-\n            Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n\n            Число элементов в массиве: до `100`.\n          schema:\n            type: array\n            maxItems: 100\n            items:\n              type: integer\n              format: int64\n        - name: systemObjectIds\n          in: query\n          required: false\n          description: |-\n            Идентификаторы объектов каталога в системе-поставищике, которые нужно вернуть.\n\n            Число элементов в массиве: до `100`.\n          schema:\n            type: array\n            maxItems: 100\n            items:\n              type: string\n        - name: verbose\n          description: |-\n            Возвращать ли подробный ответ для ссылочных и справочных объектов.\n\n            При передаче `true` в значениях ссылочных и справочных атрибутов возвращается объект,\n            содержащий идентификатор объекта ссылочного каталога `globalId` или элемента справочника `dictElementId`,\n            а также строковое значение `value` того атрибута, которое выбрано для отображения в каталоге.\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - name: returnSystem\n          description: |-\n            Возвращать ли системные атрибуты в ответе.\n\n            Системные атрибуты включают:\n              - дату публикации (attrId = -8)\n              - наличие геоданных (attrId = -22).\n          in: query\n          required: false\n          schema:\n            type: boolean\n            default: true\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataPublQueryParam'    \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  oneOf:\n                    - $ref: '#/components/schemas/PublicationCatalogObject'\n                    - $ref: '#/components/schemas/PublicationCatalogObjectVerbose'\n              examples:\n                verbose = false, returnSystem = false, fetchGeodata = true:\n                  $ref: '#/components/examples/PublicationCatalogObjectResponse'\n                verbose = true, returnSystem = true, fetchGeodata = true:\n                  $ref: '#/components/examples/PublicationCatalogObjectVerboseReturnSystemResponse'\n\ncomponents:\n\n  schemas:\n    PublicationObjectStatusTagIdEnum:\n      description: Техническое наименование статуса объекта каталога публикации\n      oneOf:\n        - type: string\n          enum:\n            - active\n            - deleted\n\n    PublicationObjectStatusNameEnum:\n      description: Наименование статуса объекта каталога публикации\n      oneOf:\n        - type: string\n        #   enum:\n        #     - Активный\n        #     - Удаленный\n\n    PublicationObjectStatus:\n      description: Статус объекта каталога публикации\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: Идентификатор статуса\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/PublicationObjectStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/PublicationObjectStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: Активный\n        tagId: active \n\n    PublicationObjectListColumnTypeTagIdEnum:\n      description: |-\n        Тип столбца, показывает, какой тип информации передается в столбце списка объектов каталога публикации\n        \n        `technical` - техническая информация\n        \n        `attribute` - атрибут каталога\n      oneOf:\n        - type: string\n          enum:\n            - technical\n            - attribute\n\n\n    ChildPublicationObjectListItem:\n      allOf: \n        - $ref: '#/components/schemas/CommonPublicationObjectListItem'\n        - $ref: 'catalogObjects.yaml#/components/schemas/CommonChildObjectListItem'\n      description: |-\n        Информация о объекте, выводимая в списке объектов вложенного каталога в каталог публикации\n      type: object\n      readOnly: true\n \n    CommonPublicationObjectListItem:\n      allOf:\n        - $ref: 'catalogObjects.yaml#/components/schemas/CommonObjectListItem'\n      description: Общая информация об объекте в списке объектов каталога публикации\n      type: object\n      readOnly: true\n    \n    PublicationObjectListItem:\n      allOf:\n        - $ref: '#/components/schemas/CommonPublicationObjectListItem'\n      description: |-\n        Информация об объекте, выводимая в списке объектов каталога публикации\n      type: object\n      readOnly: true\n      properties:\n        publicationStatus:\n          $ref: '#/components/schemas/PublicationObjectStatus'\n        publDate:\n          description: Дата публикации\n          type: string\n          format: date\n        hasGeoObj: \n          description: Признак наличия геоданных в объекте. Указывается только в каталогах, где включено наличие геопривязки.\n          type: boolean \n        geodata: \n          description: Свойство `properties` для объектов публикации не используется.\n          $ref: 'geodata.yaml#/components/schemas/PublicationObjectGeodata' \n      required:\n        - publicationStatus\n        - publDate\n\n    PublicationNestedCatalogObject:\n      type: object\n      description: |-\n        Объект вложенного каталога публикации.\n      properties:\n        globalId:\n          description: Глобальный идентификатор объекта\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        parentSystemObjectId:\n          description: Идентификатор родительского объекта в системе-поставщике\n          type: string\n        parentGlobalId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer\n        rootGlobalId:\n          description: Идентификатор глобального объекта\n          type: integer\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        parentCatalogId:\n          description: Идентификатор родительского каталога\n          type: integer\n        rootCatalogId:\n          description: Идентификатор корневого каталога\n          type: integer\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationCatalogObjectDataItem'\n          minItems: 1\n      required:\n        - catalogId\n        - parentCatalogId\n        - rootCatalogId\n        - data\n\n    PublicationNestedCatalogObjectVerbose:\n      type: object\n      description: |-\n        Объект вложенного каталога публикации с расширенной схемой для справочных и ссылочных атрибутов.\n      readOnly: true\n      properties:\n        globalId:\n          description: Глобальный идентификатор объекта\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        parentSystemObjectId:\n          description: Идентификатор родительского объекта в системе-поставщике\n          type: string\n        parentGlobalId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer\n        rootGlobalId:\n          description: Идентификатор глобального объекта\n          type: integer\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        parentCatalogId:\n          description: Идентификатор родительского каталога\n          type: integer\n        rootCatalogId:\n          description: Идентификатор корневого каталога\n          type: integer\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationCatalogObjectDataItemVerbose'\n          minItems: 1\n      required:\n        - globalId\n        - parentGlobalId\n        - rootGlobalId\n        - catalogId\n        - parentCatalogId\n        - rootCatalogId\n        - data\n\n    PublicationCatalogObjectDataItem:\n      description: |-\n        Значение атрибута объекта.\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        catalogAttrId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          format: int32\n          readOnly: true\n        value:\n          description: |-\n            Значение атрибута, передаваемое при сохранении или чтении, если verbose=false.\n            Для типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.\n          oneOf:\n            - description: Зачение атрибута типа строка\n              type: string\n            - description: Зачение атрибута типа целое число\n              type: integer\n            - description: Зачение атрибута типа дробное число\n              type: number\n            - description: Зачение атрибута типа флаг\n              type: boolean\n            - description: Зачение атрибута типа дата (без времени) в формате dd.MM.YYYY\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n            - description: Зачение атрибута типа дата (со временем) в формате dd.MM.YYYY hh:mm:ss\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n            - description: Значение атрибута типа файл, в массиве передается uuid файла, загруженного на файловый сервер\n              type: array\n              items:\n                type: string\n            - description: Зачение атрибута типа справочник, в массиве передается id элемента справочника\n              type: array\n              items:\n                type: string\n            - description: Зачение атрибута типа ссылка, в массиве передается gloabl_id объекта, на который ссылается объект\n              type: array\n              items:\n                type: integer\n            - description: Зачение атрибута типа таблица\n              type: array\n              items:\n                $ref: '#/components/schemas/PublicationNestedCatalogObject'\n      required:\n        - attrId\n\n    PublicationCatalogObjectDataItemVerbose:\n      description: |-\n        Значение атрибута объекта.\n      type: object\n      readOnly: true\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n        catalogAttrId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          format: int32\n          readOnly: true\n        value:\n          description: |-\n            Значение атрибута, передаваемое при сохранении или чтении, если verbose=true.\n            Для типов данных справочник, ссылка на объект, файл, таблица значение **всегда** передаётся в массиве, независимо от установленного свойства isMultiple на атрибуте.\n          oneOf:\n            - description: Зачение атрибута типа строка\n              type: string\n            - description: Зачение атрибута типа целое число\n              type: integer\n            - description: Зачение атрибута типа дробное число\n              type: number\n            - description: Зачение атрибута типа флаг\n              type: boolean\n            - description: Зачение атрибута типа дата (без времени) в формате dd.MM.YYYY\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n            - description: Зачение атрибута типа дата (со временем) в формате dd.MM.YYYY hh:mm:ss\n              type: string\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n            - description: Зачение атрибута типа файл, в массиве передается id файла, загруженного на файловый сервер\n              type: array\n              items:\n                type: integer\n            - description: Зачение атрибута типа справочник\n              type: array\n              items:\n                type: object\n                properties:\n                  dictElementId:\n                    description: Идентификатор элемента справочника\n                    type: string\n                  value:\n                    description: Значение элемента справочника из столбца, выбранного в каталоге для отображения\n                    type: string\n            - description: Зачение атрибута типа ссылка\n              type: array\n              items:\n                type: object\n                properties:\n                  globalId:\n                    description: Глобальный идентификатор объекта, записанного в значении ссылочного атрибута\n                    type: integer\n                    format: int64\n                  value:\n                    description: Значение главного атрибута объекта, записанного в значении ссылочного атрибута\n                    type: string\n            - description: Зачение атрибута типа таблица\n              type: array\n              items:\n                $ref: '#/components/schemas/PublicationNestedCatalogObjectVerbose'\n      required:\n        - attrId\n\n    PublicationCatalogObject:\n      description: |-\n        Объект каталога публикации.\n\n        Для публикации не требуются дополнительные свойства для геоданных объекта.\n      type: object\n      properties:\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        globalId:\n          description: Глобальный идентификатор объекта, назначенный в рамках ГИС ЕХД\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationCatalogObjectDataItem'\n          minItems: 1\n# Свойство `properties` для объектов публикации не используется. Можно создать отдельную схему, но есть ли необходимость?\n        geodata: \n          description: Свойство `properties` для объектов публикации не используется.\n          $ref: 'geodata.yaml#/components/schemas/PublicationObjectGeodata' \n      required:\n        - catalogId\n        - data\n\n    PublicationCatalogObjectVerbose:\n      description: |-\n        Объект каталога публикации с расширенной схемой для справочных и ссылочных атрибутов.\n\n        Для публикации не требуются дополнительные свойства для геоданных объекта.\n      type: object\n      readOnly: true\n      properties:\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        globalId:\n          description: Глобальный идентификатор объекта, назначенный в рамках ГИС ЕХД\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicationCatalogObjectDataItemVerbose'\n          minItems: 1\n        geodata: \n          $ref: 'geodata.yaml#/components/schemas/PublicationObjectGeodata' \n      required:\n        - catalogId\n        - globalId\n        - data\n\n  parameters:\n    catalogIdQueryParam:\n      name: catalogId\n      in: query\n      description: |-\n        Идентификатор каталога.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 1243761423\n\n    rootCatalogIdQueryParam:\n      name: rootCatalogId\n      in: query\n      description: |-\n        Идентификатор корневого каталога.\n      schema:\n        type: integer\n        format: int64\n      example: 1243761423\n\n    globalIdPathParam:\n      name: globalId\n      in: path\n      description: |-\n        Глобальный идентификатор объекта.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 124376127\n    \n    parentGlobalIdQueryParam:\n      name: parentGlobalId\n      in: query\n      description: |-\n        Глобальный идентификатор родительского объекта.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 1243761423\n    \n    rootGlobalIdQueryParam:\n      name: rootGlobalId\n      in: query\n      description: |-\n        Глобальный идентификатор корневого объекта (объекта в корневом каталоге, которому принадлежат вложенные объекты).\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 3249874123\n    \n    globalIdQueryParam:\n      name: globalId\n      in: query\n      description: |-\n        Глобальный идентификатор объекта.\n      required: true\n      schema:\n        type: integer\n        format: int64\n      example: 124376127\n    \n    globalIdsQueryParam:\n      name: globalIds\n      in: query\n      required: false\n      description: |-\n        Глобальные идентификаторы объектов каталога, которые нужно вернуть.\n        \n        Может использоваться для дополнительной фильтрации при работе со списком объектов ссылочного атрибута. Массив не может быть пустым.\n      schema:\n        type: array\n        minItems: 1\n        items:\n          type: integer\n          format: int64\n        \n    objectIdsQueryParam:\n      name: objectIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов объектов каталога.\n        \n        Число элементов в списке от `1` до `500`.\n      schema:\n        type: array\n        items:\n          type: integer\n          format: int64\n        minItems: 1\n        maxItems: 500\n      example: [454, 323, 783] \n\n    publicationStatusesQueryParam:\n      name: objectStatuses\n      in: query\n      description: |-\n        Статусы возвращаемых объектов каталога публикации, используется для фильтрации по статусу объекта.\n        \n        В массиве передаются технические названия статусов. Массив не может быть пустым.\n      required: false\n      schema:\n        type: array\n        items:\n          $ref: '#/components/schemas/PublicationObjectStatusTagIdEnum'\n        minItems: 1\n\n  responses:\n    PublicationObjectSearchNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога не существует;\n          - Переданный в фильтре или сортировке атрибут `attribute` не существует в корневом или вложенном каталоге;\n          - id вложенного каталога `childCatalogId`, переданный в фильтре, не существует в корневом каталоге.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога:\n              $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n            Атрибут фильтра или сортировки не существует в каталоге:\n              $ref: '_common.yaml#/components/examples/FilterSortingAttributeNotFoundError'\n            Вложенный каталог не найден в каталоге:\n              $ref: 'catalogs.yaml#/components/examples/ChildCatalogNotFoundInCatalogError'\n    ChildPublicationObjectSearchNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный объект (вложенный, родительский, корневой) не существует в переданном каталоге (вложенном, родительском, корневом);\n          - Запрошенный каталог (вложенный или родительский) не входит в (родительский или корневой) каталог;\n          - Запрошенный объект (вложенный или родительский) не входит в (родительский или корневой) объект;\n          - Переданный в фильтре или сортировке атрибут `attribute` не существует в корневом каталоге.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Объект не найден в соответствующей каталоге:\n              $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectNotFoundError'\n            Вложенный каталог не найден в каталоге:\n              $ref: 'catalogs.yaml#/components/examples/ChildCatalogNotFoundInCatalogError'\n            Вложенный объект не входит в родительский объект:\n              $ref: 'catalogObjects.yaml#/components/examples/ChildObjectNotFoundInObjectError'\n            Атрибут фильтра или сортировки не существует в каталоге:\n              $ref: '_common.yaml#/components/examples/FilterSortingAttributeNotFoundError'\n\n  examples:\n    PublicationObjectListItemArrayResponse:\n      value:\n        - globalId: 1249763289\n          systemObjectId: object_7236\n          publicationStatus:\n            id: 1\n            name: Активный\n            tagId: active\n          publDate: 22.07.2017 17:00:00\n          hasGeoObj: true\n          attributes:\n            field_2421: Петров\n            field_4212: 33\n            field_4231: 10.10.1980\n            field_53: \n              tableValue: русский; татарин\n              dictElements:\n                - dictElementId: 1\n                  value: русский\n                - dictElementId: 3\n                  value: татарин\n            field_124:\n              tableValue: \"Файлов: 3\"\n              fileIds:\n                - 8ad76a56-2f07-4a25-8d7b-75e443d8d365\n                - 6d8b2016-730a-425e-a132-05e34f1de074\n                - c11dae28-bc56-4496-9b80-d4c58a38f522\n            field_220:\n              tableValue: да\n              boolValue: true\n            field_98:\n              tableValue: Иванов П.И.; Иванова К.И; Иванов Р.И\n              linkObjects:\n                - globalId: 6352936\n                  value: Иванов П.И.\n                - globalId: 8366419\n                  value: Иванова К.И.\n                - globalId: 75237097\n                  value: Иванов Р.И.\n            field_102: 145.7\n            field_232: true\n            geodata:            \n              type: feature\n              geometry:\n                type: GeometryCollection\n                geometries:\n                    - coordinates:                   \n                      - 37.48264616864711,55.88373558940018\n                      type: Point\n                    - coordinates:                                                                      \n                        - \n                          - 6260.07010778\n                          - 15862.06985372                                        \n                        - \n                          - 6259.44001736\n                          - 15865.4903631\n                        - \n                          - 6268.25009624\n                          - 15867.19995669\n                        - \n                          - 6270.11001739\n                          - 15867.56036315\n                        - \n                          - 6270.74971739\n                          - 15863.97176307\n                        - \n                          - 6271.81001739\n                          - 15864.16036307\n                        - \n                          - 6272.02001739\n                          - 15862.96036304\n                        - \n                          - 6266.51001738\n                          - 15861.98036302\n                        - \n                          - 6266.35711738\n                          - 15862.85396303\n                        - \n                          - 6264.97681738\n                          - 15862.60556304\n                        - \n                          - 6260.07010778\n                          - 15862.06985372\n                      type: MultiPolygon\n\n    PublicationCatalogObjectResponse:\n      value:\n        - catalogId: 8432\n          globalId: 1249763289\n          systemObjectId: object_7236\n          data:\n            - catalogAttrId: 30\n              attrId: 130\n              value: Петров\n            - catalogAttrId: 33\n              attrId: 133\n              value: 33\n            - catalogAttrId: 36\n              attrId: 136\n              value: \"10.10.1980\"\n            - catalogAttrId: 39\n              attrId: 139\n              value: true\n            - catalogAttrId: 45\n              attrId: 145\n              value:\n                - 1983723\n                - 1386430\n            - catalogAttrId: 846\n              attrId: 3456\n              value:\n                - 1\n                - 3\n            - catalogAttrId: 84645\n              attrId: 1233\n              value:\n                - c11dae28-bc56-4496-9b80-d4c58a38f522\n                - 6d8b2016-730a-425e-a132-05e34f1de074\n                - 8ad76a56-2f07-4a25-8d7b-75e443d8d365\n            - catalogAttrId: 48\n              attrId: 148\n              value:\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  systemObjectId: единица-1\n                  globalId: 123123112\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Кошки мышки\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"10.10.1980\"\n                    - catalogAttrId: 57\n                      attrId: 157\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentSystemObjectId: единица-1\n                          rootGlobalId: 1249763289\n                          parentGlobalId: 123123112\n                          systemObjectId: единица-1-1\n                          globalId: 1012349862378\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов П.И.\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  globalId: 7654321\n                  systemObjectId: единица-2\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Рога и копыта\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"21.07.2000\"\n                    - catalogAttrId: 57\n                      attrId: 157\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          globalId: 987654\n                          systemObjectId: единица-2-1\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванова К.И.\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          systemObjectId: единица-2-2\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов Р.И.\n          geodata:\n            type: Feature\n            geometry:\n              type: GeometryCollection\n              geometries:\n                - type: Point\n                  coordinates: \n                    - 37.57488596826171\n                    - 55.753835074882915\n                - type: MultiLineString\n                  coordinates:\n                    -\n                      -\n                        - 37.20208680549581\n                        - 55.75991514505003\n                      -\n                        - 38.401608888302064\n                        - 55.60775947055342\n                    -\n                      -\n                        - 39.2929204707026\n                        - 55.38448524332469\n                    -\n                      -\n                        - 38.62012154676003\n                        - 55.445280980775465\n                - type: MultiPolygon\n                  coordinates:\n                    -\n                      -\n                        -\n                          - 38.63968631610595\n                          - 55.59156664817431\n                        -\n                          - 38.61372729774422\n                          - 55.513883281785866\n                        -\n                          - 38.77855209164545\n                          - 55.55705844341085\n                        - \n                          - 38.63968631610595\n                          - 55.59156664817431\n\n    PublicationCatalogObjectVerboseReturnSystemResponse:\n      value:\n        - catalogId: 8432\n          globalId: 1249763289\n          systemObjectId: object_7236\n          data:\n            - catalogAttrId: -8\n              attrId: -8\n              value: \"22.06.2024\"\n            - catalogAttrId: -22\n              attrId: -22\n              value: true\n            - catalogAttrId: 30\n              attrId: 130\n              value: Петров\n            - catalogAttrId: 33\n              attrId: 133\n              value: 33\n            - catalogAttrId: 36\n              attrId: 136\n              value: \"10.10.1980\"\n            - catalogAttrId: 39\n              attrId: 139\n              value: true\n            - catalogAttrId: 45\n              attrId: 145\n              value:\n                - globalId: 1983723\n                  value: Петров В.В\n                - globalId: 1386430\n                  value: Петров К.Р.\n            - catalogAttrId: 846\n              attrId: 3456\n              value:\n                - dictElementId: 1\n                  value: Понедельник\n                - dictElementId: 3\n                  value: Среда\n            - catalogAttrId: 84645\n              attrId: 1233\n              value:\n                - c11dae28-bc56-4496-9b80-d4c58a38f522\n                - 6d8b2016-730a-425e-a132-05e34f1de074\n                - 8ad76a56-2f07-4a25-8d7b-75e443d8d365\n            - catalogAttrId: 48\n              attrId: 148\n              value:\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  systemObjectId: единица-1\n                  globalId: 123123112\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Кошки мышки\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"10.10.1980\"\n                    - catalogAttrId: 57\n                      attrId: 157\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentSystemObjectId: единица-1\n                          rootGlobalId: 1249763289\n                          parentGlobalId: 123123112\n                          systemObjectId: единица-1-1\n                          globalId: 1012349862378\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов П.И.\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  globalId: 7654321\n                  systemObjectId: единица-2\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Рога и копыта\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"21.07.2000\"\n                    - catalogAttrId: 57\n                      attrId: 157\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          globalId: 987654\n                          systemObjectId: единица-2-1\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванова К.И.\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          systemObjectId: единица-2-2\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов Р.И.\n          geodata:\n            type: Feature\n            geometry:\n              type: GeometryCollection\n              geometries:\n                - type: Point\n                  coordinates: \n                    - 37.57488596826171\n                    - 55.753835074882915\n                - type: MultiLineString\n                  coordinates:\n                    -\n                      -\n                        - 37.20208680549581\n                        - 55.75991514505003\n                      -\n                        - 38.401608888302064\n                        - 55.60775947055342\n                    -\n                      -\n                        - 39.2929204707026\n                        - 55.38448524332469\n                    -\n                      -\n                        - 38.62012154676003\n                        - 55.445280980775465\n                - type: MultiPolygon\n                  coordinates:\n                    -\n                      -\n                        -\n                          - 38.63968631610595\n                          - 55.59156664817431\n                        -\n                          - 38.61372729774422\n                          - 55.513883281785866\n                        -\n                          - 38.77855209164545\n                          - 55.55705844341085\n                        - \n                          - 38.63968631610595\n                          - 55.59156664817431\n    \n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы в процессе аутентификации пользователя в ЕХД\n  version: 1.0.0\n\npaths:\n\n  /auth/authUrl:\n    get:\n      tags:\n        - auth\n      summary: Получение url страницы авторизации (в KeyCloack)\n      description: Возвращает адрес страницы авторизации, в котором содержатся client_id, redirect_url и другие параметры пути аутентификации\n      parameters:\n        - $ref: '#/components/parameters/RedirectUrlQueryParam'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n          content:\n            text/plain:\n              schema:\n                  $ref: '#/components/schemas/AuthUrl'\n\n\n  /auth/token:\n    get:\n      tags:\n        - auth\n      summary: Получение JWT-токена доступа ЕХД по коду авторизации KeyCloak\n      description: |-\n        Возвращает JWT-токен доступа с данными пользователя после успешной аутентификации в KeyCloack\n\n      parameters:\n        - $ref: '#/components/parameters/AuthCodeQueryParam'\n        - $ref: '#/components/parameters/RedirectUrlQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n\n  /auth/refreshToken:\n    post:\n      tags:\n        - auth\n      summary: Получение нового access- и refresh-токена доступа ЕХД по refresh-токену.\n      description: |-\n        Возвращает access-токен доступа с данными пользователя и refresh-токен\n      requestBody:\n        $ref: '#/components/requestBodies/RefreshTokenRequestBody'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/TokenResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Время жизни refresh-токена истекло.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Время жизни refresh-токена истекло:\n                  $ref: '#/components/examples/RefreshTokenTimeOverError'\n\n  /auth/sessionCancel:\n    get:\n      tags:\n        - auth\n      summary: Прекращение сеанса доступа пользователя из таблицы активных сессий\n      description: |-\n        Метод используется для прерывания сеанса доступа из таблицы Активные сессии и одновременного отзыва JWT-токена доступа пользователя, выданного Gateway-сервисом\n      parameters:\n        - $ref: '#/components/parameters/accessJwtIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/StopSessionResponse'\n        '403':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - У пользователя нет прав администратора.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ForbiddenError'\n              examples:\n                Запрещен доступ к прекращению сеансов доступа других пользователей:\n                  $ref: '#/components/examples/SessionCancelForbiddenErrorResponse'\n\n  /auth/logout:\n    get:\n      tags:\n        - auth\n      summary: Отзыв JWT-токена пользователя\n      description: |-\n        Метод используется для отзыва JWT-токена доступа пользователя, выданного Gateway-сервисом. Сам токен передается в заголовках.\n      #security:\n        #- JWT: []\n#      parameters:\n#        - $ref: '#/components/parameters/tokenHeaderParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/LogoutOKResponse'\n\n\n  /auth/sessions/search:\n    post:\n      tags:\n        - auth\n      summary: Получение активных сеансов пользователей\n      description: Возвращает список активных сеансов пользователей\n      parameters:\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке сеансов. Поиск производится по атрибутам `Логин`, `Фамилия`, `Имя`, `Отчество` и `e-mail`. Запрос со значением `Iva` вернет всех сессии пользователей, атрибуты которых содержат подстроку `Iva`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `firstName`, `lastName`, `pathroName` `login`, `email`.\n\n            По умолчанию: `login`.\n          required: false\n          schema:\n            type: string\n            default: login\n            enum:\n              - lastName\n              - firstName\n              - pathroName\n              - login\n              - email\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/SessionListRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SessionListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SessinListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /auth/securityEvents/search:\n    post:\n      tags:\n        - auth\n      summary: Поиск по логу событий безопасности\n      description: |-\n        Позволяет искать по логу событий безопасности,\n        связанных c аутентификацией, блокировками, а тажке изменением настроек пользователей.\n      parameters:\n        - name: dateFrom\n          in: query\n          required: true\n          description: Дата начала периода, за который возвращаются события безопасности (формат dd.MM.YYYY).\n          schema:\n            $ref: '_common.yaml#/components/schemas/DateFormat'\n        - name: dateUntil\n          in: query\n          required: true\n          description: Дата конца периода, за который возвращаются события безопасности (формат dd.MM.YYYY).\n          schema:\n            $ref: '_common.yaml#/components/schemas/DateFormat'\n        - name: limit\n          in: query\n          required: false\n          description: Количество возвращаемых событий (от `1` до `500`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'        \n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке событий безопасности. Поиск производится по атрибутам `userLogin`, `procUserLogin`. Запрос со значением `Iva` вернет все события, в которых логин пользователя (внесшего изменения в права или права которого изменились) которого содержат подстроку `Iva`.\n          schema:\n            type: string    \n        # - name: sortBy\n        #   in: query\n        #   description: |-\n        #     Поле, по которому производится сортировка.\n        #     Допустимые значения: `firstName`, `lastName`, `pathroName` `login`, `email`, `eventDate`.\n\n        #     По умолчанию: `eventDate`.\n        #   required: false\n        #   schema:\n        #     type: string\n        #     default: login\n        #     enum:\n        #       - lastName\n        #       - firstName\n        #       - pathroName\n        #       - login\n        #       - email\n        #       - eventDate\n        # - $ref: '_common.yaml#/components/parameters/orderByDescQueryParam'\n        - name: eventType\n          in: query\n          required: false\n          description: |-\n            Фильтр по типам событий безопасности:\n              - `loginAttempt` - попытка входа\n              - `login` - вход в систему\n              - `logout` - выход из системы\n              - `passwordReset` - сброс пароля\n              - `sessionCancel` - системное преркащение сеанса\n              - `userCreate` - создание пользователя\n              - `userAccessChange` - изменение прав доступа пользователя\n              - `userBlock` - блокировка пользователя\n              - `userUnblock` - разблокировка пользователя\n              - `userDelete` - удаление пользователя\n              - `userRestore` - восстановление пользователя\n\n            Если параметр не передан, возвращаются любые события.\n          schema:\n            type: array\n            items:\n              $ref: '#/components/schemas/SecurityEventTypeTagIdEnum'\n      # requestBody:\n      #   content:\n      #     application/json:\n      #       schema:\n      #         type: object\n      #         properties:\n      #           filters:\n      #             type: array\n      #             items:\n      #               allOf:\n      #                 - $ref: '_common.yaml#/components/schemas/BasicFilter'\n      #                 - properties:\n      #                     attribute:\n      #                       type: string\n      #                       enum:\n      #                         - lastName\n      #                         - firstName\n      #                         - pathroName\n      #                         - login\n      #                         - email\n      #                         - eventDate\n      #       examples:\n      #         Пример:\n      #           $ref: '#/components/examples/SecurityEventSearchRequest'\n      #   required: false\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SecurityEventListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SecurityEventListItemArrayResponse'\n          headers: \n           X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n\n  /auth/securityEvents/{eventId}/details:\n    get:\n      tags:\n        - auth\n      summary: Поиск детализации по логу событий безопасности, данным о правах пользователя, аудитам данных о правах пользователя\n      description: |-\n        Позволяет искать детальные данные по логу событий безопасности,\n        связанных c аутентификацией, блокировками, а тажке изменением настроек пользователей.\n      parameters:                \n        - name: eventId\n          in: path\n          required: true\n          description: |-\n            Поиск по id события безопасности.\n          schema:\n            type: integer\n            format: int32\n          example: 12311\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/SecurityEventDetailsListItem'\n                  - $ref: '#/components/schemas/SecurityEventDetailsSpecListItem'\n                  - $ref: '#/components/schemas/SecurityEventDetailsAuthListItem'\n              examples:\n                Пример детализации изменения прав без спецпривилегий:\n                  $ref: '#/components/examples/SecurityEventDetailsListItemResponse'\n                Пример детализации изменения прав со спецпривилегиями:\n                  $ref: '#/components/examples/SecurityEventDetailsSpecListItemResponse'\n                Пример детализации входа в приложение:\n                  $ref: '#/components/examples/SecurityEventDetailsAuthListItemResponse'\n              \n          \n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\ncomponents:\n\n  schemas:\n\n    SecurityEventTypeTagIdEnum:\n      description: |-\n        Техническое наименование типа события безопасности:\n          - `loginAttempt` - попытка входа\n          - `login` - вход в систему\n          - `logout` - выход из системы\n          - `passwordReset` - сброс пароля\n          - `sessionCancel` - системное преркащение сеанса\n          - `userCreate` - создание пользователя\n          - `userAccessChange` - изменение прав доступа пользователя\n          - `userBlock` - блокировка пользователя\n          - `userUnblock` - разблокировка пользователя\n          - `userDelete` - удаление пользователя\n          - `userRestore` - восстановление пользователя\n      type: string\n      enum:\n        - loginAttempt\n        - login\n        - logout\n        - passwordReset\n        - sessionCancel\n        - userCreate\n        - userAccessChange\n        - userBlock\n        - userUnblock\n        - userDelete\n        - userRestore\n\n    SecurityEventType:\n      description: Тип события безопасности\n      type: object\n      properties:\n        id:\n          description: Идентификатор типа события безопасности\n          type: integer\n          format: int32\n        name:\n          description: Наименование типа события безопасности\n          type: string\n        tagId:\n          $ref: '#/components/schemas/SecurityEventTypeTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    SecurityEventListItem:\n      description: |- \n        Элемент списка событий безопасности из лога, возвращается для событий:      \n          - `loginAttempt` - попытка входа\n          - `login` - вход в систему\n          - `logout` - выход из системы\n          - `passwordReset` - сброс пароля\n          - `sessionCancel` - системное преркащение сеанса\n          - `userCreate` - создание пользователя\n          - `userAccessChange` - изменение прав доступа пользователя\n          - `userBlock` - блокировка пользователя\n          - `userUnblock` - разблокировка пользователя\n          - `userDelete` - удаление пользователя\n          - `userRestore` - восстановление пользователя\n      type: object\n      properties:\n        eventId:\n          description: Идентификатор события в логе безопасности\n          type: integer\n        userId:\n          description: Идентификатор пользователя, права которого были изменены или совершившего вход или выход из Системы \n          type: integer\n        userLogin:\n          description: Логин пользователя\n          type: string\n        userFIO:\n          description: ФИО пользователя\n          type: string        \n        userEmail:\n          description: Email пользователя\n          type: string\n        eventDate:\n          description: Дата и время события безопасности\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        eventTypeName:\n          description: Наименование типа события безопасности\n          type: string\n        eventTypeTagId:\n          description: Tag_id типа события безопасности\n          type: string      \n                 \n        procUserLogin:\n          description: Логин пользователя, инициировавшего событие безопасности\n          type: string\n        procUserFIO:\n          description: ФИО пользователя, инициировавшего событие безопасности\n          type: string            \n        procUserEmail:\n          description: Email пользователя, инициировавшего событие безопасности\n          type: string            \n        procUserGroupName:\n          description: Наименование группы пользователя, инициировавшего событие безопасности/Администратор ИБ (если пользователь is_admin=true)\n          type: string        \n      required:     \n        - userId\n        - userLogin\n        - userFIO\n        - userEmail\n        - eventDate\n        - eventTypeName        \n        - procUserLogin\n        - procUserFIO\n        - procUserEmail\n        - procUserGroupName        \n    \n    SecurityEventDetailsListItem:\n      description: |- \n        Элемент списка детализации событий безопасности из лога следующих типов (для userAccessChange кроме спецпривилегий):    \n        \n        - `sessionCancel` - системное преркащение сеанса\n        - `userCreate` - создание пользователя\n        - `userAccessChange` - изменение прав доступа пользователя            \n      type: object  \n      properties:\n        accessChangesBase:\n          description: |-\n            Изменения прав учетной записи пользователя, указанного в `changedUser`.            \n            Возвращается для типов прав:\n              - `group` - Группа пользователя\n              - `privilegeFill` - Привилегии заполнения\n              - `privilegePubl` - Привилегии публикации\n              - `menu` - Меню\n              - `oiv` - ОИВ\n              - `email` - E-mail                                      \n          type: array\n          items:\n            type: object\n            properties:\n              privType:\n                description: Тип прав (заголовок блока)\n                type: string\n              privChangesBase:\n                description: Изменения типа прав (старое/новое значение или добавлено/удалено)\n                type: array\n                items:                                 \n                  type: string\n                  \n        \n    SecurityEventDetailsSpecListItem:\n      description: |-\n        Элемент списка детализации событий безопасности из лога для типа `userAccessChange` (спецпривилегии)                \n      type: object      \n      properties:\n        accessChangesSpecPriv:\n          description: |-\n            Изменения прав учетной записи пользователя.            \n            Возвращается для типов прав:             \n              - `specPrivilegeFill` - Привилегии заполнения\n              - `specPrivilegePubl` - Привилегии публикации             \n          type: array\n          items:\n            type: object\n            properties:\n              privType:\n                description: Тип прав (заголовок блока)\n                type: string\n              catalogListChanges:\n                description: Изменения типа прав (старое/новое значение или добавлено/удалено)\n                type: array\n                items:\n                  type: object\n                  properties:\n                    catalogMeta:\n                      description: ID каталога/группы каталогов + Наименование каталога/группы каталогов (подзаголовок блока)\n                      type: string\n                    privChangesSpec:\n                      description: Изменения типа прав (старое/новое значение или добавлено/удалено)\n                      type: array\n                      items:                                 \n                        type: string\n                  required:\n                    - catalogMeta\n                    - privChangesSpec\n            required:\n              - privType                   \n\n    SecurityEventDetailsAuthListItem:    \n      description: |-\n        Элемент списка детализации событий безопасности из лога для типов событий безопасности:\n          - `loginAttempt` - попытка входа\n          - `login` - вход в систему\n          - `logout` - выход из системы\n      type: object     \n      properties:            \n        ipAddress:\n          type: string\n        error:\n          type: string  \n      required:\n        - ipAddress\n        - error  \n      \n    \n    AuthUrl:\n      description: url-адрес\n      type: string\n      readOnly: true\n      example: \"https://ehd-tools-test.mos.ru/keycloak/admin/master/console/#/master/authentication/policies\"\n\n    SessionListItem:\n      description: Информация о сеансе пользователя\n      type: object\n      allOf:\n        - $ref: 'users.yaml#/components/schemas/CommonUserInfo'\n      properties:\n        accessJwtId:\n          description: Идентификатор токена доступа\n          type: string\n        panel:\n          description: Кабинет (пользователя/администратора)\n          oneOf:\n            - type: string\n              enum:\n                - admin\n                - user\n        dateLogin:\n          description: Дата и время входа\n          type: string\n          pattern: /^(?:\\d{4})-(?:\\d{2})-(?:\\d{2})T(?:\\d{2}):(?:\\d{2}):(?:\\d{2}(?:\\.\\d*)?)(?:(?:-(?:\\d{2}):(?:\\d{2})|Z)?)$/\n        ip:\n          description: IP-адрес пользователя\n          type: string\n      required:\n        - accessJwtId\n\n    TokenResponse:\n      description: Access и refresh-токены доступа пользователя\n      type: object\n      properties:\n        accessToken:\n          description: JWT-токен\n          type: string\n          readOnly: true\n          example: \"dkgpkpoi0495094irdkgdk45445\"\n        refreshToken:\n          description: JWT-токен\n          type: string\n          readOnly: true\n          example: \"ugughgfsghkokgcgfd654676kjnkhk\"\n\n\n  requestBodies:\n    SessionListRequestBody:\n      description: Пример тела запроса для поиска по списку активных сеансов\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - lastName\n                            - firstName\n                            - pathroName\n                            - login\n                            - email\n          examples:\n            Пример:\n              $ref: '#/components/examples/SessionSearchRequest'\n      required: false\n\n    RefreshTokenRequestBody:\n      description: Пример тела запроса для поиска по списку активных сеансов\n      content:\n        application/x-www-form-urlencoded:\n          schema:\n            type: object\n            properties:\n              refreshToken:\n                type: string\n          examples:\n            Пример:\n              $ref: '#/components/examples/RefreshTokenequest'\n      required: true\n\n\n  parameters:\n\n    RedirectUrlQueryParam:\n      name: redirectUrl\n      required: true\n      in: query\n      description: |-\n        Возвратный url (раздел, из которого пользователь запросил аутентификацию)\n      schema:\n        type: string\n      example: \"https://ehd-tools-test.mos.ru/keycloak/admin/master/console/#/master/authentication/policies\"\n\n    AuthCodeQueryParam:\n      name: authCode\n      required: true\n      in: query\n      description: |-\n        Код авторизации KeyCloack\n      schema:\n        type: string\n      example: \"sjdfshkshkshkshf&Jfufjr4\"\n\n    accessJwtIdsQueryParam:\n      name: accessJwtIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов пользователей.\n\n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: string\n        minItems: 1\n        maxItems: 100\n      example: [sfsfsfercrqefasef]\n\n    tokenHeaderParam:\n      description: |-\n        Токен доступа пользователя.\n      name: Authorization\n      in: header\n      schema:\n        type: string\n      required: true\n      example: \"Bearer kjsfjsfkjslfkjslkfjslkfjlksikvvd\"\n\n  examples:\n\n    StopSessionResponse:\n      description: |-\n        Сеанс доступа пользователя прекращен\n      value:\n        code: 200\n        messageType: Ok\n        message: Выбранные сеансы доступа удалены!\n\n    LogoutOKResponse:\n      description: |-\n        Действие JWT-токена прекращено\n      value:\n        code: 200\n        messageType: Ok\n        message: JWT-токен пользователя отозван!\n\n    SessionCancelForbiddenErrorResponse:\n      description: |-\n        Доступ к прекращению сеансов доступа запрещен.\n      value:\n        code: 403\n        messageType: Forbidden\n        message: >\n          Доступ к прекращению сеансов доступа запрещен. Вы не обладаете правами администратора.\n\n    RefreshTokenTimeOverError:\n      description: |-\n        Время жизни refresh-токена истекло.\n      value:\n        code: 400\n        messageType: Bad Request Error\n        message: >\n          Время жизни refresh-токена истекло.\n\n    SessinListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка пользователей\n      value:\n        - id: 18023\n          login: ivanovaa\n          firstName: Алексей\n          pathroName: Андреевич\n          lastName: Иванов\n          email: ivanovaa@cdek.ru\n          panel: admin\n          dateLogin: 25.04.2024 14:24:52\n          ip: 5.28.21.32\n        - id: 18024\n          login: ivanovala\n          firstName: Алёна\n          pathroName: Викторовна\n          lastName: Иванова\n          email: ivanovala@cdek.ru\n          panel: user\n          dateLogin: 11.06.2024 17:24:52\n          ip: 5.28.21.32\n\n    SecurityEventSearchRequest:\n      value:\n        - attribute: 'lastName'\n          operator: 'contains'\n          value: 'Иванов'\n        - attribute: 'eventDate'\n          operator: 'greaterThan'\n          value: '24.06.2024'\n\n    SessionSearchRequest:\n      value:\n        filters:\n          - attribute: 'firstName'\n            operator: 'contains'\n            value: 'Иван'\n\n    RefreshTokenequest:\n      value:\n        refreshToken: \"ddssdsaf28ayg73t6rwve2i3yewdhwio73y\"\n\n    SecurityEventListItemArrayResponse:\n      value:\n        - eventId: 60476\n          userId: 1122398\n          userLogin: ivanovaa\n          userFIO: Алексей Андреевич Иванов\n          userEmail: ivanovaa@cdek.ru\n          eventTypeName: Изменение прав пользователя\n          eventTypeTagId: userAccessChange\n          dateChange: 25.04.2024 14:24:52\n          procUserLogin: popovgh\n          procUserFIO: Попов Геннадий Христофорович\n          procUserEmail: popovgh@cdek.ru\n          procUserGroupName: Суперпользователь\n        - eventId: 60477\n          userId: 1095647\n          userLogin: ivanovii\n          userFIO: Игорь Иванович Иванов\n          userEmail: ivanovii@td.ru\n          eventTypeName: Блокировка пользователя\n          eventTypeTagId: userBlock\n          dateChange: 25.12.2024 18:24:32\n          procUserLogin: semenovtt\n          procUserFIO: Семенов Тимофей Тимофеевич\n          procUserEmail: emenovtt@td.ru\n          procUserGroupName: Администратор ИБ\n\n    SecurityEventDetailsListItemResponse:\n      value:\n        accessChangesBase:\n          - privType: \"Группа пользователя\"\n            privChangesBase:\n              - \"Старое значение: Пользователь\"\n              - \"Новое значение: Суперпользователь\"              \n          - privType: \"Привилегии заполнения\"\n            privChangesBase:\n              - \"Старое значение: Просмотр\"\n              - \"Новое значение: Просмотр, Экспорт\"\n          - privType: \"Меню\"\n            privChangesBase:\n              - \"Удалено: Атрибуты\"\n              - \"Добавлено: Регулярные выражения\"             \n          \n    SecurityEventDetailsSpecListItemResponse:\n      value:\n        accessChangesSpecPriv:\n          - privType: \"Спецпривилегии заполнения\"\n            catalogListChanges:\n              - catalogMeta: \"1023948.Парки г.Москвы\"              \n                privChangesSpec:\n                  - \"Старое значение: Просмотр\"\n                  - \"Новое значение: Просмотр, Экспорт, Редактирование, Импорт\"\n              - catalogMeta: \"10235.Точки выездной торговли г. Москвы\"              \n                privChangesSpec:\n                  - \"Старое значение: Просмотр\"\n                  - \"Новое значение: Просмотр, Подписание\"\n          - privType: \"Спецпривилегии публикации\"\n            catalogListChanges:\n              - catalogMeta: \"304867.Суды Западного округа города г. Москвы\"              \n                privChangesSpec:\n                  - \"Старое значение: Просмотр\"\n                  - \"Новое значение: Просмотр, Редактирование метаданных\"\n              - catalogMeta: \"305788.Точки выездной торговли г. Москвы\"              \n                privChangesSpec:\n                  - \"Старое значение: Просмотр\"\n                  - \"Новое значение: Просмотр, Публикация объектов\"\n              \n    SecurityEventDetailsAuthListItemResponse:\n      value:\n        ipAddress: \"102.334.22.34\"         \n        error: \"login error\"",
    "type": "yaml"
  },
  {
    "text": "\nopenapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с подписанием объектов и метаданных каталога\n  version: 1.0.0\n\n\npaths:\n  /signatures/{catalogId}/check:\n    get:\n      tags:\n        - signatures\n      summary: Запуск указанных проверок для каталога.\n      description: |-\n        Метод используется для запуска указанных проверок на выбранный каталог.\n        Список проверок:\n          - Находится ли каталог в процессе подписания, \n          - Находится ли каталог в процессе импорта,\n          - Запущен ли для каталога процесс удаления всех объектов,\n          - Проверка, что у пользователя есть права на подписание данных каталога, \n          - Проверка, есть ли объекты с ошибками ФЛК,\n          - Проверка, указано ли у каталога ответственное лицо,\n          - Проверка, заполнено ли описание каталога.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/checkCatalogFilterQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigningCheckResult'\n              examples:\n                Успешный результат проверки:\n                  $ref: '#/components/examples/SigningCheckSuccessResultResponse'\n                Результат проверки с ошибкой:\n                  $ref: '#/components/examples/SigningCheckErrorResultResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'           \n\n  /signatures/{catalogId}:\n    post:\n      tags:\n        - signatures\n      summary: Подписание всех неподписанных объектов выбранного каталога \n      description: |-\n        Метод используется для подписания всех неподписанных объектов выбранного каталога. \n        \n          - Если подписывается каталог, в котором более 500 объектов, то подписание отправляется в фон.\n          - Если подписывается каталог, в котором не более 500 объектов, то подписание осуществляется синхронно.\n        \n        Для каталога, у которого все объекты подписаны, при вызове этого метода будет осуществляться подтверждение отсутствия изменений.\n\n        Если каталог уже находится в процессе подписания, то подписание не осуществляется.        \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/signatureIdQueryParam'\n      requestBody:\n        description: Пример тела запроса с данными цифровой подписи\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DigitalSignatureInfo'\n            examples:\n              Пример:\n                $ref: '#/components/examples/DigitalSignatureInfoRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Каталог добавлен в очередь подписания:\n                  $ref: '#/components/examples/CatalogObjectsAddedToQueueResponse'\n                Каталог успешно подписан:\n                  $ref: '#/components/examples/CatalogInfoSignedResponse'\n                Успешно подписано отсутствие изменений:\n                  $ref: '#/components/examples/NoChangesSignedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики, после которых в истории подписания процесс метится как завершён с ошибкой:\n              - Указанные даты валидности сертификата не включают текущую дату;\n            ### Возможные ошибки бизнес-логики, не влияющие на историю подписания:  \n              - Каталог уже находится в процессе подписания;\n              - Указанное подписание уже завершено;\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Каталог уже находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogInSigningError'\n                Указанное подписание уже завершено:\n                  $ref: '#/components/examples/SigningFinishedError'\n        '403':\n          $ref: '_common.yaml#/components/responses/MethodForbiddenResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики, не влияющие на историю подписания:\n              - Запрошенный id каталога не существует.\n              - Запрошенный id подписания не существует для указанного каталога. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующий id подписания в каталоге:\n                  $ref: '#/components/examples/SignatureInCatalogNotFoundError'\n\n  /signatures/{catalogId}/hash:\n    get:\n      tags:\n        - signatures\n      summary: Получение общего хэша всех неподписанных объектов каталога\n      description: |-\n        Метод используется для получения общего хэша всех неподписанных объектов выбранного каталога. В ответе передается hash-строка.\n        \n        Для каталога, у которого все объекты подписаны, вместо подписания будет осуществляться подтверждение отсутствия изменений. \n        Hash для этого метода будет рассчитываться от текущего timestamp'а.\n\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigningHash'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SigningHashResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Вызванный метод `check` вернул ошибки.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '#/components/schemas/SigningCheckResult'\n              examples:\n                Результат проверки с ошибкой:\n                  $ref: '#/components/examples/SigningCheckErrorResultResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n    post:\n      tags:\n        - signatures\n      summary: Создание общего хэша подписания для подписания через внешние API\n      description: |-\n        Метод используется для получения общего хэша для всех объектов одной сессии подписания при подписании через внешние API. В ответе передается hash-строка\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: 'systems.yaml#/components/parameters/systemIdQueryParam'\n        - $ref: 'files.yaml#/components/parameters/fileIdQueryOptParam'\n      requestBody:\n        description: Тело запроса для сохранения объекта в каталоге с подписанием\n        content:\n            application/json:\n              schema:\n                $ref: 'signatures.yaml#/components/schemas/DigitalSignatureInfo'\n              examples:\n                Пример:\n                  $ref: 'signatures.yaml#/components/examples/DigitalSignatureInfoRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigningHash'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SigningHashResponse'       \n        '404':\n        # аналогично про system и file\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id каталога не существует\n              - Запрошенный id системы не существует\n              - Запрошенный id файла не существует\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующий id системы:\n                  $ref: '#/components/examples/SystemNotFoundError'\n                Несуществующий id файла:\n                  $ref: '#/components/examples/FileNotFoundError'\n                  \n  /signatures/{catalogId}/meta:\n    post:\n      tags:\n        - signatures\n      summary: Подписание метаданных выбранного каталога \n      description: |-\n        Метод используется для подписания метаданных (описание, фио, email, телефон ответственного) выбранного каталога. \n        \n        Подписание происходит синхронно, в теле запроса передаются данные подписи и подписанный хэш, полученный с помощью плагина и библиотек КриптоПро на клиентской части системы.       \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - $ref: '#/components/parameters/signatureIdQueryParam'\n      requestBody:\n        description: Пример тела запроса c данными цифровой подписи\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DigitalSignatureInfo'\n            examples:\n              Пример:\n                $ref: '#/components/examples/DigitalSignatureInfoRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples: \n                Метаданные каталога успешно подписаны:\n                  $ref: '#/components/examples/CatalogMetadataSignedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики, после которых в истории подписания процесс метится как завершён с ошибкой:\n              - Указанные даты валидности сертификата не включают текущую дату;\n            ### Возможные ошибки бизнес-логики, не влияющие на историю подписания:    \n              - Каталог уже находится в процессе подписания;\n              - Указанное подписание уже завершено;\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Каталог уже находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogInSigningError'\n                Указанное подписание уже завершено:\n                  $ref: '#/components/examples/SigningFinishedError'\n        '403':\n          $ref: '_common.yaml#/components/responses/MethodForbiddenResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики, не влияющие на историю подписания:\n              - Запрошенный id каталога не существует.\n              - Запрошенный id подписания не существует в указанном каталоге. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующий id подписания в каталоге:\n                  $ref: '#/components/examples/SignatureInCatalogNotFoundError'      \n\n  /signatures/{catalogId}/meta/hash:\n    get:\n      tags:\n        - signatures\n      summary: Получение хэша текущего значения метаданных каталога\n      description: |-\n        Метод используется для получения общего хэша текущего значения метаданных выбранного каталога. В ответе передается hash-строка.\n\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigningHash'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SigningHashResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Вызванный метод `check` вернул ошибки.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '#/components/schemas/SigningCheckResult'\n              examples:\n                Результат проверки с ошибкой:\n                  $ref: '#/components/examples/SigningCheckErrorResultResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /signatures/{catalogId}/signHistory:\n    post:\n      tags:\n        - signatures\n      summary: Получение истории подписаний каталога\n      description: |-\n        Метод позволяет получать историю подписаний выбранного каталога. История включает в себя все типы подписания.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `dateStart`, `dateEnd`, `userName` используется тело запроса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка историй подписания (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку историй подписания\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - userName\n                              - dateStart\n                              - dateEnd\n                signingTypes:\n                  description: Тип подписания\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/SigningTypeTagIdEnum'\n                  minItems: 1\n            examples:\n              Пример:\n                  $ref: '#/components/examples/SignHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogSignHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/CatalogSignHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /signatures/{catalogId}/status:\n    get:\n      tags:\n        - signatures\n      summary: Получение информации о статусе подписания данных каталога\n      description: |-\n        Метод используется для получения статусов подписания метаданных каталога и всех объектов каталога, а также информации о последнем подписании.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CatalogSigningInfo'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/CatalogSigningInfoResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'      \n\n  /signatures/{signatureId}/log:\n    get:\n      tags:\n        - signatures\n      summary: Получение лога подписания каталога\n      description: |-\n        Метод используется для получения лога выбранного подписания выбранного каталога. В ответе передается ссылка на лог или csv файл (TODO)\n      parameters:\n        - $ref: '#/components/parameters/signatureIdPathParam'\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  log:\n                    type: string\n                    description: ссылка на лог или csv файл (TODO)\n                required: \n                  - log\n              examples:\n                Пример:\n                    $ref: '#/components/examples/SigningLogRequest'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id каталога не существует.\n              - Запрошенный id подписания не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующий id подписания:\n                  $ref: '#/components/examples/SignatureNotFoundError'\n\n  /signatures/catalogObjects:\n    post:\n      tags:\n        - signatures\n      summary: Подписание выбранных объектов каталога\n      description: |-\n        Метод используется для подписания одного или нескольких выбранных объектов каталога.\n\n        Перед осуществлением подписания необходимо проверить, что данные актуальны на текущий момент времени. \n        Если объекты были изменены, пока пользователь находился на странице, то необходимо показывать уведомление с выбором действия - обновить страницу со списком объектов или закрыть окно с уведомлением.\n      requestBody:\n        description: Пример тела запроса со списком объектов, сгрупированных по статусам. Данные о цифровой подписи передаются в поле `digitalSignatureParams`\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogObjectsSignatureInfo'\n            examples:\n              Пример:\n                  $ref: '#/components/examples/CatalogObjectsSignatureInfoRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/CatalogObjectsSignedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики, после которых в истории подписания процесс метится как завершён с ошибкой:\n              - Указанные даты валидности сертификата не включают текущую дату;\n              - Переданы уже подписанные или удаленные объекты;\n              - Актуальный статус объекта не соответствует переданному;\n              - Каталог находится в процессе импорта;\n            ### Возможные ошибки бизнес-логики, не влияющие на историю подписания:  \n              - Указанное подписание уже завершено.\n\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Переданы уже подписанные или удаленные записи:\n                  $ref: '#/components/examples/CatalogObjectsSignedError'\n                Актуальный статус объекта не соответствует переданному:\n                  $ref: '#/components/examples/CatalogObjectsStatusChangedError'\n                Указанное подписание уже завершено:\n                  $ref: '#/components/examples/SigningFinishedError'  \n        '403':\n          $ref: '_common.yaml#/components/responses/MethodForbiddenResponse'\n        '404':\n          description: |-\n            Ресурс не найден.\n            \n            ### Возможные ошибки бизнес-логики, после которых в истории подписания процесс метится как завершён с ошибкой:\n              - Запрошенные id объектов не существуют.\n            ### Возможные ошибки бизнес-логики, не влияющие на историю подписания:\n              - Запрошенный id каталога не существует.\n              - Запрошенный id подписания не существует в указанном каталоге.    \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующие id объектов:\n                  $ref: 'catalogObjects.yaml#/components/examples/ObjectNotFoundError'\n                Несуществующий id подписания в каталоге:\n                  $ref: '#/components/examples/SignatureInCatalogNotFoundError'  \n        '409':\n          description: |-\n            Данные в выбранных объектах были обновлены другим пользователем или системой.\n            Необходимо обновить данные на странице и повторить попытку.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ConflictError'\n              examples:\n                Данные обновлены другим пользователем:\n                  $ref: '#/components/examples/CatalogObjectsSigningConflictError'\n\n  /signatures/catalogObjects/check:\n    get:\n      tags:\n        - signatures\n      summary: Запуск проверок для объектов каталога\n      description: |-\n        Метод используется для запуска проверок на выбранные объекты каталога.\n        \n        Список проверок:\n          - Находится ли каталог в процессе подписания, \n          - Проверка, что у пользователя есть права на подписание объектов, \n          - Проверка, есть ли объекты с ошибками ФЛК,\n          - Проверка, указано ли у каталога ответственное лицо.\n          - Проверка, заполнено ли описание каталога.\n          - Находится ли каталог в процессе импорта. \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/objectIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigningCheckResult'\n              examples:\n                Успешный результат проверки:\n                  $ref: '#/components/examples/SigningCheckSuccessResultResponse'\n                Результат проверки с ошибкой:\n                  $ref: '#/components/examples/SigningCheckErrorResultResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id каталога не существует.\n              - Запрошенные id объектов не существуют. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующие id объектов:\n                  $ref: 'catalogObjects.yaml#/components/examples/ObjectNotFoundError'      \n\n  /signatures/catalogObjects/hash:\n    get:\n      tags:\n        - signatures\n      summary: Получение хэша выбранных объектов\n      description: |-\n        Метод используется для получения общего хэша для выбранных объектов. В ответе передается hash-строка\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/objectIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SigningHash'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SigningHashResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Вызванный метод `check` вернул ошибки.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '#/components/schemas/SigningCheckResult'\n              examples:\n                Результат проверки с ошибкой:\n                  $ref: '#/components/examples/SigningCheckErrorResultResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id каталога не существует.\n              - Запрошенные id объектов не существуют.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующие id объектов:\n                  $ref: 'catalogObjects.yaml#/components/examples/ObjectNotFoundError'\n\n  /signatures/cancelCatalogSigning:\n    post:\n      tags:\n        - signatures\n      summary: Отмена фонового подписания объектов каталога\n      description: |-\n        Отмена фонового подписания выбранного каталога пользователем. \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/signatureIdQueryParam'\n        - name: type\n          in: query\n          required: false\n          description: |-\n            Тип отмены подписания: \n              - `userReq` - отмена подписания, вызванная пользователем. \n              - `sysError`- отмена подписания, вызванная системной ошибкой. Может произойти, если во время получения подписанного хэша возникли ошибки и дальнейшее подписание не может быть запущено. \n          schema:\n            type: string\n            enum:\n              - userReq\n              - sysError\n            default: userReq\n      requestBody: \n        required: false\n        content:\n          application/json:\n            schema:\n              properties:\n                message:\n                  description: Текст ошибки, полученный от КриптоПро, при типе отмены sysError.\n                  type: string\n            examples:\n              Пример:\n                $ref: '#/components/examples/CancelCatalogSigningRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                type = userReq:\n                  $ref: '#/components/examples/SigningCanceledByUserResponse'\n                type = sysError:\n                  $ref: '#/components/examples/SigningCanceledBySystemResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Подписание уже завершено.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Подписание уже завершено:\n                  $ref: '#/components/examples/CatalogInfoSigningFinishedBeforeCancelError'\n        '403':\n          $ref: '_common.yaml#/components/responses/MethodForbiddenResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n  \n  #запустить сравнение даты окончания сертификата с текущей датой на своей стороне\n  #XML  \n  #алгоритм шифрования\n  /signatures/validate:\n    post:\n      tags:\n        - signatures\n      summary: Проверка валидности подписи\n      description: |-\n        Метод используется для валидации подлинности сертификата у удостоверяющего центра КриптоПро,\n        а также для влидации подписи объектов, переданных системой-поставщиком.\n\n        В теле запроса передается содержимое запроса catalogObjectSign (поле `json`) или setDataIn (поле `xml`) в виде строки. \n      requestBody:\n        description: Запрос к методу валидации\n        content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DigitalSignatureValidationRequest'\n              examples:\n                Запрос с XML:\n                  $ref: '#/components/examples/SignetureInfoXMLRequest'\n                Запрос с JSON:\n                  $ref: '#/components/examples/SignetureInfoJSONRequest'\n      responses:\n        '200':\n          description: |- \n            Успешный ответ            \n          content:     \n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Подпись валидна:                  \n                  $ref: '#/components/examples/SignatureOkResponse'\n                \n        '400':\n          description: |- \n            ### Возможные ошибки бизнес-логики:            \n            - Сертификат недействителен\n            - Срок действия сертификата истёк\n            - Недействительный алгоритм\n            - Не удалось проверить неподписанный хеш\n            - Не удалось проверить подписанный хеш\n            - Метод формирования хеша недопустим\n            - Метод подписания недопустим\n            - Не указан объект подписи\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Сертификат недействителен:\n                  $ref: '#/components/examples/SignatureErrorResponse'\n                Срок действия сертификата истёк:\n                  $ref: '#/components/examples/SignaturePeriodErrorResponse'\n                Недействительный алгоритм:\n                  $ref: '#/components/examples/AlgorithmErrorResponse'\n                Не удалось проверить неподписанный хеш:\n                  $ref: '#/components/examples/UnsignedHashErrorResponse'\n                Не удалось проверить подписанный хеш:\n                  $ref: '#/components/examples/SignedHashErrorResponse'\n                Метод формирования хеша недопустим:\n                  $ref: '#/components/examples/CreateMethodUnacceptableResponse'\n                Метод подписания недопустим:\n                  $ref: '#/components/examples/SignMethodUnacceptableResponse'\n                Не указан объект подписи:\n                  $ref: '#/components/examples/NotSpecifiedObjectErrorResponse'                    \n\ncomponents:\n  schemas:\n    DigitalSignatureValidationRequest:\n      description: |-\n        Запрос к методу валидации электронной подписи.\n        `json` используется при вызове метода внешнего REST API. `xml` - при вызове из SOAP API.\n      properties:\n        json:\n          description: Строка JSON-запроса.\n          type: string\n        xml:\n          description: Строка XML-запроса.\n          type: string\n      \n    \n    CheckResultTagIdEnum:\n      description: Техническое наименование статуса результата проверки \n      oneOf:\n        - type: string\n          enum:\n            - success\n            - error\n    \n    SigningTypeNameEnum:\n      description: Название типа подписания информации каталога заполнения\n      oneOf:\n        - type: string\n          # enum:\n          #   - Все неподписанные объекты каталога\n          #   - Выбранные объекты каталога\n          #   - Метаданные каталога\n          #   - Отсутствие изменений в каталоге\n    \n    SigningTypeTagIdEnum:\n      description: |-\n        Техническое название типа подписания информации каталога заполнения:\n          - `allObjects` - подписание всех неподписанных объектов каталога, \n          - `selectedObjects` - подписание выбранных объектов каталога, \n          - `metadata` - подписание метаданных каталога, \n          - `confirmSign` - подписание отсутствия изменений в каталоге\n      oneOf:\n        - type: string\n          enum:\n            - allObjects\n            - selectedObjects\n            - metadata\n            - confirmSign\n\n    SigningHistoryStatusNameEnum:\n      description: Название статуса подписания в истории подписаний каталога заполнения\n      oneOf:\n        - type: string\n          # enum:\n          #   - В работе\n          #   - Подписание каталога завершено\n          #   - Ошибка подписания\n          #   - Подписание отменено пользователем\n          #   - Наполнение очереди объектов\n    \n    SigningHistoryStatusTagIdEnum:\n      description: |-\n        Технчиеское навзание статуса подписания в истории подписаний каталога заполнения\n          - `inWork` - В работе, \n          - `finished` - Подписание каталога завершено, \n          - `error` - Ошибка подписания, \n          - `hashGen` - Формирование хэша подписи, \n          - `canceled` - Подписание отменено пользователем,\n          - `fillQueue` - Наполнение очереди объектов\n      oneOf:\n        - type: string\n          enum:\n            - inWork\n            - finished\n            - error\n            - hashGen\n            - canceled\n            - fillQueue\n\n    SignStatusNameEnum:\n      description: Название статуса подписания информации в каталоге заполнения\n      oneOf:\n        - type: string\n          # enum:\n          #   - Подписанный\n          #   - Неподписанный\n          #   - Подписание просрочено\n    \n    SignStatusTagIdEnum:\n      description: |-\n        Технчиеское навзание статуса подписания информации каталога заполнения:\n          - `signed` - Подписанный, \n          - `unsigned` - Неподписанный, \n          - `expiredSigning` - Подписание просрочено \n      oneOf:\n        - type: string\n          enum:\n            - signed\n            - unsigned  \n            - expiredSigning\n\n    SignObjectLogStatusNameEnum:\n      description: Название статуса объекта в логе подписания\n      oneOf:\n        - type: string\n          # enum:\n          #   - Подписание отменено пользователем\n          #   - Ожидает обработки\n          #   - Готов\n          #   - Ошибка отправки в брокер\n          #   - В обработке\n          #   - Ошибки при подписании\n    \n    SignObjectLogStatusTagIdEnum:\n      description: |-\n        Техническое название статуса объекта в логе подписания:\n          - `canceled` - подписание отменено пользователем, \n          - `new` - ожидает обработки, \n          - `done` - готов, \n          - `ErrQueue` - ошибка отправки в брокер,\n          - `inWork` - в обработке,\n          - `ErrSub` - ошибки при подписании\n      oneOf:\n        - type: string\n          enum:\n            - canceled\n            - new\n            - done\n            - ErrQueue\n            - inWork\n            - ErrSub\n\n    SigningCheckResult:\n      description: Результат проверки возможности подписания информации в каталоге заполнения\n      type: object\n      properties:\n        status:\n          $ref: '#/components/schemas/CheckResultTagIdEnum'\n        signCheckId:\n          type: integer  \n          description: Идентификатор блокировки, которая будет применяться к каталогу\n        message:\n          description: Сообщения с результатом проверки\n          type: object\n          properties:\n            isSigning:\n              type: string\n            userRights:\n              type: string\n            FLKErrors:\n              type: string\n            responsiblePerson:\n              type: string\n            description:\n              type: string    \n      required:\n        - status\n    \n    DigitalSignatureCertificate:\n      description: Информация о сертификате ЭЦП\n      type: object\n      properties:\n        subjectName:\n          description: Информация о сертификате подписи\n          type: string\n        issuerName:\n          description: Информация о том, кто выпустил сертификат\n          type: string\n        validFromDate:\n          description: Дата начала валидации подписи\n          type: string\n          format: date\n        validToDate:\n          description: Дата окончания валидации подписи\n          type: string\n          format: date\n        serialNumber:\n          description: Серийный номер\n          type: string\n        publicKey:\n          description: Публичный ключ\n          type: string\n      required:\n        - subjectName\n        - issuerName\n        - validFromDate\n        - validToDate\n        - serialNumber\n        - publicKey\n    \n    \n    DigitalSignatureInfo:\n      description:  Данные подписания ЭЦП.\n      type: object\n      properties:\n        unsignedHash:\n          description: Неподписанный хэш от бэкенда\n          type: string\n        signedHash:\n          description: Подписанный хэш от КриптоПро\n          type: string\n        certificateObject:\n          $ref: '#/components/schemas/DigitalSignatureCertificate'\n      required:\n        - unsignedHash\n        - signedHash\n        - certificateObject\n   \n    SigningHash:\n      description: Общий хэш подписания объектов или метаданных каталога заполнения\n      type: object\n      properties:\n        signatureId:\n          description: Идентификатор процесса подписания\n          type: integer\n          format: int32\n        hash:\n          description: Хэш подписания\n          type: string\n      required:\n        - signatureId\n        - hash\n\n    CatalogHistorySignStatus:\n      description: Статус подписания информации в истории подписаний каталога заполнения\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/SigningHistoryStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/SigningHistoryStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 0\n        name: В работе\n        tagId: inWork\n\n    SignStatus:\n      description: Статус подписания информации в каталоге заполнения\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/SignStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/SignStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: Подписанный\n        tagId: signed \n\n    CatalogHistorySignType:\n      description: Тип подписания в истории каталога заполнения\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор типа\n        name:\n          $ref: '#/components/schemas/SigningTypeNameEnum'\n        tagId:\n          $ref: '#/components/schemas/SigningTypeTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 3\n        name: подписание метаданных каталога\n        tagId: metadata \n\n    SignObjectLogStatus:\n      description: Статус объектов в логе подписания\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор типа\n        name:\n          $ref: '#/components/schemas/SignObjectLogStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/SignObjectLogStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 3\n        name: в обработке\n        tagId: inWork\n\n\n    CatalogSignHistoryItem:\n      description: Элемент истории подписаний каталога заполнения\n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор подписания каталога заполнения\n          type: integer\n          format: int32\n        dateStart:\n          type: string\n          format: date\n          description: Дата начала подписания каталога заполнения\n        dateEnd:\n          type: string\n          format: date\n          description: Дата окончания подписания каталога заполнения\n        signingType:\n          $ref: '#/components/schemas/SigningTypeTagIdEnum'\n        userName:\n          description: ФИО пользователя, запустившего подписание\n          type: string\n        countInWorkObj:\n          type: integer\n          description: Количество объектов, взятых в работу при запуске процесса подписания\n        countSignedObj:\n          type: integer\n          description: Количество подписанных объектов (по окончании процесса подписания)\n        countAllObj:\n          type: integer\n          description: Общее количество объектов каталога заполнения\n        signLog:\n          type: string\n          description: Ссылка на файл лога\n        status:\n          $ref: '#/components/schemas/CatalogHistorySignStatus'\n      required:\n        - id\n        - dateStart\n        - signingType\n        - userName\n        - status\n    \n    CatalogLastSigningInfo:\n      description: Информация о последнем подписании информации каталога заполнения\n      type: object\n      properties:\n        date:\n          description: Дата последнего подписания объектов каталога или подписания отсутствия изменений в объектах\n          type: string\n          format: date\n          \n        subjectName:\n          description: ФИО владельца сертификата или краткое наименование системы\n          type: string\n           \n        signingType:\n          $ref: '#/components/schemas/SigningTypeTagIdEnum'\n      required:\n        - date\n        - subjectName\n        - signingType\n    \n    CatalogSigningInfo:\n      description: Информация о подписании объектов и метаданных каталога заполнения\n      type: object\n      properties:\n        lastSign:\n          $ref: '#/components/schemas/CatalogLastSigningInfo'\n        dateNextUpdate:\n          description: Рассчитанная дата следующего обновления каталога, исходя из последней подписи/обновления и периодичности обновления\n          type: string\n          format: date\n                 \n        statusSignObjects:\n          $ref: 'catalogs.yaml#/components/schemas/FillingCatalogObjectsStatusTagIdEnum'  \n        statusSignMetadata:\n          $ref: 'catalogs.yaml#/components/schemas/FillingCatalogMetadataStatusTagIdEnum'\n        countUnsignedObjects:\n          description: Количество неподписанных объектов, оставшихся после последнего подписания\n          type: integer\n        countActiveObjects:\n          description: Количество активных объектов в каталоге\n          type: integer\n      required:\n        - lastSign\n        - dateNextUpdate\n        - statusSignObjects\n        - statusSignMetadata\n        - countUnsignedObjects\n        - countActiveObjects\n    \n    CatalogObjectsSignatureInfo:\n      description: Информация о подписываемых объектах каталога заполнения\n      type: object\n      properties:\n        digitalSignatureParams:\n          $ref: '#/components/schemas/DigitalSignatureInfo'\n        signatureId:\n          description: |-\n            Идентификатор подписания каталога, полученный на этапе формирования хэша.\n          type: integer\n        catalogId:\n          description: Идентификатор каталога заполнения\n          type: integer\n          format: int32\n        objectBatches:\n          description: |-\n            Массив подписываемых объектов, объединенных по статусам объектов.\n            \n            Всего может быть отправлено на подписание не более 500 объектов.\n          type: array\n          maxItems: 6\n          items:\n            type: object\n            properties:\n              status:\n                $ref: 'catalogObjects.yaml#/components/schemas/ObjectStatusTagIdEnum'\n              objectIds:\n                description: Глобальные идентификаторы подписываемых объектов\n                type: array\n                items:\n                  type: integer\n                  format: int32\n                maxItems: 500  \n            required:\n              - status\n              - objectIds\n        dateOpen:\n          description: Дата открытия страницы. \n            Используется для проверки, что объекты не были изменены другим пользователем перед подписанием\n          type: string\n          format: date\n      required:\n        - digitalSignatureParams\n        - signatureId\n        - catalogId\n        - objectBatches\n        - dateOpen\n\n  parameters:\n    signatureIdPathParam:\n      name: signatureId\n      in: path\n      description: |-\n        Идентификатор подписания каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 45342\n    \n    signatureIdQueryParam:\n      name: signatureId\n      in: query\n      description: |-\n        Идентификатор подписания каталога, полученный на этапе формирования хэша.\n      required: true\n      schema:\n        type: integer\n        format: int32\n  \n    checkCatalogFilterQueryParam:\n      name: checkCatalog\n      in: query\n      description: |-\n        Список проверок, которые будут запускаться для каталога.\n        В параметре передается массив строк, строка представляет собой ключевое слово.\n        \n        Допустимые значения: \n        - `isSigning` - находится ли каталог в процессе подписания, \n        - `userRights` - проверка, что у пользователя есть права на подписание данных каталога, \n        - `FLKErrors` - проверка, есть ли объекты с ошибками ФЛК,\n        - `responsiblePerson` - проверка, указано ли у каталога ответственное лицо.\n        - `description` - проверка, заполнено ли описание каталога,\n        - `isImport` - находится ли каталог в процессе импорта,\n        - `isDeletionAllObjects` - запущен ли для каталога процесс удаления всех объектов.\n      required: false\n      schema:\n        type: array\n        items:\n          type: string\n          enum:\n            - isSigning\n            - userRights\n            - FLKErrors\n            - responsiblePerson\n            - description\n            - isImport\n            - isDeletionAllObjects\n        minItems: 1\n  examples:\n    # Подписание\n    DigitalSignatureInfoRequest:\n      description: Пример тела запроса с информацией о сертифиате ЭЦП\n      value:\n        unsignedHash: 43y23-d3rvre-f33rf\n        signedHash: frehbe-34gf-esww-ve333\n        certificateObject:\n          subjectName: Certificate 123QWE\n          issuerName: Company XYZ\n          validFromDate: 16.09.2022\n          validToDate: 16.10.2022\n          serialNumber: \"5432324\"\n          publicKey: dkhefiw-ewknc1123\n    \n    SignHistoryRequest:\n      description: Пример тела запроса для получения истории подписания каталога\n      value:\n        filters:\n          - attribute: userName\n            operator: contains\n            value: Иван\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024 15:25:05\n        signingTypes:\n          - allObjects\n          - metadata\n    \n    SigningLogRequest:\n      description: Пример тела запроса для получения лога подписания\n      value:\n        log: \"{ссылка или файл}\"\n    \n    CatalogObjectsSignatureInfoRequest:\n      description: Пример тела запроса для подписания объектов\n      value:\n        digitalSignatureParams:\n          unsignedHash: 43y23-d3rvre-f33rf\n          signedHash: frehbe-34gf-esww-ve333\n          certificateObject:\n            subjectName: Certificate 123QWE\n            issuerName: Company XYZ\n            validFromDate: 16.09.2022\n            validToDate: 16.10.2022\n            serialNumber: \"5432324\"\n            publicKey: dkhefiw-ewknc1123\n        signatureId: 654\n        catalogId: 4932\n        objectBatches:\n          - status: toDeletion\n            objectIds: [ 8432, 383, 432 ]\n          - status: toRecovery\n            objectIds: [ 745, 454 ]\n        dateOpen: 28.10.2022 13:27:54\n    \n    SystemNotFoundError:\n      description: |-\n        Указанная система-поставщик не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Система с идентификатором {systemId} не существует.\n\n    FileNotFoundError:\n      description: |-\n        Указанный файл не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Файла с идентификатором {fileId} не существует.\n    \n    SignetureInfoXMLRequest:\n      description: Пример тела запроса для проверки валидности запроса с ЭЦП в формате XML\n      value:\n        xml: |-\n          <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:ehd=\"http://ehd.mos.com/\" xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">\n            <soapenv:Header>\n                <wsse:Security soapenv:actor=\"http://smev.gosuslugi.ru/actors/smev\">\n                  <wsse:BinarySecurityToken EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" wsu:Id=\"SenderCertificate\">MIII2jC{CUTBACK}giInAG08wURBW3Ee2fyuVOehoh0=</wsse:BinarySecurityToken>\n                  <Signature xmlns=\"http://www.w3.org/2000/09/xmldsig#\">\n                      <SignedInfo>\n                        <CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n                        <SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411\" />\n                        <Reference URI=\"#body\">\n                            <Transforms>\n                              <Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n                            </Transforms>\n                            <DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#gostr3411\" />\n                            <DigestValue>LyHAvBRNYcqS4c4/NkxhAO5RWsVR9wTeVAMLJ+UCxRo=</DigestValue>\n                        </Reference>\n                      </SignedInfo>\n                      <SignatureValue>DuwpVvsL64KMqZCnIXrKBsPQ2E10GIl32RyJMidBPYFZ78j4bpwy9z2LGin3gEwj2CAF7kYm5e98sF4r5jJQ/w==</SignatureValue>\n                      <KeyInfo>\n                        <wsse:SecurityTokenReference>\n                            <wsse:Reference URI=\"#SenderCertificate\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" />\n                        </wsse:SecurityTokenReference>\n                      </KeyInfo>\n                  </Signature>\n                </wsse:Security>\n            </soapenv:Header>\n            <soapenv:Body wsu:Id=\"body\">\n                <ehd:setDataIn>\n                  <xml><![CDATA[<message><id>123</id><catalog\n          name=\"catalog\"><item\n          action=\"added\"><categories><category nameHier=\"nameHierarchy\">59</category></categories><data><attribute\n          field_id=\"-2\" type=\"INTEGER\"\n          pk=\"true\"><values><value\n          occurrence=\"0\">1</value></values></attribute><attribute\n          field_id=\"557\" type=\"DICT\"\n          pk=\"false\"><values><value\n          occurrence=\"0\">1</value></values></attribute><attribute\n          field_id=\"559\" type=\"DICT\"\n          pk=\"false\"><values><value\n          occurrence=\"0\">115</value></values></attribute><attribute\n          field_id=\"558\" type=\"STRING\"\n          pk=\"false\"><values><value\n          occurrence=\"0\">TEST\n          SERVICE2</value></values></attribute></data></item></catalog></message>]]></xml>\n                </ehd:setDataIn>\n            </soapenv:Body>\n          </soapenv:Envelope>\n    \n    SignetureInfoJSONRequest:\n      description: Пример тела запроса для проверки валидности запроса с ЭЦП в формате JSON\n      value:\n        json: |-\n          {\n            \"signatureInfo\": {\n              \"unsignedHash\": \"43y23-d3rvre-f33rf\",\n              \"signedHash\": \"frehbe-34gf-esww-ve333\",\n              \"certificateObject\": {\n                \"subjectName\": \"Certificate 123QWE\",\n                \"issuerName\": \"Company XYZ\",\n                \"validFromDate\": \"16.09.2022\",\n                \"validToDate\": \"16.10.2022\",\n                \"serialNumber\": \"5432324\",\n                \"publicKey\": \"dkhefiw-ewknc1123\"\n              }\n            },\n            \"objectsData\": [\n              {\n                \"catalogId\": 8432,\n                \"action\": \"modified\",\n                \"globalId\": 1249763289,\n                \"systemObjectId\": \"object_7236\",\n                \"data\": [\n                  {\n                    \"catalogAttrId\": 222,\n                    \"value\": \"Петров\"\n                  },\n                  {\n                    \"catalogAttrId\": 227,\n                    \"value\": 33\n                  },\n                  {\n                    \"catalogAttrId\": 438,\n                    \"value\": \"10.10.1980\"\n                  },\n                  {\n                    \"catalogAttrId\": 386,\n                    \"value\": true\n                  },\n                  {\n                    \"catalogAttrId\": 389,\n                    \"value\": [\n                      \"Понедельник\",\n                      \"Вторник\"\n                    ]\n                  },\n                  {\n                    \"catalogAttrId\": 482,\n                    \"value\": [\n                      1983723,\n                      1386430\n                    ]\n                  },\n                  {\n                    \"catalogAttrId\": 496,\n                    \"value\": [\n                      1,\n                      3\n                    ]\n                  },\n                  {\n                    \"catalogAttrId\": 327,\n                    \"value\": [\n                      \"e78cde18-1e28-4db8-a71a-245d8d2dfc9f\",\n                      \"e9f908e6-405a-4fc7-a34e-c7a318530ceb\",\n                      \"19ee0e72-2894-4259-9b90-808153fc2bb7\"\n                    ]\n                  }\n                ]\n              },\n              {\n                \"catalogId\": 9875,\n                \"action\": \"modified\",\n                \"globalId\": 4567763291,\n                \"systemObjectId\": \"object_7238\",\n                \"data\": [\n                  {\n                    \"catalogAttrId\": 222,\n                    \"value\": \"Петров\"\n                  },\n                  {\n                    \"catalogAttrId\": 227,\n                    \"value\": 33\n                  },\n                  {\n                    \"catalogAttrId\": 438,\n                    \"value\": \"10.10.1980\"\n                  },\n                  {\n                    \"catalogAttrId\": 386,\n                    \"value\": true\n                  },\n                  {\n                    \"catalogAttrId\": 389,\n                    \"value\": [\n                      \"Понедельник\",\n                      \"Вторник\"\n                    ]\n                  },\n                  {\n                    \"catalogAttrId\": 482,\n                    \"value\": [\n                      1983723,\n                      1386430\n                    ]\n                  },\n                  {\n                    \"catalogAttrId\": 496,\n                    \"value\": [\n                      1,\n                      3\n                    ]\n                  },\n                  {\n                    \"catalogAttrId\": 327,\n                    \"value\": [\n                      \"e78cde18-1e28-4db8-a71a-245d8d2dfc9f\",\n                      \"e9f908e6-405a-4fc7-a34e-c7a318530ceb\",\n                      \"19ee0e72-2894-4259-9b90-808153fc2bb7\"\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n          \n\n    CancelCatalogSigningRequest:\n      description: Пример тела запроса для отмены подписания\n      value:\n        message: \"{текст ошибки КриптоПро}\"\n    \n    SigningCheckSuccessResultResponse:\n      description: Пример ответа при успешной проверке возможности подписания\n      value:\n        status: success\n    \n    SigningCheckErrorResultResponse:\n      description: Пример ответа при проверке возможности подписания с ошибками\n      value:\n        status: error\n        signCheckId: 1234567\n        message: \n          isSigning: Выбранный каталог находится в процессе подписания.\n          isImport: Выбранный каталог находится в процессе импорта.\n          isDeletionAllObjects: Для каталога запущен процесс удаления всех объектов.\n          userRights: Недостаточно прав для подписания объектов каталога.\n          FLKErrors: Среди подписываемых объектов обнаружены объекты с ошибкой ФЛК.\n          responsiblePerson: Отсутствует информация об ответственном за каталог лице.\n          description: Не заполнено описание каталога.\n\n    CatalogObjectsAddedToQueueResponse:\n      description: Пример ответа при добавлении объектов в очередь подписания \n      value:\n        code: 200\n        messageType: Ok\n        message: Объекты каталога добавлены в очередь подписания, подписание будет осуществляться в фоне. \n\n    CatalogInfoSignedResponse:\n      description: Пример ответа при успешном подписании информации каталога\n      value:\n        code: 200\n        messageType: Ok\n        message: Информация в каталоге успешно подписана\n\n    NoChangesSignedResponse:\n      description: Пример ответа при успешном подписании отсутствия изменений\n      value:\n        code: 200\n        messageType: Ok\n        message: Успешно подписано отсутствие изменений\n\n    SigningHashResponse:\n      description: Пример ответа с хэшем подписания\n      value:\n        signatureId: 678\n        hash: b4cb5c551a30f6c25d648560408df68a \n    \n    CatalogMetadataSignedResponse:\n      description: Пример ответа при успешном подписании метаданных каталога\n      value:\n        code: 200\n        messageType: Ok\n        message: Метаданные каталога успешно подписаны.\n    \n    CatalogSignHistoryItemArrayResponse:\n      description: Пример ответа с историей подписания каталога\n      value:\n        - id: 1\n          dateStart: 28.10.2022 13:18:13\n          dateEnd: 28.10.2022 13:27:54\n          signingType: Подписание выбранных объектов каталога\n          userName: Сидоров Василий Васильевич\n          countInWorkObj: 247\n          countSignedObj: 247\n          countAllObj: 300\n          status:\n            tag: finished\n            name: подписание завершено\n    \n    CatalogSigningInfoResponse:\n      description: Пример ответа с информацией о подписании информации каталога\n      value:\n        lastSign: \n          date: 19.03.2024\n          subjectName: SN=Кожемякина, G=Елена Сергеевна\n          signingType: allObjects\n        dateNextUpdate: 19.12.2024\n        statusSignObjects: signed\n        statusSignMetadata: signed\n        countUnsignedObjects: 0\n        countActiveObjects: 12000\n    \n    CatalogObjectsSignedResponse:\n      description: Пример ответа при успешном подписании объектов каталога\n      value:\n        id: 1\n        code: 200\n        messageType: Ok\n        message: Объекты каталога успешно подписаны\n    \n    SigningCanceledByUserResponse:\n      description: Пример ответа при отмене подписания пользователем\n      value:\n        code: 200\n        messageType: Ok\n        message: Подписание отменено пользователем.\n    \n    SigningCanceledBySystemResponse:\n      description: Пример ответа при отмене подписания из-за системной ошибки\n      value:\n        code: 200\n        messageType: Ok\n        message: Подписание отменено автоматически из-за системной ошибки.\n\n    CatalogInSigningError:\n      description: Пример ответа с ошибкой, если каталог уже находится в процессе подписания\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          Каталог уже находится в процессе подписания, подписание невозможно.\n\n    SigningFinishedError:\n      description: Указанное подписание имеет статус \"Завершено\" и не может быть запущено повторно.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Невозможно запустить подпсиание с идентификатором {signatureId}, так как оно уже завершено.\n\n    SignatureInCatalogNotFoundError:\n      description: |-\n        Указанное подписание не найдено в рамках указанного каталога\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          В каталоге {catalogId} не существует подписания с идентификатором {signatureId}.\n\n    SignatureNotFoundError:\n      description: |-\n        Указанное подписание не найдено.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Подписания с идентификатором {signatureId} не существует.\n\n    CatalogObjectsSignedError:\n      description: Пример ответа с ошибкой, если переданы уже подписанные объекты\n      value:\n        code: 400\n        messageType: Bad request\n        message: Переданы объекты уже подписаны\n\n    CatalogObjectsStatusChangedError:\n      description: Пример ответа с ошибкой, если у объектов изменились статусы\n      value:\n        code: 400\n        messageType: Bad request\n        message: Актуальный статус записи {objectId} не соответствует переданному\n\n    CatalogObjectsSigningConflictError:\n      description: Пример ответа с ошибкой, если объекты были изменены другим пользователем\n      value:\n        id: 39\n        code: 409\n        messageType: Conflict\n        message: >\n          Объекты не могут быть подписаны, так как данные в них были обновлены другим пользователем или системой.\n          Необходимо обновить страницу или отменить подписание.\n\n    CatalogInfoSigningFinishedBeforeCancelError:\n      description: Пример ответа с ошибкой, если подписание каталога завершено до отмены подписания\n      value:\n        id: 39\n        code: 400\n        messageType: Bad request\n        message: >\n          Подписание каталога было завершено. Отмена подписания невозможна.\n    \n    SignatureBadRequestResponse:\n      description: Пример ответа с ошибкой алгоритма шифрования электронной подписи\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Подпись №\" + (i + 1) + \" не прошла проверку. Используется недопустимый алгоритм.\n    \n    SignatureOkResponse:\n      description: Пример ответа при успешной валидации подписи\n      value:\n        code: 200\n        messageType: Ok\n        message: Подпись валидна.\n\n    SignatureErrorResponse:\n      description: Пример ответа при ндействительном сертификате\n      value:\n        code: 400\n        messageType: Bad request\n        message: Сертификат недействителен.\n\n    SignaturePeriodErrorResponse:\n      description: Пример ответа при просроченном сертификате\n      value:\n        code: 400\n        messageType: Bad request\n        message: Срок действия сертификата истек.\n    \n    AlgorithmErrorResponse:\n      description: Пример ответа при ошибке алгоритма шифрования\n      value:\n        code: 400\n        messageType: Bad request\n        message: Ошибка алгоритма шифрования.\n    \n    UnsignedHashErrorResponse:\n      description: Пример ответа, если не удалось проверить неподписанный хэш\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не удалось проверить неподписанный хеш.\n    \n    SignedHashErrorResponse:\n      description: Пример ответа, если не удалось проверить подписанный хэш\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не удалось проверить подписанный хеш.\n\n    CreateMethodUnacceptableResponse:\n      description: Пример ответа, если метод формирования хеша недопустим\n      value:\n        code: 400\n        messageType: Bad request\n        message: Метод формирования хеша недопустим\n    \n    SignMethodUnacceptableResponse:\n      description: Пример ответа, если метод формирования хеша недопустим\n      value:\n        code: 400\n        messageType: Bad request\n        message: Метод формирования хеша недопустим\n        \n    NotSpecifiedObjectErrorResponse:\n      description: Пример ответа, если не указан объект подписи\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не указан объект подписи.\n    ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с импортами\n  version: 1.0.0\n\n\npaths:\n\n  /imports/uploadCSV:\n    post:\n      tags:\n        - imports\n      summary: Загрузка и обработка файла импорта формата .csv\n      description: |-\n        Метод позволяет обработать колонки файла импорта и после успешной обработки загрузить его в хранилище. Для загрузки в хранилище должен вызываться `POST /files`.\n        \n        Метод возвращает список колонок загруженного файла. \n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/ImportFile'\n            examples:\n              Пример:\n                $ref: '#/components/examples/ImportFileRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ProcessedFileInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ProcessedFileInfoResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Загруженный файл не соответствует формату .csv.\n              - Наименование колонки файла является зарезервированным словом в БД (all, table, select...);\n              - Наименования колонок файла не уникальны.  \n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Загруженный файл не соответствует формату .csv:\n                  $ref: '#/components/examples/FileIsNotCSV'\n                Наименование колонки файла является зарезервированным словом в БД:\n                  $ref: '#/components/examples/FileColumnNameIsReservedError'\n                Наименования колонок файла не уникальны:\n                  $ref: '#/components/examples/FileColumnNameNotUniqueError'\n\n  /imports:\n    post:\n      tags:\n        - imports\n      summary: Запуск процесса импорта\n      description: |-\n        Запуск процесса импорта, для которого передаются параметры импорта и информация о файле.\n\n        Вместе с параметрами импорта обязательно передавать связку системного атрибута каталога и колонки файла в массиве `columnsMatching`. \n        Для системных атрибутов передаются значения идентификаторов (`attributeId`): \n          - `global_id` = `-1`,\n          - `system_object_id` = `-2`.\n\n        Для системных атрибутов вложенных каталогов передаются значения идентификаторов:\n          - `system_global_object_id` = `-5`,\n          - `global_object_id` = `-3`.\n      requestBody:\n        description: Пример тела запроса с данными импорта\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ImportInfo'\n            examples:\n              Пример:\n                $ref: '#/components/examples/ImportInfoRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Импорт добавлен в очередь:\n                  $ref: '#/components/examples/ImportCreatedResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            \n            ### Возможные ошибки бизнес-логики:\n              - Выбранный каталог находится в процессе подписания.\n              - Для каталога запущен процесс удаления всех объектов.\n              - Не удалось обработать архив с файлами.\n              - Выставлены в `true` оба флага \"Предварительное удаление записей\" и \"Удалить неактуальные записи\".\n          content:\n            application/json:\n              schema:\n                  $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Каталог находится в процессе подписания:\n                  $ref: '#/components/examples/CatalogIsSigningError'\n                Для каталога запущен процесс удаления всех объектов:\n                  $ref: '#/components/examples/CatalogInDeletionError'\n                Не удалось обработать архив с файлами:\n                  $ref: '#/components/examples/FileArchiveError'\n                Выставлены в `true` оба флага \"Предварительное удаление записей\" и \"Удалить неактуальные записи\":\n                  $ref: '#/components/examples/DeletionFlagsError'\n        '403':\n          description: |-\n            Нет прав на выполнение данного запроса.\n          content:\n            application/json:\n              schema:\n                  $ref: '_common.yaml#/components/schemas/ForbiddenError'\n              examples:\n                У пользователя недостаточно прав для выполнения импорта с предварительным удалением:\n                  $ref: '#/components/examples/PreparatoryDeletionNotAllowedError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Указанный id каталога не существует.\n              - Указанный id вложенного каталога не существует в корневом каталоге.\n              - Указанный id атрибута не существует.\n              - Указанный id файла не существует.\n              - Указанное наименование колонки файла не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующий id вложенного каталога:\n                  $ref: '#/components/examples/ChildCatalogNotFoundInCatalogError'\n                Несуществующий id атрибута:\n                  $ref: 'attributes.yaml#/components/examples/AttributeNotFoundError'\n                Несуществующий id файла:\n                  $ref: '#/components/examples/FileNotFoundError'\n                Несуществующее наименование колонки файла:\n                  $ref: '#/components/examples/FileColumnNameNotFoundError'\n\n    get:\n      tags:\n        - imports\n      summary: Получение параметров выбранных импортов\n      description: |-\n        Возвращает информацию о параметрах импорта, вызывается из истории импортов.\n      parameters:\n        - $ref: '#/components/parameters/importIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ImportInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ImportInfoArrayResponse'\n\n  /imports/{importId}/cancel:\n    get:\n      tags:\n        - imports\n      summary: Отмена импорта объектов каталога\n      description: |-\n        Отмена выбранного импорта пользователем. \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/importIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ImportCanceledByUserResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Импорт уже завершен.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Импорт уже завершен:\n                  $ref: '#/components/examples/ImportFinishedError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id каталога не существует.\n              - Запрошенный id импорта не существует. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n                Несуществующий id импорта:\n                  $ref: '#/components/examples/ImportNotFoundError'\n\n  /imports/history:\n    post:\n      tags:\n        - imports\n      summary: Получение истории импортов каталога\n      description: |-\n        Метод позволяет получать историю импортов выбранного каталога.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `importName`, `dateStart`, `dateEnd` используется тело запроса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка истории импорта (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку истории импорта\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - importName\n                              - dateStart\n                              - dateEnd\n                              - countInWorkObj\n                              - statusTagId\n            examples:\n              Пример:\n                  $ref: '#/components/examples/ImportHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogImportHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/CatalogImportHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n\ncomponents:\n\n  schemas:    \n\n    ImportFile:\n      description: |-\n        Данные файла и параметры для обработки файла\n      type: object\n      properties:\n        catalogId:\n          description: Идентификатор каталога для импорта\n          type: integer\n          format: int32\n        file:\n          type: string\n          format: binary\n          description: Файл с содержимым\n        encoding:\n          description: Кодировка\n          type: string\n          enum:\n            - UTF-8\n            - WINDOWS-1251\n            - MACCYRILLIC\n            - KOI8-R\n        separator:\n          description: Разделитель\n          type: string\n        textLimiter:\n          description: Ограничитель текста\n          type: string\n      required:\n        - catalogId\n        - file\n        - encoding\n        - separator\n        - textLimiter\n  \n    ProcessedFileInfo:\n      description: Информация после обработки файла\n      type: object\n      properties:\n        fileId:\n          description: Идентификатор файла (uuid)\n          type: string\n        fileColumns:\n          description: Массив колонок файла\n          type: array\n          items:\n            $ref: '#/components/schemas/FileColumn'\n      required:\n        - fileId\n        - fileColumns\n\n    FileColumn:\n      description: Информация о колонке файла\n      type: object\n      properties:\n        fileColumnName:\n          description: Наименование колонки файла (пользовательское)\n          type: string\n        fileColumnTechName:\n          description: Техническое наименование колонки файла, задается на бэке. Нужно, чтобы оперировать данными внутри методов/функций\n          type: string\n      required:\n        - fileColumnName\n        - fileColumnTechName\n\n    ImportInfo:\n      description:  Данные импорта\n      type: object\n      properties:\n        id:\n          description: Идентификатор импорта\n          type: integer\n          format: int32\n          readOnly: true\n        name:\n          description: Наименование загрузки\n          type: string\n        catalogId:\n          description: Идентификатор каталога для импорта\n          type: integer\n          format: int32\n        encoding:\n          description: Кодировка\n          type: string\n          enum:\n            - UTF-8\n            - WINDOWS-1251\n            - MACCYRILLIC\n            - KOI8-R\n        separator:\n          description: Разделитель\n          type: string\n        textLimiter:\n          description: Ограничитель текста\n          type: string\n        preparatoryDeletion:\n          description: Предварительное удаление записей\n          type: boolean\n          default: false\n        deleteOutdated:\n          description: Удалить неактуальные записи\n          type: boolean\n          default: false\n        catalogFileId:\n          description: Идентификатор файла (uuid) для импорта в каталог\n          type: string\n        catalogFileName:\n          description: Наименование файла для импорта в каталог\n          type: string\n          readOnly: true\n        catalogFileArchiveId:\n          description: Идентификатор файла (uuid) архива для импорта данных в атрибуты с типом \"Файл\"\n          type: string\n        catalogFileArchiveName:\n          description: Наименование файла архива для импорта данных в атрибуты с типом \"Файл\"\n          type: string\n          readOnly: true\n        columnsMatching:\n          description: Сопоставление колонок файла с атрибутами каталога\n          type: array\n          items:\n            $ref: '#/components/schemas/ColumnAttrMatchItem'\n        childCatalogImportInfo:\n          description: Информация об импорте для вложенных атрибутов каталога\n          type: array\n          items:\n            $ref: '#/components/schemas/ChildCatalogImportInfoItem'\n      required:\n        - id\n        - name\n        - catalogId\n        - encoding\n        - separator\n        - textLimiter\n        - catalogFileId\n        - catalogFileName\n        - columnsMatching\n\n    ColumnAttrMatchItem:\n      description: Сопоставление колонки файла с атрибутом каталога\n      type: object\n      properties:\n        fileColumnName:\n          description: Наименование колонки файла, является уникальным идентификатором\n          type: string\n        fileColumnTechName:\n          description: Техническое наименование колонки файла, полученное из метода /imports/uploadCSV\n          type: string\n        attributeId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          format: int32\n          writeOnly: true\n        attributeTechName:\n          description: Техническое наименование атрибута каталога\n          type: string\n          readOnly: true\n        dictAttributeTechName:\n          description: Техническое наименование атрибута справочника. Заполняется только для справочных атрибутов\n          type: string\n      required:\n        - fileColumnName\n        - fileColumnTechName\n        - attributeId\n        - attributeTechName\n\n    ChildCatalogImportInfoItem:\n      description: Информация об импорте для вложенного атрибута каталога\n      type: object\n      properties:\n        childCatalogId:\n          description: Идентификатор атрибута, содержащего вложенный каталог\n          type: integer\n          format: int32\n          writeOnly: true\n        childCatalogName:\n          description: Наименование атрибута, содержащего вложенный каталог\n          type: string\n          readOnly: true\n        childCatalogFileId:\n          description: Идентификатор файла (uuid) для импорта вложенного каталога\n          type: string\n        childCatalogFileName:\n          description: Наименование файла для импорта вложенного каталога\n          type: string\n          readOnly: true\n        columnsMatching:\n          description: Сопоставление колонок файла с атрибутами вложенного каталога\n          type: array\n          items:\n            $ref: '#/components/schemas/ColumnAttrMatchItem'\n      required:\n        - childCatalogId\n        - childCatalogFileId\n        - columnsMatching\n\n    CatalogImportHistoryItem:\n      description: Элемент истории импорта каталога заполнения\n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор импорта каталога \n          type: integer\n          format: int32\n        importName:\n          description: Наименование загрузки\n          type: string\n        dateStart:\n          description: Дата старта импорта каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата окончания импорта каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        userName:\n          description: ФИО пользователя, запустившего импорт\n          type: string\n        countInWorkObj:\n          description: Количество объектов, взятых в работу при запуске импорта\n          type: integer\n        countImportedObj:\n          description: Количество импортированных объектов (по окончании процесса импорта)\n          type: integer\n        importLogFileId:\n          description: Идентификатор файла лога\n          type: string\n        status:\n          $ref: '#/components/schemas/CatalogImportHistoryStatus'\n      required:\n        - id\n        - importName\n        - dateStart\n        - userName\n        - status\n\n    CatalogImportHistoryStatus:\n      description: Статус импорта в истории импортов каталога заполнения\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/ImportHistoryStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ImportHistoryStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: В работе\n        tagId: inWork    \n\n    ImportHistoryStatusNameEnum:\n      description: Название статуса импорта в истории импортов каталога заполнения\n      oneOf:\n        - type: string\n          # enum:\n          #   - Новый\n          #   - В работе\n          #   - Ошибка отправки в брокер\n          #   - Ошибка в процессе импорта\n          #   - Импорт отменен пользователем\n          #   - Импорт объектов завершен\n    \n    ImportHistoryStatusTagIdEnum:\n      description: |-\n        Технчиеское навзание статуса импорта в истории импортов каталога заполнения\n          - `new` - Новый, \n          - `inWork` - В работе, \n          - `errorQueue` - Ошибка отправки в брокер, \n          - `errorImport` - Ошибка в процессе импорта, \n          - `canceled` - Импорт отменен пользователем,\n          - `finished` - Импорт объектов завершен.\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - inWork\n            - errorQueue\n            - errorImport\n            - canceled\n            - finished\n\n  parameters:\n    importIdPathParam:\n      name: importId\n      in: path\n      description: |-\n        Идентификатор импорта.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 5392\n\n    importIdQueryParam:\n      name: importId\n      in: query\n      description: |-\n        Идентификатор импорта.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 5392\n\n    importIdsQueryParam:\n      name: importIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов импортов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [356, 923, 76]  \n\n  examples:\n\n    ImportFileRequest:\n      description: Пример тела запроса с информацией о файле\n      value:\n        catalogId: 742\n        encoding: UTF-8\n        separator: ;\n        textLimiter: \"'\"\n\n    ProcessedFileInfoResponse:\n      description: Пример тела ответа с обработанным файлом\n      value:\n        fileId: 2448b6b5-a8be-499a-9759-d6862cb59820\n        fileColumns:\n          - fileColumnName: Идентификатор\n            fileColumnTechName: col_1\n          - fileColumnName: Наименование\n            fileColumnTechName: col_2\n    \n    ImportInfoRequest:\n      description: Пример тела запроса для запуска импорта\n      value:\n        name: Загрузка от 5 мая\n        catalogId: 36226\n        encoding: UTF-8\n        separator: ;\n        textLimiter: \"'\"\n        preparatoryDeletion: true\n        deleteOutdated: false\n        catalogFileId: 97a98b65-74d7-4b8c-80a0-8f10be337c98\n        columnsMatching:\n          - fileColumnName: Идентификатор\n            fileColumnTechName: col_1\n            attributeId: 6543\n          - fileColumnName: Город\n            fileColumnTechName: col_2\n            attributeId: 5466\n          - fileColumnName: Район\n            fileColumnTechName: col_3\n            attributeId: 3456\n            dictAttributeTechName: Name\n        childCatalogImportInfo:\n          - childCatalogId: 3921\n            childCatalogFileId: 1d2017ba-2d0d-4d03-9251-81c780937e60\n            columnsMatching:\n              - fileColumnName: Идентификатор\n                fileColumnTechName: col_1_1\n                attributeId: 82905\n              - fileColumnName: Возраст\n                fileColumnTechName: col_1_2\n                attributeId: 5466\n\n    ImportInfoArrayResponse:\n      description: Пример тела ответа с массивом параметров импортов\n      value:\n        - id: 2843\n          name: Загрузка от 5 мая\n          catalogId: 36226\n          encoding: UTF-8\n          separator: ;\n          textLimiter: \"`\"\n          preparatoryDeletion: true\n          deleteOutdated: false\n          catalogFileName: import_new.csv\n          catalogFileId: 1d2017ba-2d0d-4d03-9251-81c780937e60\n          columnsMatching:\n            - fileColumnName: Идентификатор\n              attributeTechName: system_object_id\n            - fileColumnName: Город\n              attributeTechName: attrCity\n            - fileColumnName: Район\n              attributeTechName: District\n              dictAttributeTechName: Name\n          childCatalogImportInfo:\n            childCatalogName: Информация о сотрудниках\n            childCatalogFileName: people_data.csv\n            childCatalogFileId: 2448b6b5-a8be-499a-9759-d6862cb59820\n            columnsMatching:\n              - fileColumnName: Идентификатор\n                attributeTechName: system_object_id\n              - fileColumnName: Возраст\n                attributeTechName: attrAge\n\n    ImportHistoryRequest:\n      description: Пример тела запроса для получения истории импортов каталога\n      value:\n        filters:\n          - attribute: importName\n            operator: contains\n            value: Каталог\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024 15:25:05\n\n    CatalogImportHistoryItemArrayResponse:\n      description: Пример ответа с историей импортов каталога\n      value:\n        - id: 2\n          importName: Импорт 28 сентября\n          dateStart: 28.09.2023 13:18:13\n          dateEnd: 28.09.2023 13:27:54\n          countInWorkObj: 2500\n          countImportedObj: 2300\n          importLogFileId: c2d1183e-2d8b-4de5-bdb5-922113f5a47e\n          userName: Иванов Иван Иванович\n          status:\n            tag: finished\n            name: Импорт объектов завершен\n\n    ImportCreatedResponse:\n      description: Пример ответа при успешном запуске импорта\n      value:\n        id: 4832\n        code: 201\n        messageType: Created\n        message: Импорт запущен, процесс будет осуществляться в фоне. \n\n    FileIsNotCSV:\n      description: Пример ответа с ошибкой, если файл имеет отличный от .csv формат\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          Загруженный файл не соответствует формату text/csv\n\n    FileColumnNameIsReservedError:\n      description: Пример ответа с ошибкой, если наименование колонки файла является зарезервированным словом\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          Наименование колонки файла {columnName} является зарезервированным словом, необходимо изменить наименование.\n\n    FileColumnNameNotUniqueError:\n      description: Пример ответа с ошибкой, если наименования столбцов неуникальны\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          Наименование колонки файла {columnName} неуникально.\n\n    CatalogIsSigningError:\n      description: Пример ответа с ошибкой, если для каталога запущен процесс подписания\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          Каталог находится в процессе подписания, импорт недоступен.\n\n    CatalogInDeletionError:\n      description: Пример ответа с ошибкой, если для каталога запущен процесс удаления всех объектов\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Для каталога запущен процесс удаления всех объектов, импорт недоступен.\n\n    PreparatoryDeletionNotAllowedError:\n      description: Импорт с предварительным удалением доступен только для пользователей, входящих в группу \"Суперпользователь\"\n      value:\n        code: 403\n        messageType: Bad request\n        message: \n          Импорт с предварительным удалением доступен только для пользователей, входящих в группу \"Суперпользователь\"\n\n    ImportNotFoundError:\n      description: |-\n        Указанный импорт не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Импорта с идентификатором {importId} не существует.\n\n    FileColumnNameNotFoundError:\n      description: |-\n        Указанное наименование колонки файла не найдено.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Колонки файла с наименованием {fileColumnName} не существует.\n    \n    ChildCatalogNotFoundInCatalogError:\n      description: |-\n        Переданный вложенный каталог не существует в корневом каталоге.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Вложенный каталог {childCatalogId} не существует в каталоге {catalogId}.\n    \n    FileNotFoundError:\n      description: |-\n        Переданный файл не найден\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Переданный файл {fileId} не найден.\n\n    FileArchiveError:\n      description: |-\n        Не удалось обработать архив с файлами.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не удалось обработать архив с файлами.\n\n    DeletionFlagsError:\n      description: |-\n        Выставлены в `true` оба флага \"Предварительное удаление записей\" и \"Удалить неактуальные записи\"\n      value:\n        code: 400\n        messageType: Bad request\n        message: Выставлены в `true` оба флага `Предварительное удаление записей` и `Удалить неактуальные записи`.\n\n    ImportCanceledByUserResponse:\n      description: Пример ответа при отмене импорта пользователем\n      value:\n        code: 200\n        messageType: Ok\n        message: Импорт отменен пользователем.\n\n    ImportFinishedError:\n      description: Пример ответа с ошибкой, если импорт объектов каталога завершен до отмены\n      value:\n        id: 39\n        code: 400\n        messageType: Bad request\n        message: Импорт объектов каталога был завершен. Отмена импорта невозможна.\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с подписками на push-уведомления\n  version: 1.0.0\n\n\npaths:\n\n  /pushsubs/search:\n    post:\n      tags: \n        - pushsubs\n      summary: Получение списка подписок систем\n      description: Возвращает список подписок\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых подписок (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке подписок. Поиск производится по атрибутам `id`, `systemName`, `systemLogin` и `url`. \n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `systemName`, `systemLogin` и `url`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - systemName\n              - systemLogin\n              - url\n        - name: status\n          in: query\n          required: false\n          description: |-\n            Фильтр по статусу подписки. Передается техническое наименование (тэг) статуса.\n            Если параметр не указан, возвращаются подписки, находящиеся в любом статусе.\n          schema:\n            $ref: '#/components/schemas/PushsubStatusTagIdEnum'\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/pushsubListRequestBody'     \n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PushsubListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubListArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n  \n  /pushsubs:\n    post:\n      tags:\n        - pushsubs\n      summary: Создание подписки\n      description: |-\n        Создает новую подписку системы на push-уведомления\n\n        По умолчанию она будет неактивной, для изменения статуса используется метод `PUT /pushsubs/{subscriptionId}/status`.\n\n        При настройки подписки для сборных каталогов (параметр `forAccum` = `true`) выбор типа push-уведомления (`pushType`) невозможен (для сборных только `json`).\n\n        Если включена авторизация в сервисе приема push-уведомлениий (параметр `needAuth` = `true`), \n        то поля `authLogin` и `authPassword` обязательны к заполнению. \n\n        Для загрузки сертификата необходимо использовать файловый сервис и метод POST `/files`. \n        Если передается сертификат (поле `certId`), то формат файла сертификата должен быть `p12` и \n        поле `certPassword` обязательно к заполнению.\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pushsub'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PushsubCreateRequest'       \n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubCreatedResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - При передаче необходимости авторизации в сервисе (параметр `needAuth=true`) не передан логин авторизации (поле `authLogin`);\n              - При передаче необходимости авторизации в сервисе (параметр `needAuth=true`) не передан логин авторизации (поле `authPassword`);\n              - Передан недопустимый формат файла сертификата;\n              - При наличии файла сертификата не передана парольная фраза сертификата (поле `certPassword`);\n              - При передаче отметки о необходимости передавать геометрию в СК EPSG:4326  (параметр `isWGS84=true`) не передана необходимость вклучать геометрию в push-уведомление (параметр `withGeo`).      \n          content:\n            application/json:                \n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/MissingParamsError' \n                    - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Не переданы обязательные для авторизации поля:\n                  $ref: '#/components/examples/NotFoundLoginOrPasswordId'\n                Передан не допустимый формат файла сертификата:\n                  $ref: '#/components/examples/CertIdNotP12Error'\n                Не передано обязательное для сертификата поле:\n                  $ref: '#/components/examples/NotFoundCertLogin'\n                Передана доп. настройка геометрии без отметки о необходимости включать геометрию:\n                  $ref: '#/components/examples/NotFoundWithGeoForWGS'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует информационной системы с указанным идентификатором;\n              - Не существует файла сертификата с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id информационной системы:\n                  $ref: '#/components/examples/SystemNotFoundError'\n                Несуществующий id файла сертификата:\n                  $ref: '#/components/examples/CertIdNotFoundError'\n\n    get:\n      tags:\n        - pushsubs\n      summary: Получение подписок по идентификаторам\n      description: |-\n        Возвращает полную информацию о подписках систем по идентификаторам.\n        \n        Если подписка с указанными идентификатором не найдена, она не включается в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Pushsub'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubArrayResponse'\n    delete:\n      tags:\n        - pushsubs\n      summary: Удаление подписки\n      description: |-\n        Метод используется для удаления подписок.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubsDeletedResponse'\n  \n  /pushsubs/{subscriptionId}:\n    put:\n      tags:\n        - pushsubs\n      summary: Изменение данных подписки\n      description: |-\n        Изменение данных подписки\n\n        При настройки подписки для сборных каталогов (параметр `forAccum` = `true`) выбор типа push-уведомления (`pushType`) невозможен (для сборных только `json`).\n\n        Если включается авторизация в сервисе приема push-уведомлениий (параметр `needAuth` = `true`), \n        то поля `authLogin` и `authPassword` обязательны к заполнению (проверка со стороны базы).  \n\n        Для загрузки сертификата необходимо использовать файловый сервис и метод POST `/files`. Если передается сертификат (поле `certId`), \n        то формат файла сертификата должен быть `p12` и поле `certPassword` обязательно к заполнению (проверка поля `certPassword` со стороны базы).\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdPathParam'  \n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/Pushsub'\n            examples:\n              Пример:\n                $ref: '#/components/examples/PushsubModifyRequest'        \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubOkResponse'\n        '400': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Передан недопустимый формат файла сертификата.    \n              - При передаче отметки о необходимости передавать геометрию в СК EPSG:4326  (параметр `isWGS84=true`) не передана необходимость вклучать геометрию в push-уведомление (параметр `withGeo`).      \n          content:\n            application/json:                \n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/MissingParamsError' \n                  - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Передан не допустимый формат файла сертификата:\n                  $ref: '#/components/examples/CertIdNotP12Error'\n                Передана доп. настройка геометрии без отметки о необходимости включать геометрию:\n                  $ref: '#/components/examples/NotFoundWithGeoForWGS'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует информационной системы с указанным идентификатором;\n              - Не существует файла сертификата с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id информационной системы:\n                  $ref: '#/components/examples/SystemNotFoundError'\n                Несуществующий id файла сертификата:\n                  $ref: '#/components/examples/CertIdNotFoundError'\n\n  /pushsubs/{subscriptionId}/status:\n    put:\n      tags:\n        - pushsubs\n      summary: Изменение статуса подписки\n      description: |-\n        Выполняет изменение статуса подписки.\n\n        При изменении статуса на Активный автоматически запускается формирование и отправка уведомлений.        \n        При изменении статуса на Неактивный формирование и отправка уведомлений останавливается.\n        Пользователь может только поставить статусы \"Активна\" и \"Неактивна\". \n        \n        Статус \"Временно заблокирована\" проставляется только системой, когда пуш-уведомления не принимаются пользователем. \n        Статус снимается через 1 час и далее все накопленные пуши отправляются повторно на отправку.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdPathParam'\n        - name: status\n          in: query\n          required: true\n          description: Обновленный статус подписки\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Статус изменен на Активный:\n                  $ref: '#/components/examples/PushsubStatusChangedToActiveResponse'\n                Статус изменен на Неактивный:\n                  $ref: '#/components/examples/PushsubStatusChangedToInactiveResponse'\n        '404':\n          $ref: '#/components/responses/PushsubNotFound'\n\n  /pushsubs/{subscriptionId}/catalogs/search:\n    post:\n      tags: \n        - pushsubs\n      summary: Получение списка каталогов, входящих в подписку\n      description: |-\n        Возвращает информацию о неудаленных каталогах заполнения, которые входят в подписку.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `100`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.             \n            Поиск производится по полям `id`, `fullName`. \n            В ответе будут представлены только те каталоги, в указанных полях которых содержится поисковое значение.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string    \n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            Допустимые значения: `id`, `fullName`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n        - name: status\n          in: query\n          required: false\n          description: |-\n            Фильтр по статусу подписки каталога. Передается техническое наименование (тэг) статуса.\n            Если параметр не указан, возвращаются каталоги, находящиеся в любом статусе.\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/subscriptionRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/PushsubSubscriptionCatalogInfoListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubSubscriptionCatalogInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '404':\n          $ref: '#/components/responses/PushsubNotFound'\n\n  /pushsubs/{subscriptionId}/catalogs:\n    post:\n      tags:\n        - pushsubs\n      summary: Добавление каталогов в подписку\n      description: |-\n        Создает связь между подпиской и каталогами заполнения. \n        При добавлении каталогов в подписку статус подписки активен для всех каталогов.\n        Для дальнейшей смены статуса каталогов в подписке необходимо использовать метод `/pushsubs/{subscriptionId}/catalogs/status`.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: Массив идентификаторов каталогов\n              type: array  \n              items:                  \n                type: integer\n            examples:\n              Пример:\n                $ref: '#/components/examples/PushsubSubscriptionCatalogRequest'        \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubSubscriptionCatalogAddResponse'\n        '404': \n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Не существует подписки с указанным идентификатором.\n              - Не существует каталога с указанным идентификатором.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'                  \n              examples:                                               \n                Не существует подписки с указанным идентификатором:\n                  $ref: '#/components/examples/PushsubNotFoundError'\n                Не существует каталога с указанным идентификатором:\n                  $ref: '#/components/examples/CatalogNotFoundError'        \n    delete:\n      tags:\n        - pushsubs\n      summary: Удаление каталогов из подписки\n      description: |-\n        Метод используется для удаления каталогов из подписки.\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdPathParam'\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              description: Массив идентификаторов каталогов\n              type: array  \n              items:                  \n                type: integer\n            examples:\n              Пример:\n                $ref: '#/components/examples/PushsubSubscriptionCatalogRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PushsubSubscriptionCatalogDeletedResponse'\n        '404':\n          $ref: '#/components/responses/PushsubNotFound'\n\n  /pushsubs/{subscriptionId}/catalogs/status:\n    put:\n      tags:\n        - pushsubs\n      summary: Изменение статуса подписки каталога\n      description: |-\n        Выполняет изменение статуса подписки каталога.\n\n        При изменении статуса на Неактивный новые уведомления не будут отправляться системе.\n        \n        Если в теле запроса передан пустой массив, \n        то статус подписки каталога изменится для всех каталогов подписки (статус изменится на передаваемый в запросе).\n      parameters:\n        - $ref: '#/components/parameters/subscriptionIdPathParam'\n        - name: status\n          in: query\n          required: true\n          description: |-\n            Обновленный статус подписки каталогов. \n            Для пользователя возможна установка статусов:\n            \n            - `inactive` - Неактивна\n            - `active` - Активна\n          schema:\n            type: string\n            enum:\n              - active\n              - inactive\n        # - name: status\n        #   in: query\n        #   required: true\n        #   description: Обновленный статус подписки каталогов\n        #   schema:\n        #     type: boolean\n        #   example: true \n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: array  \n              items:                  \n                type: integer\n            examples:\n              Пример:\n                $ref: '#/components/examples/PushsubSubscriptionCatalogRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Статус изменен на Активный:\n                  $ref: '#/components/examples/PushsubStatusChangedToActiveResponse'\n                Статус изменен на Неактивный:\n                  $ref: '#/components/examples/PushsubStatusChangedToInactiveResponse'\n        '404':\n          $ref: '#/components/responses/PushsubNotFound'\n\n       \ncomponents:\n  \n  schemas:\n    \n    CommonPushsubInfo:\n      description: Основная информация о подписке\n      type: object  \n      properties:\n        id:\n          description: Идентификатор подписки\n          type: integer\n          format: int32\n          readOnly: true\n        url:\n          description: Адрес веб-сервиса приема push-уведомлений\n          type: string\n        pushType:\n          description: Тип push-уведомления\n          allOf:\n            - $ref: '#/components/schemas/PushsubTypeTagIdEnum'\n        status:\n          allOf:\n            - $ref: '#/components/schemas/PushsubStatus'\n          readOnly: true\n      required:\n        - url\n        - pushType\n    \n    PushsubListItem:\n      description: Информация о подписке в списке подписок\n      type: object  \n      allOf:\n        - $ref: '#/components/schemas/CommonPushsubInfo'\n      properties:\n        systemName:\n          description: Наименование системы-подписчика\n          type: string \n          readOnly: true\n        systemLogin:\n          description: Логин (техническое наименование) системы-подписчика\n          type: string \n          readOnly: true\n        \n     \n    Pushsub:\n      description: Информация о подписке\n      type: object  \n      allOf:\n        - $ref: '#/components/schemas/CommonPushsubInfo'\n      properties:\n        systemId:\n          description: Идентификатор системы \n          writeOnly: true\n          type: integer\n        system:\n          allOf:\n            - $ref: 'systems.yaml#/components/schemas/CommonSystemInfo'\n          readOnly: true\n        forAccum: \n          description: Признак подписки на сборные каталоги\n          type: boolean\n        needAuth:\n          description: Требуется авторизация в сервисе приема push-уведомлений\n          type: boolean\n        authLogin:\n          description: Логин для авторизации в сервисе приема push-уведомлений при needAuth=true\n          type: string\n        authPassword:\n          description: Пароль для авторизации в сервисе приема push-уведомлений при needAuth=true\n          type: string\n          writeOnly: true\n        certId:\n          description: Идентификатор (uuid) контейнера сертификата для подключения к сервису приема push-уведомлений\n          type: string\n        certPassword:\n          description: Парольная фраза сертификата\n          type: string\n          writeOnly: true\n        withGeo:\n          description: Необходимость включать геоданные объекта в push-уведомление при их наличии у каталога\n          type: boolean\n          default: false\n        isWGS84:\n          description: |-\n            Необходимость передать геометрию в системе координат EPSG:4326 (WGS84). \n            Актуально для подписок с каталогами, у которых геоданные хранятся в системе MSK 77. \n\n            По-умолчанию отправляется СК, выбранная на каталоге.\n          type: boolean\n          default: false\n      required:        \n        - systemId\n        - needAuth\n    \n    PushsubStatusTagIdEnum:\n      description: |-\n        Статус подписки:\n          - `active` - Активна\n          - `inactive` - Неактивна\n          - `tmpBlocked` - Временно заблокирована\n      type: string\n      enum:\n        - inactive\n        - active\n        - tmpBlocked\n\n    PushsubStatusNameEnum:\n      description: Наименование статуса подписки\n      oneOf:\n        - type: string\n\n    PushsubStatus:\n      description: |-\n        Статус подписки\n      type: object\n      properties:\n        id:\n          description: Идентификатор статуса подписки\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/PushsubStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/PushsubStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    PushsubTypeTagIdEnum:\n      description: |-\n        Тип push-уведомления:\n          - `xml` - XML\n          - `json` - JSON\n      oneOf:\n        - type: string\n          enum:\n            - xml\n            - json\n\n    PushsubSubscriptionCatalogInfoListItem:\n      description: Информация о каталоге, добавленном в подписку              \n      type: object     \n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      properties:\n        isEnabled:\n          description: Статуса подписки\n            - `true` - подписка на каталог активна,\n            - `false` - подписка на каталог не активна.   \n          type: boolean\n      required:\n        - isEnabled\n\n  parameters:\n\n    subscriptionIdPathParam:\n      name: subscriptionId\n      in: path\n      description: Идентификатор подписки.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 25 \n    \n    subscriptionIdsQueryParam:\n      name: subscriptionIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов подписок.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n\n  requestBodies:\n\n    pushsubListRequestBody:\n      description: Пример тела запроса с фильтрами для поиска по списку подписок систем\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - systemName\n                            - systemLogin\n                            - url\n                            - pushType                 \n          examples:\n            Пример:\n              $ref: '#/components/examples/PushsubListRequest'\n\n    subscriptionRequestBody:\n      description: Пример тела запроса с фильтрами по списку каталогов, которые входят в подписку\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName                     \n          examples:\n            Пример:\n              $ref: '#/components/examples/SubscriptionListRequest'\n\n  responses:\n\n    PushsubNotFound:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Не существует подписки с указанным идентификатором.\n      content:\n        application/json:\n          schema:\n              oneOf:\n                - $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Пример:\n              $ref: '#/components/examples/PushsubNotFoundError'\n          \n  examples:\n\n    PushsubListArrayResponse:\n      description: Пример ответа c массивом элементов списка подписок систем\n      value:\n        - id: 2\n          systemName: ЕГИП\n          systemLogin: egip\n          url: http://77.777.777.77:58080/ws_brogi/ReceiveChangesService\n          pushType: xml\n          status:\n            id : 1\n            tagiId: active\n            name: Активна\n        - id: 5\n          systemName: Портал открытых данных  \n          systemLogin: opod\n          url: http://99.999.99.99/test-msk/WS/mskservice.svc   \n          pushType: json  \n          status:\n            id: 0\n            tagId: inactive\n            name: Неактивна            \n\n    PushsubSubscriptionCatalogInfoArrayResponse:\n      description: Пример ответа из массива каталогов, которые входят в подписку\n      value:\n        - id: 109145\n          fullName: Платные поликлиники\n          isEnabled: false\n        - id: 345654\n          fullName: Дошкольные учреждения\n          isEnabled: true\n    \n    PushsubArrayResponse:\n      description: Пример ответа с массивом подписок систем\n      value:\n        - id: 13\n          system: \n            id: 5\n            name: ЕГИП\n          url: http://77.777.777.77:58080/ws_brogi/ReceiveChangesService\n          status:\n            id: 1\n            name: Активна\n            tagId: active\n          forAccum: false\n          needAuth: false\n          pushType: xml\n          withGeo: true\n          isWGS84: true\n        - id: 13\n          system: \n            id: 2\n            name: Портал открытых данных\n          url: http://99.999.99.99/test-msk/WS/mskservice.svc\n          status:\n            id: 2\n            name: Временно заблокирована\n            tagId: tmpBlocked\n          forAccum: true\n          needAuth: true\n          authlogin: loginEGIP\n          pushType: json\n          certId: 97a98b65-74d7-4b8c-80a0-8f10be337c98\n          withGeo: false\n          # needMonitoring: true\n          # responsibles:\n          #   - fio: Иванов И.И.\n          #     email: ivanov@mail.ru\n          #     phone: 9897875544\n   \n    PushsubCreateRequest:\n      description: |-\n        Создание подписки.\n      value:        \n        url: http://99.999.99.99/test-msk/WS/mskservice.svc\n        pushType: json\n        systemId: 45\n        forAccum: true\n        needAuth: true\n        authLogin: egip\n        authPassword: qweqwe123\n        certId: 97a98b65-74d7-4b8c-80a0-8f10be337c98\n        certPassword: Q987654!\n        withGeo: false\n        # needMonitoring: false\n        # responsibles:\n        #   - fio: Иванов И.И.\n        #     email: ivanov@mail.ru\n        #     phone: 9998885544\n\n    PushsubModifyRequest:\n      description: |-\n        Изменение подписки.\n      value:\n        url: http://99.999.99.99/test-msk/WS/mskservice.svc\n        pushType: json\n        systemId: 45\n        forAccum: false\n        needAuth: true\n        authLogin: egip\n        authPassword: qweqwe123\n        certId: 97a98b65-74d7-4b8c-80a0-8f10be337c98\n        certPassword: qweqwe123\n        withGeo: true\n        isWGS84: false\n    \n    PushsubCreatedResponse:\n      description: |-\n        Подписка создана.\n      value:\n        id: 12\n        code: 201\n        messageType: Created\n        message: |-\n          Подписка успешно создана\n\n    PushsubOkResponse:\n      description: |-\n        Данные подписки обновлены.\n      value:\n        id: 16\n        code: 200\n        messageType: Ok\n        message: |-\n          Подписка успешно изменена\n          \n    PushsubsDeletedResponse:\n      description: |-\n        Подписки удалены.\n      value:\n        code: 200\n        messageType: Ok\n        message: |-\n          Выбранные подписки удалены\n                 \n    PushsubListRequest:\n      description: |-\n        Пример тела запроса по списку подписок систем.\n      value:\n        filters: \n          - attribute: 'systemName'\n            operator: 'contains'\n            value: 'БТИ'\n\n    SubscriptionListRequest:\n      description: |-\n        Пример тела запроса по списку каталогов, которые входят в подписку\n      value:\n        filters: \n          - attribute: 'fullName'\n            operator: 'contains'\n            value: 'БТИ'\n\n    PushsubSubscriptionCatalogRequest:\n      description: |-\n        Добавление или удаление каталогов в подписку или смена статуса подписок каталогов.\n      value:\n        - 2342\n        - 334\n        - 4416\n\n    PushsubSubscriptionCatalogAddResponse:\n      description: |-\n        Выбранные каталоги добавлены в подписку.\n      value:\n        code: 200\n        messageType: Ok\n        message: |-\n          Выбранные каталоги добавлены в подписку\n\n    PushsubSubscriptionCatalogDeletedResponse:\n      description: |-\n         Выбранные каталоги удалены из подписки. \n      value:\n        code: 200\n        messageType: Ok\n        message: |-\n          Выбранные каталоги удалены из подписки.\n\n    CatalogNotFoundError: \n      description: |-\n        Указанный каталог не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталога с идентификатором {catalogId} не существует.\n       \n    PushsubStatusChangedToActiveResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Статус подписки изменен на Активный\n    \n    PushsubStatusChangedToInactiveResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Статус подписки изменен на Неактивный\n\n    PushsubNotFoundError:\n      value:\n        code: 404\n        messageType: Not found\n        message: Подписки с идентификатором {subscriptionId} не существует\n\n    SystemNotFoundError:\n      value:\n        code: 404\n        messageType: Not found\n        message: Информационной системы с идентификатором {systemId} не существует\n\n    CertIdNotFoundError:\n      value:\n        code: 404\n        messageType: Not found\n        message: Файла сертификата с идентификатором {certId} не существует\n            \n    NotFoundLoginOrPasswordId:\n      description: |-\n        При указании необходимости авторизации в сервисе (параметр `needAuth=true`) не передан логин (поле `authLogin`) или пароль (поле `authPassword`).\n      value:\n        code: 400\n        messageType: Required fields not passed\n        message: >\n          Не переданы обязательные поля. \n          При необходимости авторизации должны быть переданы логин и пароль.\n\n    CertIdNotP12Error:\n      description: |-\n        Передан недопустимый формат файла сертификата.\n      value:\n        code: 400\n        messageType: Request body field value out of scope\n        message: >\n          Передан недопустимый формат файла сертификата. \n          Формат файла сертификата должен быть р12.\n\n    NotFoundCertLogin:\n      description: |-\n        При добавлении файла сертификата не передана парольная фраза сертификата (поле `certPassword`).\n      value:\n        code: 400\n        messageType: Required fields not passed\n        message: >\n          Не переданы обязательные поля. \n          При загрузке сертификата должна быть передана парольная фраза сертификата.\n\n    NotFoundWithGeoForWGS:\n      description: |-\n        При передаче необходимой СК геометрии (поле 'isWGS84') в push-уведомлении не передана отметка о включении геометрии в push-уведомление (поле 'withGeo').\n      value:\n        code: 400\n        messageType: Required fields not passed\n        message: >\n          Не переданы обязательные поля. \n          При передаче отметки о необходимости передавать геометрию в СК EPSG:4326 (WGS84) не передана отметка о необходимости включать геометрию в push-уведомление.                   ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с файлами\n  version: 1.0.0\n\n\npaths:\n  /files:\n    post:\n      tags:\n        - files\n      summary: Сохранение файла и его описания\n      description: |-\n        Метод используется для сохранения файла и его описания. \n        \n        Необходимо обязательное заполнение поля `catalogId` при сохранении, КРОМЕ файлов со следующими типами:\n          - иконка тематической категории (`fileProcessType = thematic-category`)\n          - файл экспорта справочника (`fileProcessType = dictionary-export`)\n          - файл сертификата подписки на push уведомления (`fileProcessType = cert-subscription`)\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              $ref: '#/components/schemas/File'\n            examples:\n              Пример:\n                $ref: '#/components/examples/FileRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/FileCreatedResponse'\n              example:\n                id: e81251b2-2dbc-4223-bbd8-17cbf4bf6adf\n                code: 201\n                messageType: Created\n                message: Файл успешно создан!\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Превышен допустимый размер файла;\n              - Переданный catalogId не существует;\n              - Для переданного fileProcessType не указан catalogId;\n              - Для fileProcessType = catalog-object передается файл с недопустимым расширением.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Превышен допустимый размер файла:\n                  $ref: '#/components/examples/BigFileSizeError'\n                Переданный catalogId не существует:\n                  $ref: '#/components/examples/FileCatalogIdNotFoundError'\n                Для переданного fileProcessType не указан catalogId:\n                  $ref: '#/components/examples/FileProcessTypeNoCatalogIdError'\n                Для fileProcessType = catalog-object передается файл с недопустимым расширением:\n                  $ref: '#/components/examples/CatalogObjectFileIncorrectExtension'\n\n  /files/getFilesInfo:\n    post:\n      tags:\n        - files\n      summary: Получение информации об одном или нескольких файлах\n      description: |-\n        Метод используется для получения информации о файлах. В теле запроса передаются идентификаторы файлов (UUID).\n      requestBody:\n        description: Пример тела запроса\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/fileUuidArray'\n            examples:\n              Пример:\n                $ref: '#/components/examples/fileUuidArrayRequest'                      \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/File'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FileArrayResponse'\n\n\n  /files/{fileId}/download:\n    get:\n      tags:\n        - files\n      summary: Скачивание файла\n      description: |-\n        Метод используется для скачивания файла по идентификатору (uuid).\n      parameters:\n        - $ref: '#/components/parameters/fileIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/octet-stream:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n          headers:\n            Content-Disposition:\n              schema:\n                type: string\n              description: Обязательный заголовок, должен начинаться с `attachment;` и содержать имя файла для скачивания\n              example: attachment; filename=\"name.pdf\"\n        '404':\n          $ref: '#/components/responses/FileNotFoundResponse'\n\n  /files/{fileId}/show:\n    get:\n      tags:\n        - files\n      summary: Отображение изображения\n      description: |-\n        Метод используется для отображения изображения в браузере. Для управления размером отображения используется параметр `fileSizeMode`.\n      parameters: \n        - $ref: '#/components/parameters/fileIdPathParam'\n        - $ref: '#/components/parameters/fileSizeModeQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            image/jpeg:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n            image/png:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n            image/svg:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n          headers:\n            Content-Disposition:\n              schema:\n                type: string\n              description: Опциональный заголовок. Если указан, то должен содержать значение `inline`\n              example: inline\n        '404':\n          $ref: '#/components/responses/FileNotFoundResponse'\n\n  /files/textToFile:\n    post:\n      tags:\n        - files\n      summary: Получение файла, сформированного на основе текстовых данных\n      description: |-\n        Возвращает файл или zip архив, если файлов несколько. Файлы формируются на основе отправленных в теле запроса текстовых данных.\n        Для наименования файла с архивом используется дата запроса в виде YYYYMMDDHHMM-textToFile\n      requestBody:\n        description: Пример тела запроса\n        content:\n          application/json:\n            schema:\n              description: Массив объектов, где каждый элемент представляет отдельный файл.\n              type: array\n              minItems: 1\n              items:\n                $ref: '#/components/schemas/FileText'\n            examples:\n              Пример:\n                $ref: '#/components/examples/TextToFileRequestBody'                      \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/*:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n          headers:\n            Content-Disposition:\n              schema:\n                type: string\n              description: Обязательный заголовок, должен начинаться с `attachment;` и содержать имя файла для скачивания\n              example: attachment; filename=\"constructor_33111.zip\"\n        '400':\n          description: Ошибкт бизнес-логики\n          content: \n            application/json:\n              schema:\n                  oneOf:\n                  - $ref: '_common.yaml#/components/schemas/MissingParamsError'\n                  - $ref: '_common.yaml#/components/schemas/WrongTypeError'\n                  - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n                  - $ref: '_common.yaml#/components/schemas/WrongFormatError'\n              examples:\n                Не указан обязательный параметр:\n                  $ref: '_common.yaml#/components/examples/MissingParameterError'\n                Неверный тип:\n                  $ref: '_common.yaml#/components/examples/WrongTypeParameterError'\n                Значение не принадлежит определенному множеству:\n                  $ref: '_common.yaml#/components/examples/OutOfScopeEnumError'\n                Длина массива меньше минимального:\n                  $ref: '_common.yaml#/components/examples/WrongFormatMinArrayLengthError'\n        '405':\n          $ref: '_common.yaml#/components/responses/MethodNotAllowedResponse'\n        '408':\n          $ref: '_common.yaml#/components/responses/TimeoutResponse'\n        '500':\n          $ref: '_common.yaml#/components/responses/InternalServerErrorResponse'      \n\n  /files/fileToText:\n    post:\n      tags:\n          - files\n      summary: Получение содержимого текстовых файлов в виде строк.\n      description: |-\n        Возвращает массив объектов, описывающих файл и его содержимое.\n        Если загружается 1 текстовый файл, то возвращается массив с одним элементом. \n        Если загружают архив из нескольких файлов, то возвращается массив объектов, где 1 объект - 1 файл.\n        Допускаются к загрузке форматы .zip, .txt, .toml  \n      requestBody:\n        description: Текстовый файл или zip архив\n        content:\n          multipart/form-data:\n            schema:\n              type: object\n              properties:\n                file:\n                  description: zip архив или тектовый файл в формате .toml или .txt\n                  type: string\n                  format: binary\n                  example: <file-content>\n              required:\n                - file    \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                minItems: 1\n                items:\n                  $ref: '#/components/schemas/FileText'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/FileToTextResponse'         \n    \n\n\n# ap-api` - файл SOAP API\ncomponents:\n\n  schemas:\n    \n    File:\n      description: |-\n        Данные файла\n      type: object\n      properties:\n        id:\n          description: Идентификатор файла\n          type: integer\n          readOnly: true\n        uuid:\n          description: Идентификатор uuid файла\n          type: string\n          readOnly: true\n        file:\n          type: string\n          format: binary\n          description: Файл с содержимым\n          writeOnly: true\n        name:\n          description: Имя файла (без расширения)\n          type: string\n          readOnly: true\n        extension:\n          description: Расширение файла, включая точку\n          type: string\n          readOnly: true\n        fileProcessType:\n          $ref: '#/components/schemas/FileTypeTagIdEnum'\n        size:\n          description: Размер файла\n          type: string\n          readOnly: true\n        mimeType:\n          description: Тип файла, формат MIME-типа\n          type: string\n          readOnly: true\n        catalogId:\n          description: Идентификатор каталога, к которому привязывается файл\n          type: integer\n          format: int32\n      required:\n        - id\n        - uuid\n        - file\n        - name\n        - extension\n        - fileProcessType\n        - size\n        - mimeType\n  \n    FileTypeTagIdEnum:\n      description: |-\n        Техническое название типа файла:\n          - `import` - файл импорта, \n          - `export` - файл экспорта, \n          - `catalog-object` - файл объекта каталога, \n          - `soap-api` - файл SOAP API\n          - `background` - файл фоновой проверки\n          - `thematic-category` - файл иконки тематической категории\n          - `cert-subscription` - файл сертификата подписки на push уведомления\n          - `accum-input` - файл выгрузки каталога заполнения или кастомного csv-файла для сборного каталога\n          - `accum-output` - выходной файл сборного каталога\n          - `dictionary-export` - файл экспорта справочника\n      oneOf:\n        - type: string\n          enum:\n            - import\n            - export\n            - catalog-object\n            - soap-api\n            - background\n            - thematic-category\n            - cert-subscription\n            - accum-input\n            - accum-output\n            - dictionary-export\n\n    FileText:\n      type: object\n      properties:\n        name:\n          description: Название файла.\n          type: string\n        extension:\n          description: Расширение файла, включая точку\n          type: string\n          enum:\n            - .txt\n            - .toml \n        content:\n          description: Текстовые данные, которые необходимо записать в файл.\n          type: string\n      required:\n        - name\n        - extension\n        - content\n\n    fileUuidArray:\n      description: Массив uuid файлов\n      type: object\n      properties:\n        uuids:\n          description: Массив uuid\n          type: array\n          items:\n            type: string\n      required:\n        - uuids\n\n    FileCreatedResponse:\n      description: |-\n        Ответ на запрос при создании файла\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: |-\n            Идентифкатор файла (uuid)\n          type: string\n        code:\n          type: integer\n          enum:\n            - 201\n        messageType:\n          enum:\n            - Created  \n        message:\n          description: Текст ответа\n          type: string\n      required:\n        - id\n        - code\n        - messageType\n        - message\n\n  parameters:\n    \n    fileIdPathParam:\n      name: fileId\n      in: path\n      description: |-\n        Идентификатор uuid файла.\n      required: true\n      schema:\n        type: string\n      example: ace20e83-1076-4729-9087-f88a9e7fc716 \n\n    fileIdQueryParam:\n      name: fileId\n      in: query\n      description: |-\n        Идентификатор uuid файла.\n      required: true\n      schema:\n        type: string\n      example: cc8eb1d3-8b42-403a-bbd9-918220a8321f\n\n    fileIdQueryOptParam:\n      name: fileId\n      in: query\n      description: |-\n        Идентификатор uuid файла.\n      required: false\n      schema:\n        type: string\n      example: cc8eb1d3-8b42-403a-bbd9-918220a8321f\n\n    fileSizeModeQueryParam:\n      name: fileSizeMode\n      required: true\n      in: query\n      description: |-\n        Размер изображения для отображения. \n\n        Доступные значения:\n         - `original` - оригинал изображения\n         - `thumbnail` - миниатюра изображения\n      schema:\n        type: string\n        default: original\n        enum:\n          - original\n          - thumbnail\n      example: original\n  \n  responses:\n\n    FileNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id файла не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id файла:\n              $ref: '#/components/examples/FileNotFoundError'\n\n  \n  examples:\n    \n    FileRequest:\n      description: Пример тела запроса с информацией о файле.\n      value:\n        file: 82131ba12\n        fileProcessType: catalog-object\n        catalogId: 35343\n\n    fileUuidArrayRequest:\n      value:\n        uuids:\n          - \"51e3eda6-52dd-4c50-a470-061dbb537bfa\"\n          - \"e81251b2-2dbc-4223-bbd8-17cbf4bf6adf\"\n          - \"76c29e52-50de-4dfd-8dfe-019a6c81756b\"\n\n    FileArrayResponse:\n      value:\n        - id: 495\n          uuid: 76c29e52-50de-4dfd-8dfe-019a6c81756b\n          name: Схема кладбища\n          extension: .jpg\n          mimeType: image/jpeg\n          fileProcessType: catalogObject\n          size: 4 МБ\n          catalogId: 35343\n        - id: 326\n          uuid: a0ca327c-62cd-4fe5-a297-fd4ea64ab087\n          name: Парковая территория\n          extension: .jpg\n          mimeType: image/jpeg\n          fileProcessType: catalogObject\n          size: 3 МБ\n          catalogId: 35343\n        \n    FileNotFoundError:\n      description: |-\n        Указанный файл не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Файла с идентификатором {fileId} не существует.\n    \n    BigFileSizeError:\n      description: Превышен допустимый размер файла, сохранение невозможно\n      value:\n        code: 400\n        messageType: Bad request\n        message: Превышен допустимый размер файла, сохранение невозможно\n\n    FileCatalogIdNotFoundError:\n      description: Переданный catalogId не существует\n      value:\n        code: 400\n        messageType: Bad request\n        message: Переданный catalogId - {catalogId} не существует\n\n    FileProcessTypeNoCatalogIdError:\n      description: Для переданного fileProcessType не указан catalogId\n      value:\n        code: 400\n        messageType: Bad request\n        message: Для переданного fileProcessType - {fileProcessType} не указан catalogId\n\n    CatalogObjectFileIncorrectExtension:\n      description: Для fileProcessType = catalog-object передается файл с недопустимым расширением\n      value:\n        code: 400\n        messageType: Bad request\n        message: Недопустимое расширение файла для загрузки в объект каталога.\n\n    TextToFileRequestBody:\n      value:\n        - name: CodeOKOGU-28394\n          extension: .toml\n          content: >-\n            packName = \"Код организации по ОКОГУ\"\n                packTechName = \"CodeOKOGU-28394\"\n                isMain = false\n                event = \"change\"\n                mode = \"eventAndBackground\"\n\n                [[blocks]]\n                    tagId = \"cond1\"\n                    type = \"condition\"\n                    name = \"Условие\"\n                    trueBlockTagId = \"cond2\"\n                    falseBlockTagId = \"cond3\"\n                    [blocks.properies]\n                        condition = \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n                        uniqAttr = \"\"\n        - name: OGRNCheck\n          extension: .toml\n          content: >-\n            packName = \"Код организации по ОКОГУ\"\n                packTechName = \"OGRNCheck\"\n                isMain = false\n                event = \"change\"\n                mode = \"eventAndBackground\"\n\n                [[blocks]]\n                    tagId = \"cond1\"\n                    type = \"condition\"\n                    name = \"Условие\"\n                    trueBlockTagId = \"cond2\"\n                    falseBlockTagId = \"cond3\"\n                    [blocks.properies]\n                        condition = \"containsInList(attr.OrgTypeName, (895132643)) and equals(attr.OKFSCode, 13))\"\n                        uniqAttr = \"\"\n\n    FileToTextResponse:\n      value:\n        - name: conditionalUniq\n          extension: .txt\n          content: equals(attr.EntryState.NAME, 'Актуальна') and empty(attr.ContractDateEnd)                                    \n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с публикацией объектов\n  version: 1.0.0\n\n\npaths:\n  /publication/queue/search:\n    post:\n      tags:\n        - publication\n      summary: Поиск по списку каталогов, находящихся в очереди публикации\n      description: |-\n        Возвращает список каталогов, находящихся в очереди публикации и удовлетворящих поисковым критериям.\n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        \n        Ответ включает список каталогов с указанием идентификатора `catalogId`, названий `catalogName`, приоритет `priority`,\n        а также количество объектов в зависимости от статуса в очереди публикации (см. описание тела ответа).\n        \n        Для фильтрации используется тело запроса.\n\n        По умолчанию сортировка производится в порядке убывания приоритета каталога.\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых каталогов (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку каталогов в очереди.\n            Поиск производится по идентификатору `catalogId` и наисменованию каталога `catalogName`.\n            \n            Запрос со значением `12` вернет все каталога, идентификатор или наименование которых содержит подстроку `12`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка списка. Допустимые значения: `catalogId`, `catalogName`, `priority`,\n            `newCnt`, `inWorkCnt`, `publishedCnt`, `updatedCnt`, `deletedCnt`, `restoredCnt`, `passedCnt`, `errorCnt`.\n            \n            По умолчанию: `priority`.\n          required: false\n          schema:\n            type: string\n            default: priority\n            enum:\n              - catalogId\n              - catalogName\n              - priority\n              - newCnt\n              - inWorkCnt\n              - publishedCnt\n              - updatedCnt\n              - deletedCnt\n              - restoredCnt\n              - passedCnt\n              - errorCnt\n        - $ref: '_common.yaml#/components/parameters/orderByDescQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку каталогов в очереди публикации\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - catalogId\n                              - catalogName\n                              - priority\n                              - newCnt\n                              - inWorkCnt\n                              - publishedCnt\n                              - updatedCnt\n                              - deletedCnt\n                              - restoredCnt\n                              - passedCnt\n                              - errorCnt\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationQueueSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogPublicationQueueInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogPublicationQueueInfoArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n  \n  /publication/queue/setPriority:\n    post:\n      tags:\n        - publication\n      summary: Изменение приоритета публикации каталога\n      description: |-\n        Метод позволяет изменить приоритет публикации каталога.\n        \n        В теле запроса указывается массив объектов с идентификатором каталога `catalogId` и новым приоритетом `priority`.\n\n        Обычный пользователь может устанавливать приоритет в интервале от `1` до `10`.\n\n        Системный пользователь может устанавливать приоритет в интервале от `1` до `11`.\n        Если каталог имеет приоритет 11, то изменить его может только системный пользователь.\n      requestBody:\n        description: Пример тела запроса для изменения приоритета публикации каталогов\n        required: true\n        content:\n          application/json:\n            schema:\n              type: array\n              minItems: 1\n              maxItems: 100\n              items:\n                type: object\n                description: Объект, передаваемый для изменения приоритета\n                properties:\n                  catalogId:\n                    description: Идентификатор каталога\n                    type: integer\n                    format: int32\n                  priority:\n                    description: Обновленное значение приоритета\n                    type: integer\n                    format: int32\n                    minimum: 1\n                    maximum: 11\n                required:\n                  - catalogId\n                  - priority\n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationSetPriorityRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationCatalogPriorityChangedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Обычный пользователь меняет приоритет каталога на 11;\n              - Обычный пользователь меняет приоритет каталога, текущий приоритет которого 11.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/ResourceCannotBeDeletedError'\n              examples:\n                Обычный пользователь меняет приоритет каталога на 11:\n                  $ref: '#/components/examples/CatalogPublicationPriorityCannotBeChangedTo11'\n                Обычный пользователь меняет приоритет каталога с приоритетом 11:\n                  $ref: '#/components/examples/CatalogPublicationPriorityCannotBeChangedFrom11'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /publication/queue/fill:\n    get:\n      tags:\n        - publication\n      summary: Запуск наполнения очереди публикации для каталога\n      description: |-\n        Запускает публикацию объектов каталога.\n        \n        В параметрах запроса передаются идентификатор каталога публикации, его версия, а также причина публикации объектов.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: 'publicationCatalogs.yaml#/components/parameters/versionQueryParam'\n        - $ref: '#/components/parameters/reasonQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicationQueueFillingStartedResponse'\n        '404':\n          $ref: 'publicationCatalogs.yaml#/components/responses/PublicationCatalogOrVersionNotFoundResponse'\n\n\ncomponents:\n  schemas:\n    PublicationReasonTagIdEnum:\n      description: |-\n          Техническое наименование причины публикации объектов:\n            - `isSign` - Подписание;\n            - `isPublConditionsCh` - Перепубликация при изменении условий ограничения выборки;\n            - `isTruncate` - Техническое удаление объекта со всеми версиями в БД публикации;\n            - `isNsiCh` - Перепубликация при изменении элементов справочника.\n      oneOf:\n        - type: string\n          enum:\n            - isSign\n            - isPublConditionsCh\n            - isTruncate\n            - isNsiCh\n    \n    CatalogPublicationQueueInfo:\n      description: Информация о каталоге в очереди публикации\n      readOnly: true\n      type: object\n      properties:\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n          format: int32\n        catalogName:\n          description: Наименование каталога\n          type: string\n        priority:\n          $ref: 'publicationCatalogs.yaml#/components/schemas/PublicationCatalogPriority'\n        newCnt:\n          description: Количество объектов каталога, ожидающих обработки\n          type: integer\n          format: int32\n          minimum: 0\n        inWorkCnt:\n          description: Количество объектов каталога, находящихся в обработке\n          type: integer\n          format: int32\n          minimum: 0\n        publishedCnt:\n          description: Количество успешно опубликованных (в первый раз) объектов каталога\n          type: integer\n          format: int32\n          minimum: 0\n        updatedCnt:\n          description: Количество успешно обновленных в публикации объектов каталога\n          type: integer\n          format: int32\n          minimum: 0\n        deletedCnt:\n          description: Количество успешно удаленных из публикации объектов каталога\n          type: integer\n          format: int32\n          minimum: 0\n        restoredCnt:\n          description: Количество успешно восстановленных в публикации объектов каталога\n          type: integer\n          format: int32\n          minimum: 0\n        passedCnt:\n          description: Количество успешно обработанных объектов каталога, которые не были удалены или изменены в БД публикации \n          type: integer\n          format: int32\n          minimum: 0\n        errorCnt:\n          description: Количество объектов каталога, не обработанных из-за ошибок\n          type: integer\n          format: int32\n          minimum: 0\n      required:\n        - catalogId\n        - catalogName\n        - priority\n        - newCnt\n        - inWorkCnt\n        - publishedCnt\n        - updatedCnt\n        - deletedCnt\n        - restoredCnt\n        - passedCnt\n        - errorCnt\n    \n  parameters:\n    reasonQueryParam:\n      name: reason\n      in: query\n      description: |-\n        Причина публикации объектов каталога публикации\n      required: true\n      schema:\n        $ref: '#/components/schemas/PublicationReasonTagIdEnum'\n      example: isSign\n  \n  examples:\n    PublicationQueueSearchRequest:\n      description: Пример тела запроса для поиска по очереди публикации\n      value:\n        filters:\n          - attribute: catalogName\n            operator: contains\n            value: реестр\n          - attribute: inWorkCnt\n            operator: greaterOrEqualsThan\n            value: 1000\n          - attribute: priority\n            operator: equals\n            value: 11\n\n    PublicationSetPriorityRequest:\n      description: Пример тела запроса для изменения приоритетов в очереди публикации\n      value:\n        - catalogId: 123222\n          priority: 7\n        - catalogId: 123265\n          priority: 11\n        - catalogId: 173460\n          priority: 10\n    \n    CatalogPublicationQueueInfoArrayResponse:\n      description: Пример ответа с массивом каталогов в очереди публикации\n      value:\n        catalogId: 134987\n        catalogName: Реестр мест захоронений\n        priority: 9\n        newCnt: 10000\n        inWorkCnt: 12000\n        publishedCnt: 20\n        updatedCnt: 1000\n        deletedCnt: 100\n        restoredCnt: 10\n        passedCnt: 50\n        errorCnt: 0\n\n    PublicationCatalogPriorityChangedResponse:\n      description: Пример ответа при изменении приоритета каталогов в очереди публикации\n      value:\n        code: 200\n        messageType: Ok\n        message: Приоритеты публикации каталогов успешно изменены!\n\n    PublicationQueueFillingStartedResponse:\n      description: Пример ответа при запуске наполнения очереди публикации объектами каталога\n      value:\n        code: 200\n        messageType: Ok\n        message: Наполнение очереди запущено\n    \n    CatalogPublicationPriorityCannotBeChangedTo11:\n      description: |-\n        Обычный пользователь меняет приоритет публикации каталога на 11.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Обычный пользователь не может изменить приоритет публикации каталога на 11.\n    \n    CatalogPublicationPriorityCannotBeChangedFrom11:\n      description: |-\n        Обычный пользователь меняет приоритет публикации каталога, текущий приоритет которого равен 11.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Обычный пользователь не может изменить приоритет публикации каталога, если его текущий приоритет равен 11.\n    ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с блокировками, добавленными в ЕХД\n  version: 1.0.0\n\npaths:\n\n  /locks/search:\n    post:\n      tags: \n        - locks\n      summary: Получение списка блокировок\n      description: Возвращает список текущих блокировок, добавленных в ЕХД\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых блокировок (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке блокировок. Поиск производится по атрибутам `id`, `catalogId`, `catalogName`\n          schema:\n            type: string   \n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdsOptQueryParam'\n        - name: lockType\n          in: query\n          required: false\n          description: |-\n            Фильтр по типу блокировки. Если не указан, возвращаются любые. В параметре передается техническое наименование.\n          schema:\n            $ref: '#/components/schemas/LockTypeTagIdEnum'\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - catalogId\n              - catalogName\n              - userId\n              - userLogin\n              - systemId\n              - systemLogin\n              - dateTimeCreated\n              - dateTimeExpired\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'  \n      requestBody:\n        description: Пример тела запроса с фильтрами по списку блокировок\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - catalogId\n                              - catalogName\n                              - userId\n                              - userLogin\n                              - systemId\n                              - systemLogin\n                              - dateTimeCreated\n                              - dateTimeExpired\n            examples:\n              Пример:\n                $ref: '#/components/examples/LocksSearchRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. \n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/LockListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/LocksListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'        \n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'  \n\n  /locks:\n    get:\n      tags:\n        - locks\n      summary: Получение блокировок по идентификаторам\n      description: |-\n        Возвращает полную информацию о блокировках по идентификаторам.\n        \n        Если блокировка с указанным идентификатором не найдена, она не включаются в массив тела ответа.\n      parameters:\n        - $ref: '#/components/parameters/lockIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/Lock'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/LocksArrayResponse'\n    post:\n      tags:\n        - locks\n      summary: Создание блокировки\n      description: |-\n        Создает блокировку.\n\n        В запросе может передаваться время жизни блокировки в миллисекундах.\n        Если не передано, то блокировка будет создана со стандартным временем жизни для блокирующего процесса.\n      requestBody:\n        $ref: '#/components/requestBodies/LockRequestBody'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/LockCreatedResponse'\n        '400':\n          description: |-\n            Ошибки создания блокировки:\n              - Не передан пользователь или система.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/NoUserOrSystemInLockResponse'\n        '404':\n          $ref: '#/components/responses/LocksNotFoundErrorResponse'\n    delete:\n      tags:\n        - locks\n      summary: Удаление блокировки\n      description: |-\n        Удаляет блокировки по переданным идентификаторам.\n      parameters:\n        - $ref: '#/components/parameters/lockIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/LockDeletedResponse'\n\ncomponents:\n\n  schemas:\n    \n    CommonLockInfo:\n      description: Общая информация о блокировке\n      type: object\n      properties:\n        id:\n          description: Идентификатор блокировки\n          type: integer\n          readOnly: true\n        catalogId:\n          description: Идентификатор каталога, на который установлена блокировка\n          type: integer\n        catalogName:\n          description: Наименование каталога, на который установлена блокировка\n          type: string\n          readOnly: true\n        lockType:\n          readOnly: true\n          allOf:\n            - $ref: '#/components/schemas/LockType'\n        lockTypeTagId:\n          writeOnly: true\n          allOf:\n            - $ref: '#/components/schemas/LockTypeTagIdEnum'\n        userId:\n          description: Идентификатор пользователя, установившего блокировку\n          type: integer\n        userLogin: \n          description: Логин пользователя, установившего блокировку\n          type: string\n          readOnly: true\n        systemId:\n          description: Идентификатор системы, установившей блокировку\n          type: integer\n        systemLogin: \n          description: Логин системы, установившей блокировку\n          type: string\n          readOnly: true\n        dateTimeCreated:\n          description: Дата старта блокировки каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n          readOnly: true\n        dateTimeExpired:\n          description: Дата снятия блокировки каталога по истечению времени жизни \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n          readOnly: true\n        lifeTime:\n          description: Время жизни блокировки в миллисекундах\n          type: integer\n      required:\n        - id\n        - catalogId\n        - lockType\n        - lockTypeTagId\n\n    LockListItem:\n      description: Информация о блокировке в списке блокировок\n      allOf:\n        - $ref: '#/components/schemas/CommonLockInfo'\n      \n    Lock:\n      description: Блокировка\n      allOf:\n        - $ref: '#/components/schemas/CommonLockInfo'\n      properties:\n        lifeTime:\n          description: Время жизни блокировки в миллисекундах\n          type: integer\n          minimum: 0\n      required:\n        - lifeTime\n\n    LockTypeTagIdEnum:\n      description: |-\n        Тип блокировки:\n          - `signatures` - Подписание\n          - `imports` - Импорт\n          - `backgroundChecks` - Фоновые проверки каталогов\n          - `exports` - Экспорт каталога заполнения\n      oneOf:\n        - type: string\n          enum:\n            - signatures\n            - imports\n            - backgroundChecks\n            - exports\n\n    LockTypeNameEnum:\n      description: Наименование типа блокировки\n      oneOf:\n        - type: string\n          # enum:\n          #   - Подписание\n          #   - Импорт\n          #   - Фоновые проверки каталогов\n          #   - Экспорт\n\n    LockType:\n      description: |-\n        Тип блокировки\n      type: object\n      properties:\n        id:\n          description: Идентификатор типа блокировки\n          type: integer\n          format: int32\n        name:\n          $ref: '#/components/schemas/LockTypeNameEnum'\n        tagId:\n          $ref: '#/components/schemas/LockTypeTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    LockCatalogInfo:\n      description: |-\n        Информация о каталоге, на который наложена блокировка.\n      type: object\n      readOnly: true\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      \n  parameters:\n\n    lockIdsQueryParam:\n      name: lockIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов блокировок.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [7]\n\n    lockIdPathParam:\n      name: lockId\n      in: path\n      description: |-\n        Идентификатор блокировки.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 6\n\n    catalogIdPathParam:\n      name: catalogId\n      in: path\n      description: |-\n        Идентификатор каталога.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 56897\n\n  requestBodies:\n    LockRequestBody:\n      description: Тело запроса с информацией о блокировке.\n      required: true\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/Lock'\n          examples:\n            Пример:\n              $ref: '#/components/examples/LockRequestBody'\n\n  responses:\n\n    LocksNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога не существует;\n          - Запрошенный id пользователя, установавливающего блокировку не существует;\n          - Запрошенный id системы, установавливающей блокировку не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Каталога не существует:\n              $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n            Пользователя не существует:\n              $ref: 'users.yaml#/components/examples/UserNotFoundError'\n            Системы не существует:\n              $ref: 'systems.yaml#/components/examples/SystemNotFoundError'\n\n    LockNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id блокировки не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id блокировки:\n              $ref: '#/components/examples/LockNotFoundError'\n\n    CatalogNotFoundErrorResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id каталога не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id каталога:\n              $ref: '#/components/examples/CatalogIdNotFoundError'\n\n  examples:\n\n    LocksSearchRequest:\n      description: Пример тела запроса для поиска по списку блокировок \n      value:\n        filters:\n          - attribute: userLogin\n            operator: contains\n            value: petrov\n    LocksListItemArrayResponse:\n      description: Пример ответа c массивом элементов списка блокировок\n      value:\n        - id: 2020\n          catalogId: 38759\n          catalogName: Поликлиники\n          lockType:\n            id: 1\n            name: Подписание\n            tagId: signatures\n          userId: 4565\n          userLogin: petrov\n          systemId: null\n          systemLogin: null\n          dateTimeCreated: 26.09.2024 09:45:35\n          dateTimeExpired: 26.09.2024 11:45:35\n        - id: 2023\n          catalogId: 38798\n          catalogName: Парковые территории\n          lockType:\n            id: 2\n            name: Импорт\n            tagId: imports\n          userId: null\n          userLogin: null\n          systemId: 2134\n          systemLogin: yandex\n          dateTimeCreated: 26.09.2024 09:45:35\n          dateTimeExpired: 26.09.2024 11:45:35\n\n# пример аналогичен LocksListItemArrayResponse, пока оставила, возможно будут корректировки\n    LocksArrayResponse:\n      description: Пример ответа с массивом блокировок\n      value:\n        - id: 2020\n          catalogId: 38759\n          catalogName: Поликлиники\n          lockType:\n            id: 1\n            name: Подписание\n            tagId: signatures\n          userId: 4565\n          userLogin: petrov\n          systemId: null\n          systemLogin: null\n          dateTimeCreated: 26.09.2024 09:45:35\n          dateTimeExpired: 28.09.2024 09:45:35\n          lifeTime: 7200000\n        - id: 2023\n          catalogId: 38798\n          catalogName: Парковые территории\n          lockType:\n            id: 2\n            name: Импорт\n            tagId: imports\n          userId: null\n          userLogin: null\n          systemId: 2134\n          systemLogin: yandex\n          dateTimeCreated: 26.09.2024 10:45:35\n          dateTimeExpired: 26.09.2024 12:45:35\n          lifeTime: 7200000\n \n    LockNotFoundError:\n      description: |-\n        Указанная блокировка не найдена.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Блокировки с идентификатором {lockId} не существует.                  \n\n    LockRequestBody:    \n      description: Пример тела запроса с информацией о блокировке\n      value:\n        catalogId: 38759\n        lockTypeTagId: signatures\n        userId: 4565\n        lifeTime: 65983265\n\n    LockCreatedResponse:\n      description: Пример ответа при создании блокировки\n      value:\n        id: 235654\n        code: 201\n        messageType: Created\n        message: Блокировка успешно создана!\n\n    LockDeletedResponse:\n      description: Пример ответа при удалении блокировок\n      value:\n        code: 200\n        messageType: Ok\n        message: Блокировки успешно удалены!\n\n    LockCatalogInfoResponse:\n      description: Пример ответа с каталогом, на который наложена блокировка\n      value:\n          id: 654\n          name: Актуальные адреса БТИ\n\n    CatalogIdNotFoundError:\n      description: |-\n        Указанный идентификатор каталога не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Каталога с идентификатором {catalogId} не существует.                  \n\n    UserIdNotFoundError:\n      description: |-\n        Указанный идентификатор пользователя не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Пользователя с идентификатором {userId} не существует.                  \n\n    UserLoginNotFoundError:\n      description: |-\n        Указанный логин пользователя не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Пользователя с логином {userLogin} не существует.\n\n    NoUserOrSystemInLockResponse:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не передан идентификатор пользователя или системы, в связи с дейсвтием которого создается блокировка.\n\n\n\n\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с экспортами каталогов заполнения\n  version: 1.0.0\n\n\npaths:\n  # запуск\n  # заполнение - csv (потом добавить enum в параметры запроса)\n  /exports:\n    post:\n      tags:\n        - exports\n      summary: Запуск экспорта каталога заполнения\n      description: |-\n        Выполняет запуск экспорта по каталогу заполнения. По умолчанию в файл экспорта попадают объекты со статусами: new, signed, toModification\n\n        В теле запроса могут передаваться: фильтры, ограничивающие  выборку экспортируемых объектов,\n        а также сортировки, определяющие порядок объектов в итоговом файле.\n\n        В тело запроса также передаются атрибуты, которые включаются в итоговый файл экспорта.\n        Для включения в файл экспорта системных атрибутов необходимо добавить их идентификаторы в массив:\n          - информация о подписи объекта (attrId = -12);\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/exportTypeQueryParam'\n        - $ref: '#/components/parameters/exportOnlyRootCatalogQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/objectStatusesQueryParam'\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataExportQueryParam'\n      requestBody:\n        required: false\n        description: Тело запроса\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    $ref: 'catalogObjects.yaml#/components/schemas/RootCatalogObjectListFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n                attributes:\n                  $ref: '#/components/schemas/ExportAttributesList' \n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportCreatedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Переданный оператор не может быть применен для указанного атрибута (несоответствие типа);\n              - Передана отметка о необходимости экспортировать геоданные объектов для каталога, у которого отключена геопривязка \n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Неверный оператор:\n                  $ref: '_common.yaml#/components/examples/WrongFilterOperatorError'\n                Запрошена геометрия для каталога без геопривязки:\n                  $ref: '#/components/examples/FetchGeodataError'\n        '404':\n          $ref: 'catalogObjects.yaml#/components/responses/CatalogObjectSearchNotFoundResponse'\n      \n  /exports/history:\n    post:\n      tags:\n        - exports\n      summary: Получение истории экспортов каталога заполнения\n      description: |-\n        Метод позволяет получать историю экспортов каталога.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка историй экспортов (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку экспортов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - userName\n                              - dateStart\n                              - dateEnd\n                              - countAllObj\n                              - statusTagId\n            examples:\n              Пример:\n                  $ref: '#/components/examples/ExportHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ExportHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/ExportHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n  \n  /exports/{exportId}/cancel:\n    get:\n      tags:\n        - exports\n      summary: Отменяет выполнение экспорта\n      description: |-\n        Выполняет отмену запущенного экспорта\n      parameters:\n        - $ref: '#/components/parameters/exportIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportCancelledResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Экспорт уже завершен.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportIsAlreadyFinishedError'\n        '404':\n          $ref: '#/components/responses/ExportNotFoundResponse'\n\n  /exports/{exportId}/settings:\n    get:\n      tags:\n        - exports\n      summary: Получение настроек экспорта\n      description: |-\n        Возвращает фильтры применённые к экспорту: фильтр по атрибутам, фильтр по статусам, сортировка, а также перечень атрибутов, включенных в итоговый файл экспорта.\n      parameters:\n        - $ref: '#/components/parameters/exportIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ExportSettings'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ExportSettingsResponse'\n        '404':\n          $ref: '#/components/responses/ExportNotFoundResponse'        \n\ncomponents:\n  schemas:\n    ExportStatusNameEnum:\n      description: Название статуса экспорта\n      oneOf:\n        - type: string\n          # enum:\n          #   - Добавлен в очередь\n          #   - В работе\n          #   - Экспорт завершен успешно\n          #   - Ошибка экспорта\n          #   - Экспорт отменен пользователем\n    \n    ExportStatusTagIdEnum:\n      description: |-\n        Технчиеское навзание статуса экспорта\n          - `new` - Добавлен в очередь,\n          - `inWork` - В работе, \n          - `finished` - Экспорт завершен успешно, \n          - `error` - Ошибка экспорта, \n          - `cancelled` - Экспорт отменен пользователем.\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - inWork\n            - finished\n            - error\n            - cancelled\n    \n    FillingExportTypeTagIdEnum:\n      description: Техническое наименование типа файла экспорта     \n      type: string\n      enum:\n        - csv\n    \n    ExportStatus:\n      description: Статус экспорта\n      type: object\n      readOnly: true\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/ExportStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/ExportStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n    \n    ExportAttributesList:\n      description: Массив идентификаторов атрибутов - attrId, включаемых в файл экспорта. Допускается передача только корневых атрибутов каталога\n      type: array\n      items:\n        type: integer\n      minItems: 1  \n      example:\n        - -1\n        - 4212\n        - 47296\n        - 23426\n\n    ExportHistoryItem:\n      description: Элемент истории экспортов каталога\n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор экспорта\n          type: integer\n          format: int32\n        name:\n          description: Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики. \n          type: string \n        dateStart:\n          description: Дата и время запроса экспорта\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата и время окончания экспорта\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        # userId:\n        #   description: Идентификатор пользователя, запустившего экспорт\n        #   type: integer\n        #   format: int32\n        userName:\n          description: ФИО пользователя, запустившего экспорт\n          type: string\n        countAllObj:\n          type: integer\n          description: Общее количество объектов в экспорте        \n        type:\n          $ref: '#/components/schemas/FillingExportTypeTagIdEnum'\n        fileId:\n          type: string\n          description: Идентификатор (uuid) файла экспорта в файловом хранилище          \n        status:\n          allOf:\n            - $ref: '#/components/schemas/ExportStatus'\n        hasSettings:\n          description: Указывает на применение настроек к файлу экспорта.\n          type: boolean    \n      required:\n        - id\n        - name\n        - dateStart\n        # - userId\n        - userName\n        - status\n        - type\n        - hasSettings\n\n    ExportSettings:\n      description: Настройки, применённые к экспорту\n      type: object\n      properties:\n        name:\n          description: Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты старта. Формат названия описан в вики. \n          type: string\n        type:\n          $ref: '#/components/schemas/FillingExportTypeTagIdEnum'\n        fileId:\n          type: string\n          description: Идентификатор (uuid) файла экспорта в файловом хранилище    \n        onlyRootCatalog:\n          description: Признак, что был получен экспорт только с данными корневого каталога\n          type: boolean \n        objectStatuses:\n          description: Статусы объекта, которые учитывались при формировании файла экспорта\n          type: array\n          items: \n            $ref: 'catalogObjects.yaml#/components/schemas/ObjectStatus'\n        filters:\n          description: Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.\n          type: array\n          items:\n            $ref: 'catalogObjects.yaml#/components/schemas/RootCatalogObjectListFilter'\n        sortings:\n          description: Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.\n          type: array\n          items:\n            $ref: '_common.yaml#/components/schemas/Sorting'       \n        attributes:\n          $ref: '#/components/schemas/ExportAttributesList' \n        fetchGeodata:\n          description:  |-\n            Признак, указывающий на включение в экспорт каталога заполнения геоданных объектов в заданной системе координат.\n            Доступны следующие варианты:\n              - `признак не передаётся` - объекты возвращаются без геоданных,\n              - `EPSG:4326` - геоданные объекта возвращаются в системе координат WGS84,\n              - `default` - геоданные объекта возвращаются в системе координт, заданной настройками каталога.\n          type: string\n          enum:\n            - EPSG:4326\n            - default\n      required:\n        - name\n        - type\n        - fileId\n  \n  parameters:\n    exportIdPathParam:\n      name: exportId\n      in: path\n      description: |-\n        Идентификатор экспорта.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 642\n    \n    exportSignedQueryParam:\n      name: exportSigned\n      in: query\n      description: |-\n        Признак, что необходимо экспортировать только подписанные объекты, то есть со статусами signed, deleted.\n      schema:\n        type: boolean\n        default: false\n      required: false\n      example: false\n\n    exportDeletedQueryParam:\n      name: exportDeleted\n      in: query\n      description: |-\n        Признак, что необходимо включить в экспорт удаленные объекты, то есть со статусами toDeletion, deleted, toRecovery.\n      schema:\n        type: boolean\n        default: false\n      required: false\n      example: false\n\n    exportTypeQueryParam:\n      name: type\n      in: query\n      description: |-\n        Тип экспорта\n      schema:\n        allOf:\n          - $ref: '#/components/schemas/FillingExportTypeTagIdEnum'\n        default: csv\n      required: false\n      example: csv\n\n    exportOnlyRootCatalogQueryParam:\n      name: onlyRootCatalog\n      in: query\n      description: Признак, указывающий, что необходимо произвести экспорт только основного каталога, без вложенных.\n      schema:\n        type: boolean\n        default: false\n      required: false\n      example: false   \n\n  responses:\n    ExportNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id экспорта не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id экспорта:\n              $ref: '#/components/examples/ExportNotFoundError'\n  \n  examples:\n    ExportCreatedResponse:\n      value:\n        id: 48453\n        code: 201\n        messageType: Created\n        message: Экспорт успешно запущен!\n    \n    ExportHistoryRequest:\n      description: Пример тела запроса для получения истории экспортов каталога\n      value:\n        filters:\n          - attribute: userName\n            operator: contains\n            value: Иван\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024 15:25:05\n          - attribute: type\n            operator: equals\n            value: csv\n    \n    ExportHistoryItemArrayResponse:\n      description: Пример ответа с историей экспортов каталога\n      value:\n        - id: 5451\n          name: export_long_194700_28_10_2022_13_18_13.zip\n          dateStart: 28.10.2022 13:18:13\n          dateEnd: null\n          userName: Сидоров Василий Иванович\n          countAllObj: null\n          type: csv\n          fileId: null\n          status:\n            id: 1\n            tag: inWork\n            name: В работе\n          hasSettings: true  \n        - id: 8432\n          name: export_long_194700_29_10_2022_13_43_13.zip\n          dateStart: 29.10.2022 13:43:13\n          dateEnd: 29.10.2022 13:50:54\n          userName: Сидоров Василий Петрович\n          countAllObj: 1213\n          type: csv\n          fileId: 8ea7ae93-5c1b-4ce6-95d6-c2645418e51d\n          status:\n            id: 2\n            tag: finished\n            name: Завершен\n          hasSettings: false    \n\n    ExportCancelledResponse:\n      description: Пример ответа об успешной отмене экспорта\n      value:\n        code: 200\n        messageType: Ok\n        message: Выполнение экспорта успешно отменено\n\n    ExportSettingsResponse:\n      description: Пример ответа c настройками экспорта\n      value:\n        name: export_long_194700_28_10_2022_13_18_13.zip\n        type: csv\n        fileId: e78cde18-1e28-4db8-a71a-245d8d2dfc9f\n        onlyRootCatalog: false\n        objectStatuses:\n          - id: 1\n            name: Новый\n            tagId: new\n          - id: 2\n            name: Подписанный\n            tagId: signed\n          - id: 3\n            name: На изменении\n            tagId: toModification             \n        filters:\n          - attribute: field_4212\n            operator: greaterThan\n            value: 30\n          - attribute: field_53\n            operator: notEmpty\n          - attribute: field_34\n            operator: equals\n            value: \"Иванов\"\n            childCatalogId: 1624\n        sortings:\n          - attribute: field_124\n            order:  asc\n          - attribute: globalId\n            order:  desc\n        attributes:\n          - -1\n          - 3456\n          - 87643\n        fetchGeodata: EPSG:4326\n\n    ExportIsAlreadyFinishedError:\n      description: Пример ответа при попытке отмены уже завершенного экспорта\n      value:\n        code: 400\n        messageType: Bad request\n        message: Экспорт с id {exportId} уже завершен\n\n    ExportNotFoundError:\n      description: |-\n        Указанный экспорт не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Экспорта с идентификатором {exportId} не существует.\n\n    FetchGeodataError:\n      description: |-\n        Передана необходимой геометрии для каталога, у которого отключена геопривязка.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Передана необходимость геометрии для каталога, у которого отключена геопривязка. Отключите вывод геометрии.",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с экспортами каталогов публикации\n  version: 1.0.0\n\n\npaths:\n  # публикация - xlsx, xml, csv, json\n  /publicationExports:\n    post:\n      tags:\n        - publicationExports\n      summary: Запуск экспорта каталога публикации\n      description: |-\n        Выполняет запуск экспорта по каталогу публикации. По умолчанию в файл экспорта попадают объекты со статусом: active.\n\n        В теле запроса могут передаваться фильтры, ограничивающие  выборку экспортируемых объектов,\n        а также сортировки, определяющие порядок объектов в итоговом файле.\n        При этом фильтры и сортировки не могут передаваться, если необходимо возвращать удаленные объекты.\n\n        В тело запроса также передаются атрибуты, которые включаются в итоговый файл экспорта. \n        \n        Невозможен экспорт с геоданными объектов в формате xlsx.\n        \n        Для включения в файл экспорта системных атрибутов необходимо добавить их идентификаторы в массив:\n          - дата публикации (attrId = -8);\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '#/components/parameters/exportTypeQueryParam'\n        - $ref: 'publicationObjects.yaml#/components/parameters/publicationStatusesQueryParam'\n        - $ref: 'exports.yaml#/components/parameters/exportOnlyRootCatalogQueryParam'\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataExportPublQueryParam'\n      requestBody:\n        required: false\n        description: Тело запроса с фильтрами и сортировками по списку объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  description: |-\n                    Для случая, если в запросе передаются фильтры и массив атрибутов, при этом в фильтрах указан атрибут, которого нет в массиве атрибутов, то такой фильтр должен игнорироваться и не применяться к выборке.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/PublicExportFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n                attributes:\n                  $ref: 'exports.yaml#/components/schemas/ExportAttributesList' \n            examples:\n              Пример:\n                $ref: '#/components/examples/PublicationExportRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                  $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: 'exports.yaml#/components/examples/ExportCreatedResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Переданный оператор не может быть применен для указанного атрибута (несоответствие типа);\n              - Передана отметка о необходимости экспортировать геоданные объектов для каталога, у которого отключена геопривязка; \n              - Экспорт геоданных невозможен в xlsx.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                  - $ref: '_common.yaml#/components/schemas/OutOfScopeError'\n              examples:\n                Неверный оператор:\n                  $ref: '_common.yaml#/components/examples/WrongFilterOperatorError'\n                Запрошена геометрия для каталога без геопривязки:\n                  $ref: '#/components/examples/FetchGeodataError'\n                Запрошен экспорт в недопустимом для геометрии формате:\n                  $ref: '#/components/examples/XlsxGeodataError'\n        '404':\n          description: Доступ к каталогу ограничен\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'publicationCatalogs.yaml#/components/examples/PublicationCatalogNotFoundError'\n                Отсутсвуют данные на дату:\n                  $ref: '#/components/examples/PublicCatalogDataNotFound'\n                Атрибут фильтра или сортировки не существует в каталоге:\n                  $ref: '_common.yaml#/components/examples/FilterSortingAttributeNotFoundError'\n\n  /publicationExports/history:\n    post:\n      tags:\n        - publicationExports\n      summary: Получение истории экспортов каталога публикации\n      description: |-\n        Метод позволяет получать историю экспортов публикации. Сортировка списка по умолчанию - по убыванию даты запроса экспорта (DATE_CREATED в БД).\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка историй экспортов (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами по списку экспортов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - id\n                              - userName\n                              - dateStart\n                              - dateEnd\n                              - countAllObj\n                              - statusTagId\n                              - type\n            examples:\n              Пример:\n                  $ref: 'exports.yaml#/components/examples/ExportHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'exports.yaml#/components/schemas/ExportHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/PublicExportHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /publicationExports/{exportId}/cancel:\n    get:\n      tags:\n        - publicationExports\n      summary: Отменяет выполнение экспорта\n      description: |-\n        Выполняет отмену запущенного экспорта каталога публикации.\n      parameters:\n        - $ref: 'exports.yaml#/components/parameters/exportIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: 'exports.yaml#/components/examples/ExportCancelledResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Экспорт уже завершен.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  $ref: 'exports.yaml#/components/examples/ExportIsAlreadyFinishedError'\n        '404':\n          $ref: 'exports.yaml#/components/responses/ExportNotFoundResponse'\n\n  /publicationExports/{exportId}/settings:\n    get:\n      tags:\n        - publicationExports\n      summary: Получение настроек экспорта каталога публикации\n      description: |-\n        Возвращает фильтры применённые к экспорту: фильтр по атрибутам, фильтр по статусам, сортировка\n      parameters:\n        - $ref: 'exports.yaml#/components/parameters/exportIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PublicExportSettings'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/PublicExportSettingsResponse'\n        '404':\n          $ref: 'exports.yaml#/components/responses/ExportNotFoundResponse'        \n\ncomponents:\n  \n  schemas:\n\n    PublicExportTypeTagIdEnum:\n      description: Техническое наименование типа файла экспорта     \n      type: string\n      enum:\n        - csv\n        - xlsx\n        - json\n        - xml\n\n    PublicExportFilter:\n      description: Объект расширенного фильтра для запросов с фильтрацией по столбцам таблиц\n      type: object\n      properties:\n        attribute:\n          $ref: '_common.yaml#/components/schemas/FilterSortingAttribute'\n        operator:\n          description: |-\n            Оператор фильтрации:\n              - `empty` - выводить только пустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `notEmpty` - выводить только непустые значения. Доступен для всех типов данных.\n              Для данного оператора не передаётся поле `value`.\n              - `contains` - содержит переданное значение. Является регистронезависимым. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `inEnum` - перечисление. Выводятся записи, атрибут которых имеет значение, совпадающее с одним из введенных в перечисление.\n              Сравнение не зависит от регистра строковых значений. Работает со всеми типами данных кроме типов Флаг, Файл, Таблица и Справочник.\n              Значения передаются через точку с запятой `;`.\n              - `equals` - равно переданному значению или совпадает с переданным значением (в случае сравнения строк). Является регистронезависимым. Используется для любых типов кроме типов Файл и Таблица.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `greaterThan` - больше, чем переданное значение. Используется для сравнения чисел и дат.\n              - `greaterOrEqualsThan` - больше или равно переданному значению. Используется для сравнения чисел и дат.\n              - `lessThan` - меньше, чем переданное значение. Используется для сравнения чисел и дат.\n              - `lessOrEqualsThan` - меньше или равно переданному значению. Используется для сравнения чисел и дат.\n              - `startsWith` - начинается с переданного значения. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `endsWith` - заканчивается на переданное значение. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `matchesRegexStr` - соответствует регулярному выражению, переданному в виде строки. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              - `matchesRegexId` - соответствует одному из регулярных выражений, хранящихся в системе. Используется для строковых, справочных и ссылочных атрибутов.\n              Для справочных и ссылочных атрибутов сравнение идет по атрибуту, выбранному для связи в данном каталоге.\n              В `value` передается идентификатор регулярного выражения.\n              - `inDict` - перечисление по справочнику. Выводятся записи, в значении которых выбраны все элементы справочника, что и в выбранном множестве для фильтарции. Используется для справочниых атрибутов.\n              В `value` передается список идентификаторов элементов справочника.\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/FilterOperatorTagIdEnum'\n        value:\n          description: Значение для сравнения со значением атрибута при применении оператора\n          oneOf:\n            - type: string\n            - type: integer\n            - type: number\n            - type: array\n              items:\n                type: integer\n      required:\n        - attribute\n        - operator\n      example:\n        attribute: field_4212\n        operator: 'greaterThan'\n        value: '01.02.2024 15:25:05'\n\n    PublicExportSorting:\n      description: Объект сортировки, для запросов с многоуровневой сортировкой по таблице\n      type: object\n      properties:\n        attribute:\n          description: |-\n            Техническое название атрибута (столбца), по которому производится сортировка.\n          type: string\n        order:\n          $ref: '_common.yaml#/components/schemas/SortingOrderTagIdEnum'\n      required:\n        - attribute\n        - order\n      example:\n        attribute: field_4212\n        order: desc\n\n    PublicExportHistoryItem:\n      description: Элемент истории экспортов каталога публикации\n      allOf:\n        - $ref: 'exports.yaml#/components/schemas/ExportHistoryItem'\n      type: object\n      properties:\n        systemId:\n          description: Идентификатор системы, запустившей экспорт\n          type: integer\n          format: int32\n        systemName:\n          description: Краткое наименование системы, запустившей экспорт \n          type: string\n        dataEpoch:\n          description: Дата, на которую брался срез данных каталога.\n          oneOf: \n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat' \n      required:\n        - id\n        - name\n        - dateStart\n        - status\n        - type\n        - hasSettings\n\n    PublicExportSettings:\n      description: Настройки, применённые к экспорту\n      type: object\n      properties:\n        name:\n          description: Наименование архива экспорта. Сервис формирует название экспорта на основе идентификатора каталога и даты, на которую берётся срез данных(epoch) . Формат названия описан в вики. \n          type: string\n        type:\n          $ref: '#/components/schemas/PublicExportTypeTagIdEnum'\n        fileId:\n          type: string\n          description: Идентификатор файла экспорта в файловом хранилище (uuid) \n        onlyRootCatalog:\n          description: Признак, что был получен экспорт только с данными корневого каталога\n          type: boolean \n        objectStatuses:\n          description: Статусы объектов, примененные к файлу экспорта\n          type: array\n          items: \n            $ref: 'publicationObjects.yaml#/components/schemas/PublicationObjectStatus'\n        filters:\n          description: Фильтры по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicExportFilter'\n        sortings:\n          description: Сортировки по атрибутам каталога, которые были применены к выборке объектов в файле экспорта.\n          type: array\n          items:\n            $ref: '#/components/schemas/PublicExportSorting'\n        attributes:\n          $ref: 'exports.yaml#/components/schemas/ExportAttributesList' \n        fetchGeodata:\n          description:  |-\n            Признак, указывающий на включение в экспорт каталога публикации геоданных объектов.\n            В каталоге публикации геоданные возвращаются в системе координат WGS84.\n          type: boolean\n      required:\n        - name\n        - type\n        - fileId        \n\n  parameters:\n    exportTypeQueryParam:\n      name: type\n      in: query\n      description: |-\n        Тип экспорта. По умолчанию используется тип 'csv', который инициирует добавление в очередь экспорта в формате csv.\n      schema:\n        $ref: '#/components/schemas/PublicExportTypeTagIdEnum'\n        default: csv\n      required: false\n      example: csv\n\n    exportIdsPathParam:\n      name: exportIds\n      in: path\n      description: |-\n        Список идентификаторов экспорта.\n      required: true\n      schema:\n        type: array\n        items:\n          type: integer\n          format: int32\n      example:\n        - 642\n        - 643  \n\n  examples:\n    PublicationExportRequest:\n      value:\n        filters:\n          - attribute: field_4212\n            operator: greaterThan\n            value: 30\n          - attribute: field_4212_manual\n            operator: notEmpty\n          - attribute: field_34\n            operator: equals\n            value: \"Иванов\"\n        sortings:\n          - attribute: field_124\n            order:  asc\n          - attribute: globalId\n            order:  desc\n        attributes:\n          - 124\n          - 1213\n          - 14124\n          - 14122\n          - 123124\n\n    PublicCatalogDataNotFound:\n      description: |-\n        Отсутвуют данные на запрошенную дату.\n      value:\n        code: 404\n        messageType: Data not found\n        message: >\n           Отсутвуют данные на запрошенную дату - {epoch}.   \n\n    PublicExportSettingsResponse:\n      description: Пример ответа c настройками экспорта\n      value:\n        name: data-1234-06-06-2024.zip\n        type: csv\n        fileId: 64e2d001-c589-4961-8879-230e5f48173e\n        onlyRootCatalog: true\n        objectStatuses:\n          - id: 1\n            name: Активный\n            tagId: active\n          - id: 2\n            name: Удаленный\n            tagId: deleted\n        filters:\n          - attribute: field_4212\n            operator: greaterThan\n            value: 30\n          - attribute: field_34\n            operator: notEmpty\n          - attribute: field_4212_manual\n            operator: equals\n            value: \"Иванов\"\n        sortings:\n          - attribute: field_124\n            order:  asc\n          - attribute: globalId\n            order:  desc\n        attributes:\n          - 124\n          - 1213\n          - 14124\n          - 14122\n          - 6634\n          - 945\n        fetchGeodata: false\n\n    PublicExportHistoryItemArrayResponse:\n      description: Пример ответа с историей экспортов каталога публикации\n      value:\n        - id: 5451\n          name: data-194700-28-10-2022.zip\n          dateStart: 28.10.2022 13:18:13\n          dateEnd: null\n          userName: Сидоров Василий Петрович\n          countAllObj: null\n          type: csv\n          fileId: null\n          status:\n            id: 1\n            tag: inWork\n            name: В работе\n          hasSettings: true\n        - id: 8432\n          name: data-194700-29-10-2022.zip\n          dateStart: 29.10.2022 13:43:13\n          dateEnd: 29.10.2022 13:50:54\n          userName: Сидоров Василий Петрович\n          countAllObj: 1213\n          type: csv\n          fileId: 8ea7ae93-5c1b-4ce6-95d6-c2645418e51d\n          status:\n            id: 2\n            tag: finished\n            name: Завершен\n          hasSettings: false  \n\n    FetchGeodataError:\n      description: |-\n        Передана необходимой геометрии для каталога, у которого отключена геопривязка.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Передана необходимость геометрии для каталога, у которого отключена геопривязка. Отключите вывод геометрии.\n\n    XlsxGeodataError:\n      description: |-\n        Запрошен экспорт в формате не доступным с экспортом геоданных.\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Запрошен тип файла экспорта xlsx, недопустимый с экспортом геоданных объекта. \n          Отключите вывод геометрии или измените тип файла экспорта.",
    "type": "yaml"
  },
  {
    "text": "# TODO\n# isMunaulInputGeo\nopenapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Методы внешнего REST API для работы с каталогами заполнения   \n  version: 1.0.0\n\n# Методы\npaths:  \n  # Справочники\n  # За основу GET /dictionaries\n  # Выводим только то, что доступно через каталоги\n  # Каталоги заполнения\n  # Выдаем только то, что доступно\n  /fillrest/catalogs:\n    get:\n      tags:\n      - fillrest\n      summary: Поиск по списку каталогов заполнения\n      description: |-\n        Возвращает список неудалённых каталогов, к которым у системы-потребителя есть доступ.\n        По каждому каталогу возвращается общая информация.\n\n        Метод позволяет выполнять сортировку по полям ответа. Подробнее см. параметры запроса.\n      parameters:        \n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `1000`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - fullName\n              - objectCategories\n              - thematicCategory\n              - oivs\n              - periodUpdate\n              - systemsConsumers\n              - systemsSuppliers\n              - responsiblePerson\n              - countActiveObjects\n              - countUnsignedObjects\n              - countObjects\n              - dateLastSign\n              - dateNextUpdate\n              - statusSignObjects\n              - statusSignMetadata\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. \n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. \n            Если у системы-потребителя отсутствует доступ к каким-либо каталогам, то также возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                $ref: 'catalogs.yaml#/components/schemas/FillingCatalogGeneralInfo'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/FillingCatalogGeneralInfoResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n          \n                  \n\n  # Раснширяем схему isManualInputGeo\n  /fillrest/catalogs/{catalogId}/attributes:\n    get:\n      tags:\n        - fillrest\n      summary: Получение атрибутов каталога заполнения\n      description: |-\n        Возвращает атрибутивный состава каталога заполнения для формирования запроса на сохранение, изменение данных каталога. \n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '#/components/schemas/CatalogAttribute'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogAttributesResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/FillingCatalogNotFoundResponse'\n  \n  /fillrest/catalogs/{catalogId}/count:\n    get:\n      tags:\n        - fillrest\n      summary: Получение статистики по каталогу заполнения\n      description: |-\n        Возвращает общее количество объектов, а также количество активных и количество неподписанных объектов каталога заполнения. \n      parameters:        \n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'     \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CatalogCount'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogCountResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/FillingCatalogNotFoundResponse'\n          \n  /fillrest/catalogObjects:\n    post:\n      tags:\n        - fillrest\n      summary: Сохранение объекта\n      description: |-\n        Метод используется для сохранения объекта, его изменений, а также для удаления в каталоге заполнения.\n        Дочерние объекты передаются отдельными объектами.\n        \n        Метод может принимать изменения в объекте. Если какие-то атрибуты не передаются, их значения не меняются.\n\n        Метод предусматривает запись только в один и тот же корневой каталог.\n      requestBody:\n        description: Тело запроса для сохранения объекта в каталоге\n        content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogObject'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectRequest'    \n      responses:\n        '200':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OkCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkCatalogObjectResponse'\n        '207':\n          description: |-\n            Ответ при успешной обработке запроса, при наличии ошибок для некоторых объектов.\n            Ошибки могут как относиться к бизнес-логике, так и быть техническими.\n            Для каждого объекта возвращается отдельный код ответа.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК).\n                Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/OkCatalogObjectResponse'\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/MultiStatusCatalogObjectResponse'\n        '400':\n          description: |-\n            Ответ, возвращаемый, если для всех объектов в запросе получена ошибка бизнес-логики при сохранении\n            или данные не могут сохранены, так как каталог находится в процессе подписания.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК). Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге;\n              - Каталог находится в процессе подписания;\n              - Для объектов передан разный корневой каталог;\n              - Превышено допустимое количество активных сессий поставщика.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/TooManyRequestsError'\n              examples:\n                Объекты не прошли проверку форматно-логического контроля или не найдены:\n                  $ref: '#/components/examples/IncorrectDataCatalogObjectResponse'\n                Каталог находится в процессе подписания:\n                  $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectCatalogIsSigningResponse'\n                Попытка записи в разные каталоги:\n                  $ref: 'catalogObjects.yaml#/components/examples/WriteToDifferentCatalogsResponse'\n                Превышено допустимое количество активных сессий поставщика:\n                  $ref: '#/components/examples/SessionLimitExceededError'\n                \n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n      \n  # Объекты каталогов\n  # Добавить фильтр fetchgeodata в два метода после доработок\n  /fillrest/catalogObjects/search:\n    post:\n      tags:\n        - fillrest\n      summary: Поиск по списку объектов корневого каталога\n      description: |-\n        Возвращает информацию об объектах корневого каталога, удовлетворяющих условиям поиска.\n        \n        В теле запроса передаются объекты фильтров и сортировки. Метод позволяет выполнять многоуровневую сортировку.\n        \n        Порядок сортировки определяется порядком следования объектов сортировки в теле запроса.\n        \n        По умолчанию объекты сортируются в порядке возрастания глобального идентификатора.\n        \n        Метод позволяет выполнять фильтрацию по вложенным каталогам первого уровня. Для таких фильтров передается поле `childCatalogId`.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: 'catalogObjects.yaml#/components/parameters/objectStatusesQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/globalIdsQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/signedVersionQueryParam'\n        - $ref: 'geodata.yaml#/components/parameters/FetchGeodataQueryParam'        \n      requestBody:\n        description: Пример тела запроса с фильтрами и сортировками по списку объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    $ref: 'catalogObjects.yaml#/components/schemas/RootCatalogObjectListFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n            examples:\n              Пример:\n                $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogObjects.yaml#/components/schemas/CatalogObjectListItem'\n              examples:\n                Пример:\n                  $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n        '404':\n          $ref: 'catalogObjects.yaml#/components/responses/CatalogObjectSearchNotFoundResponse'\n  \n  /fillrest/catalogObjects/child/search:\n    post:\n      tags:\n        - fillrest\n      summary: Поиск по списку объектов вложенного каталога\n      description: |-\n        Возвращает информацию об объектах вложенного каталога в привязке к родительскому объекту (передается в пути запроса).\n        \n        В теле запроса передаются объекты фильтров и сортировки. Метод позволяет выполнять многоуровневую сортировку.\n\n        Порядок сортировки определяется порядком следования объектов сортировки в теле запроса.\n        \n        По умолчанию объекты сортируются в порядке возрастания глобального идентификатора.\n      parameters:\n        - $ref: 'catalogObjects.yaml#/components/parameters/parentGlobalIdQueryParam'\n        - $ref: 'catalogObjects.yaml#/components/parameters/rootGlobalIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/parentCatalogIdQueryParam'\n        - $ref: 'catalogs.yaml#/components/parameters/rootCatalogIdQueryParam'\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых объектов (число от `1` до `500`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 500\n        - $ref: 'catalogObjects.yaml#/components/parameters/signedVersionQueryParam'\n      requestBody:\n        description: Пример тела запроса с фильтрами и сортировками по списку объектов\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    $ref: 'catalogObjects.yaml#/components/schemas/ChildCatalogObjectListFilter'\n                sortings:\n                  type: array\n                  items:\n                    $ref: '_common.yaml#/components/schemas/Sorting'\n            examples:\n              Пример:\n                $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectSearchRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'catalogObjects.yaml#/components/schemas/ChildCatalogObjectListItem'\n              examples:\n                Пример:\n                  $ref: 'catalogObjects.yaml#/components/examples/ChildCatalogObjectListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '400':\n          $ref: '_common.yaml#/components/responses/FilterBadRequestResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        #parentCatalogId\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n        '404':\n          $ref: 'catalogObjects.yaml#/components/responses/ChildCatalogObjectSearchNotFoundResponse'\n     \n  # Справочники\n    # Выводим только то, что доступно через каталоги\n  /fillrest/dictionaries:\n    get:\n      tags:\n        - fillrest\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых справочников (число от `1` до `1000`). По умолчанию `100`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      summary: Получение общей информации справочника\n      description: |-\n        Метод возвращает список справочников, связанных с каталогами, к которым у системы-потребителя есть доступ.     \n      responses:\n       '200':\n        description: Успешный ответ\n        content:\n          application/json:\n            schema:\n              type: array\n              items:\n                $ref: 'dictionaries.yaml#/components/schemas/Dictionary'\n            examples:\n              Пример:\n                $ref: 'dictionaries.yaml#/components/examples/DictionaryArrayResponse'\n       '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n       '404': \n          $ref: 'dictionaries.yaml#/components/responses/DictionaryNotFoundResponse'\n       \n    \n  # Элементы справочников\n  # Добавить ошибку в fillrest.yaml, что справочник не доступен системе\n  /fillrest/dictionaryElements:\n    get:\n      tags:\n        - fillrest\n      summary: Поиск по списку элементов справочника\n      description: |-\n        Возвращает список элементов справочника. \n        \n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск по списку и пагинацию. Подробнее см. параметры запроса.\n\n        Для фильтрации по полям `id`, `name` используется тело запроса.\n      parameters:\n        - $ref: 'dictionaries.yaml#/components/parameters/dictionaryIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов справочника (число от `1` до `500`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 500\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - $ref: 'dictionaries.yaml#/components/parameters/dictionaryElementStatusesFilterQueryParam'\n        - name: search\n          in: query\n          description: |-\n            Текстовый поисковый запрос по списку элементов справочника. Поиск производится по идентификатору и наименованию.\n            \n            Запрос со значением `123` вернет все элементы справочника, идентификатор или наименование которых содержит подстроку `123`.\n          required: false\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка. Допустимые значения: `id`, `name`.\n            \n            По умолчанию: `id`.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'dictionaries.yaml#/components/schemas/DictionaryElementListItem'\n              examples:\n                Пример:\n                  $ref: 'dictionaries.yaml#/components/examples/DictionaryElementListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/DictionaryForbiddenResponse'\n        '404':\n          $ref: 'dictionaries.yaml#/components/responses/DictionaryNotFoundResponse' \n   \n  #Сохранение с подписанием/Подписание\n  #Authorization: Bearer {token}\n  /fillrest/catalogObjectsSign:\n    post:\n      tags:\n        - fillrest\n      summary: Сохранение объекта с подписанием\n      description: |-\n        Метод используется для сохранения объекта, его изменений, а также удаления в каталоге заполнения c одновременным подписанием.\n        Дочерние объекты передаются отдельными объектами.\n        Метод может принимать только изменения в объекте. Если какие-то атрибуты не передаются, их значения не меняются.\n      requestBody:\n        description: Тело запроса для сохранения объекта в каталоге с подписанием\n        content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignedCatalogObjectData'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SignedCatalogObjectRequest'\n      responses:\n        '200':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OkCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkCatalogObjectResponseSign'\n\n        '207':\n          description: |-\n            Ответ при успешной обработке запроса, при наличии ошибок для некоторых объектов.\n            Ошибки могут как относиться к бизнес-логике, так и быть техническими.\n            Для каждого объекта возвращается отдельный код ответа.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК).\n                Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/OkCatalogObjectResponse'\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/MultiStatusCatalogObjectResponseSign'\n        '400':\n          description: |-\n            Ответ, возвращаемый, если для всех объектов в запросе получена ошибка бизнес-логики при сохранении\n            или данные не могут сохранены, так как каталог находится в процессе подписания.\n\n            ### Возможные ошибки бизнес-логики (ошибки возвращаются отдельно для каждого сохраняемого объекта в массиве):\n              - Значение атрибутов объекта не удовлетворяет свойствам атрибутов или объект не прошёл проверку, настроенную в конструкторе процессов (ошибка ФЛК). Текст ошибки выводится из настроенного в конструкторе уведомления;\n              - Корневой каталог не найден (если передан объект вложенного каталога, то он игнорируется);\n              - Корневой или вложенный объект не найден в соответствующем каталоге;\n              - В запросе должны быть объекты из одного корневого каталога;\n              - Каталог находится в процессе подписания;\n              - Невозможно распарсить сертификат/подпись;\n              - Переданные изменения не соответствуют подписи;\n              - Превышено допустимое количество активных сессий поставщика.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  anyOf:\n                    - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '_common.yaml#/components/schemas/TooManyRequestsError'\n                    \n              examples:\n                Объекты не прошли проверку форматно-логического контроля или не найдены:\n                  $ref: '#/components/examples/IncorrectDataCatalogObjectResponse'\n                В запросе должны быть объекты из одного корневого каталога:\n                  $ref: '#/components/examples/NoOneCatalogObjectResponse'\n                Каталог находится в процессе подписания:\n                  $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectCatalogIsSigningResponse'\n                Невозможно распарсить сертификат/подпись:\n                  $ref: '#/components/examples/CatalogObjectSignErrorResponse'\n                Переданные изменения не соответствуют подписи:\n                  $ref: '#/components/examples/CatalogArraySignErrorResponse'\n                Превышено допустимое количество активных сессий поставщика:\n                  $ref: '#/components/examples/SessionLimitExceededError'\n              \n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n    \n  /fillrest/catalogSign/{catalogId}:\n    post:\n      tags:\n        - fillrest\n      summary: Подписание метаданных каталога\n      description: |-\n        Подписывает метаданные каталога.\n\n        В теле запроса передается информация с подписью, с использованием ЭЦП необходимо подписать идентифкиатор каталога.\n\n        Метод также может быть использован для подтверждения отсутствия изменений в каталоге.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'  \n      requestBody:\n        description: Пример тела запроса с данными цифровой подписи\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: 'signatures.yaml#/components/schemas/DigitalSignatureInfo'\n            examples:\n              Пример:\n                $ref: 'signatures.yaml#/components/examples/DigitalSignatureInfoRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples: \n                Каталог успешно подписан:\n                  $ref: '#/components/examples/CatalogSignedResponse'\n                Изменения не внесены, каталог и его объекты были подписаны ранее:\n                  $ref: '#/components/examples/NoChangesSignResponse' \n       # - В каталоге есть записи с меткой \"Ошибка геометрии\";\n       # - В каталоге есть записи с меткой \"Перенос геометрии\";\n       # - В каталоге есть записи с меткой \"Ошибка поставщика\";\n        '400':\n          description: |-\n            Ответ, возвращаемый, если в запросе получена ошибка бизнес-логики при сохранении\n            или данные не могут сохранены, так как каталог находится в процессе подписания.\n\n            ### Возможные ошибки бизнес-логики:\n              - Подпись невалидна;\n              - Объекты каталога не подписаны;                        \n              - Каталог находится в процессе подписания или подготовки к подписанию ЭП.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Подпись невалидна:\n                  $ref: '#/components/examples/InvalidSignatureResponse'\n                Объекты каталога не подписаны:\n                  $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectNotSignResponse'\n                Каталог находится в процессе подписания:\n                  $ref: 'catalogObjects.yaml#/components/examples/CatalogObjectCatalogIsSigningResponse'\n                \n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/FillingCatalogNotFoundResponse'\n  \n  # Асинхронные методы\n  /fillrest/async/catalogObjects:\n    post:\n      tags:\n        - fillrest\n      summary: Асинхронное сохранение объекта/части объекта\n      description: |-\n        Метод используется для сохранения массива объектов, изменения, а также для удаления в каталоге заполнения в асинхронном режиме.\n        Для получения статуса обработки запроса используется метод /fillrest/async/status.\n\n        Дочерние объекты передаются отдельными объектами.\n        \n        Метод может принимать только изменения в объекте. Если какие-то атрибуты не передаются, их значения не меняются.\n      requestBody:\n        description: Тело запроса для сохранения объекта в каталоге\n        content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogObject'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectRequest'    \n      responses:\n        '201':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueueAddedMessage'                                  \n              examples:\n                Пример:\n                  $ref: '#/components/examples/QueueAddedMessageResponse'\n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'\n  \n  \n  /fillrest/async/catalogObjectsSign:\n    post:\n      tags:\n        - fillrest\n      summary: Асинхронное сохранение объекта с подписанием\n      description: |-\n        Метод используется для сохранения объекта, его изменений, а также удаления в каталоге заполнения в асинхронном режиме c одновременным подписанием.\n        \n        Дочерние объекты передаются отдельными объектами.\n        Метод может принимать только изменения в объекте. Если какие-то атрибуты не передаются, их значения не меняются.\n      requestBody:\n        description: Тело запроса для сохранения объекта в каталоге с подписанием\n        content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SignedCatalogObjectData'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SignedCatalogObjectRequest'\n      responses:\n        '201':\n          description: Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/QueueAddedMessage'                  \n              examples:\n                Пример:\n                  $ref: '#/components/examples/QueueAddedMessageResponse'\n        '400':\n          description: |-\n            Ответ, возвращаемый, если попись неверна.           \n              - Невозможно распарсить сертификат/подпись;\n              - Переданные изменения не соответствуют подписи.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'                  \n              examples:\n                Невозможно распарсить сертификат/подпись:\n                  $ref: '#/components/examples/CatalogObjectSignErrorResponse'\n                Переданные изменения не соответствуют подписи:\n                  $ref: '#/components/examples/CatalogArraySignErrorResponse'   \n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '403':\n          $ref: '#/components/responses/CatalogForbiddenResponse'       \n  \n  /fillrest/async/{queueId}/status:\n    get:\n      tags:\n        - fillrest\n      summary: Статус асинхронного запроса на сохранение объекта\n      description: |-\n        Возвращает статус ранеее отправленного запроса.\n\n        После обработки асинхронного запроса в очереди в поле `response` возвращается JSON ответа, который может содержать:\n          - Общий ответ для всего запроса (например, в случае ошибки);\n          - Ответ с обработкой сохранения по каждому объекту.\n            В таком случае в `response` возвращается массив с объектами ответов такой же, как в синхронных методах сохранения объектов.\n      parameters:\n        - name: queueId\n          in: path\n          description: Идентификатор асинхронного запроса\n          schema:\n            type: integer\n            format: int32\n          required: true\n      responses:\n        '200':\n          description: |-\n            Ответ при успешной обработке запроса.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AsyncRequestStatus'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AsyncRequestStatusResponse'\n        \n        '401':\n          $ref: '#/components/responses/UnauthorizedErrorResponse'\n        '404':\n          $ref: '#/components/responses/RequestNotFoundResponse' \n\n  /fillerst/catalogs/{catalogId}/map:\n    get:\n      tags:\n        - fillrest\n      summary: Получение настроек карты каталога заполнения\n      description: |-\n        Возвращает настройки карты.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ.\n          content:\n            application/json:\n              schema:\n                  $ref: 'catalogs.yaml#/components/schemas/FillingCatalogMap'\n              examples:\n                Пример:\n                  $ref: 'catalogs.yaml#/components/examples/FillingCatalogMapResponse'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/FillingCatalogNotFoundResponse'\n\ncomponents:\n  schemas:\n\n    CatalogObjectSignResponseActionTagIdEnum:\n      description: |-\n        Тип действия при подписании объекта, к которому относится возвращаемый ответ:\n          - `signed` - успешное подписание объекта;\n          - `error` - ошибка подписания объекта;\n          - `null` - запрос без подписания;\n      oneOf:\n        - type: string\n          enum:\n            - signed\n            - error\n            - null\n\n    OkCatalogObjectResponse:\n      allOf:\n        - $ref: 'catalogObjects.yaml#/components/schemas/OkCatalogObjectResponse'\n      properties:\n        signAction:\n          $ref: '#/components/schemas/CatalogObjectSignResponseActionTagIdEnum'\n\n    IncorrectDataCatalogObjectResponse:\n      allOf:\n        - $ref: 'catalogObjects.yaml#/components/schemas/IncorrectDataCatalogObjectResponse'\n      properties:\n        signAction:\n          $ref: '#/components/schemas/CatalogObjectSignResponseActionTagIdEnum'\n    \n    CatalogAttribute:\n      description: Атрибут каталога заполнения\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/FillingCatalogAttribute'\n      properties:\n        isManualInput:\n          description: Возможен ли ручной ввод атрибута. Описывается в блоке \"Автозаполнение\"\n          type: boolean\n      required:\n        - isManualInput\n    \n    CatalogCount:\n      description: Количество объектов каталога заполнения\n      type: object\n      properties:\n        countActiveObjects:\n          description: Количество подписанных неудаленных объектов каталога\n          type: integer\n        countDelObjects:\n          description: Количество удаленных объектов каталога\n          type: integer\n        countUnsignedObjects:\n          description: Количество неподписанных объектов каталога\n          type: integer\n        countError:\n          description: Количество объектов каталога с ошибками\n          type: integer\n        countGeoError:\n          description: Количество объектов каталогас ошибками геоданных\n          type: integer\n        \n      required:\n        - countActiveObjects\n        - countDelObjects\n        - countUnsignedObjects\n        - countError       \n        - countGeoError\n\n    \n    CommonCatalogObject:\n      # общие поля\n      description: |-\n        Объект каталога. Общие поля.\n      type: object\n      properties:\n        action:\n          allOf:\n            - $ref: 'catalogObjects.yaml#/components/schemas/CatalogObjectActionTagIdEnum'\n          writeOnly: true\n        catalogId:\n          description: Идентификатор каталога\n          type: integer\n        globalId:\n          description: Глобальный идентификатор объекта\n          type: integer\n        systemObjectId:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        data:\n          description: Массив атрибутов и их значений в рамках одного объекта \n          type: array\n          items:\n            $ref: '#/components/schemas/CatalogObjectDataItem'\n          minItems: 1\n      required:\n        - action\n        - catalogId\n        - data\n    \n    CatalogObject:\n      description:\n        Сохраняемый объект/часть объекта каталога\n      oneOf:\n        - $ref: '#/components/schemas/RootCatalogObject'\n        - $ref: '#/components/schemas/NestedCatalogObject'\n    \n    RootCatalogObject:\n      description: |-\n        Сохраняемый объект корневого каталога.\n        В зависимости от значения `action` определяется обязательность идентификаторов:\n          - `added` - **globalId** или **systemObjectId** необязательны\n          - `modified` - обязательные атрибуты - **globalId** или **systemObjectId**\n          - `deleted` - обязательные атрибуты - **globalId** или **systemObjectId**\n        \n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogObject'\n      properties:        \n        geodata: \n          $ref: 'geodata.yaml#/components/schemas/ObjectGeodata'\n               \n    NestedCatalogObject:\n      description: |-\n        Сохраняемый вложенный объект.\n        В зависимости от значения `action` определяется обязательность идентификаторов:\n         - `added` - **globalId** или **systemObjectId** необязательны, **parentGlobalId** или **parentSystemObjectId** обязательны\n         - `modified` - **globalId** или **systemObjectId** обязательны, **parentGlobalId** или **parentSystemObjectId** обязательны\n         - `deleted` - **globalId** или **systemObjectId** обязательны, **parentGlobalId** или **parentSystemObjectId** обязательны\n      allOf:\n        - $ref: '#/components/schemas/CommonCatalogObject' \n      properties:\n        parentSystemObjectId:\n          description: Идентификатор родительского объекта в системе-поставщике\n          type: string\n        parentGlobalId:\n          description: Глобальный идентификатор родительского объекта\n          type: integer          \n        parentCatalogId:\n          description: Идентификатор родительского каталога\n          type: integer\n      required:\n        - parentCatalogId\n          \n    \n    \n    CatalogObjectDataItem:\n      description: |-\n        Значение атрибута сохраняемого объекта.\n      type: object\n      properties:\n        attrId:\n          description: Идентификатор атрибута\n          type: integer\n          format: int32\n          readOnly: true\n        catalogAttrId:\n          description: Идентификатор атрибута каталога\n          type: integer\n          format: int32\n        isManualInput:\n          description: Заполнен ли атрибут с использованием ручного ввода.\n\n            `true` указывается только для тех атрибутов, которые сопоставляются со справочником в Автозаполнении.\n            Для самих автозаполняемых указывается `false` (если они не используются для сопоставления со справочником в других блоках Автозаполнение).\n          type: boolean\n        value:\n          description: |-\n            Значение атрибута.\n            Значение формируется по следующим правилам в зависимости от типа:\n              - Строка - передается значение типа string;\n              - Целое число - передается значение типа integer;\n              - Дробное число - передается значение типа number; \n              - Дата - передается значение типа string по маске\n                dd.MM.YYYY или DD.MM.YYYY HH:mm:ss\n                в зависимости от наличия метки времени в атрибуте;\n              - Флаг - передается значение типа boolean; \n              - Файл - передается значение в виде массива, содержащего объекты файла;\n              - Справочник - передается в виде массива, содержащего строки\n                со значениями атрибута справочника для связи,\n                выбранного в настройках справочного атрибута каталога (Атрибут для связи);\n              - Ссылка - передается в виде массива, содержащего строки\n                со значениями атрибута каталога для связи,\n                выбранного в настройках ссылочного атрибута каталога (Атрибут для связи);\n          oneOf:\n            - type: string\n              description: Значение атрибута типа строка\n            - type: integer\n              description: Значение атрибута типа целое число\n            - type: number\n              description: Значение атрибута типа дробное число\n            - type: string\n              description: Значение атрибута с типом дата в формате dd.MM.YYYY\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n            - type: string\n              description: Значение атрибута с типом даты со временем в формате dd.MM.YYYY hh:mm:ss\n              pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n            - type: boolean\n              description: Значение атрибута типа флаг\n            - type: array\n              items:\n                type: string\n              description: Значение атрибута типа справочник\n            - type: array\n              items:\n                type: string\n              description: Значение атрибута типа ссылка        \n            - type: array\n              items:\n                type: object\n                description: Объект файла, загружаемого в значение атрибута\n                properties:\n                  name:\n                    type: string\n                    description: Название файла\n                  extension:\n                    type: string\n                    description: Расширение файла\n                  content:\n                    type: string\n                    description: Содержимое файла, закодированное в base64\n                required:\n                  - name\n                  - extension\n                  - content\n              description: Значение атрибута типа файл \n  \n  \n    SignedCatalogObjectData:\n      description:\n        Массив объектов каталога с подписью\n      properties:\n        signatureInfo:\n          allOf:\n            - $ref: 'signatures.yaml#/components/schemas/DigitalSignatureInfo'\n            - properties:\n                unsignedHash:\n                  description: Хэш массива объектов, полученный по алгоритму ГОСТ 34.11\n        objectsData:\n          type: array\n          items:\n            $ref: '#/components/schemas/CatalogObject'\n\n    AsyncRequestStatus:\n      properties:\n        status:\n          type: string\n          enum: \n            - new\n            - inWork\n            - errorQueue\n            - errorProcessing\n            - done\n        message:\n          type: string\n          # enum:\n          #   - Ожидает обработки\n          #   - В обработке\n          #   - Ошибка отправки в очередь брокера\n          #   - Ошибка обработки\n          #   - Успешно\n        response:\n          oneOf:\n            - type: array\n              items:\n                anyOf:\n                  - $ref: '#/components/schemas/OkCatalogObjectResponse'\n                  - $ref: '#/components/schemas/IncorrectDataCatalogObjectResponse'\n            - $ref: '_common.yaml#/components/schemas/BadRequestError'\n      required:\n        - status\n        - message\n\n    QueueAddedMessage:\n      type: object\n      description: |-\n        Запрос успешно добавлен в очередь\n      allOf:\n        - $ref: '_common.yaml#/components/schemas/CreatedResponse'\n  \n     \n \n  responses:\n    DictionaryForbiddenResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Доступ к запрошенным справочникам запрещен.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/ForbiddenError'\n          examples:\n            Запрещен доступ к справочникам с указанными id:\n              $ref: '#/components/examples/DictionaryForbiddenErrorResponse'\n    \n    CatalogForbiddenResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Доступ к запрошенному каталогу запрещен.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/ForbiddenError'\n          examples:\n            Запрещен доступ к каталогу с указанными id:\n              $ref: '#/components/examples/CatalogForbiddenErrorResponse'\n    \n    UnauthorizedErrorResponse:\n      description: |-\n        - Ошибка аутентификации и/или авторизации\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/UnauthorizedError'\n          examples:\n            Неверный токен:\n              $ref: '#/components/examples/UnauthorizedErrorResponse'\n\n    \n    RequestNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id запроса не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id запроса:\n              $ref: '#/components/examples/RequestNotFoundError'\n    \n        \n  examples:\n    \n    OkCatalogObjectResponse:\n      description: Пример ответа при успешном сохранении объектов в запросе\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: added\n          responseAction: added\n          signAction: null\n\n    OkCatalogObjectResponseSign:\n      description: Пример ответа при успешном сохранении объектов в запросе с подписанием\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: added\n          responseAction: added\n          signAction: signed\n\n    MultiStatusCatalogObjectResponse:\n      description: |-\n        Пример ответа при успешной обработке запроса сохранения объектов,\n        но с ошибками бизнес-логики для некоторых объектов\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: added\n          responseAction: aded\n          signAction: null\n        - code: 400\n          messageType: Incorrect data\n          globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: modified\n          responseAction: added\n          signAction: null\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: modified\n          responseAction: added\n          signAction: null\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          responseAction: deleted\n          signAction: null\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    MultiStatusCatalogObjectResponseSign:\n      description: |-\n        Пример ответа при успешной обработке запроса сохранения объектов с подписанием,\n        но с ошибками бизнес-логики для некоторых объектов\n      value:\n        - code: 200\n          messageType: Ok\n          message: Объект успешно обработан!\n          globalId: 1234567\n          systemObjectId: 1\n          catalogId: 234967\n          requestAction: added\n          responseAction: added\n          signAction: signed\n        - code: 400\n          messageType: Incorrect data\n          globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: modified\n          responseAction: modified\n          signAction: error\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: modified\n          responseAction: added\n          signAction: error\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          responseAction: deleted\n          signAction: signed\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    CatalogObjectSignErrorResponse:\n      description: |-\n        Невозможно распарсить сертификат/подпись.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Невозможно распарсить сертификат/подпись.\n    \n    CatalogArraySignErrorResponse:\n      description: |-\n        Переданные изменения не соответствуют подписи.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Переданные изменения не соответствуют подписи.\n  \n    IncorrectDataCatalogObjectResponse:\n      description: Пример ответа c ошибками сохранения для всех объектов\n      value:\n        - globalId: 987432554\n          systemObjectId: 12\n          catalogId: 124582\n          requestAction: added\n          responseAction: added\n          signAction: error\n          code: 400\n          messageType: Incorrect data\n          message: Получены ошибки ФЛК при сохранении\n          errorInfo:\n            mismatchWithProperties:\n              - attrId: 843\n                catalogAttrId: 12345\n                catalogAttrName: Адрес\n                catalogId: 124582\n                globalId: 987432554\n                value: г. Изумрудный, ул. Жёлтая\n                text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - attrId: 856\n                catalogAttrId: 12357\n                catalogAttrName: Остановки\n                catalogId: 124583\n                parentCatalogId: 124582\n                globalId: 987432556\n                parentGlobalId: 987432554\n                value: [74213, 4845321, 658748]\n                text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n            mismatchWithConditions:\n              - packageName: UNAD обязательность\n                text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n              - packageName: Внутригородская территория\n                text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n        - code: 404\n          messageType: Resource not found\n          globalId: 987432556\n          systemObjectId: 126\n          catalogId: 1245899\n          requestAction: modified\n          responseAction: added\n          signAction: error\n          message: Каталога с идентификатором {catalogId} не существует.\n        - code: 404\n          messageType: Resource not found\n          globalId: 98743258\n          systemObjectId: 197\n          catalogId: 124586\n          requestAction: deleted\n          responseAction: deleted\n          signAction: error\n          message: Объект {globalId} не найден в каталоге {catalogId}.\n    \n    DictionaryForbiddenErrorResponse:\n      description: |-\n        Доступ к указанному справочнику запрещен.\n      value:\n        code: 403\n        messageType: Forbidden\n        message: >\n          Запрещен доступ к справочнику с идентификатором {dictionaryId}\n\n    CatalogForbiddenErrorResponse:\n      description: |-\n        Доступ к указанному каталогу запрещен.\n      value:\n        code: 403\n        messageType: Forbidden\n        message: >\n          Запрещен доступ к каталогу с идентификатором {catalogId}\n\n    SignedCatalogObjectRequest:\n      value:\n        signatureInfo:\n          unsignedHash: 43y23-d3rvre-f33rf\n          signedHash: MIINNQYJKEiVyDr16fEIw==\n          certificateObject:\n            subjectName: Test Certificate\n            issuerName: CN=Test Certificate\n            validFromDate: 16.07.2024\n            validToDate: 04.09.2024\n            serialNumber: 7C00 1596 2778 759F BB03 CAD4 E200 0800 1596 27\n            publicKey: -----BEGIN CERTIFICATE-----\\nMIIExDCCBHGgAwIBAgITfAAVlid4dZ+7A8rU4gAIABWWJzAKBggqhQMHAQEDAjCC\\nAQoxGDAWBgUqhQNkARINMTIzNDU2Nzg5MDEyMzEaMBgGCCqFAwOBAwEBEgwwMDEy\\nMzQ1Njc4OTAxLzAtBgNVBAkMJtGD0LsuINCh0YPRidGR0LLRgdC60LjQuSDQstCw\\n0Lsg0LQuIDE4MQswCQYDVQQGEwJSVTEZMBcGA1UECAwQ0LMuINCc0L7RgdC60LLQ\\nsDEVMBMGA1UEBwwM0JzQvtGB0LrQstCwMSUwIwYDVQQKDBzQntCe0J4gItCa0KDQ\\nmNCf0KLQni3Qn9Cg0J4iMTswOQYDVQQDDDLQotC10YHRgtC+0LLRi9C5INCj0KYg\\n0J7QntCeICLQmtCg0JjQn9Ci0J4t0J/QoNCeIjAeFw0yNDA3MTYwNTQ4NTZaFw0y\\nNDA5MDQwNjU5MzdaMBsxGTAXBgNVBAMMEFRlc3QgQ2VydGlmaWNhdGUwZjAfBggq\\nhQMHAQEBATATBgcqhQMCAiQABggqhQMHAQECAgNDAARAEZM0GlDavpYtmRJrBrie\\nSaS2QgXrfZZ3Q3M7J/pVi3uCDQTcONJ7ive7fzKteS0TmHCBQTP7aJ2eYWphcsFo\\nJaOCApQwggKQMA4GA1UdDwEB/wQEAwIE8DAdBgNVHQ4EFgQUUEoNjJMeliu/ETLU\\nzKJPHTiJ33swHwYDVR0jBBgwFoAUPVcCzyBjB3igkd/Ork+Av9drm88wggEPBgNV\\nHR8EggEGMIIBAjCB/6CB/KCB+YaBtWh0dHA6Ly90ZXN0Z29zdDIwMTIuY3J5cHRv\\ncHJvLnJ1L0NlcnRFbnJvbGwvITA0MjIhMDQzNSEwNDQxITA0NDIhMDQzZSEwNDMy\\nITA0NGIhMDQzOSUyMCEwNDIzITA0MjYlMjAhMDQxZSEwNDFlITA0MWUlMjAhMDAy\\nMiEwNDFhITA0MjAhMDQxOCEwNDFmITA0MjIhMDQxZS0hMDQxZiEwNDIwITA0MWUh\\nMDAyMig4KS5jcmyGP2h0dHA6Ly90ZXN0Z29zdDIwMTIuY3J5cHRvcHJvLnJ1L0Nl\\ncnRFbnJvbGwvdGVzdGdvc3QyMDEyKDgpLmNybDCCASkGCCsGAQUFBwEBBIIBGzCC\\nARcwPwYIKwYBBQUHMAGGM2h0dHA6Ly90ZXN0Z29zdDIwMTIuY3J5cHRvcHJvLnJ1\\nL29jc3AyMDEyZy9vY3NwLnNyZjBBBggrBgEFBQcwAYY1aHR0cDovL3Rlc3Rnb3N0\\nMjAxMi5jcnlwdG9wcm8ucnUvb2NzcDIwMTJnc3Qvb2NzcC5zcmYwSwYIKwYBBQUH\\nMAKGP2h0dHA6Ly90ZXN0Z29zdDIwMTIuY3J5cHRvcHJvLnJ1L0NlcnRFbnJvbGwv\\ndGVzdGdvc3QyMDEyKDgpLmNydDBEBggrBgEFBQcwAoY4aHR0cDovL3Rlc3Rnb3N0\\nMjAxMi5jcnlwdG9wcm8ucnUvQ2VydEVucm9sbC90ZXN0cm9vdC5wN2IwCgYIKoUD\\nBwEBAwIDQQBYTHvwq4yJ9Nx1wxAYzenXGj+g2nVxBHEjNwQ7stsEAzzoG072dJcK\\nHEexKNo18f3NeXCMJWgbvmhbXziPla5v\\n-----END CERTIFICATE-----\n        objectsData:\n          - catalogId: 8432\n            action: modified\n            globalId: 1249763289 \n            systemObjectId: object_7236\n            data: \n              - catalogAttrId: 222\n                value: Петров\n                isManualInput: true\n              - catalogAttrId: 227\n                value: 33\n                isManualInput: false\n              - catalogAttrId: 438\n                value: \"10.10.1980\"\n                isManualInput: false\n              - catalogAttrId: 386\n                value: true\n                isManualInput: false\n              - catalogAttrId: 389\n                value:\n                  - Понедельник\n                  - Вторник\n                isManualInput: false\n              - catalogAttrId: 482\n                value:\n                  - 1983723\n                  - 1386430\n                isManualInput: false\n              - catalogAttrId: 496\n                value:\n                  - 1\n                  - 3\n                isManualInput: false\n              - catalogAttrId: 327\n                value:\n                - name: \"Файл 1\"\n                  extension: \"docx\"\n                  content: \"ZXJnd2Vyd3Rod3J0aGVydGhl\"\n                - name: \"File\"\n                  extension: \"pdf\"\n                  content: \"ZGFmZ3NkYWdzZGdhc2Rn\"\n                isManualInput: false\n            geodata:            \n              type: feature\n              properties: \n                srs: EPSG:4326\n                isManualInput: true\n              geometry:\n                type: GeometryCollection\n                geometries:\n                  value:\n                    - coordinates:                   \n                      - 37.48264616864711,55.88373558940018\n                      type: Point\n                    - coordinates:                                                                      \n                        - \n                          - 6260.07010778\n                          - 15862.06985372                                        \n                        - \n                          - 6259.44001736\n                          - 15865.4903631\n                        - \n                          - 6268.25009624\n                          - 15867.19995669\n                        - \n                          - 6270.11001739\n                          - 15867.56036315\n                        - \n                          - 6270.74971739\n                          - 15863.97176307\n                        - \n                          - 6271.81001739\n                          - 15864.16036307\n                        - \n                          - 6272.02001739\n                          - 15862.96036304\n                        - \n                          - 6266.51001738\n                          - 15861.98036302\n                        - \n                          - 6266.35711738\n                          - 15862.85396303\n                        - \n                          - 6264.97681738\n                          - 15862.60556304\n                        - \n                          - 6260.07010778\n                          - 15862.06985372\n                      type: MultiPolygon\n\n          - catalogId: 9875\n            action: modified\n            globalId: 4567763291 \n            systemObjectId: object_7238\n            data: \n              - catalogAttrId: 222\n                value: Петров\n                isManualInput: true\n              - catalogAttrId: 227\n                value: 33\n                isManualInput: false\n              - catalogAttrId: 438\n                value: \"10.10.1980\"\n                isManualInput: false\n              - catalogAttrId: 386\n                value: true\n                isManualInput: false\n              - catalogAttrId: 389\n                value:\n                  - Понедельник\n                  - Вторник\n                isManualInput: false\n              - catalogAttrId: 482\n                value:\n                  - 1983723\n                  - 1386430\n                isManualInput: false\n              - catalogAttrId: 496\n                value:\n                  - 1\n                  - 3\n                isManualInput: false\n                 \n    CatalogObjectRequest:\n      value:\n        - catalogId: 8432\n          action: modified\n          globalId: 1249763289 \n          systemObjectId: object_7236\n          data: \n            - catalogAttrId: 222\n              value: Петров\n              isManualInput: true\n            - catalogAttrId: 227\n              value: 33\n              isManualInput: false\n            - catalogAttrId: 438\n              value: \"10.10.1980\"\n              isManualInput: false\n            - catalogAttrId: 386\n              value: true\n              isManualInput: false\n            - catalogAttrId: 389\n              value:\n                - Понедельник\n                - Вторник\n              isManualInput: false\n            - catalogAttrId: 482\n              value:\n                - 1983723\n                - 1386430\n              isManualInput: false\n            - catalogAttrId: 496\n              value:\n                - 1\n                - 3\n              isManualInput: false\n            - catalogAttrId: 327\n              value:\n                - name: \"Файл 1\"\n                  extension: \"docx\"\n                  content: \"ZXJnd2Vyd3Rod3J0aGVydGhl\"\n                - name: \"File\"\n                  extension: \"pdf\"\n                  content: \"ZGFmZ3NkYWdzZGdhc2Rn\"\n              isManualInput: false\n          geodata:            \n            type: feature\n            properties: \n              srs: EPSG:4326\n              isManualInput: true\n            geometry:\n              type: GeometryCollection\n              geometries:\n                value:\n                  - coordinates:                   \n                    - 37.48264616864711,55.88373558940018\n                    type: Point\n                  - coordinates:                                                                      \n                      - \n                        - 6260.07010778\n                        - 15862.06985372                                        \n                      - \n                        - 6259.44001736\n                        - 15865.4903631\n                      - \n                        - 6268.25009624\n                        - 15867.19995669\n                      - \n                        - 6270.11001739\n                        - 15867.56036315\n                      - \n                        - 6270.74971739\n                        - 15863.97176307\n                      - \n                        - 6271.81001739\n                        - 15864.16036307\n                      - \n                        - 6272.02001739\n                        - 15862.96036304\n                      - \n                        - 6266.51001738\n                        - 15861.98036302\n                      - \n                        - 6266.35711738\n                        - 15862.85396303\n                      - \n                        - 6264.97681738\n                        - 15862.60556304\n                      - \n                        - 6260.07010778\n                        - 15862.06985372\n                    type: MultiPolygon\n    \n    BadRequestError:\n      value: \n        - id:\n            493948049898\n        - code:\n            400\n        - messageType:\n            Missing request body fields \n        - message:\n            В теле запроса отсутствуют обязательное поле {fieldName}\n     \n    \n    RequestNotFoundError:\n      description: |-\n        Указанный запрос не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: >\n          Запрос с идентификатором {queueId} не существует.\n    \n\n    SessionLimitExceededError:\n      description: |-\n        Превышено количество допустимых сессий для поставщика.\n      value:\n        code: 400\n        messageType: Too many requests\n        message: >\n          Превышен лимит активных сессий для поставщика. Дождитесь обработки предыдущих запросов\n          \n    CatalogAttributesResponse:\n      value:\n        - attribute: \n            id: 1\n            techName: name\n            rusName: Наименование\n            enName: Name\n            type: \n              id: 1\n              name: Строка\n              typeTag: string      \n            description: Имя\n          catalogAttrId: 190    \n          selectedAlterNameId: null\n          order: 1\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          maxLength: 4000\n          fieldMask: null\n          fieldRegexId: null\n          fieldRegex: \n            id: 9076\n            name: Имя человека\n            value: ^[А-Яа-я]+[ А-Яа-я]*$\n          defaultValue: Иван\n          searchIndex: \n            - id: 1\n              name: Тестовая организация\n        - attribute: \n            id: 34\n            techName: age\n            rusName: Возраст\n            enName: Age\n            type: \n              id: 9\n              name: Целое число\n              typeTag: integer\n            description: Возраст\n          catalogAttrId: 191  \n          selectedAlterNameId: null\n          order: 2\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: createObj\n          oiv: \n            - id: 1\n              name: \n          defaultValue: 18\n          maxLength: 3\n          isPositiveValues: true\n        - attribute: \n            id: 98\n            techName: price\n            rusName: Цена\n            enName: Price\n            type: \n              id: 9\n              name: Дробное число\n              typeTag: float\n            description: Цена\n          catalogAttrId: 192  \n          selectedAlterNameId: null\n          order: 3\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          defaultValue: 99,99\n          maxLength: 50\n          isPositiveValues: true\n          fieldRegexId: null\n          fieldRegex: null\n          maxLengthDecimal: 2\n        - attribute: \n            id: 198\n            techName: birthday\n            rusName: Дата рождения\n            enName: Birthday\n            type: \n              id: 3\n              name: Дата\n              typeTag: date\n            description: Дата рождения\n            alterNames:\n            - id: 12\n              rusAlterName: День рождения\n              enAlterName: Birthday\n          catalogAttrId: 193    \n          selectedAlterNameId: 12\n          order: 4\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          defaultValue: null\n          isTime: true\n        - attribute: \n            id: 54\n            techName: goodman\n            rusName: Хороший человек\n            enName: Good man\n            type: \n              id: 7\n              name: Флаг\n              typeTag: boolean\n            description: Признак, что человек хороший\n          catalogAttrId: 194  \n          selectedAlterNameId: null\n          order: 5\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: createObj\n          oiv:   \n            - id: 1\n              name: Тестовая организация\n          defaultValue: true\n        - attribute: \n            id: 84325\n            techName: photo\n            rusName: Фото\n            enName: Photo\n            type: \n              id: 6\n              name: Файл\n              typeTag: file\n            description: Фото\n          catalogAttrId: 196  \n          selectedAlterNameId: null\n          order: 6\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          isMultiple: true\n        - attribute: \n            id: 3892\n            techName: characteristic\n            rusName: Характеристика\n            enName: Characteristic\n            type: \n              id: 4\n              name: Справочник\n              typeTag: dict\n            description: null\n            dictionary:\n              id: 123\n              name: Характеристики человека\n              parentId: 122\n          catalogAttrId: 197      \n          selectedAlterNameId: null\n          order: 7\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          dictId: 15\n          maxCntElement: 1\n          minCntElement: 10\n          parentDictAttrId: null\n          refColDict: null\n          defaultColDict:\n            techName: NAME\n            rusName: Наименование\n          sort: asc\n          isMultiple: true\n        - attribute: \n            id: 348\n            techName: friend\n            rusName: Друг\n            enName: Friend\n            type: \n              id: 8\n              name: Ссылка на объект\n              typeTag: link\n            description: null\n          catalogAttrId: 198  \n          selectedAlterNameId: null\n          order: 8\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          refCatalog: \n            id: 194700\n            name: Персоны\n          refAttr: \n            id: 1\n            name: Наменование\n          maxCntElement: 3\n          minCntElement: 1       \n          isMultiple: true\n          isRefUnsignedObj: true\n        - attribute: \n            id: 10\n            techName: education\n            rusName: Образование\n            enName: Education\n            type: \n              id: 5\n              name: Таблица\n              typeTag: table\n            description: null\n          catalogAttrId: 199  \n          selectedAlterNameId: null\n          order: 9\n          isReq: true\n          isUniq: true\n          isMain: false\n          isBanEdit: true\n          isSystemModify: true\n          isManualInput: false\n          objOperatingMode: updateObj\n          oiv: \n            - id: 1\n              name: Тестовая организация\n          maxCntElement: 10\n          minCntElement: 0\n          childCatalogUniqAttrIds: [1]\n          childCatalogId: 194701\n          attributes: \n            - attribute: \n                id: 12\n                techName: institution\n                rusName: Учебное заведение\n                enName: Institution\n                type: \n                  id: 1\n                  name: Строка\n                  typeTag: string      \n                description: Имя  \n              selectedAlterNameId: null\n              catalogAttrId: 201\n              order: 1\n              isReq: true\n              isUniq: true\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              isManualInput: false\n              objOperatingMode: updateObj\n              oiv: \n                - id: 1\n                  name: Тестовая организация\n              maxLength: 4000\n              fieldMask: null\n              fieldRegexId: null\n              fieldRegex: null\n              defaultValue: null\n              searchIndex: null\n\n    UnauthorizedErrorResponse:\n      description: |-\n        Неверный токен.\n      value:\n        code: 401\n        messageType: Unauthorized\n        message: >\n          Ошибка авторизации. Передан неверный токен.\n\n    CatalogSignedResponse:\n      description: Пример ответа при успешном подписании каталога\n      value:\n        code: 200\n        messageType: Ok\n        message: Метаданные успешно подписаны.\n    \n    NoChangesSignResponse:\n      description: Пример ответа при отсутствии изменений, т.к. каталог был подписан ранее\n      value:\n        code: 200\n        messageType: Ok\n        message: Изменения не внесены, каталог и его объекты были подписаны ранее.\n\n    CatalogCountResponse:\n      value:\n        countActiveObjects: 1160\n        countDelObjects: 12\n        countUnsignedObjects: 256\n        countError: 0      \n        countGeoError: 0        \n    \n    QueueAddedMessageResponse:\n      value: \n        id: 2349880998\n        code: 201\n        messageType: Created\n        message: Запрос успешно добавлен в очередь\n        \n    AsyncRequestStatusResponse:\n      value: \n        status: done          \n        message: Успешно          \n        response:\n          - code: 200\n            messageType: Ok\n            message: Объект успешно обработан!\n            globalId: 1234567\n            systemObjectId: 1\n            catalogId: 234967\n            requestAction: added\n            responseAction: added\n            signAction: signed\n          - code: 400\n            messageType: Bad request\n            globalId: 987432554\n            systemObjectId: 12\n            catalogId: 124582\n            requestAction: modified\n            responseAction: modified\n            signAction: error\n            message: Получены ошибки ФЛК при сохранении\n            errorInfo:\n              mismatchWithProperties:\n                - attrId: 843\n                  catalogAttrId: 12345\n                  catalogAttrName: Адрес\n                  catalogId: 124582\n                  globalId: 987432554\n                  value: г. Изумрудный, ул. Жёлтая\n                  text: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n                - attrId: 856\n                  catalogAttrId: 12357\n                  catalogAttrName: Остановки\n                  catalogId: 124583\n                  parentCatalogId: 124582\n                  globalId: 987432556\n                  parentGlobalId: 987432554\n                  value: [74213, 4845321, 658748]\n                  text: Превышено максимально допустимое количество элементов справочного атрибута. Максимальное количество = 2.\n              mismatchWithConditions:\n                - packageName: UNAD обязательность\n                  text: \"Атрибут UNAD обязателен для заполнения в случае, если атрибут «OBJ_TYPE» принимает одно из следующих справочных значений: «здание», «сооружение», «владение», «домовладение».\"\n                - packageName: Внутригородская территория\n                  text: \"В случае если атрибут «DISTRICT» не пустой, то значение атрибута «Внутригородская территория» образуется посредством конкатенации словосочетания «внутригородская территория» с одиночным символом «пробел» и значением атрибута «DISTRICT».\"\n          - code: 404\n            messageType: Resource not found\n            globalId: 987432556\n            systemObjectId: 126\n            catalogId: 1245899\n            requestAction: modified\n            responseAction: added\n            signAction: error\n            message: Каталога с идентификатором {catalogId} не существует.\n          - code: 404\n            messageType: Resource not found\n            globalId: 98743258\n            systemObjectId: 197\n            catalogId: 124586\n            requestAction: deleted\n            responseAction: deleted\n            signAction: error\n            message: Объект {globalId} не найден в каталоге {catalogId}.\n\n    NoOneCatalogObjectResponse:\n      description: |-\n        В запросе должны быть объекты из одного корневого каталога\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          В запросе должны быть объекты из одного корневого каталога \n        \n    InvalidSignatureResponse:\n      description: |-\n        Подпись невалидна\n      value:\n        code: 400\n        messageType: Bad request\n        message: >\n          Не удалось подтвердить подлинность сертификата \n   ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов внешнего REST API для работы с каталогами публикации\n  version: 1.0.0\n\n# Методы\npaths:\n  /publrest/catalog/list:\n    post:\n      tags:\n      - publrest\n      summary: Запрос спецификации каталогов публикации\n      description: |-\n        Возвращает спецификацию каталога публикации, доступные системе-потребителю.\n        В ответе выводится информация о каталоге, атрибутах и системных атрибутах каталога публикации.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogListRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogListRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CatalogListResponse'\n              examples:\n                Успешный ответ:\n                  $ref: '#/components/examples/CatalogListResponse'\n\n  /publrest/catalog/get:\n    post:\n      tags:\n      - publrest\n      summary: Запрос содержимого каталога публикации\n      description: |-\n        Возвращает содержимое каталога публикации по указанным параметрам.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogGetRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGetRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n            Если в теле запроса есть параметр paging=true, то возвращается объект CatalogGetResponsePaging\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/CatalogGetResponse'\n                  - $ref: '#/components/schemas/CatalogGetResponsePaging'\n              examples:\n                Пример, если нет параметра `paging` в запросе:\n                    $ref: '#/components/examples/CatalogGetResponse'\n                Пример, если в запросе есть параметр `paging=true`:\n                    $ref: '#/components/examples/CatalogGetResponsePaging'\n                Пример, если в запросе есть параметр `fetchGeodata =true`:\n                    $ref: '#/components/examples/CatalogGetResponseFetchGeodata'\n\n  /publrest/catalog/get/features:\n    post:\n      tags:\n      - publrest\n      summary: Запрос содержимого каталога публикации в формате GeoJSON\n      description: |-\n        Возвращает содержимое каталога публикации по указанным параметрам в формате GeoJSON.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogGetRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogGetFeaturesRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `features`.\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/CatalogGetFeaturesResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogGetFeaturesResponse'\n\n  /publrest/catalog/changes:\n    post:\n      tags:\n      - publrest\n      summary: Получение измененных объектов в каталоге\n      description: |-\n        Возвращает последние версии объектов, удовлетворяющих запросу.\n        Формат выводных данных аналогичен методу /publrest/catalog/get\n        Если в теле запроса есть параметр paging=true, то возвращается объект CatalogChangesResponsePaging.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogChangesRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogChangesRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: '#/components/schemas/CatalogChangesResponse'\n                  - $ref: '#/components/schemas/CatalogChangesResponsePaging'\n              examples:\n                Пример, если нет параметра `paging` в запросе:\n                    $ref: '#/components/examples/CatalogGetResponse'\n                Пример, если в запросе есть параметр `paging=true`:\n                    $ref: '#/components/examples/CatalogGetResponsePaging'\n\n  /publrest/object/changes:\n    post:\n      tags:\n      - publrest\n      summary: Получение изменений объекта\n      description: |-\n        Возвращает все версии объекта, удовлетворяющего запросу.\n        Формат выводных данных аналогичен методу /publrest/catalog/get.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogObjectChangesRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogObjectChangesRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/CatalogObjectChangesResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogObjectChangesResponse'\n\n  /publrest/catalog/count:\n    post:\n      tags:\n      - publrest\n      summary: Запрос количества элементов в каталоге\n      description: |-\n        Возвращает количество элементов в каталоге, удовлетворяющих запросу.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogCountRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogCountRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается значение `0`.\n          content:\n            application/json:\n              schema:\n                  $ref: '#/components/schemas/CatalogCountResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogCountResponse'\n\n  /publrest/catalog/aggregate:\n    post:\n      tags:\n      - publrest\n      summary: Выполнение агрегирующего запроса\n      description: |-\n        Метод возвращает результат агрегирующего запроса.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogAggregateRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/CatalogAggregateRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CatalogAggregateResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/CatalogAggregateResponse'\n\n  /publrest/dictionary/get:\n    post:\n      tags:\n      - publrest\n      summary: Запрос содержимого справочников\n      description: |-\n        Возвращает список элементов справочника.\n        Метод позволяет выполнять пагинацию и накладывать ограничение на количество возвращаемых элементов справочника.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: '#/components/schemas/DictionaryGetRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/DictionaryGetRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DictionaryGetResponse'\n              examples:\n                Прмиер:\n                  $ref: '#/components/examples/DictionaryGetResponse'\n\n  /publrest/MEDIA/getFile:\n    get:\n      tags:\n        - publrest\n      summary: Скачивание файла\n      description: |-\n        Метод используется для скачивания файла по идентификатору.\n      parameters:\n        - $ref: '#/components/parameters/fileUuidQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/octet-stream:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n        '404':\n          $ref: '#/components/responses/FileNotFoundResponse'\n\n  /publrest/MEDIA/showFile:\n    get:\n      tags:\n        - publrest\n      summary: Отображение изображения, вложенного в объект\n      description: |-\n        Метод используется для отображения изображения в браузере.\n        Для управления размером используется `thumbnail` (указывается если необходимо отобразить изображение в уменьшенном виде).\n      parameters:\n        - $ref: '#/components/parameters/fileUuidQueryParam'\n        - name: size\n          in: query\n          description: Указать `thumbnail` если изображение в уменьшенном виде\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            image/jpg:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n        '404':\n          $ref: '#/components/responses/FileNotFoundResponse'\n\n  /publrest/catalog/export:\n    post:\n      tags:\n      - publrest\n      summary: Запрос на формирование файла экспорта с содержимым каталога\n      description: |-\n        Метод запускает формирование файла экспорта содержимого каталога в форматах: XLSX, JSON, XML, CSV.\n        Также метод позволяет узнать статус формирования файла экспорта.\n      parameters:\n        - $ref: '#/components/parameters/ehdSystemHeaderParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CatalogExportRequest'\n            examples:\n              Пример запроса на экспорт:\n                  $ref: '#/components/examples/CatalogExportRequest'\n              Пример запроса статуса экспорта:\n                  $ref: '#/components/examples/CatalogExportStatusRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CatalogExportResponse'\n              examples:\n                Пример ответа на запрос экспорта:\n                  $ref: '#/components/examples/CatalogExportResponse'\n                Пример ответа на запрос статуса:\n                  $ref: '#/components/examples/CatalogExportStatusResponse'\n\n  /publrest/catalog/export/get:\n    get:\n      tags:\n        - publrest\n      summary: Скачивание файла экспорта\n      description: |-\n        Метод используется для скачивания файла экспорта каталога публикации по идентификатору.\n      parameters:\n        - $ref: '#/components/parameters/FileIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/octet-stream:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n        '404':\n          $ref: '#/components/responses/ExportFileNotFoundResponse'\n\n\ncomponents:\n\n  schemas:\n\n    ResponseStatusIdEnum:\n      description: |-\n        Код статуса ответа:\n          - `0` - Успешный ответ;\n          - `1` - Некорректный метод;\n          - `2` - Ошибка синтаксиса;\n          - `3` - Каталог не найден;\n          - `4` - Нет доступа к каталогу\n          - `5` - Ошибка указания системы;\n          - `6` - Указанный каталог на проверке;\n          - `7` - Указанный каталог не опубликован;\n          - `8` - Ошибка ввода данных системы. Данная система неактивна;\n          - `9` - Ошибка введенных данных. Отсутствуют данные для сущности с указанным идентификатором;\n          - `999` - Необработанная ошибка;\n      oneOf:\n        - type: integer\n          enum:\n            - 0\n            - 1\n            - 2\n            - 3\n            - 4\n            - 5\n            - 6\n            - 7\n            - 8\n            - 9\n            - 999\n\n    ResponseStatusNameEnum:\n      description: Наименование статуса ответа.\n      oneOf:\n        - type: string\n          enum:\n            - Success.\n            - Invalid method input.\n            - Query syntax error.\n            - Catalog not found.\n            - Unknown user system. У данной системы нет доступа к этому каталогу!\n            - Access denied.\n            - Catalog is currently ON CHECK and and not available.\n            - Catalog is currently NOT PUBLISHED and not available.\n            - System is not active. Данная система неактивна.\n            - There is not data for the entity with the specified ID. Отсутствуют данные для сущности с указанным идентификатором.\n            - An unhandled error occurred while executing the request.\n\n    CommonResponseInfo:\n      description: Общая часть ответа для методов rest api публикации (параметры status, message, response).\n      properties:\n        status:\n          description: Статус выполнения запроса.\n          $ref: '#/components/schemas/ResponseStatusIdEnum'\n        message:\n          description: Сообщение при возникновении ошибок.\n          $ref: '#/components/schemas/ResponseStatusNameEnum'\n        response:\n          description: |-\n            Основная часть ответа по методу.\n      required:\n        - status\n        - message\n        - response\n\n    CommonFoundReturnedResponseInfo:\n      description: |-\n        Общая часть ответа для методов rest api публикации (параметры found, returned).\n      properties:\n        found:\n          description: Общее количество найденных элементов соответствующих условиям запроса (без учёта offset и limit).\n          type: integer\n          format: int32\n        returned:\n          description: Количество элементов в ответе с учетом ограничивающих параметров (offset и limit).\n          type: string\n      required:\n        - found\n        - returned\n\n    CommonFiltersValidDateResponseInfo:\n      description: Общая часть ответа для методов rest api публикации (параметры filters, validDate).\n      properties:\n        filters:\n          description: Всегда пустой\n          type: object\n        validDate:\n          description: Всегда пустой\n          type: array\n          items:\n            type: string\n      required:\n        - filters\n        - validDate\n\n    CatalogListRequest:\n      description: Схема запроса для метода /publrest/catalog/list (запрос спецификации каталогов публикации).\n      type: object\n      properties:\n        id:\n          description: Массив идентификатаров каталогов публикации\n          type: array\n          items:\n            type: integer\n        epoch:\n          description: |-\n            Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\n            Формат даты - YYYY-MM-DD\n          type: string\n        timestamp:\n          description: |-\n            Определяет формат даты в параметре 'epoch'.\n              - `0` - формат YYYY-MM-DD;\n              - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n          default: 0\n        offset:\n          description: |-\n            Смещение окна выдачи.\n            Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n            По умолчанию `0`.\n          type: integer\n          format: int32\n          default: 0\n          minimum: 0\n        limit:\n          description: |-\n            Допустимое количество объектов в ответе.\n          type: integer\n          format: int32\n          minimum: 1\n        projection:\n          description: |-\n            Определяет поля отображаемые в ответе.\n          type: object\n          properties:\n            root:\n              description: |-\n                Массив строк с наименованиями полей, относящихся к общей информации каталога публикации.\n                Если необходимо выводить информацию об атрибутах каталога (массив `fields`), то `fields` необходимо прописать в параметр `root`.\n              type: array\n              items:\n                type: string\n                enum:\n                  - id\n                  - name\n                  - nameEn\n                  - technicalName\n                  - shortName\n                  - shortNameEn\n                  - accountingObject\n                  - accountingObjectEn\n                  - keywords\n                  - keywordsEn\n                  - kind\n                  - type\n                  - period\n                  - hasGeo\n                  - categories\n                  - categoriesEn\n                  - layerId\n                  - OIVs\n                  - oiv\n                  - oivEn\n                  - oivList\n                  - rn\n                  - cnt\n                  - archive\n                  - hasEnVersion\n                  - description\n                  - descriptionEn\n                  - defaultSort\n                  - systems\n                  - fieldsEa\n                  - nameVariants\n                  - systemFields\n                  - version\n                  - permittedSystems\n                  - catalog_status_id\n                  - details_opod\n                  - responsiblePerson\n                  - fields\n            fields:\n              description: Массив строк с наименованиями полей, относящихся к информации об атрибутах каталога публикации.\n              type: array\n              items:\n                type: string\n                enum:\n                  - id\n                  - name\n                  - enName\n                  - techName\n                  - columnId\n                  - type\n                  - typeName\n                  - isPk\n                  - maxLength\n                  - dictionaryId\n                  - dictColTehName\n                  - catalogId\n                  - isArray\n                  - groupName\n                  - rown\n                  - systemField\n                  - systems\n                  - order\n                  - permittedSystems\n                  - permittedSystemNames\n                  - isDefaultSystems\n                  - hasTranslation\n                  - isDefaultVision\n                  - system\n                  - specification\n      required:\n      - id\n\n    CatalogListResponse:\n      description: Схема ответа для метода /publrest/catalog/list (спецификация каталога публикации).\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: array\n              items:\n                $ref: '#/components/schemas/CatalogSpecification'\n        - $ref: '#/components/schemas/CommonFoundReturnedResponseInfo'\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    CoordinateXYForGeo:\n      description: Координата [x,y]\n      type: array\n      minItems: 2\n      maxItems: 2\n      items:\n        type: number\n\n    GeoJsonPoint:\n      description: Описание типа объекта \"Point\" (\"Точка\").\n      type: object\n      properties:\n        coordinates:\n          $ref: '#/components/schemas/CoordinateXYForGeo'\n        type:\n          description: |-\n            Тип геометрии\n          type: string\n          enum:\n            - Point\n\n    GeoJsonMultiPoint:\n      description: Описание типа объекта \"MulyiPoint\" (\"МультиТочка\").\n      type: object\n      properties:\n        coordinates:\n          type: array\n          items:\n             $ref: '#/components/schemas/CoordinateXYForGeo'\n        type:\n          description: |-\n            Тип геометрии\n          type: string\n          enum:\n            - MulyiPoint\n\n    GeoJsonPolygon:\n      description: Описание типа объекта \"Polygon\" (\"Полигон\").\n      type: object\n      properties:\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/CoordinateXYForGeo'\n        type:\n          description: Тип геометрии\n          type: string\n          enum:\n            - Polygon\n\n    GeoJsonMultiPolygon:\n      description: Описание типа объекта \"MultiPolygon\" (\"Мультиполигон\").\n      type: object\n      properties:\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              type: array\n              items:\n                $ref: '#/components/schemas/CoordinateXYForGeo'\n        type:\n          description: Тип геометрии\n          type: string\n          enum:\n            - MultiPolygon\n\n    GeoJsonMultiLineString:\n      description: Описание типа объекта \"MultiLineString\" (\"Мультилиния\"). Используется также для типа объекта \"Линия\".\n      type: object\n      properties:\n        coordinates:\n          type: array\n          items:\n            type: array\n            items:\n              $ref: '#/components/schemas/CoordinateXYForGeo'\n        type:\n          description: Тип геометрии\n          type: string\n          enum:\n            - MultiLineString\n\n    CatalogGetRequest:\n      description: Схема запроса для метода /publrest/catalog/get (запрос содержимого каталога публикации).\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        criteria:\n          description: |-\n            Условие для выборка элементов набора данных на языке запросов к ЕХД.\n            Для параметра geoData используются функциях near и inside\n          type: string\n        epoch:\n          description: |-\n            Дата, на которую структура данных была актуальна.\n            Формат даты по умолчанию - YYYY-MM-DD.\n            По умолчанию - текущая дата.\n          type: string\n        timestamp:\n          description: |-\n            Определяет формат даты в параметре 'epoch'.\n              - `0` - формат YYYY-MM-DD;\n              - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n          default: 0\n        offset:\n          description: |-\n            Смещение окна выдачи.\n            Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n            По умолчанию `0`.\n          type: integer\n          format: int32\n          default: 0\n          minimum: 0\n        limit:\n          description: |-\n            Допустимое количество объектов в ответе.\n          type: integer\n          format: int32\n          minimum: 1\n        paging:\n          description: |-\n            Показывать количество элементов в наборе данных в параметрах `found`` и `returned``, удовлетворяющих критерию запроса.\n          type: boolean\n          default: false\n        sorting:\n          description: |-\n            Параметры сортировки.\n          type: object\n          additionalProperties:\n            description: |-\n              <*> = \"techName атрибута\"\n\n              Передаются в JSON в виде пары ключ - значение, где ключ записывается в формате \"techName атрибута\".\n              Значение это наименование сортировки:\n                asc – по возрастанию;\n                desc – по убыванию.\n            oneOf:\n              - type: string\n                enum:\n                  - asc\n                  - desc\n        translate:\n          description: |-\n            Управление выдачей переводов полей.\n              - false – выдаются русскоязычные поля\n              - true – выдача англоязычных полей\n              - null – выдаются обе версии\n          type: boolean\n          default: null\n        includeDeleted:\n          description: |-\n            Учитывать ли в выборке удаленные объекты.\n          type: boolean\n          default: false\n        dictKeyMode:\n          description: |-\n            Формат отображения значений справочников.\n              - `0` - отображение значения;\n              - `1` - отображения ключа;\n              - `2` - отображение ключа и значения\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n            - 2\n          default: 0\n        fieldChanged:\n          description: |-\n            Выбрать только те объекты, атрибут `name` которых менялся в заданном периоде времени\n          type: object\n          properties:\n            name:\n              description: Название атрибута\n              type: string\n            fromDate:\n              description: Дата начала периода\n              type: string\n            untilDate:\n              description: Дата конца периода\n              type: string\n        fetchGeodata:\n          description: |-\n            Выдавать геолокационную информацию для объекта, если такая имеется.\n          type: boolean\n          default: false\n        fetchGeodataCenter:\n          description: |-\n            Получить центральную точку геометрии.\n          type: boolean\n          default: false\n        geoData:\n          description: |-\n            Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\n            Координаты точки или полигона указываются в формате GeoJSON.\n          type: object\n          additionalProperties:\n            description: |-\n              <*> = \"имя переменной\"\n            type: object\n            oneOf:\n              - $ref: '#/components/schemas/GeoJsonPoint'\n              - $ref: '#/components/schemas/GeoJsonMultiPoint'\n              - $ref: '#/components/schemas/GeoJsonPolygon'\n              - $ref: '#/components/schemas/GeoJsonMultiPolygon'\n              - $ref: '#/components/schemas/GeoJsonMultiLineString'\n            required:\n              - coordinates\n              - type\n            example: |-\n              {\n                \"p1\": {\n                    \"type\": \"Point\",\n                    \"coordinates\": [37.0, 55.0]     \n                },\n                \"p2\": { \"type\": \"Polygon\",\n                    \"coordinates\": [[[37.24528231, 55.51001841], [37.85777010, 55.55674992], [37.86875643, 55.90237586], [37.29472079, 55.90546176], [37.24528231, 55.51001841]]]     }\n              }\n        projection:\n          description: |-\n            Список полей, которые будут выдаваться в составе объектов набора данных.\n            Поля вложенных объектов разделяются через \".\".\n            Если список пуст или параметр не указан в запросе выдаются все поля.\n          type: array\n          items:\n            type: string\n          example: [\"global_id\", \"Register.Code\", \"system_object_id\"]\n        useAntiProjection:\n          description: |-\n            При установке в значение `true`, параметр `projection` будет интерпретироваться как список полей, которые надо исключить из выдачи.\n          type: boolean\n          default: false\n      required:\n      - id\n\n    CatalogGetResponse:\n      description: Схема ответа для метода /publrest/catalog/get (запрос содержимого каталога).\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: array\n              items:\n                $ref: '#/components/schemas/CatalogObject'\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    CatalogGetResponsePaging:\n      description: Схема ответа для метода /publrest/catalog/get (запрос содержимого каталога) при наличии параемтра Paging=true.\n      allOf:\n        - $ref: '#/components/schemas/CatalogGetResponse'\n        - $ref: '#/components/schemas/CommonFoundReturnedResponseInfo'\n\n    CatalogGetFeaturesResponse:\n      description: Схема ответа для метода /publrest/catalog/get/features (запрос содержимого каталога публикации в формате GeoJSON).\n      type: object\n      properties:\n        features:\n          type: array\n          items:\n            anyOf:\n              - $ref: '#/components/schemas/GeodataCollectionFeatures'\n              - $ref: '#/components/schemas/SingleGeodataFeatures'\n\n    GeodataCollection:\n      type: object\n      description: |-\n        Геометрия объекта каталога публикации в формате GeoJSON,\n        если у объекта несколько геометрий (точка и линия, точка и линия и полигон и т.д.).\n      properties:\n        geometry:\n          type: object\n          properties:\n            geometries:\n              type: array\n              items:\n                anyOf:\n                  - $ref: '#/components/schemas/GeoJsonPoint'\n                  - $ref: '#/components/schemas/GeoJsonMultiPoint'\n                  - $ref: '#/components/schemas/GeoJsonPolygon'\n                  - $ref: '#/components/schemas/GeoJsonMultiPolygon'\n                  - $ref: '#/components/schemas/GeoJsonMultiLineString'\n            type:\n              type: string\n              enum:\n                - GeometryCollection\n        type:\n          type: string\n          enum:\n            - Feature\n\n    GeodataCollectionFeatures:\n      type: object\n      description: |-\n        Объект каталога публикации в формате GeoJSON,\n        если у объекта несколько геометрий (точка и линия, точка и линия и полигон и т.д.).\n      allOf:\n        - $ref: '#/components/schemas/GeodataCollection'\n      properties:\n        properties:\n          description: Значения атрибутов объекта каталога публикации (без геометрии)\n          type: object\n          properties:\n            Attributes:\n              $ref: '#/components/schemas/CatalogObject'\n\n    SingleGeodata:\n      type: object\n      description: |-\n        Геометрия объекта каталога публикации в формате GeoJSON,\n        если у объекта только одна геометрия (или точка или мультиточка или т.д.).\n      properties:\n        geometry:\n          oneOf:\n            - $ref: '#/components/schemas/GeoJsonPoint'\n            - $ref: '#/components/schemas/GeoJsonMultiPoint'\n            - $ref: '#/components/schemas/GeoJsonPolygon'\n            - $ref: '#/components/schemas/GeoJsonMultiPolygon'\n            - $ref: '#/components/schemas/GeoJsonMultiLineString'\n        type:\n          type: string\n          enum:\n            - Feature\n\n    SingleGeodataFeatures:\n      type: object\n      description: |-\n        Объект каталога публикации в формате GeoJSON,\n        если у объекта только одна геометрия (или точка или мультиточка или полигон или линия).\n      allOf:\n        - $ref: '#/components/schemas/SingleGeodata'\n      properties:\n        properties:\n          description: Значения атрибутов объекта каталога публикации (без геометрии)\n          type: object\n          properties:\n            Attributes:\n              $ref: '#/components/schemas/CatalogObject'\n\n    CatalogChangesRequest:\n      description: Схема запроса для метода /publrest/catalog/changes (запрос измененных объектов).\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        from:\n          description: |-\n            Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss\n          oneOf:\n            - pattern: '(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)'\n              type: string\n            - pattern: '^([1-2]\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1]) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n              type: string\n        until:\n          description: |-\n            Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss\n          oneOf:\n            - pattern: '(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)'\n              type: string\n            - pattern: '^([1-2]\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1]) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n              type: string\n        offset:\n          description: |-\n            Смещение окна выдачи.\n            Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n            По умолчанию `0`.\n          type: integer\n          format: int32\n          default: 0\n          minimum: 0\n        limit:\n          description: |-\n            Допустимое количество объектов в ответе.\n          type: integer\n          format: int32\n          minimum: 1\n          default: 1000\n        state:\n          description: |-\n            Тип изменения объекта каталога:\n              - `CREATED` - создание (Параметр `includeDeleted` не влияет на выдачу, 1-ая версия объекта и id_deleted=0)\n              - 'UPDATED' - обновление (Параметр `includeDeleted` не влияет на выдачу, версия больше 1 и id_deleted=0)\n              - 'DELETED' - удаление (Параметр `includeDeleted` влияет на выдачу. С параметром `includeDeleted` выводит с id_deleted=1)\n              - 'CHANGED' - изменение (Параметр `includeDeleted` влияет на выдачу. Без параметра выводятся объекты с id_deleted=0, с параметром выводятся все объекты с id_deleted=0 и с id_deleted=1)\n          type: string\n          enum:\n            - CREATED\n            - UPDATED\n            - DELETED\n            - CHANGED\n        includeDeleted:\n          description: |-\n            Учитывать ли в выборке удаленные объекты.\n          type: boolean\n          default: false\n        criteria:\n          description: |-\n            Условие для выборка элементов набора данных на языке запросов к ЕХД.\n            Для параметра `geoData` используются функциях near и inside\n          type: string\n        translate:\n          description: |-\n            Управление выдачей переводов полей.\n              - false – выдаются русскоязычные поля\n              - true – выдача англоязычных полей\n              - null – выдаются обе версии\n          type: boolean\n          default: null\n        sorting:\n          description: |-\n            Параметры сортировки.\n          type: object\n          additionalProperties:\n            description: |-\n              <*> = \"name_attribute\"\n              \n              name_attribute - techName атрибута\n\n              Передаются в JSON в виде пары ключ - значение, где ключ записывается в формате \"name_attribute\".\n              Значение это наименование сортировки:\n                asc – по возрастанию;\n                desc – по убыванию.\n            type: string\n            enum:\n              - asc\n              - desc\n      required:\n      - id\n      - from\n      - until\n      - state\n\n    CatalogChangesResponse:\n      description: Схема ответа для метода /publrest/catalog/changes (получение измененных объектов в каталоге).\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: array\n              items:\n                $ref: '#/components/schemas/CatalogObject'\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    CatalogObjectChangesRequest:\n      description: Схема запроса для метода /publrest/object/changes (запрос изменений объекта).\n      type: object\n      properties:\n        id:\n          description: global_id объекта каталога публикации\n          type: integer\n          format: int32\n        catalog:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        from:\n          description: |-\n            Дата начала периода изменений. Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss\n          oneOf:\n            - pattern: '(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)'\n              type: string\n            - pattern: '^([1-2]\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1]) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n              type: string\n        until:\n          description: |-\n            Дата окончания периода изменений (не включается). Формат: YYYY-MM-DD или YYYY-MM-DD hh:mm:ss\n          oneOf:\n            - pattern: '(19|20)\\d\\d-((0[1-9]|1[012])-(0[1-9]|[12]\\d)|(0[13-9]|1[012])-30|(0[13578]|1[02])-31)'\n              type: string\n            - pattern: '^([1-2]\\d{3})-(0[1-9]|1[0-2])-(0[1-9]|[1-2]\\d|3[0-1]) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n              type: string\n        translate:\n          description: |-\n            Управление выдачей переводов полей.\n              - false – выдаются русскоязычные поля\n              - true – выдача англоязычных полей\n              - null – выдаются обе версии\n          type: boolean\n          default: null\n      required:\n      - id\n      - catalog\n      - from\n      - until\n\n    CatalogObjectChangesResponse:\n      description: Схема ответа для метода /publrest/object/changes (запрос изменений объекта).\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: array\n              items:\n                $ref: '#/components/schemas/CatalogObject'\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    CatalogCountRequest:\n      description: Схема запроса для метода /publrest/catalog/count (запрос количества элементов в каталоге).\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        criteria:\n          description: |-\n            Условие для выборка элементов набора данных на языке запросов к ЕХД.\n            Для параметра geoData используются функциях near и inside\n          type: string\n        geoData:\n          description: |-\n            Используется для описания переменных и их значений, которые в последствии будут использованы при составлении условий с геоданными.\n            Координаты точки или полигона указываются в формате GeoJSON.\n          type: object\n          oneOf:\n            - $ref: '#/components/schemas/GeodataCollection'\n            - $ref: '#/components/schemas/SingleGeodata'\n        epoch:\n          description: |-\n            Дата, на которую структура данных была актуальна.\n            Формат даты - YYYY-MM-DD\n            По умолчанию - текущая дата.\n          type: string\n        timestamp:\n          description: |-\n            Определяет формат даты в параметре `epoch`.\n              - `0` - формат YYYY-MM-DD;\n              - `1` - формат YYYY-MM-DD'T'HH:mm:ss.SSSXXX.\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n          default: 0\n        includeDeleted:\n          description: |-\n            Учитывать ли в выборке удаленные объекты.\n          type: boolean\n          default: false\n      required:\n      - id\n\n    CatalogCountResponse:\n      description: Схема ответа для метода /publrest/catalog/count (запрос количества элементов в каталоге)\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              description: Количество объектов в каталоге публикации, удовлетворяющих заданному условию.\n              type: integer\n              format: int32\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    CatalogChangesResponsePaging:\n      description: Схема ответа для метода /publrest/catalog/changes (получение измененных объектов в каталоге) при наличии параемтра Paging=true\n      allOf:\n        - $ref: '#/components/schemas/CatalogChangesResponse'\n        - $ref: '#/components/schemas/CommonFoundReturnedResponseInfo'\n\n    CatalogAggregateRequest:\n      description: Схема запроса для метода /publrest/catalog/aggregate (выполнение агрегирующего запроса).\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        aggregation:\n          description: |-\n            Название агрегирующего запроса:\n              - CadastralCostSum - сумма кадастровой стоимости\n              - AreaSum - суммарная площадь\n              - CadastralCostAndAreaSum -  и сумма кадастровой стоимости и суммарная площадь\n          type: string\n          enum:\n            - CadastralCostSum\n            - AreaSum\n            - CadastralCostAndAreaSum\n        criteria:\n          description: |-\n            Условие для выборка элементов набора данных на языке запросов к ЕХД.\n            Для параметра geoData используются функциях `near` и `inside`.\n          type: string\n        epoch:\n          description: |-\n            Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\n            Формат даты - YYYY-MM-DD\n          type: string\n        sorting:\n          description: |-\n            Параметры сортировки.\n          type: object\n          additionalProperties:\n            description: |-\n              <*> = \"name_attribute\"\n              name_attribute - techName атрибута\n\n              Передаются в JSON в виде пары ключ - значение, где ключ записывается в формате \"name_attribute\".\n              Значение это наименование сортировки:\n                asc – по возрастанию;\n                desc – по убыванию.\n            type: string\n            enum:\n              - asc\n              - desc\n        includeDeleted:\n          description: |-\n            Учитывать ли в выборке удаленные объекты.\n          type: boolean\n          default: false\n      required:\n      - id\n      - aggregation\n\n    CatalogAggregateResponse:\n      description: Схема ответа для метода /publrest/catalog/aggregate (выполнение агрегирующего запроса).\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: array\n              items:\n                $ref: '#/components/schemas/AggregationGroupItem'\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    DictionaryGetRequest:\n      description: Схема запроса для метода /publrest/dictionary/get (запрос содержимого справочников).\n      type: object\n      properties:\n        id:\n          description: Идентификатор запрашиваемого справочника.\n          type: integer\n          format: int32\n        offset:\n          description: |-\n            Смещение окна выдачи.\n            Позиция (индекс), с которой необходимо возвращать элементы из БД (не меньше `0`).\n            По умолчанию `0`.\n          type: integer\n          format: int32\n          default: 0\n          minimum: 0\n# ??? обсудить потом вопрос об корректировке данного лимита в 1000\n        limit:\n          description: |-\n            Количество возвращаемых элементов справочника (число от `1` до `999999`). По умолчанию `999999`.\n          type: integer\n          format: int32\n          minimum: 1\n          maximum: 999999\n          default: 999999\n      required:\n      - id\n\n    DictionaryGetResponse:\n      description: Схема ответа для метода /publrest/dictionary/get (запрос содержимого справочников).\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: array\n              items:\n                $ref: '#/components/schemas/DictionaryElement'\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    DictionaryElement:\n      description: Информация об элементе справочника в списке элементов справочника\n      type: object\n      properties:\n        key:\n          description: Идентификатор элемента справочника\n          type: string\n        value:\n          description: Название элемента справочника на русском языке\n          type: string\n        value_en:\n          description: Название элемента справочника на английском языке (при наличии)\n          type: string\n        prnt_key:\n          description: Идентификатор элемента родительского справочника (при наличии)\n          type: string\n      required:\n        - key\n        - value\n\n    CatalogSpecification:\n      description: Спецификация каталога публикации\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        name:\n          description: Наименование каталога публикации\n          type: string\n        nameEn:\n          description: Наименование каталога публикации на английском языке\n          type: string\n        technicalName:\n          description: Техническое наименование каталога публикации\n          type: string\n        shortName:\n          description: Краткое наименование каталога публикации\n          type: string\n        shortNameEn:\n          description: Краткое наименование каталога публикации на английском языке\n          type: string\n        accountingObject:\n          description: Категория объектов\n          type: string\n        accountingObjectEn:\n          description: Категория объектов на английском языке\n          type: string\n        keywords:\n          description: Ключевые слова на английском языке\n          type: string\n        keywordsEn:\n          description: Ключевые слова\n          type: string\n        kind:\n          description: Название вида каталога публикации\n          oneOf:\n            - type: string\n              # enum:\n              #   - Классификатор\n              #   - Справочник\n              #   - Перекодировочная таблица\n              #   - Реестр\n              #   - Номенклатура\n              #   - Перечень\n              #   - Список\n              #   - Словарь\n              #   - Тезаурус\n              #   - Рубрикатор\n              #   - Кодификатор\n              #   - Регистр\n              #   - Кадастр\n              #   - Иерархия\n              #   - Набор данных\n        type:\n          description: Название типа каталога публикации\n          oneOf:\n            - type: string\n              # enum:\n              #   - Городской межотраслевой (межведомственный)\n              #   - Городской отраслевой (ведомственный)\n              #   - Общегородской (общемосковский)\n              #   - Федеральный отраслевой (ведомственный)\n              #   - Общероссийский\n              #   - Не указан\n        period:\n          description: Периодичность актуализации (на русском языке, как в общих настройках каталога)\n          oneOf:\n            - type: string\n              # enum:\n              #   - Ежеминутно\n              #   - Ежечасно\n              #   - Ежедневно\n              #   - Еженедельно\n              #   - Ежемесячно\n              #   - Ежеквартально\n              #   - Ежегодно\n              #   - Настраиваемая (Произвольный срок)\n              #   - Настраиваемая (Календарные дни)\n              #   - Множественная периодичность\n              #   - По мере поступления изменений из источников актуализации\n              #   - В режиме реального времени\n        hasGeo:\n          description: |-\n            Наличие геометрии в каталоге публикации (0 или 1)\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n        categories:\n          description: Тематические категории, к которым относится каталог публикации\n          type: string\n        categoriesEn:\n          description: Тематические категории, к которым относится каталог публикации, на английском языке\n          type: string\n        layerId:\n          description: |-\n            Идентификатор слоя геоданных в системе ЕГИП\n            Выведено из эксплуатации в ЕХД2\n          type: string\n        OIVs:\n          description: |-\n            Список ОИВов-поставщиков в виде объектов.\n          type: array\n          items:\n            $ref: '#/components/schemas/OIVsObject'\n        oiv:\n          description: Список наименований ОИВов-поставщиков, разделенных запятыми (в т.ч. ответственные за англ.версию каталога)\n          type: string\n        oivEn:\n          description: Список наименований ОИВов-поставщиков, разделенных запятыми, на английском языке\n          type: string\n        oivList:\n          description: Список наименований ОИВов-поставщиков, разделенных запятыми (в т.ч. ответственные за англ.версию каталога)\n          type: string\n        rn:\n          description: Номер строки rowNumber\n          type: string\n        cnt:\n          description: Количество объектов в каталоге публикации\n          type: string\n        archive:\n          description: Является ли архивным\n          type: boolean\n        hasEnVersion:\n          description: Наличие английской версии каталога\n          type: boolean\n        description:\n          description: Полное описание каталога публикации\n          type: boolean\n        descriptionEn:\n          description: Описание каталога публикации на английском языке (всегда пустой)\n          type: boolean\n          default: null\n        defaultSort:\n          description: |-\n            Сортировка объектов в каталоге публикации по умолчанию\n          type: object\n          additionalProperties:\n            description: |-\n              <*> = \"name_attribute\"\n              name_attribute - techName атрибута\n\n              Значения атрибутов объекта, возвращаются в JSON в виде пары ключ - значение, где ключ записывается в формате \"name_attribute\".\n              Возвращаются только атрибуты для которых настроена сортировка.\n              Значение это наименование сортировки:\n                asc – по возрастанию;\n                desc – по убыванию.\n            type: string\n            enum:\n              - asc\n              - desc\n        systems:\n          description: Список систем-потребителей, разделенных точкой с запятой\n          type: string\n        fieldsEa:\n          description: |-\n            Информация об описании слоя электронного атласа.\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldsEaObject'\n        nameVariants:\n          description: |-\n            Массив наименований каталога для разных систем-потребителей в настройках публикации.\n          type: array\n          items:\n            $ref: '#/components/schemas/NameVariantsObject'\n        systemFields:\n          description: |-\n            Массив системных полей каталога публикации\n          type: array\n          items:\n            $ref: '#/components/schemas/SystemFieldsObject'\n        version:\n          description: |-\n            Информация о версии каталога публикации\n          allOf:\n            - $ref: '#/components/schemas/VersionObject'\n        permittedSystems:\n          description: |-\n            Список систем-потребителей (указываются технические наименования систем)\n          type: array\n          items:\n            type: string\n        catalog_status_id:\n          description: Статус каталога публикации.\n          allOf:\n            - $ref: '#/components/schemas/PublicationCatalogStatusId'\n        details_opod:\n          description: Дополнительная информация для наборов данных, сформированных на основе каталога для ОПОД\n          allOf:\n            - $ref: '#/components/schemas/DetailsOpodObject'\n        responsiblePerson:\n          description: Данные ответственного лица\n          allOf:\n            - $ref: '#/components/schemas/ResponsiblePersonObject'\n        fields:\n          description: |-\n            Массив с информацией об атрибутах каталога публикации.\n          type: array\n          items:\n            $ref: '#/components/schemas/FieldsObject'\n      required:\n        - id\n        - name\n        - nameEn\n        - technicalName\n        - shortName\n        - shortNameEn\n        - accountingObject\n        - accountingObjectEn\n        - keywords\n        - kind\n        - type\n        - period\n        - hasGeo\n        - categories\n        - categoriesEn\n        - layerId\n        - OIVs\n        - oiv\n        - oivEn\n        - oivList\n        - rn\n        - cnt\n        - archive\n        - hasEnVersion\n        - description\n        - descriptionEn\n        - defaultSort\n        - systems\n        - fieldsEa\n        - nameVariants\n        - systemFields\n        - version\n        - permittedSystems\n        - catalog_status_id\n        - details_opod\n        - responsiblePerson\n        - fields\n\n    OIVsObject:\n      description: ОИВ-поставщик\n      type: object\n      properties:\n        Id:\n          description: Идентификатор ОИВ\n          type: integer\n          format: int32\n        Name:\n          description: Полное наименование ОИВ\n          type: string\n        ShortName:\n          description: Краткое наименование ОИВ\n          type: string\n        NameEn:\n          description: Англоязычное наименование ОИВ\n          type: string\n        INN:\n          description: ИНН ОИВ\n          type: string\n      required:\n        - Id\n        - Name\n        - ShortName\n        - NameEn\n        - INN\n\n    FieldsEaObject:\n      description: Описание слоя электронного атласа\n      type: object\n      properties:\n        id:\n          description: Идентификатор описани\n          type: integer\n          format: int32\n        icoName:\n          description: Название иконки\n          type: string\n        signDate:\n          description: Дата подписания слоя\n          type: string\n        isLayerOpen:\n          description: Признак \"Слой отображается в открытой части атласа\" (0 или 1)\n          type: integer\n          format: int32\n        isUpdateDb:\n          description: Признак \"Данные необходимо обновлять в БД\" (0 или 1)\n          type: integer\n          format: int32\n        isUpdateWfs:\n          description: Признак \"Данные необходимо обновлять в WFS сервисе\" (0 или 1)\n          type: integer\n          format: int32\n        signFio:\n          description: ФИО подписавшего слой\n          type: string\n        guLink:\n          description: Ссылка на портал Госуслуг\n          type: string\n        isUpdate:\n          description: Признак \"Слой доступен для обновления\" (0 или 1)\n          type: integer\n          format: int32\n        linkData:\n          description: Ссылка на источник данных\n          type: string\n        typeObject:\n          description: Тип объекта (Точка, Полулиния, Полигон)\n          type: string\n        rubricid:\n          description: Идентификатор рубрикатора\n          type: string\n      required:\n        - id\n        - icoName\n        - signDate\n        - isLayerOpen\n        - isUpdateDb\n        - isUpdateWfs\n        - signFio\n        - guLink\n        - isUpdate\n        - linkData\n        - typeObject\n        - rubricid\n\n    NameVariantsObject:\n      description: Наименование каталога системы-потребителя в настройках публикации\n      type: object\n      properties:\n        systemId:\n          description: Идентификатор системы, для которой определено название каталога\n          type: string\n        systemLogin:\n          description: Техническое наименование системы, для которой определено название каталога\n          type: string\n        fullName:\n          description: Полное наименование каталога\n          type: string\n        fullNameEn:\n          description: Полное наименование каталога на английском языке\n          type: string\n        technicalName:\n          description: Техническое наименование каталога\n          type: string\n        shortName:\n          description: Краткое наименование каталога\n          type: string\n        shortNameEn:\n          description: Краткое наименование каталога на английском языке\n          type: string\n      required:\n        - systemId\n        - systemLogin\n        - fullName\n        - fullNameEn\n        - technicalName\n        - shortName\n        - shortNameEn\n\n    SystemFieldsObject:\n      description: Системное поле каталога публикации\n      type: object\n      properties:\n        id:\n          description: Идентификатор системного поля\n          type: integer\n          format: int32\n        system:\n          description: Техническое наименование системы\n          type: string\n        sysField:\n          description: Наименование системного поля\n          type: string\n      required:\n        - id\n        - system\n        - sysField\n\n    VersionObject:\n      description: Информация о версии каталога публикации\n      type: object\n      properties:\n        id:\n          description: Идентификатор версии (номер)\n          type: integer\n          format: int32\n        validFrom:\n          description: Дата начала периода актуальности версии\n          type: string\n        validUntil:\n          description: |-\n            дата окончания периода актуальности версии (для актуальных версий указывается \"Jan 1, 9999 12:00:00 AM\").\n            Пример даты (для понимания формата): Nov 26, 2021 10:15:37 AM\n          type: string\n      required:\n        - id\n        - validFrom\n        - validUntil\n\n    PublicationCatalogStatusId:\n      description: |-\n        Статус публикации каталога публикации:\n          - `1` - Не опубликовано\n          - `2` - Опубликовано\n          - `5` - Архивный\n      type: integer\n      format: int32\n\n    DetailsOpodObject:\n      description: Дополнительная информация для наборов данных, сформированных на основе каталога для ОПОД\n      type: object\n      properties:\n        idOpenCategory:\n          description: Идентификатор категории, к которой относится набор на ОПОД\n          type: integer\n          format: int32\n        nameOpenCategory:\n          description: Наименование категории, к которой относится набор на ОПОД\n          type: string\n        nameOpenCategoryEn:\n          description: Наименование категории, к которой относится набор на ОПОД, на английском языке\n          type: string\n        publicCatalogStatus:\n          description: Наименование статуса публикации\n          type: string\n        cluster:\n          description: Признак \"Кластеры округ/район\"\n          type: boolean\n        iso:\n          description: Признак \"Показатели ISO37120 и U4SSC\"\n          type: boolean\n        accessibility:\n          description: Признак того, относится ли атрибут к категории \"Доступная среда\"\n          type: boolean\n        idNumber:\n          description: Идентификатор набора\n          type: string\n        keyAccess:\n          description: Ключ предварительного просмотра набора данных (хранится в БД и работает для наборов в статусе \"Новый\")\n          type: string\n        linkForum:\n          description: Ссылка на форум\n          type: string\n        tags:\n          description: Тэги каталога\n          type: string\n        isDict:\n          description: Является ли набор справочником\n          type: boolean\n        typeDict:\n          description: Наименование типа справочника для набора данных.\n          oneOf:\n            - type: string\n              # enum:\n              #   - Обычный\n              #   - Региональный\n              #   - Федеральный\n        seasonId:\n          description: Идентификатор типа сезонности набора данных\n          oneOf:\n            - type: integer\n              format: int32\n              enum:\n                - 1\n                - 2\n                - 3\n                - 4\n        season:\n          description: Наименование типа сезонности набора данных\n          oneOf:\n            - type: string\n              # enum:\n              #   - Несезонный набор данных\n              #   - Зимний набор данных\n              #   - Летний набор данных\n              #   - Всесезонный набор данных\n        firstPublication:\n          description: Дата первой публикации\n          type: string\n        sortByPoligon:\n          description: Сортировка полигональных объектов\n          type: string\n        sefUrl:\n          description: Идентификатор набора для SEF URL\n          type: string\n      required:\n        - idOpenCategory\n        - nameOpenCategory\n        - nameOpenCategoryEn\n        - publicCatalogStatus\n        - cluster\n        - iso\n        - accessibility\n        - idNumber\n        - keyAccess\n        - linkForum\n        - tags\n        - isDict\n        - typeDict\n        - seasonId\n        - season\n        - firstPublication\n        - sortByPoligon\n        - sefUrl\n\n    ResponsiblePersonObject:\n      description: Данные ответственного лица\n      type: object\n      properties:\n        fio:\n          description: ФИО ответственного\n          type: string\n        fioEn:\n          description: ФИО ответственного на английском языке\n          type: string\n        phone:\n          description: Телефон ответственного лица\n          type: string\n        email:\n          description: email ответственного лица\n          type: string\n      required:\n        - fio\n        - fioEn\n        - phone\n        - email\n\n    FieldsObject:\n      description: Информация об атрибуте каталога публикации\n      type: object\n      properties:\n        id:\n          description: Идентификатор атрибута в каталоге\n          type: integer\n          format: int32\n        name:\n          description: Русскоязычное наименование атрибута\n          type: string\n        enName:\n          description: Англоязычное наименование атрибута\n          type: string\n        techName:\n          description: Техническое наименование атрибута\n          type: string\n        columnId:\n          description: |-\n            Техническое наименование столбца, в котором хранятся данные (например, col_13312)\n            для атрибутов каталога имеет формат col_{id} и col_{id}_en,\n            где id - идентификатор атрибута в каталоге для атрибутов корневого каталога и идентификатор атрибута в ЕХД для атрибутов вложенных каталогов\n          type: string\n        type:\n          description: |-\n            Техническое наименование типа атрибута\n          $ref: '#/components/schemas/AttributeTypeTagIdEnum'\n        typeName:\n          description: Русскоязычное наименование типа атрибута\n          $ref: '#/components/schemas/AttributeTypeNameEnum'\n        isPk:\n          description: Может ли атрибут использоваться, как первичный ключ (число, возможные значения 0 -нет, 1- да)\n          type: boolean\n        maxLength:\n          description: Максимальная длина строкового атрибута\n          type: integer\n          format: int32\n        dictionaryId:\n          description: Идентификатор справочника (для справочных атрибутов с типом DICTIONARY)\n          type: integer\n          format: int32\n        dictColTehName:\n          description: Техническое наименование справочника (для справочных атрибутов с типом DICTIONARY)\n          type: string\n        catalogId:\n          description: Идентификатор вложенного каталога (для табличных атрибутов с типом CATALOG)\n          type: integer\n          format: int32\n        isArray:\n          description: Признак, что поле может иметь множественное значения (0 - нет; 1 - да)\n          type: integer\n          format: int32\n        groupName:\n          description: Наименование группы атрибутов, с которой сопоставлен атрибут\n          type: string\n        rown:\n          description: Уникальный номер атрибута (формируется рандомно и выводится строкой, для атрибута в рамках каталога уникально и не изменно)\n          type: string\n        systemField:\n          description: Наименование системного атрибута, с которым сопоставлен атрибут\n          type: string\n        systems:\n          description: Список систем-потребителей, которым доступен атрибут, в виде строки (указываются технические наименования систем)\n          type: string\n        order:\n          description: Порядковый номер атрибута в каталоге\n          type: integer\n          format: int32\n        permittedSystems:\n          description: |-\n            Список систем-потребителей (указываются технические наименования систем)\n          type: array\n          items:\n            type: string\n        permittedSystemNames:\n          description: Назначение неизвестно (всегда null)\n          type: string\n        isDefaultSystems:\n          description: |-\n            Список систем, в которых атрибут отображается по умолчанию\n          type: array\n          items:\n            type: string\n        hasTranslation:\n          description: |-\n            Признак наличия английской версии в каталоге.\n            (`true`` проставляется если hasEnVersion=true и только для несистемных атрибутов, у которых id > 0, для остальных `false``)\n          type: boolean\n        isDefaultVision:\n          description: |-\n            Признак отображения по умолчанию на ОПО Д для атрибутов, отображаемых по умолчанию и видимых для ОПОД.\n          type: boolean\n        system:\n          description: Признак технического атрибута (global_id, is_deleted и пр.)\n          type: boolean\n        specification:\n          description: |-\n            Объект, содержащий спецификацию для вложенного каталога (при условии type = CATALOG). Имеет ту же структуру, что и корневой каталог.\n            Для параметра `specification`` получается рекурсия использования схемы FillingCatalogListItem\n          allOf:\n            - $ref: '#/components/schemas/CatalogSpecification'\n      required:\n        - id\n        - name\n        - enName\n        - techName\n        - columnId\n        - type\n        - typeName\n        - isPk\n        - maxLength\n        - dictionaryId\n        - dictColTehName\n        - catalogId\n        - isArray\n        - groupName\n        - rown\n        - systemField\n        - systems\n        - order\n        - permittedSystems\n        - permittedSystemNames\n        - isDefaultSystems\n        - hasTranslation\n        - isDefaultVision\n        - system\n        - specification\n\n    NestedCatalogObject:\n      description: Вложенный объект (значение табличного атрибута)\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CatalogObject'\n      properties:\n        global_object_id:\n          description: Глобальный идентификтаор родительского объекта\n          type: integer\n          format: int64\n      required:\n        - global_object_id\n\n\n    CatalogObject:\n      description: Объект каталога публикации\n      type: object\n      properties:\n        system_object_id:\n          description: Идентификатор объекта в системе-поставщике\n          type: string\n        global_id:\n          description: Глобальный идентификатор объекта\n          type: integer\n          format: int64\n        is_deleted:\n          description: |-\n            Статус объекта:\n              - 0 - активен\n              - 1 - удален\n          type: integer\n          format: int32\n          enum:\n            - 0\n            - 1\n        signature_date:\n          description: Дата подписания объекта в формате dd.MM.YYYY hh:mm:ss\n          type: string\n        geoData: \n          description: Геометрия объекта.\n          oneOf:\n            - $ref: '#/components/schemas/GeodataCollection'\n            - $ref: '#/components/schemas/SingleGeodata'\n        geodata_center: \n          description: Центроид геометрии объекта. Координата [x,y].\n          type: array\n          minItems: 2\n          maxItems: 2\n          items:\n            type: number\n      additionalProperties:\n        description: |-\n          <*> = \"techName атрибута\"\n\n          Значения атрибутов объекта, возвращаются в JSON в виде пары ключ - значение.\n          Возвращаются все атрибуты, кроме табличных.\n          Незаполненные атрибуты имеют значение `null`.\n          Значения формируются по следующим правилам в зависимости от типа:\n            - Строка - значение возвращается с типом string;\n            - Целое число - значение возвращается с типом integer;\n            - Дробное число - значение возвращается с типом number;\n            - Дата - значение возвращается в виде строки с типом string;\n            - Флаг - возвращается в виде строки со значением \"да\"/\"нет\"/null;\n            - Файл - возвращается в виде массива строк со значениями uuid файлов, размещенных в ЕХД;\n            - Справочник - если атрибут множественный, то возвращается массив. Если атрибут не множественный, то возвращается строка или объект.\n              В зависимотсти от параметра `dictKeyMode` в запросе, ответ в виде:\n                - массива строк - содержит или массив значений элементов справочника, или массив идентификаторов элементов справочника\n                - массива объектов - содержит объекты с ключем (идентификатор) и значением элемента справочника.\n              В качестве строковых значений выступает атрибут справочника, выбранный в настройках атрибута каталога (Атрибут справочника для вывода);\n            - Ссылка - возвращается массив объектов с данными выбранных объектов-ссылок.\n              В данных объектов передаются `global_Id` - глобавльный идентификатор объекта из ссылочного каталога и `value` - значение атрибута ссылочного каталога, выбранного для показа в каталоге.\n              В качестве значения выступает главный атрибут ссылочного каталога.\n            - Таблица - возвращается в виде массива объектов, каждый из которых содержит вложенные значния атрибутов объекта, как и атрибут первого уровня.\n        oneOf:\n          - type: string\n            description: Значение строкового атрибута\n          - type: integer\n            description: Значение целочисленного атрибута\n          - type: number\n            description: Значение атрибута с типом дробное число\n          - type: string\n            description: Значение атрибута с типом дата в формате dd.MM.YYYY\n            pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3})$'\n          - type: string\n            description: Значение атрибута с типом даты со временем в формате dd.MM.YYYY hh:mm:ss\n            pattern: '^(0[1-9]|[1-2]\\d|3[0-1])\\.(0[1-9]|1[0-2])\\.([1-2]\\d{3}) ([0-1]\\d|2[0-4])(:[0-5]\\d){2}$'\n          - type: string\n            description: Значение атрибута с типом флаг\n            # enum:\n            #   - да\n            #   - нет\n            #   - \"null\"\n# сейчас файловый атрибут возвращает только строку, даже если несколько файлов. Будет корректировка под массив строк\n          - type: array\n            description: Значение файлового атрибута\n            items:\n              type: string\n          - type: string\n            description: Значение справочного атрибута, если в запросе параметр `dictKeyMode` равен `0` или `1`\n          - type: object\n            description: Значение справочного атрибута, если в запросе параметр `dictKeyMode` равен `2`\n            properties:\n              key:\n                type: string\n              value:\n                type: string\n            required:\n              - key\n              - value\n          - type: array\n            description: Значение множественного справочного атрибута, если в запросе параметр `dictKeyMode` равен `0` или `1`\n            items:\n              type: string\n          - type: array\n            description: Значение множественного справочного атрибута, если в запросе параметр `dictKeyMode` равен `2`\n            items:\n              type: object\n              properties:\n                key:\n                  type: string\n                value:\n                  type: string\n              required:\n                - key\n                - value\n          - type: array\n            description: Значение ссылочного атрибута\n            items:\n              type: object\n              properties:\n                global_id:\n                  description: Глобальный идентификатор ссылочного объекта.\n                  type: integer\n                value:\n                  description: Значение атрибута выбранного объекта ссылочного каталога.\n                  oneOf:\n                    - type: string\n                    - type: number\n                    - type: integer\n              required:\n                - global_id\n                - value\n          - type: array\n            description: Значение табличного атрибута\n            items:\n              $ref: '#/components/schemas/NestedCatalogObject'\n      required:\n        - global_id\n        - signature_date\n        - system_object_id\n        - is_deleted\n\n    AggregationGroupItem:\n      description: |-\n        Группа агрегаций.\n        В каждой группе присутствует обязательный атрибут '_id' и 'count'.\n        Остальные атрибуты зависят от агрегирующего запроса (или выводятся оба, или один из).\n      properties:\n        _id:\n          description: |-\n            Идентификатор группы\n          type: string\n        count:\n          description: |-\n            Количество объектов подходящих под условие\n          type: integer\n          format: int32\n        CadastralCost:\n          description: |-\n            Сумма кадастровой стоимости\n          type: number\n        Area:\n          description: |-\n            Суммарная площадь\n          type: number\n      required:\n        - _id\n        - count\n\n    CatalogExportRequest:\n      description: Схема запроса для метода /publrest/catalog/export (запрос на формирование файла экспорта с содержимым каталога).\n      type: object\n      properties:\n        id:\n          description: Идентификатор каталога публикации\n          type: integer\n          format: int32\n        format:\n          description: |-\n            Формат запрашиваемого файла. Если `null`, то возвращаются все форматы.\n          type: string\n          enum:\n            - XLSX\n            - JSON\n            - XML\n            - CSV\n        translate:\n          description: |-\n            Управление выдачей переводов полей.\n              - false – выдаются русскоязычные поля\n              - true – выдача англоязычных полей\n\n            Если `null`, то возвращается обе версии.\n          type: boolean\n        epoch:\n          description: |-\n            Дата, на которую структура данных была актуальна. По умолчанию - текущая дата.\n            Формат даты - YYYY-MM-DDThh:mm:ss.sTZD\n            Для запроса статуса формирования файлов необходимо передать в параметре epoch полученное значение из поля 'createDate'.\n          type: string\n      required:\n      - id\n\n    CatalogExportResponse:\n      description: Схема ответа для метода /publrest/catalog/export (запрос на экспорт содержимого каталога)\n      allOf:\n        - $ref: '#/components/schemas/CommonResponseInfo'\n        - properties:\n            response:\n              type: object\n              description: |-\n                Объекты XLSX XML JSON CSV выдаются в зависимости от запроса (параметр `format`).\n              properties:\n                XLSX:\n                  description: Статус файла для формата XLSX\n                  $ref: '#/components/schemas/CatalogExportObjectResponseFormat'\n                XML:\n                  description: Статус файла для формата XML\n\n                  $ref: '#/components/schemas/CatalogExportObjectResponseFormat'\n                JSON:\n                  description: Статус файла для формата JSON\n                  allOf:\n                    - $ref: '#/components/schemas/CatalogExportObjectResponseFormat'\n                CSV:\n                  description: Статус файла для формата CSV\n                  allOf:\n                    - $ref: '#/components/schemas/CatalogExportObjectResponseFormat'\n                structureVersion:\n                  description: Всегда пустая\n                  type: string\n                errors:\n                  description: Описание ошибок\n                  type: string\n                createDate:\n                  description: Дата запроса на генерацию файлов. Строка в формате ISO YYYY-MM-DDThh:mm:ss.sTZD\n                  type: string\n              required:\n                - structureVersion\n                - errors\n                - createDate\n        - $ref: '#/components/schemas/CommonFiltersValidDateResponseInfo'\n\n    CatalogExportObjectResponseFormat:\n      description: Статус файла каждого формата\n      type: object\n      properties:\n        id:\n          description: Идентификатор файла\n          type: integer\n          format: int32\n        status:\n          description: |-\n            Статус формирования файла.\n              - PROCESSING - формируется\n              - ERROR - ошибка\n              - SUCCESS - сформирован\n          type: string\n          enum:\n            - PROCESSING\n            - ERROR\n            - SUCCESS\n        lastFileGeneration:\n          description: Дата последней генерации файла данного типа. Строка в формате ISO YYYY-MM-DDThh:mm:ss.sTZD\n          type: string\n        size:\n          description: Размер файла в байтах. Файл формируется в  архив (zip).\n          type: number\n      required:\n        - id\n        - status\n        - lastFileGeneration\n        - size\n\n    NotFoundError:\n      type: object\n      description: |-\n        Запрошенный ресурс не найден.\n      allOf:\n        - $ref: '#/components/schemas/ApiResponse'\n        - properties:\n            code:\n              type: integer\n              enum:\n                - 404\n            messageType:\n              enum:\n                - Resource not found\n\n    ApiResponse:\n      description: |-\n        Ответ на запрос в API\n        Используется для описания ошибок и базовых ответов (Ok, Created и пр.)\n      type: object\n      readOnly: true\n      properties:\n        id:\n          description: |-\n            Идентифкатор ресурса, для которого передан ответ\n\n            Возможные варианты использования:\n              - Идентификатор созданного ресурса в POST-запросе;\n              - Идентификатор ресурса, для которого возвращена ошибка.\n          type: integer\n          format: int32\n        code:\n          description: HTTP-код ошибки\n          type: integer\n          format: int32\n        messageType:\n          description: Тип ответа\n          type: string\n        message:\n          description: Текст ответа\n          type: string\n      required:\n        - code\n        - messageType\n        - message\n\n    AttributeTypeTagIdEnum:\n      description: Техническое наименование типа атрибута\n      oneOf:\n        - type: string\n          enum:\n            - STRING\n            - NUMBER\n            - DATE\n            - DICTIONARY\n            - CATALOG\n            - FLAG\n            - FILE\n            - LINK\n\n    AttributeTypeNameEnum:\n      description: Наименование типа атрибута\n      oneOf:\n        - type: string\n          # enum:\n          #   - Строка\n          #   - Число\n          #   - Дата\n          #   - Справочник\n          #   - Таблица\n          #   - Флаг\n          #   - Файл\n          #   - Ссылка на объект\n\n  parameters:\n\n    fileUuidPathParam:\n      name: id\n      in: path\n      description: |-\n        Uuid вложения, размещенного в ЕХД.\n      required: true\n      schema:\n        type: string\n      example: 65e254c7-c21d-4ba6-9e5e-3efdfa9864c3\n\n    fileUuidQueryParam:\n      name: id\n      in: query\n      description: |-\n        Uuid вложения, размещенного в ЕХД.\n      required: true\n      schema:\n        type: string\n      example: 65e254c7-c21d-4ba6-9e5e-3efdfa9864c3\n\n    FileIdPathParam:\n      name: id\n      in: path\n      description: |-\n        Идентификатор файла экспорта, который получен методом POST /publrest/catalog/export\n      required: true\n      schema:\n        type: string\n      example: 1858\n\n    FileIdQueryParam:\n      name: id\n      in: query\n      description: |-\n        Идентификатор файла экспорта, который получен методом POST /publrest/catalog/export\n      required: true\n      schema:\n        type: string\n      example: 1858\n\n    ehdSystemHeaderParam:\n      description: |-\n        Логин информационной системы.\n      name: ehd-system\n      in: header\n      schema:\n        type: string\n      required: true\n\n\n  responses:\n\n    FileNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный Uuid файла не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий Uuid файла:\n              $ref: '#/components/examples/FileNotFoundError'\n\n    ExportFileNotFoundResponse:\n      description: |-\n        ### Возможные ошибки бизнес-логики:\n          - Запрошенный id файла экспорта не существует.\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/NotFoundError'\n          examples:\n            Несуществующий id файла:\n              $ref: '#/components/examples/ExportFileNotFoundError'\n\n\n  examples:\n\n    CatalogListRequest:\n      description: Пример запроса для получения спецификации каталога публикации.\n      value:\n        id: [195236]\n        epoch: '2024-05-15'\n        projection:\n            root: ['id', 'name', 'fields']\n            fields: ['techName', 'type', 'maxLength']\n\n    CatalogListResponse:\n      description: Пример ответа спецификации каталога публикации.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - id: 195236\n            name: Карточка квартиры для дизайна_раскрытие\n            nameEn: apartment card for design - ras\n            technicalName: Карточка квартиры для дизайна_раскрытие\n            shortName: Карточка кв для дизайна_раскр1\n            shortNameEn: apartment card for design - ras\n            accountingObject: квартира\n            accountingObjectEn: home\n            keywords: квартира для дизайна дизайн редизайн\n            keywordsEn: home\n            kind: Справочник\n            type: Федеральный отраслевой (ведомственный)\n            period: В режиме реального времени\n            hasGeo: 0\n            categories: kategoria7777\n            categoriesEn: kategoria7777\n            layerId: null\n            OIVs:\n              - Id: 1014\n                Name: Управа района Вешняки города Москвы\n                ShortName: Управа района Вешняки города М\n                NameEn: Administration of the Veshnyaki district of Moscow\n                INN: 7720270652\n              - Id: 8788\n                Name: Тестовая организация\n                ShortName: Тесторг\n                NameEn: Test organization\n                INN: 1234567890\n            oiv: Управа района Вешняки города Москвы, Тестовая организация\n            oivEn: Administration of the Veshnyaki district of Moscow, Test organization\n            oivList: Префектура Восточного административного округа города Москвы, Тестовая организация\n            rn: 1\n            cnt: 36\n            archive: false\n            hasEnVersion: true\n            description: null\n            descriptionEn: null\n            descriptionClr: null\n            descriptionClrEn: null\n            defaultSort:\n              Nomer_kontrakta: desc\n              FullName: asc\n            systems: opod;usmanovaov;usmanovaov_ras\n            fieldsEa:\n              - id: 971\n                icoName: null\n                signDate: null\n                isLayerOpen: 0\n                isUpdateDb: 0\n                isUpdateWfs: 0\n                signFio: null\n                guLink: null\n                isUpdate: null\n                linkData: null\n                typeObject: null\n                rubricid: null\n            nameVariants:\n              - systemId: 2\n                systemLogin: opod\n                fullName: Карточка квартиры для дизайна_раскрытие ОПОД\n                fullNameEn: apartment card for design - ras\n                technicalName: Карточка квартиры для дизайна_раскрытие тех ОПОД\n                shortName: Карточка кв для дизайна_раскр1 КР ОПОД\n                shortNameEn: apartment card for design - ras\n              - systemId: 12321\n                systemLogin: usmanovaov\n                fullName: Карточка квартиры для дизайна_раскрытие\n                fullNameEn: apartment card for design - ras\n                technicalName: Карточка квартиры для дизайна_раскрытие\n                shortName: Карточка кв для дизайна_раскр1\n                shortNameEn: apartment card for design - ras\n            systemFields:\n              - id: 8788\n                system: usmanovaov\n                sysField: apartment\n            version: null\n            permittedSystems: [opod, usmanovaov, usmanovaov_ras]\n            catalog_status_id: 2\n            details_opod:\n              idOpenCategory: 4\n              nameOpenCategory: kategoria7777\n              nameOpenCategoryEn: null\n              publicCatalogStatus: Опубликовано\n              cluster: false\n              iso: true\n              accessibility: false\n              idNumber: 0000000000-Kartochkakvdlyadizaynacopy1\n              keyAccess: null\n              linkForum: null\n              tags: квартира для дизайна дизайн редизайн home\n              isDict: false\n              typeDict: null\n              seasonId: 1\n              season: Несезонный набор данных\n              firstPublication: 2024-04-08 11:54:19\n              sortByPoligon: DESC\n              sefUrl: 7720270652-Kartochka-kv-dlya-dizaynaraskr1\n            responsiblePerson:\n              fio: Иванев Петр Андреевич\n              fioEn: Ivanov Petr\n              phone: \"+79990009900\"\n              email: mail@mail.ru\n            fields:\n              - id: -1\n                rown: \"-2.117818982008843812204180397390086694E38\"\n                name: global_id\n                columnId: global_id\n                enName: object_id\n                type: NUMBER\n                typeName: Число\n                techName: global_id\n                dictionaryId: 0\n                catalogId: 0\n                isArray: 0\n                groupName: null\n                systemField: object_id\n                isPk: 1\n                maxLength: 100\n                systems: usmanovaov_ras\n                order: 0\n                dictColTehName: null\n                permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                permittedSystemNames: null\n                isDefaultSystems: []\n                hasTranslation: false\n                specification: null\n                isDefaultVision: null\n                system: true\n              - id: 586543\n                rown: \"3.16668828640655454109345170330562789215E43\"\n                name: Номер контракта\n                columnId: col_586543\n                enName: Nomer kontrakta\n                type: STRING\n                typeName: Строка\n                techName: Nomer_kontrakta\n                dictionaryId: 0\n                catalogId: 0\n                isArray: 0\n                groupName: null\n                systemField: name\n                isPk: 0\n                maxLength: 4000\n                systems: opod;usmanovaov;usmanovaov_ras\n                order: 24\n                dictColTehName: null\n                permittedSystems: [opod, usmanovaov, usmanovaov_ras]\n                permittedSystemNames: null\n                isDefaultSystems: [opod]\n                hasTranslation: true\n                specification: null\n                isDefaultVision: null\n                system: false\n              - id: 586550\n                rown: \"1.28867588184065693636462529084771003764E44\"\n                name: Авторский надзор\n                columnId: col_586550\n                enName: Author's supervision\n                type: FLAG\n                typeName: Флаг\n                techName: Authorssupervision\n                dictionaryId: 0\n                catalogId: 0\n                isArray: 0\n                groupName: null\n                systemField: null\n                isPk: 0\n                maxLength: 4000\n                systems: opod;usmanovaov;usmanovaov_ras\n                order: 31\n                dictColTehName: null\n                permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                permittedSystemNames: null\n                isDefaultSystems: [opod]\n                hasTranslation: true\n                specification: null\n                isDefaultVision: null\n                system: false\n              - id: 586554\n                rown: \"7.85478801598448961188256802192347235579E43\"\n                name: Режим ремонтных работ\n                columnId: col_586554\n                enName: repair work mode\n                type: CATALOG\n                typeName: Таблица\n                techName: repairworkmode\n                dictionaryId: 0\n                catalogId: 195238\n                isArray: 0\n                groupName: null\n                systemField: null\n                isPk: 0\n                maxLength: 4000\n                systems: opod;usmanovaov;usmanovaov_ras\n                order: 35\n                dictColTehName: null\n                permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                permittedSystemNames: null\n                isDefaultSystems: [opod]\n                hasTranslation: true\n                isDefaultVision: null\n                system: false\n                specification:\n                  - id: 195238\n                    name: Режим ремонтных работ\n                    nameEn: repair work mode\n                    technicalName: repairworkmode\n                    shortName: Режим ремонтных работ\n                    shortNameEn: repair work mode\n                    accountingObject: квартира\n                    accountingObjectEn: home\n                    keywords: квартира для дизайна дизайн редизайн\n                    keywordsEn: home\n                    kind: null\n                    type: null\n                    period: В режиме реального времени\n                    hasGeo: 0\n                    categories: kategoria7777\n                    categoriesEn: kategoria7777\n                    layerId: null\n                    OIVs:\n                      - Id: 8788\n                        Name: Тестовая организация\n                        ShortName: Тесторг\n                        NameEn: Test organization\n                        INN: 1234567890\n                    oiv: Тестовая организация\n                    oivEn: Test organization\n                    rn: 1\n                    cnt: 36\n                    archive: false\n                    hasEnVersion: true\n                    defaultSort: {}\n                    oivList: Префектура Восточного административного округа города Москвы, Тестовая организация\n                    description: null\n                    descriptionEn: null\n                    descriptionClr: null\n                    descriptionClrEn: null\n                    responsiblePerson:\n                      fio: Иванев Петр Андреевич\n                      fioEn: Ivanov Petr\n                      phone: \"+79990009900\"\n                      email: mail@mail.ru\n                    systems: opod;usmanovaov;usmanovaov_ras\n                    permittedSystems: [opod, usmanovaov, usmanovaov_ras]\n                    nameVariants:\n                      - systemId: 2\n                        systemLogin: opod\n                        fullName: Карточка квартиры для дизайна_раскрытие ОПОД\n                        fullNameEn: apartment card for design - ras\n                        technicalName: Карточка квартиры для дизайна_раскрытие тех ОПОД\n                        shortName: Карточка кв для дизайна_раскр1 КР ОПОД\n                        shortNameEn: apartment card for design - ras\n                      - systemId: 12321\n                        systemLogin: usmanovaov\n                        fullName: Карточка квартиры для дизайна_раскрытие\n                        fullNameEn: apartment card for design - ras\n                        technicalName: Карточка квартиры для дизайна_раскрытие\n                        shortName: Карточка кв для дизайна_раскр1\n                        shortNameEn: apartment card for design - ras\n                    systemFields: []\n                    fieldsEa: []\n                    version: null\n                    catalog_status_id: 0\n                    details_opod:\n                      idOpenCategory: null\n                      nameOpenCategory: null\n                      nameOpenCategoryEn: null\n                      publicCatalogStatus: null\n                      cluster: null\n                      iso: null\n                      accessibility: null\n                      idNumber: null\n                      keyAccess: null\n                      linkForum: null\n                      tags: null\n                      isDict: null\n                      typeDict: null\n                      seasonId: null\n                      season: null\n                      firstPublication: null\n                      sortByPoligon: null\n                      sefUrl: null\n                    fields:\n                      - id: -3\n                        rown: \"-5.6887510832499815699362953774106541261E38\"\n                        name: global_object_id\n                        columnId: global_object_id\n                        enName: object_id\n                        type: NUMBER\n                        typeName: Число\n                        techName: global_object_id\n                        dictionaryId: 0\n                        catalogId: 0\n                        isArray: 0\n                        groupName: null\n                        systemField: null\n                        isPk: 0\n                        maxLength: 100\n                        systems: usmanovaov_ras\n                        order: 36\n                        dictColTehName: null\n                        permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                        permittedSystemNames: null\n                        isDefaultSystems: []\n                        hasTranslation: false\n                        specification: null\n                        isDefaultVision: null\n                        system: true\n                      - id: -1\n                        rown: \"-1.2309323041660292923157019670170408533E38\"\n                        name: global_id\n                        columnId: global_id\n                        enName: object_id\n                        type: NUMBER\n                        typeName: Число\n                        techName: global_id\n                        dictionaryId: 0\n                        catalogId: 0\n                        isArray: 0\n                        groupName: null\n                        systemField: object_id\n                        isPk: 1\n                        maxLength: 100\n                        systems: usmanovaov_ras\n                        order: 37\n                        dictColTehName: null\n                        permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                        permittedSystemNames: null\n                        isDefaultSystems: []\n                        hasTranslation: false\n                        specification: null\n                        isDefaultVision: null\n                        system: true\n                      - id: -2\n                        rown: \"8.8827354644604255684936613194317162604E37\"\n                        name: system_object_id\n                        columnId: system_object_id\n                        enName: system_object_id\n                        type: NUMBER\n                        typeName: Число\n                        techName: system_object_id\n                        dictionaryId: 0\n                        catalogId: 0\n                        isArray: 0\n                        groupName: null\n                        systemField: null\n                        isPk: 1\n                        maxLength: 400\n                        systems: usmanovaov_ras\n                        order: 38\n                        dictColTehName: null\n                        permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                        permittedSystemNames: null\n                        isDefaultSystems: []\n                        hasTranslation: false\n                        specification: null\n                        isDefaultVision: null\n                        system: true\n                      - id: 586557\n                        rown: \"3.01148154128157942344641984608839120639E43\"\n                        name: часы работы\n                        columnId: col_121\n                        enName: chasy raboty\n                        type: STRING\n                        typeName: Строка\n                        techName: Hours\n                        dictionaryId: 0\n                        catalogId: 0\n                        isArray: 0\n                        groupName: null\n                        systemField: null\n                        isPk: 0\n                        maxLength: 11\n                        systems: usmanovaov_ras\n                        order: 39\n                        dictColTehName: null\n                        permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                        permittedSystemNames: null\n                        isDefaultSystems: [opod]\n                        hasTranslation: true\n                        specification: null\n                        isDefaultVision: null\n                        system: false\n                      - id: 586558\n                        rown: \"7.51249680044606036648738318240546291421E43\"\n                        name: Дни недели\n                        columnId: col_21201\n                        enName: DayOfWeek\n                        type: DICTIONARY\n                        typeName: Справочник\n                        techName: DayOfWeek\n                        dictionaryId: 66\n                        catalogId: 0\n                        isArray: 0\n                        groupName: null\n                        systemField: null\n                        isPk: 0\n                        maxLength: 4000\n                        systems: usmanovaov_ras\n                        order: 40\n                        dictColTehName: null\n                        permittedSystems: [usmanovaov_ras, usmanovaov, usmanovaov_ras]\n                        permittedSystemNames: null\n                        isDefaultSystems: [opod]\n                        hasTranslation: true\n                        specification: null\n                        isDefaultVision: null\n                        system: false\n        validDate: null\n        filters: {}\n        found: 1\n        returned: 1\n\n    CatalogGetRequest:\n      description: Пример запроса для получения содержимого каталога публикации.\n      value:\n        id: 195236\n        epoch: '2024-05-15'\n        offset: 1\n        sorting: {\"FullName\": \"ASC\"}\n\n    CatalogGetResponse:\n      description: Пример содержимого каталога публикации.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - global_id: 2193779085\n            is_deleted: 0\n            FullName: Петров Петр\n            packageofservices: бизнес\n            Projectpreparationtime: 3 месяца\n            system_object_id: 026-026\n            Nomer_kontrakta: 026-026 026-026\n            Data_podpisaniya_dogovora_MKR: 23.04.2024\n            Ploschad_zhilyh_pomeschenij: 98.9\n            Ploschad_nezhilyh_pomeschenij: 67.7\n            SquareObject: 166.6\n            repairworkmode:\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 87\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Вторник\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 87\n                    global_id: 15\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 1.1\n                    Data_rozhdeniya: 12.06.2018\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 88\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Пятница\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 16\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.1\n                    Data_rozhdeniya: 08.06.2017\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 17\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.2\n                    Data_rozhdeniya: 12.11.2019\n            image_home: 1c756a8f-23d6-4416-9b74-c2b4c747d3ce\n            numberofrooms: 7\n            directoryofpremises: [\"дом\",\"квартира\"]\n            signature_date: \"\"\n            link_object:\n              - global_id: 2193778977\n                value: 3434,354\n              - global_id: 2193778976\n                value: 5,543\n              - global_id: 2193778978\n                value: 7878,78787\n        validDate: null\n        filters: {}\n\n    CatalogGetResponsePaging:\n      description: Пример содержимого каталога публикации.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - global_id: 2193779085\n            is_deleted: 0\n            FullName: Петров Петр\n            packageofservices: бизнес\n            Projectpreparationtime: 3 месяца\n            system_object_id: 026-026\n            Nomer_kontrakta: 026-026 026-026\n            Data_podpisaniya_dogovora_MKR: 23.04.2024\n            Ploschad_zhilyh_pomeschenij: 98.9\n            Ploschad_nezhilyh_pomeschenij: 67.7\n            SquareObject: 166.6\n            repairworkmode:\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 87\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Вторник\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 87\n                    global_id: 15\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 1.1\n                    Data_rozhdeniya: 12.06.2018\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 88\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Пятница\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 16\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.1\n                    Data_rozhdeniya: 08.06.2017\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 17\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.2\n                    Data_rozhdeniya: 12.11.2019\n            image_home: 1c756a8f-23d6-4416-9b74-c2b4c747d3ce\n            numberofrooms: 7\n            directoryofpremises: [\"дом\",\"квартира\"]\n            signature_date: \"\"\n            link_object:\n              - global_id: 2193778977\n                value: 3434,354\n              - global_id: 2193778976\n                value: 5,543\n              - global_id: 2193778978\n                value: 7878,78787\n        validDate: null\n        filters: {}\n        found: 10\n        returned: 1\n\n    CatalogGetResponseFetchGeodata:\n      description: Пример содержимого каталога публикации.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - global_id: 2193779085\n            is_deleted: 0\n            FullName: Петров Петр\n            packageofservices: бизнес\n            Projectpreparationtime: 3 месяца\n            system_object_id: 026-026\n            Nomer_kontrakta: 026-026 026-026\n            Data_podpisaniya_dogovora_MKR: 23.04.2024\n            Ploschad_zhilyh_pomeschenij: 98.9\n            Ploschad_nezhilyh_pomeschenij: 67.7\n            SquareObject: 166.6\n            repairworkmode:\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 87\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Вторник\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 87\n                    global_id: 15\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 1.1\n                    Data_rozhdeniya: 12.06.2018\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 88\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Пятница\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 16\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.1\n                    Data_rozhdeniya: 08.06.2017\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 17\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.2\n                    Data_rozhdeniya: 12.11.2019\n            image_home: 1c756a8f-23d6-4416-9b74-c2b4c747d3ce\n            numberofrooms: 7\n            directoryofpremises: [\"дом\",\"квартира\"]\n            signature_date: \"\"\n            link_object:\n              - global_id: 2193778977\n                value: 3434,354\n              - global_id: 2193778976\n                value: 5,543\n              - global_id: 2193778978\n                value: 7878,78787\n            geoData: \n              coordinates: [[[37.551016341,55.802749176],[37.551053892,55.802996935],[37.551445494,55.802906291],[37.551016341,55.802749176]]]\n              type: Polygon\n            geodata_center: null\n          - global_id: 2193779085\n            is_deleted: 0\n            FullName: Петров Петр\n            packageofservices: бизнес\n            Projectpreparationtime: 3 месяца\n            system_object_id: 026-026\n            Nomer_kontrakta: 026-026 026-026\n            Data_podpisaniya_dogovora_MKR: 23.04.2024\n            Ploschad_zhilyh_pomeschenij: 98.9\n            Ploschad_nezhilyh_pomeschenij: 67.7\n            SquareObject: 166.6\n            repairworkmode:\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 87\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Вторник\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 87\n                    global_id: 15\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 1.1\n                    Data_rozhdeniya: 12.06.2018\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 88\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Пятница\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 16\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.1\n                    Data_rozhdeniya: 08.06.2017\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 17\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.2\n                    Data_rozhdeniya: 12.11.2019\n            image_home: 1c756a8f-23d6-4416-9b74-c2b4c747d3ce\n            numberofrooms: 7\n            directoryofpremises: [\"дом\",\"квартира\"]\n            signature_date: \"\"\n            link_object:\n              - global_id: 2193778977\n                value: 3434,354\n              - global_id: 2193778976\n                value: 5,543\n              - global_id: 2193778978\n                value: 7878,78787\n            geoData:\n              geometries:\n                - coordinates: [37.582793846,55.787128907]\n                  type: Point\n                - coordinates: [[[37.588737621,55.784638144],[37.589080944,55.785653814],[37.590239658,55.785617541],[37.589874878,55.784202849]]]\n                  type: MultiLineString\n                - coordinates: [[[37.601762428,55.78521853],[37.600217476,55.789208451],[37.600432053,55.789474431],[37.609615936,55.790054745],[37.609916344,55.789812948],[37.609787598,55.788023608],[37.606011047,55.784710693],[37.604380264,5.785339443],[37.601762428,55.78521853]]]\n                  type: Polygon\n              type: GeometryCollection\n            geodata_center: null\n        validDate: null\n        filters: {}\n        found: 10\n        returned: 1\n\n    CatalogGetFeaturesRequest:\n      description: Пример запроса для получения содержимого каталога публикации в формате GeoJSON.\n      value:\n        id: 195184\n        epoch: '2024-05-15'\n        offset: 1\n\n    CatalogGetFeaturesResponse:\n      description: Пример содержимого каталога публикации в формате GeoJSON.\n      value:\n        features:\n          - geometry:\n              coordinates:\n                - 37.706121192458\n                - 55.803406467823\n              type: Point\n            properties:\n                Attributes:\n                    global_id: 2184282512\n                    is_deleted: 0\n                    system_object_id: 026-026\n                    Name: Пример точки\n                    signature_date: \"16.02.2024 17:01:35\"\n            type: Feature\n          - geometry:\n              coordinates:\n                - - -  - 37.667181597\n                       - 55.705499071\n                    -  - 37.667106495\n                       - 55.705638406\n                    -  - 37.667240605\n                       - 55.705677783\n                - - -  - 37.667031393\n                       - 55.705708074\n                    -  - 37.666934834\n                       - 55.705829234\n                    -  - 37.667052851\n                       - 55.705856495\n                    -  - 37.667165504\n                       - 55.705726248\n                  - -  - 37.668109641\n                       - 55.705617203\n                    -  - 37.668104277\n                       - 55.705732306\n                    -  - 37.668227658\n                       - 55.705735335\n                    -  - 37.668249116\n                       - 55.705608116\n              type: MultiPolygon\n            properties:\n                Attributes:\n                  global_id: 2184282514\n                  is_deleted: 0\n                  system_object_id: 026-027\n                  Name: Пример мультиполигона\n                  signature_date: \"16.02.2024 17:01:35\"\n            type: Feature\n          - geometry:\n              geometries:\n                - coordinates:\n                      -  -  - 37.560349121\n                            - 55.738957948\n                      -  -  - 37.583695068\n                            - 55.781546667\n                      -  -  - 37.705917969\n                            - 55.77922485\n                      -  -  - 37.710037842\n                            - 55.750577685\n                      -  -  - 37.659226074\n                            - 55.762968242\n                  type: Polygon\n                - coordinates:\n                      - - 37.589531555\n                        - 55.802340078\n                      - - 37.672958984\n                        - 55.794024051\n                      - - 37.596054687\n                        - 55.788608005\n                  type: MultiPoint\n              type: GeometryCollection\n            properties:\n              Attributes:\n                  global_id: 2184285898\n                  is_deleted: 0\n                  system_object_id: 026-028\n                  Name: Пример нескольких геометрий в объекте\n                  signature_date: \"16.02.2024 17:01:35\"\n            type: Feature\n\n    CatalogChangesRequest:\n      description: Пример запроса для получения измененных объектов каталога публикации.\n      value:\n        id: 195236\n        from: '2024-06-10 12:55:00'\n        until: '2024-06-10 13:10:00'\n        state: CREATED\n        sorting: {\"FullName\": \"ASC\"}\n\n    CatalogObjectChangesRequest:\n      description: Пример запроса для получения изменений объекта каталога публикации.\n      value:\n        id: 2184314111\n        catalog: 195236\n        from: '2023-01-01 12:55:00'\n        until: '2024-06-28 13:10:00'\n        translate: false\n\n    CatalogObjectChangesResponse:\n      description: Пример изменений объекта каталога публикации.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - global_id: 2193779085\n            signature_date: \"23.04.2024 12:31:57\"\n            system_object_id: 026-026\n            is_deleted: 0\n            FullName: Петров Петр\n            packageofservices: бизнес\n            Projectpreparationtime: 3 месяца\n            Nomer_kontrakta: 026-026 026-026\n            Data_podpisaniya_dogovora_MKR: 23.04.2024\n            Ploschad_zhilyh_pomeschenij: 98.9\n            Ploschad_nezhilyh_pomeschenij: 67.7\n            SquareObject: 166.6\n            repairworkmode:\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 87\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Вторник\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 87\n                    global_id: 15\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 1.1\n                    Data_rozhdeniya: 12.06.2018\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 88\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Пятница\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 16\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.1\n                    Data_rozhdeniya: 08.06.2017\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 17\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.2\n                    Data_rozhdeniya: 12.11.2019\n            image_home: 1c756a8f-23d6-4416-9b74-c2b4c747d3ce\n            numberofrooms: 7\n            directoryofpremises: [\"дом\",\"квартира\"]\n            link_object:\n              - global_id: 2193778977\n                value: 3434,354\n              - global_id: 2193778976\n                value: 5,543\n              - global_id: 2193778978\n                value: 7878,78787\n          - global_id: 2193779085\n            signature_date: \"30.04.2024 16:52:25\"\n            system_object_id: 026-026\n            is_deleted: 0\n            FullName: Петров Петр Петрович\n            packageofservices: бизнес\n            Projectpreparationtime: 3 месяца\n            Nomer_kontrakta: 026-026 026-026\n            Data_podpisaniya_dogovora_MKR: 23.04.2024\n            Ploschad_zhilyh_pomeschenij: 98.9\n            Ploschad_nezhilyh_pomeschenij: 67.7\n            SquareObject: 166.6\n            repairworkmode:\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 87\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Вторник\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 87\n                    global_id: 15\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 1.1\n                    Data_rozhdeniya: 12.06.2018\n              - is_deleted: 0\n                global _object_id: 2193779085\n                global_id: 88\n                system_object_id: \"\"\n                Hours: 09:00-18:00\n                DayOfWeek: \"Пятница\"\n                listofemployees:\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 16\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.1\n                    Data_rozhdeniya: 08.06.2002\n                  - is_deleted: 0\n                    global_object_id: 88\n                    global_id: 17\n                    system_object_id: \"\"\n                    FIO: 026-026 ФИО 2.2\n                    Data_rozhdeniya: 12.11.2001\n            image_home: 1c756a8f-23d6-4416-9b74-c2b4c747d3ce\n            numberofrooms: 7\n            directoryofpremises: [\"дом\",\"квартира\"]\n            link_object:\n              - global_id: 2193778977\n                value: 3434,354\n              - global_id: 2193778976\n                value: 5,543\n              - global_id: 2193778978\n                value: 7878,78787\n        validDate: null\n        filters: {}\n\n    CatalogCountRequest:\n      description: Пример запроса для получения количества объектов каталога публикации, удовлетворяющих запросу.\n      value:\n        id: 195236\n        criteria: \"Ploschad_zhilyh_pomeschenij > 30\"\n\n    CatalogCountResponse:\n      description: Пример ответа о количестве объектов каталога публикации, удовлетворяющих запросу.\n      value:\n        status: 0\n        message: \"\"\n        response: 41\n        validDate: null\n        filters: {}\n\n    CatalogAggregateRequest:\n      description: Пример агрегирующего запроса.\n      value:\n        id: 195236\n        aggregation: CadastralCostAndAreaSum\n        criteria: CadastralCost having Value > 150000000\n\n    CatalogAggregateResponse:\n      description: Пример ответа по агрегирующему запросу.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - _id: all\n            count: 7\n            CadastralCost: 5815490880702.33\n            Area: 11606.4\n        validDate: null\n        filters: {}\n\n    DictionaryGetRequest:\n      description: Пример запроса содержимого справочника.\n      value:\n        id: 331\n        offset: 5\n        limit: 100\n\n    DictionaryGetResponse:\n      description: Пример ответа c массивом элементов справочника.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          - key: 3\n            value: Поликлиники\n            value_en: null\n            prnt_key: 20014\n          - key: 53\n            value: Театры\n            value_en: Theaters\n            prnt_key: null\n        validDate: null\n        filters: {}\n        found: 546\n        returned: 2\n\n    CatalogExportRequest:\n      description: Пример запроса на экспорт содержимого каталога.\n      value:\n        id: 195236\n        translate: false\n\n    CatalogExportStatusRequest:\n      description: Пример запроса статуса экспорта.\n      value:\n        id: 195236\n        translate: false\n        epoch: \"2024-07-08T13:19:23.363+03:00\"\n\n    CatalogExportResponse:\n      description: Пример ответа на запрос экспорта содержимого каталога.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          XLSX:\n              id: 1858\n              size: null\n              lastFileGeneration: 2024-06-19T08:48:32.792+03:00\n              status: PROCESSING\n          XML:\n              id: 1855\n              size: null\n              lastFileGeneration: 2024-06-19T08:48:32.792+03:00\n              status: PROCESSING\n          CSV:\n              id: 1858\n              size: null\n              lastFileGeneration: 2024-06-19T08:48:32.792+03:00\n              status: PROCESSING\n          JSON:\n              id: 1858\n              size: null\n              lastFileGeneration: 2024-06-19T08:48:32.792+03:00\n              status: PROCESSING\n          structureVersion: \"\"\n          errors: \"\"\n          createDate: 2024-06-19T08:48:32.670+03:00\n        validDate: null\n        filters: {}\n\n    CatalogExportStatusResponse:\n      description: Пример ответа на запрос статуса экспорта.\n      value:\n        status: 0\n        message: \"\"\n        response:\n          JSON:\n              id: 1858\n              size: null\n              lastFileGeneration: 2024-06-19T08:48:32.792+03:00\n              status: PROCESSING\n          structureVersion: \"\"\n          errors: \"\"\n          createDate: \"2024-07-08T13:19:23.363+03:00\"\n        validDate: null\n        filters: {}\n\n    FileNotFoundError:\n      description: |-\n        Указанный файл не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Файла с Uuid {Uuid} не существует.\n\n    ExportFileNotFoundError:\n      description: |-\n        Указанный файл экспорта не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Файла экспорта с id {id} не существует.\n\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: SOAP API заполнения\n  description: |-\n    Методы внешнего SOAP API для работы с данными слоя заполнения\n\n    Вызов методов из Swagger не доступен\n  version: 1.0.0\n\n# servers:\n#   - url: https://www.dataaccess.com/webservicesserver/NumberConversion.wso\n\n\npaths:\n  #Список каталогов\n  /getCatalogList:\n    post:\n      tags:\n      - soap\n      summary: Получение списка каталогов заполнения, доступных системе\n      description: |-\n        Возвращает список каталогов заполнения, доступных системе-поставщику, а также некоторые параметры общей информации каждого каталога.\n        \n        Метод возвращает в т.ч. вложенные каталоги. См. также описание схемы ответа.\n\n        Версия 2 дополнительно возвращает категорию объектов каталога `objCategories`.\n\n        По умолчанию вызывается версия 1 метода (в т.ч. если передано некорректное значение).\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getCatalogListRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getCatalogListRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n            \n            Если у системы-потребителя отсутствует доступ к каким-либо каталогам, то также возвращается пустой массив.\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getCatalogListResponse'\n              examples:\n                version 2:\n                  $ref: '#/components/examples/getCatalogListV2Response'\n                version 1:\n                  $ref: '#/components/examples/getCatalogListV1Response'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  \n  #Спецификация каталога   \n  /getCatalogSpec:\n    post:\n      tags:\n      - soap\n      summary: Получение спецификации каталога заполнения\n      description: |-\n        Возвращает перечень атрибутов каталога, а также свойста этих атрибутов.\n\n        Метод возвращает в т.ч. информацию по вложенным каталогам по `idCatalog`. См. также описание схемы ответа.\n\n        ## Системные атрибуты\n\n        В перечне атрибутов также возвращаются системные атрибуты (во всех версиях):\n          - gloabl_id (id=-1);\n          - system_object_id (id=-2);\n          - gloabl_object_id (id=-3), только для вложенных каталогов;\n          - system_global_object_id (id=-5), только для вложенных каталогов;\n          - Состояние подписи (id=-4);\n          - geodata (id=-17), только для корневых каталогов и только в версии 3 метода, если в каталоге есть геоданные, возвращается с отдельным типом данных GEO;\n          - Наличие геоданных (id=-22), только для корневых каталогов и только в версии 4 метода, если в каталоге есть геоданные, возвращается как BOOLEAN;\n\n        Эти атрибуты имеют следующий формат\n\n        ### global_id, gloabl_object_id\n          - id = -1 и -3 соответственно;\n          - name = global_id, gloabl_object_id соответственно;\n          - colname совпадает с name;\n          - tehName совпадает с name;\n          - typeId = 2;\n          - type = INTEGER;\n          - maxLength = 100;\n          - isAutocomplete, isMulti, isEdit имеют значения false;\n          - isReq имеет значение true;\n          - isPrimaryKey имеет значение true для global_id и false для gloabl_object_id\n          - остальные поля оставляются пустыми.\n\n        ### system_object_id, system_global_object_id\n          - id = -2 и -5 соответственно;\n          - name = system_object_id, system_global_object_id соответственно;\n          - colname совпадает с name;\n          - tehName совпадает с name;\n          - typeId = 1;\n          - type = STRING;\n          - maxLength = 4000;\n          - isAutocomplete, isPrimaryKey, isMulti, isEdit, isReq имеют значения false;\n          - остальные поля оставляются пустыми.\n\n        ### Состояние подписи\n          - id = -4;\n          - name = Состояние подписи;\n          - colname = signature;\n          - tehName = signature;\n          - typeId = 1;\n          - type = STRING;\n          - maxLength = 4000;\n          - isAutocomplete, isPrimaryKey, isMulti, isEdit, isReq имеют значения false;\n          - остальные поля оставляются пустыми.\n\n        ### geodata\n          - id = -17;\n          - name = geodata;\n          - colname совпадает с name;\n          - tehName совпадает с name;\n          - type = GEO;\n          - isMulti, isPrimaryKey имеют значения false;\n          - maxLength оставляется пустым;\n          - остальные поля заполняются согласно настройкам карты в каталоге.\n\n        ### Наличие геоданных\n          - id = -22;\n          - name = Наличие геоданных;\n          - colname = has_geo;\n          - tehName = has_geo;\n          - type = BOOLEAN;\n          - maxLength = 4000;\n          - isAutocomplete, isPrimaryKey, isMulti, isEdit, isReq имеют значения false;\n          - остальные поля оставляются пустыми.\n        \n        ## Атрибуты ручного ввода\n\n        Помимо этого в методе возвращаются специальные атрибуты, для\n          - обозначения ручного ввода атрибута (для блока конструктора Автозаполнение);\n          - обозначения ручного ввода местоположения (для блока конструктора Из карты);\n          - обозначения ручного ввода загрузки геометрии (для блока конструктора На карту).\n        \n        Эти атрибуты имеют cледующий формат\n\n        ### Ручной ввод атрибута\n          - id = id атрибута в каталоге, заполняемого с использованием ручного ввода, со знаком минус;\n          - colname = dict_<Идентификатор атрибута в каталоге>;\n          - tehName = dict_<Идентификатор атрибута в ЕХД>;\n          - name = Ручной ввод для <Название атрибута>;\n          - typeId = 7;\n          - type = STRING;\n          - maxLength = 0;\n          - isAutocomplete, isPrimaryKey, isMulti, isEdit, isReq имеют значения false;\n          - остальные поля оставляются пустыми.\n\n        ### Ручной ввод местоположения\n          - id = -1011;\n          - colname = dict_location;\n          - tehName = dict_location;\n          - name = Ручной ввод местоположения;\n          - typeId = 7;\n          - type = STRING;\n          - maxLength = 0;\n          - isAutocomplete, isPrimaryKey, isMulti, isEdit, isReq имеют значения false;\n          - остальные поля оставляются пустыми.\n\n        ### Ручной ввод для загрузки геометрии\n          - id = по формуле `-1000-aid`, где aid - идентификатор атрибута в каталоге, который используется для сопоставления со справочником в блоке На карту;\n          - colname = dict_geo;\n          - tehName = dict_geo;\n          - name = Ручной ввод для загрузки геометрии;\n          - typeId = 7;\n          - type = STRING;\n          - maxLength = 0;\n          - isAutocomplete, isPrimaryKey, isMulti, isEdit, isReq имеют значения false;\n          - остальные поля оставляются пустыми.\n\n\n        ## Особенности версий\n        По умолчанию вызывается версия 1 метода (в т.ч. если передано некорректное значение).\n        \n        ### Версия 2\n        Начиная с версии 2 метода в свойствах атрибута возвращается поле `colname`.\n        \n        ### Версия 3\n        В версии 3 метода в свойствах атрибута возвращаются поля `isManualInput`, `isManualInputGeo`, `fillFor`, а среди атрибутов возвращается `geodata` (id=-17).\n        \n        В версии метода 3 НЕ возвращаются любые атрибуты, обозначающие ручной ввод. Это 3 вида атрибутов, описанных выше.\n\n        Начиная с версии 3 метода в свойствах атрибута возвращается поле `isAutocomplete`.\n\n        ### Версия 4\n        В версии 4 метода дополнительно возвращаются поля `geoFormat`, `geoType`, а среди атрибутов возвращется атрибут Наличие геоданных (id=-22). \n      requestBody:\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getCatalogSpecRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getCatalogSpecRequest'\n        required: true\n      responses:\n        '200':\n          description: |-\n            Успешный ответ метода.\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getCatalogSpecResponse'\n              examples:\n                version 4:\n                  $ref: '#/components/examples/getCatalogSpecV4Response'\n                version 3:\n                  $ref: '#/components/examples/getCatalogSpecV3Response'\n                version 2:\n                  $ref: '#/components/examples/getCatalogSpecV2Response'\n                version 1:\n                  $ref: '#/components/examples/getCatalogSpecV1Response'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  #Спецификация каталога   \n  /getCatalogSpecNew:\n    post:\n      tags:\n      - soap\n      summary: Получение спецификации каталога заполнения (для отдельного поставщика)\n      description: |-\n        Возвращает перечень атрибутов каталога, а также свойста этих атрибутов.\n\n        Метод возвращает в т.ч. информацию по вложенным каталогам по `idCatalog`. См. также описание схемы ответа.\n\n        Поведение совпадает с методом `getCatalogSpec` версии 2 за исключением того, что в методе `getCatalogSpec` поле `maxLengthDecimal` всегда возвращается пустым значением (xsi:nil).\n\n        **Метод был разработан для отдельного поставщика данных, не рекомендуется к использованию**\n      requestBody:\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getCatalogSpecNewRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getCatalogSpeNewRequest'\n        required: true\n      responses:\n        '200':\n          description: |-\n            Успешный ответ метода.\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getCatalogSpecNewResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/getCatalogSpecNewResponse'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  #Список данных каталога\n  /getCatalogItems:\n    post:\n      tags:\n      - soap\n      summary: Получение объектов каталога заполнения\n      description: |-\n        Возвращает объекты каталога заполнения, удовлетворяющего параметрам запроса.\n\n        Метод поддерживает фильтрацию и получение данных по вложенным каталогам.\n\n        Помимо атрибутов каталога возвращаются:\n          - global_id (id = -1);\n          - system_object_id (id = -2);\n          - global_object_id (id = -3), только для вложенных объектов;\n          - system_global_object_id (id = -5), только для вложенных объектов;\n          - geodata (id = -17), если во входных параметрах fetchGeodata = true, для вложенных каталогов тоже возвращается и всегда имеет пустое значение;\n          - наличие геоданных (id = -22), только для корневых объектов;\n          - состояние подписи (id = -4);\n          - ручной ввод для атрибута каталога (id = отрицательный идентификатор объекта);\n          - ручной ввод для загрузки геометрии (id = `-1000-aid`, где aid -  идентификатор атрибута, используемый для сопоставления со справочником при заполнении геоданных);\n          - ручной ввод местоположения (id = -1011), только для корневых объектов.\n\n        \n        Формат значений атрибутов каталога, а также системных атрибутов подробно описан в схеме ответа (см. описание поля `value`).\n\n        Геоданные возвращаются в формате JSON ESRI.\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getCatalogItemsRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getCatalogItemsRequest'\n      responses:\n        '200':\n          description: Успешный ответ метода\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getCatalogItemsResponse'\n              examples:\n                Корневые объекты:\n                  $ref: '#/components/examples/getCatalogItemsRootResponse'\n                Вложенные объекты:\n                  $ref: '#/components/examples/getCatalogItemsNestResponse'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n  /getCatalogItemsNew:\n    post:\n      tags:\n      - soap\n      summary: Получение объектов каталога заполнения (упрощенный метод, для отдельного поставщика)\n      description: |-\n        Возвращает объект каталога заполнения по идентификатору.\n\n        Отличия от `getCatalogItems`:\n          - метод позволяет поиск только по корневым каталогам, при поиске по вложенным - пустой ответ;\n          - метод позволяет фильтрацию только по `global_id` или `system_object_id`, приоритет при поиске отдается `system_object_id`;\n          - передача `global_id` или `system_object_id` обязательна, иначе - пустой ответ;\n          - в методе не возвращаются удаленные объекты, а также объекты, находящиеся на восстановлении;\n          - метод не возвращает геоданные объекта.\n\n        Формат значений атрибутов каталога, а также системных атрибутов подробно описан в схеме ответа (см. описание поля `value`).\n\n        **Метод был разработан для отдельного поставщика данных, не рекомендуется к использованию**\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getCatalogItemsNewRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getCatalogItemsNewRequest'\n      responses:\n        '200':\n          description: Успешный ответ метода\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getCatalogItemsNewResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/getCatalogItemsNewResponse'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  \n  #Получение статистики каталога\n  /getCatalogStats:\n    post:\n      tags:\n      - soap\n      summary: Получение статистики по каталогу заполнения\n      description: |-\n        Возвращает количество объектов, имеющих различный статус.\n\n        Метод возвращает в т.ч. информацию по вложенным каталогам по `idCatalog`. См. также описаниесхемы ответа.\n      requestBody:\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getCatalogStatsRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getCatalogStatsRequest'\n        required: true\n      responses:\n        '200':\n          description: Успешный ответ метода\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getCatalogStatsResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/getCatalogStatsResponse'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  \n  #Список справочников\n  /getAllDict:\n    post:\n      tags:\n      - soap\n      summary: Получение списка справочников\n      description: |-\n        Возвращает список справочников, связанных с каталогами заполнения, доступными системе-поставщику,а также общие данные каждого каталога    \n      requestBody:\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getAllDictRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getAllDictRequest'\n        required: true       \n      responses:\n        '200':\n          description: Успешный ответ метода\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getAllDictResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/getAllDictResponse'\n        '500':\n          $ref: '#/components/responses/ServerError'\n     \n  #Список данных справочника\n  /getDictItem:\n    post:\n      tags:\n      - soap\n      summary: Получение данных справочника\n      description: |-\n        Возвращает список элементов справочников с применением фильтров.\n        \n        Версия 2 дополнительно возвращает признак удаления элементов справочника `isDeleted`.\n\n        По умолчанию вызывается версия 1 метода (в т.ч. если передано некорректное значение).\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getDictItemRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getDictItemRequest'\n      responses:\n        '200':\n          description: Успешный ответ метода\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getDictItemResponse'\n              examples:\n                version 2:\n                  $ref: '#/components/examples/getDictItemResponseV2'\n                version 1:\n                  $ref: '#/components/examples/getDictItemResponseV1'\n        '500':\n          $ref: '#/components/responses/ServerError'\n \n  #Список данных справочника\n  /getDictItemV2:\n    post:\n      tags:\n      - soap\n      summary: Получение данных справочника со значениями дополнительных столбцов справочника\n      description: |-\n        Возвращает список элементов справочников вместе со значениями всех дополнительных столбцов.\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/getDictItemV2Request'\n            examples:\n              Пример:\n                $ref: '#/components/examples/getDictItemV2Request'\n      responses:\n        '200':\n          description: Успешный ответ метода\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/getDictItemV2Response'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/getDictItemV2Response'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  \n  #Подпсание каталога\n  /setSignatureCatalog:\n    post:\n      tags:\n      - soap\n      summary: Подписание метаданных каталога\n      description: |-\n        Подписывает метаданные каталога.\n\n        Для подписания в заголовке запроса передаются данные сертификата и подписи, подписываемыми данными считается идентификатор каталога заполнения, который передается в теле запроса.\n\n        Передача подписи в отличие от метода setDataIn обязательна. Подпись должна быть сформирована с использованием алгоритма шифрования ГОСТ Р 34.11.\n\n        В случае, если подпись не соответствует подписываемым данным, возвращается ошибка с внутренним кодом -5 (`SubscribeFault`). Эта же ошибка возвращается в случаях, если некорректно переданы данные сертификата (поле `wsse:BinarySecurityToken`).\n\n        Подписание может быть осуществлено при соблюдении следующих условий:\n          - все обеъекты каталога подписаны;\n          - объекты каталога не содержат ошибок;\n          - каталог не находится в процессе подписания.\n\n        В случае если все условия соблюдаются, и метаданные каталога уже являются подписанными, осуществляется подписание факта отсутствия изменений в каталоге.\n        \n        В противном возвращается \"успешный\" ответ HTTP с кодом 200 и описанием ошибки.\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/setSignatureCatalogRequest'\n            examples:\n              Пример:\n                $ref: '#/components/examples/setSignatureCatalogRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ на запрос\n\n            С кодом HTTP 200 также могут возвращаться ошибки с внутренним кодом -1 в случаях, если:\n              - осуществляется подписание вложенного каталога;\n              - не все объекты каталога подписаны;\n              - в каталоге есть объекты с ошибками ФЛК;\n              - в каталоге есть объекты с ошибками геометрии;\n              - в каталоге запущен процесс подписания;\n              - получены прочие ошибки, могут возвращаться из методов, вызываемых внутри.\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/setSignatureCatalogResponse'\n              examples:\n                Успешное подписание:\n                  $ref: '#/components/examples/setSignatureCatalogResponse'\n                \"Ошибка: подписание вложенного каталога\":\n                  $ref: '#/components/examples/setSignatureCatalogNestError'\n                \"Ошибка: не все объекты подписаны\":\n                  $ref: '#/components/examples/setSignatureCatalogUnsignedObjectsError'\n                \"Ошибка: есть объекты с ошибками ФЛК\":\n                  $ref: '#/components/examples/setSignatureCatalogInvalidObjectsError'\n                \"Ошибка: есть объекты с ошибками геометрии\":\n                  $ref: '#/components/examples/setSignatureCatalogInvalidGeoError'\n                \"Ошибка: есть активное подписание\":\n                  $ref: '#/components/examples/setSignatureCatalogActiveSingingError'\n                \"Ошибка: прочие ошибки\":\n                  $ref: '#/components/examples/setSignatureCatalogAnyError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n  \n  #Загрузка объектов (в т.ч. с подписью)\n  /setDataIn:\n    post:\n      tags:\n      - soap\n      summary: Сохранение данных каталога\n      description: |-\n        \n        Выполняет создание, изменение или удаление объекта с изменением значений атрибутов и геоданных.\n\n        Метод не требует передачи полной структуры объекта, может принимать только изменения в объекте. Если какие-то атрибуты не передаются, их значения не меняются.\n\n        Метод может принимать объекты только одного корневого каталога.\n\n        Для составления корректного запроса необходимо обернуть сообщение внутри <xml> в тег ![CDATA[ ... ]].\n\n        ## Подписание данных ##\n        Метод может использоваться для подписания переданных объектов, необходимо в заголовке SOAP запроса передать сертификат и подпись с использованием алгоритма шифрования ГОСТ Р 34.11. Для подписания используются стандарты стандартам WS-Security и XMLDSig.\n\n        **Если при подписании передаются изменения по вложенным объектам, в запросе должен быть передан корневые объекты, связанный с ними. Подписать изменения во вложенном объекте без корневого нельзя!**\n\n        Для некоторых систем может быть установлена опция, позволяющая подписать данные без передачи информации о сертификате и подписи (с пустым заголовком SOAP). Данные будут подписаны автоматически, но передача корневого объекта все равно обязательна.\n\n        ## Передача геоданных ##\n        Геоданные передаются в отдельном тэге в формате JSON ESRI. При этом должна использоваться система координат, настроенная в каталоге заполнения.\"\n\n        ## Формирование ответа и ошибки ##\n        В ответе возвращается массив сообщений, содержащих указание объекта, к которому относится сообщение. В массиве могут возвращаться как успешные ответы, так и ошибки.\n\n        Ответ возвращается для объектов, которые находятся выше других в иерархии каталогов, среди объектов, переданных в запросе. Т.е. при передаче объекта вместе с его вложенными ответ будет включать только упоминание родительского объекта (или корневого, если он передан).\n        \n        Если в запросе есть корневой объект, то для него в ответе может возвращаться до трех отдельных сообщений о выполнении операций в рамках запроса. Они формируются в зависимости от типа запроса, наличия подписи и геоданных:\n          - сообщение о выполнении операции сохранения (action = save) или удаления (action = delete);\n          - сообщение о выполнении операции подписания (action = subscribe);\n          - сообщение о выполнении операции сохранения геоданных (action = save_geo);\n\n        Если объект в запросе является вложенным и для него не переданы данные о корневом объекте, то для него может возвращаться только сообщение о выполнении операции сохранения (action = save) или удаления (action = delete).\n        \n        Сообщения об успешных операциях возвращаются с внутренним кодом 1.\n\n        Сообщения об ошибках возвращаются с различными внутренними кодами:\n          - ошибки целостности запроса (код 200), например, передача несуществующего id атрибута;\n          - ошибки сохранения объекта (код -1), например, нарушение ФЛК;\n          - ошибки сохранения геоданных (код 0), например, нарушение формата передачи геоданных;\n          - ошибки удаления объекта (код -10), например, попытка удаления несуществующего объекта;\n          - ошибки подписания объекта (код -1), например, наличие активного подписания в каталоге;\n\n        **Ошибка несоответствия загруженных данных подписи возвращается как ошибка веб-сервиса с HTTP кодом 500 (подробнее см. описание ошибок)**\n\n        С этим же кодом возвращаются ошибки, которые являются общими для всех методов SOAP API, например, отсутсвие данных авторизации или отсутствие доступа к каталогу.  \n        \n        ## Идентификация и связывание вложенных объектов запроса ##\n        Для идентификации объектов могут использоваться `global_id` (id = -1) и `system_object_id` (id = -2), при одновременном использовании `global_id` считается приоритетным, `system_object_id` в данном случае игнорируется.\n\n        Логика обработки при использовании разных идентификаторов отличается. Например, использовать global_id при создании объектов нельзя, а при использовании system_object_id можно создавать объект новый объект с уже используемым идентификатором, если все другие объекты с ним являются удаленными.\n\n        Объекты (корневые и вложенные) передаются в плоской структуре, т.е. на одном уровне структуры запроса. Для ссылки на родительский объект при этом могут использоваться `global_object_id` (id = -3) и/или `system_global_object_id` (id = -5). При одновременной передаче в одном вложенном объекте используется `global_object_id`, а `system_global_object_id` - игнорируется.\n\n        `system_object_id` уникален только в пределах родительского объекта, а не всего вложенного каталога (табличного атрибута).\n        Следовательно, при использовании `system_global_object_id` необходимо понимать, что данный родительский идентифкатор должен быть уникален. Иными словами, в пределах запроса для любого вложенного объекта не должно быть родительского объекта с совпадающими `system_object_id`.\n\n        По этой причине при использовании для связи с родительскими объектами только `system_global_object_id` в запросе должна быть обеспечена связность от самого нижнего уровня вложенности до корневого объекта без пропусков в звеньях цепи дерева объекта. Другими словами, должен быть передан корневой объект вместе со всеми вложенными объектами, которые связывают узлы запроса, содержащие изменения.\n        Часть \"дерева\" объекта, которую не нужно менять при сохранении, можно не передавать.\n\n        При использовании `global_object_id` проблемы с идентификацией объекта нет, так как `global_id` является уникальным для всех вложенных объектов табличного атрибута.\n        В таком случае по связке `global_object_id` и `parent_catalog_id` сразу можно определить кореневой объект и достроить все дерево объекта от него до всех вложенных объектов.\n        При этом ни родительский, ни корневой объекты могут даже не входить в запрос (если, конечно, в них не вносятся изменения).\n\n        В одном запросе могут использоваться как `global_object_id`, так и `system_global_object_id`.\n        В таком случае чтобы построить дерево объекта необходимо, чтобы цепочка от низшего звена по `system_global_object_id` шла наверх без пробелов до такого вложенного, в котором для связи со следующим уровнем будет использоваться уже `global_object_id`.\n        Иными словами, цепочка может быть неполной, но в ней не должно быть разрывов в части, которая связывается через `system_global_object_id`. Заканчиваться такая цепочка должна либо корневым объектов, либо ссылкой на родительский объект по `global_object_id`.\n\n        **Объект может быть передан без указания каких-либо идентификаторов, но в таком случае он должен только создаваться. Изменить существующий объект таким образом нельзя.**\n\n        **Так может быть создан как корневой объект, так и вложенный.**\n\n        **Но в случае со вложенным объектом, для него должны быть указана ссылка на родительский объект по `global_object_id` или по `system_global_object_id`, если в запросе переданы родительские объекты, позволяющие идентифицировать корневой объект по правилам, описанным выше.**\n\n      requestBody:\n        required: true\n        content:\n          application/soap+xml:\n            schema:\n              $ref: '#/components/schemas/setDataInRequest'\n            examples:\n              Запрос без подписи:\n                $ref: '#/components/examples/setDataInRequest'\n              Запрос с подписью:\n                $ref: '#/components/examples/setDataInSignedRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ метода\n\n            В ответе возвращается массив сообщений, содержащих указание объекта, к которому относится сообщение. В массиве могут возвращаться как успешные ответы, так и ошибки.\n\n            Ответ возвращается для объектов, которые находятся выше других в иерархии каталогов, среди объектов, переданных в запросе. Т.е. при передаче объекта вместе с его вложенными ответ будет включать только упоминание родительского объекта (или корневого, если он передан).\n            \n            Если в запросе есть корневой объект, то для него в ответе может возвращаться до трех отдельных сообщений о выполнении операций в рамках запроса. Они формируются в зависимости от типа запроса, наличия подписи и геоданных:\n              - сообщение о выполнении операции сохранения (action = save) или удаления (action = delete);\n              - сообщение о выполнении операции подписания (action = subscribe);\n              - сообщение о выполнении операции сохранения геоданных (action = save_geo);\n\n            Если объект в запросе является вложенным и для него не переданы данные о корневом объекте, то для него может возвращаться только сообщение о выполнении операции сохранения (action = save) или удаления (action = delete).\n            \n            Сообщения об успешных операциях возвращаются с внутренним кодом 1.\n\n            Сообщения об ошибках возвращаются с различными внутренними кодами:\n              - ошибки целостности запроса (код 200), например, передача несуществующего id атрибута;\n              - ошибки сохранения объекта (код -1), например, нарушение ФЛК;\n              - ошибки сохранения геоданных (код 0), например, нарушение формата передачи геоданных;\n              - ошибки удаления объекта (код -10), например, попытка удаления несуществующего объекта;\n              - ошибки подписания объекта (код -1), например, наличие активного подписания в каталоге;\n          content:\n            application/soap+xml:\n              schema:\n                $ref: '#/components/schemas/setDataInResponse'\n              examples:\n                Запрос успешно обработан:\n                  $ref: '#/components/examples/setDataInResponse'\n                # Ошибка целостности запроса:\n                #   $ref: '#/components/examples/setDataInInvalidRequestError'\n        '500':\n          $ref: '#/components/responses/ServerError'\n\n        \n            \ncomponents:\n  schemas:\n    EhdEnvelopeRequest:\n      description: Конверт SOAP сервиса ЕХД с информацией о запросе\n      type: object\n      xml:\n        prefix: soapenv\n        name: Envelope\n        namespace: http://schemas.xmlsoap.org/soap/envelope/\n      properties:\n        Body:\n          description: Тело запроса SOAP\n          type: object\n          xml:\n            name: Body\n            prefix: soapenv\n        Header:\n          description: Заголовок запроса SOAP\n          type: object\n          xml:\n            name: Header\n            prefix: soapenv\n        \"xmlns:ehd\":\n          description: Пространство имен SOAP-сервиса ЕХД\n          type: string\n          enum:\n            - http://ehd.mos.com/\n          xml:\n            attribute: true\n          default: http://ehd.mos.com/\n      required:\n        - Body\n        - \"xmlns:ehd\"\n\n    EhdEnvelopeSignedRequest:\n      description: Конверт SOAP сервиса ЕХД с информацией о подписанном запросе\n      type: object\n      xml:\n        prefix: soapenv\n        name: Envelope\n        namespace: http://schemas.xmlsoap.org/soap/envelope/\n      properties:\n        Body:\n          description: Тело запроса SOAP\n          type: object\n          xml:\n            name: Body\n            prefix: soapenv\n        Header:\n          description: Заголовок запроса SOAP\n          type: object\n          xml:\n            name: Header\n            prefix: soapenv\n          properties:\n            Security:\n              description: Объект подписи WS-Security\n              type: object\n              xml:\n                prefix: wsse\n                name: Security\n              properties:\n                actor:\n                  description: Получатель заголовка подписи для узла СМЭВ\n                  type: string\n                  xml:\n                    prefix: soapenv\n                    name: actor\n                    attribute: true\n                  enum:\n                    - http://smev.gosuslugi.ru/actors/smev\n                  default: http://smev.gosuslugi.ru/actors/smev\n                BinarySecurityToken:\n                  description: Информация о сертификате подписи\n                  type: string\n                  xml:\n                    prefix: wsse\n                    name: BinarySecurityToken\n                  properties:\n                    EncodingType:\n                      description: Алгоритм кодировки сертификата, обычно, Base64\n                      type: string\n                      xml:\n                        attribute: true\n                    ValueType:\n                      description: Формат сертификата, обычно, X509v3\n                      type: string\n                      xml:\n                        attribute: true\n                    Id:\n                      description: Уникальный идентификатор сертификата для ссылки из других элементов заголовка, используется в `ds:KeyInfo`\n                      type: string\n                      xml:\n                        prefix: wsu\n                        name: Id\n                        attribute: true\n                  required:\n                    - EncodingType\n                    - ValueType\n                    - Id\n                Signature:\n                  description: Информация о подписи и подписанных данных\n                  type: object\n                  xml:\n                    prefix: ds\n                    name: Signature\n                  properties:\n                    SignedInfo:\n                      description: Информация о подписанных данных и алгоритмах подписания\n                      type: object\n                      xml:\n                        prefix: ds\n                        name: SignedInfo\n                      properties:\n                        CanonicalizationMethod:\n                          description: Алгоритм канонизации XML\n                          type: object\n                          xml:\n                            prefix: ds\n                            name: CanonicalizationMethod\n                          properties:\n                            Algorithm:\n                              description: Идентификатор алгоритма\n                              type: string\n                              xml:\n                                attribute: true\n                          required:\n                            - Algorithm\n                        SignatureMethod:\n                          description: Алгоритм подписания, ГОСТ Р 34.11-2012 (ключ 256 бит)\n                          xml:\n                            prefix: ds\n                            name: SignatureMethod\n                          properties:\n                            Algorithm:\n                              description: Идентификатор алгоритма\n                              type: string\n                              xml:\n                                attribute: true\n                          required:\n                            - Algorithm\n                        Reference:\n                          description: Ссылка на подписываемый элемент в структуре заголовка\n                          type: object\n                          xml:\n                            prefix: ds\n                            name: Reference\n                          properties:\n                            URI:\n                              description: Тэг заголовка, в котором записаны подписываемые данные, значение из `wsu:Id`.\n                              type: string\n                              xml:\n                                attribute: true\n                            Transforms:\n                              description: Список преобразований, применяемых к подписываемым данным, перед вычислением хэша\n                              xml:\n                                prefix: ds\n                                name: Transforms\n                              type: array\n                              items:\n                                type: object\n                                properties:\n                                  Transform:\n                                    description: Алгоритм преобразования\n                                    type: object\n                                    xml:\n                                      prefix: ds\n                                      name: Transform\n                                    properties:\n                                      Algorithm:\n                                        description: Идентификатор алгоритма\n                                        type: string\n                                        xml:\n                                          attribute: true\n                                    required:\n                                      - Algorithm\n                                required:\n                                  - Transform\n                            DigestMethod:\n                              description: Алгоритм хэширования\n                              type: object\n                              xml:\n                                prefix: ds\n                                name: DigestMethod\n                              properties:\n                                Algorithm:\n                                  description: Идентификатор алгоритма\n                                  type: string\n                                  xml:\n                                    attribute: true\n                              required:\n                                - Algorithm\n                            DigestValue:\n                              description: Хэш-сумма подписываемых данных, полученная с помощью указанного алгоритма хэширования, после применения преобразований, указанных в `ds:Transforms` \n                              type: string\n                              xml:\n                                prefix: ds\n                                name: DigestValue\n                          required:\n                            - URI\n                            - Transforms\n                            - DigestMethod\n                            - DigestValue\n                      required:\n                        - CanonicalizationMethod\n                        - SignatureMethod\n                        - Reference\n                    SignatureValue:\n                      description: Значение подписи, результат применения алгоритма ГОСТ Р 34.10-2012 к данным из объекта `SignedInfo`\n                      type: string\n                      xml:\n                        prefix: ds\n                        name: SignatureValue\n                    KeyInfo:\n                      description: Информация о ключе, использованном для подписи \n                      type: object\n                      xml:\n                        prefix: ds\n                        name: KeyInfo\n                      properties:\n                        SecurityTokenReference:\n                          description: Ссылка на сертификат, который использовался для подписи\n                          type: object\n                          xml:\n                            prefix: wsse\n                            name: SecurityTokenReference\n                          properties:\n                            Reference:\n                              description: Значение ссылки\n                              type: object\n                              xml:\n                                prefix: wsse\n                                name: Reference\n                              properties:\n                                URI:\n                                  description: Тэг заголовка, в котором записан закодированный сертификат, значение из `wsu:Id`.\n                                  type: string\n                                  xml:\n                                    attribute: true\n                                ValueType:\n                                  description: Формат сертификата, обычно, X509v3\n                                  type: string\n                                  xml:\n                                    attribute: true\n                              required:\n                                - URI\n                                - ValueType\n                          required:\n                            - Reference\n                      required:\n                        - SecurityTokenReference\n                  required:\n                    - SignedInfo\n                    - SignatureValue\n                    - KeyInfo\n              required:\n                - actor\n                - BinarySecurityToken\n                - Signature\n          required:\n            - Security\n                \n        \"xmlns:ehd\":\n          description: Пространство имен SOAP-сервиса ЕХД\n          type: string\n          enum:\n            - http://ehd.mos.com/\n          xml:\n            attribute: true\n          default: http://ehd.mos.com/\n        \"xmlns:ds\":\n          description: Пространство имён для XML Digital Signature\n          type: string\n          enum:\n            - http://www.w3.org/2000/09/xmldsig#\n          xml:\n            attribute: true\n          default: http://www.w3.org/2000/09/xmldsig#\n        \"xmlns:wsse\":\n          description: Пространство имён для WS-Security (Web Services Security)\n          type: string\n          enum:\n            - http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\n          xml:\n            attribute: true\n          default: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\n        \"xmlns:wsu\":\n          description: Пространство имён для работы с утилитами безопасности в рамках стандарта WS-Security (Web Services Security)\n          type: string\n          enum:\n            - http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\n          xml:\n            attribute: true\n          default: http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\n      required:\n        - Body\n        - Header\n        - \"xmlns:ehd\"\n        - \"xmlns:ds\"\n        - \"xmlns:wsse\"\n        - \"xmlns:wsu\"\n\n    EhdEnvelopeResponse:\n      description: Конверт SOAP сервиса ЕХД с информацией об овтете\n      type: object\n      xml:\n        prefix: S\n        name: Envelope\n        namespace: http://schemas.xmlsoap.org/soap/envelope/\n      properties:\n        Body:\n          description: Тело ответа SOAP\n          type: object\n          xml:\n            name: Body\n            prefix: S\n        Header:\n          description: Заголовок ответа SOAP\n          type: object\n          xml:\n            name: Header\n            prefix: S\n        \"xmlns:ehd\":\n          description: Пространство имен SOAP-сервиса ЕХД\n          type: string\n          enum:\n            - http://ehd.mos.com/\n          xml:\n            attribute: true\n          default: http://ehd.mos.com/\n        # \"xmlns:xsi\":\n        #   description: Пространство имен xsd-схемы xsi\n        #   type: string\n        #   enum:\n        #     - http://www.w3.org/2001/XMLSchema-instance\n        #   xml:\n        #     attribute: true\n        #   default: http://www.w3.org/2001/XMLSchema-instance\n      required:\n        - Body\n        - \"xmlns:ehd\"\n    \n    ServerError:\n      description: Ошибка сервера SOAP\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                Fault:\n                  description: Информация об ошибке\n                  type: object\n                  xml:\n                    prefix: S\n                    name: Fault\n                  properties:\n                    faultcode:\n                      description: Код ошибки сервера, всегда `S:Server`\n                      type: string\n                      enum:\n                        - \"S:Server\"\n                    faultstring:\n                      description: Сообщение об ошибке\n                      type: string\n                    detail:\n                      description: Объект с детальной информацией об ошибке\n                      type: object\n                      oneOf:\n                        - properties:\n                            AuthFault:\n                              type: object\n                              xml:\n                                prefix: ehd\n                                name: AuthFault\n                              properties:\n                                faultCode:\n                                  description: Код ошибки авторизации\n                                  type: integer\n                                  enum:\n                                    - -1\n                                    - -2\n                                    - -3\n                                    - -5\n                                faultString:\n                                  description: Текст ошибки\n                                  type: string\n                              required:\n                                - faultCode\n                                - faultString\n                          required:\n                            - AuthFault\n                        - properties:\n                            SubscribeFault:\n                              type: object\n                              xml:\n                                prefix: ehd\n                                name: SubscribeFault\n                              properties:\n                                faultCode:\n                                  description: Код ошибки подписания для метода setSignatureCatalog\n                                  type: integer\n                                  enum:\n                                    - -5\n                                faultString:\n                                  description: Текст ошибки\n                                  type: string\n                              required:\n                                - faultCode\n                                - faultString\n                          required:\n                            - SubscribeFault\n                            \n                  required:\n                    - faultcode\n                    - faultstring\n              required:\n                - Fault\n    \n    getCatalogListRequest:\n      description: Схема запроса метода getCatalogList\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getCatalogList:\n                  description: Объект запроса getCatalogList\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getCatalogList\n                  properties:\n                    version:\n                      description: Версия метода, по умолчанию 1.\n                      type: integer\n                      default: 1\n                      enum:\n                        - 1\n                        - 2\n              required:\n                - getCatalogList\n\n    getCatalogListResponse:\n      description: |-\n        Список каталогов заполнения\n\n        Схема ответа метода getCatalogList\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getCatalogListResponse:\n                  description: Объект ответа getCatalogList\n                  type: object\n                  properties:\n                    ehdCatalogs:\n                      type: array\n                      description: Массив объектов ehdCatalog\n                      xml:\n                        prefix: ehd\n                        name: ehdCatalogs\n                      items:\n                        type: object\n                        properties:\n                          ehdCatalog:\n                            type: object\n                            xml:\n                              prefix: ehd\n                              name: ehdCatalog\n                            properties:\n                              id:\n                                description: |-\n                                  Идетификатор каталога заполнения\n                                type: integer\n                              fullName:\n                                description: |-\n                                  Полное наименование каталога заполнения\n\n                                  Для вложенных каталогов возвращается значение русскоязычного наименования табличного атрибута ЕХД\n                                type: string\n                              technicalName:\n                                description: |-\n                                  Техническое наименование каталога заполнения\n\n                                  Для вложенных каталогов возвращается значение русскоязычного наименования табличного атрибута ЕХД\n                                type: string\n                              shortName:\n                                description: |-\n                                  Краткое наименование каталога заполнения\n\n                                  Для вложенных каталогов возвращается значение русскоязычного наименования табличного атрибута ЕХД\n                                type: string\n                              accountingObject:\n                                description: |-\n                                  Объект учета каталога заполнения\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n                                type: string\n                              keywords:\n                                description: |-\n                                  Ключевые слова каталога заполнения\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n                                type: string\n                              vid:\n                                description: |-\n                                  Вид каталога заполнения. Возможные значения:\n                                    - `Справочник (основные атрибуты объекта)` - для корневых каталогов\n                                    - `Справочник (дополнительные атрибуты)` - для вложенных каталогов\n                                type: string\n                              type:\n                                description: |-\n                                  Тип каталога заполнения\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n                                type: string\n                              period:\n                                description: |-\n                                  Периодичность обновления каталога заполнения\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n                                type: string\n                              hasGeo:\n                                description: |-\n                                  Могут ли объекты каталога иметь геоданные\n\n                                  Для вложенных каталогов значение всегда `false`\n                                type: boolean\n                              categories:\n                                description: |-\n                                  Тематические категории каталога заполнения\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n                                type: string\n                              oiv:\n                                description: |-\n                                  Наименования ОИВов-поставщиков данных каталога заполнения, разделенных запятой с пробелом\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n                                type: string\n                              objCategories:\n                                description: |-\n                                  Возвращается только в версии 2 метода\n                                  \n                                  Наименование категорий объектов каталога заполнения, разделенных точкой с запятой и пробелом\n\n                                  Для вложенных каталогов значение совпадает с корневым каталогом \n\n                                type: string\n                            required:\n                              - id\n                              - fullName\n                              - technicalName\n                              - shortName\n                              - accountingObject\n                              - keywords\n                              - vid\n                              - type\n                              - period\n                              - hasGeo\n                              - categories\n                              - oiv\n                        required:\n                        - ehdCatalog\n                  required:\n                    - ehdCatalogs\n    \n    getCatalogSpecRequest:\n      description: Схема запроса метода getCatalogSpec\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getCatalogSpec:\n                  description: Объект запроса getCatalogSpec\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getCatalogSpec\n                  properties:\n                    idCatalog:\n                      description: Идентификатор каталога\n                      type: integer\n                    version:\n                      description: Версия метода, по умолчанию 1\n                      type: integer\n                      enum:\n                        - 1\n                        - 2\n                        - 3\n                        - 4\n                  required:\n                    - idCatalog\n              required:\n                - getCatalogSpec\n\n    getCatalogSpecNewRequest:\n      description: Схема запроса метода getCatalogSpecNew\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getCatalogSpec:\n                  description: Объект запроса getCatalogSpecNew\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getCatalogSpecNew\n                  properties:\n                    idCatalog:\n                      description: Идентификатор каталога\n                      type: integer\n                  required:\n                    - idCatalog\n              required:\n                - getCatalogSpec\n\n    getCatalogSpecResponse:\n      description: Схема ответа getCatalogSpec\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getCatalogSpecResponse:\n                  xml:\n                    prefix: ehd\n                    name: getCatalogSpecResponse\n                  properties:\n                    ehdAttrSpec:\n                      xml:\n                        prefix: ehd\n                        name: ehdAttrSpec\n                      type: array\n                      items:\n                        properties:\n                          count:\n                            description: |-\n                              Количество всех объектов в каталоге\n                            type: integer\n                          geoFormat:\n                            description: |-\n                              Система координат геоданных объектов каталога\n                                - `WGS84`\n                                - `MSK77`\n\n                              Возвращается в версии 4 метода\n                            type: string\n                          geoType:\n                            description: |-\n                              Тип геоданных, которые может иметь объект. Значения перечиляются через точку с запятой. Допустимые значения:\n                                - `Point` - точка (мультиточка)\n                                - `Line` - линия (мультилиния)\n                                - `Poly` - полигон (мультиполигон)\n\n                              Возвращается в версии 4 метода\n                            type: string\n                          ehdCommonAttribute:\n                            type: object\n                            properties:\n                              id:\n                                description: |-\n                                  Идентификатор атрибута в каталоге\n                                type: integer\n                              refCatalog:\n                                description: |-\n                                  Идентификатор каталога, связанного со ссылочным атрибутом, или идентификатор вложенного каталога для табличных атрибутов\n                                type: integer\n                              dictId:\n                                description: |-\n                                  Идентификатор справочника для справочного атрибута\n                                type: integer\n                              typeId:\n                                description: |-\n                                  Идентификатор типа атрибута\n                                type: integer\n                              maxLength:\n                                description: |-\n                                  Максимальная длина значения атрибута\n                                  \n                                  Для целых чисел, дробных чисел и строк - значение берется из настроек атрибутов каталога\n\n                                  Для дробных чисел возвращается максимальная длина дробной части\n\n                                  Для geodata возвращается null (xsi:nil)\n\n                                  Для global_id, global_object_id значение всегда 100\n\n                                  Для атрибутов ручного ввода (в т.ч. по геометрии) возвращается 0\n\n                                  Для остальных атрибутов возвращается 4000\n                                type: integer\n                              maxLengthDecimal:\n                                description: |-\n                                  Максимальная длина дробной части дробного числа\n                                type: integer\n                              fieldMask:\n                                description: |-\n                                  Маска значения атрибута\n                                type: string\n                              name:\n                                description: |-\n                                  Русскоязычное наименование атрибута\n                                type: string\n                              colname:\n                                description: |-\n                                  Наименование атрибута с идентификатором\n\n                                  Возвращается, начиная с версии 2 метода\n                                type: string\n                              isEdit:\n                                description: |-\n                                  Является ли атрибут редактируемым\n                                type: boolean\n                              isReq:\n                                description: |-\n                                  Является ли атрибут обязательным\n                                type: boolean\n                              isPrimaryKey:\n                                description: |-\n                                  Является ли атрибут первичным ключом\n                                type: boolean\n                              tehName:\n                                description: |-\n                                  Техническое наименование атрибута\n                                type: string\n                              isMulti:\n                                description: |-\n                                  Может ли атрибут содержать несколько значений\n                                type: boolean\n                              type:\n                                description: |-\n                                  Техническое наименование типа атрибута\n\n                                    - `INTEGER` - дробное число (также применяется к gloabl_id и gloabl_object_id)\n                                    - `INT` - целое число\n                                    - `STRING` - текст (также применяется к system_object_id, system_global_object_id, состоянию подписи, а также атрибутам ручного ввода)\n                                    - `DATE` – дата. Возможные форматы передаются в поле маски\n                                    - `DICT` - справочник\n                                    - `TABLE` – таблица\n                                    - `FILE` - файл\n                                    - `LINK` - ссылка на объект каталога\n                                    - `BOOLEAN` - логический тип (также применяется к has_geo в версии 4 метода)\n                                    - `GEO` - геоданные (только для геоданных, которые возвращаются как отдельный атрибут в версии 3 метода)\n                                type: string\n                                enum:\n                                  - INTEGER\n                                  - INT\n                                  - STRING\n                                  - DATE\n                                  - DICT\n                                  - TABLE\n                                  - FILE\n                                  - LINK\n                                  - BOOLEAN\n                                  - GEO\n                              isDeletedTMP:\n                                description: |-\n                                  Устаревшее. Признак неподписанного удаления атрибута\n\n                                  Сейчас всегда возвращется как `xsi:nil=\"true\"`.\n                                type: boolean\n                              isDeleted:\n                                description: |-\n                                  Устаревшее. Признак подписанного удаления атрибута\n\n                                  Сейчас всегда возвращется как `xsi:nil=\"true\"`.\n                                type: boolean\n                              isAutocomplete:\n                                description: |-\n                                  Может ли атрибут быть заполнен автозаполнением\n\n                                  Возвращается, начиная с версии 3 метода\n                                type: boolean\n                              isManualInput:\n                                description: |-\n                                  Может ли атрибут быть заполнен с использованием ручного ввода\n                                  \n                                  Возвращается только в версии 3 метода\n                                type: boolean\n                              isManualInputGeo:\n                                description: |-\n                                  Могут ли геоданные быть заполнены с использованием ручного ввода\n                                  \n                                  Возвращается только в версии 3 метода\n                                type: boolean\n                              fillFor:\n                                description: |-\n                                  Режим, при котором значение атрибута может быть изменено\n\n                                    - `ADDED` - создание объекта\n                                    - `MODIFIED` - создание иди изменение объекта\n                                    - `DELETED` - удаление объекта\n                                  \n                                  Возвращается только в версии 3 метода\n                            required:\n                              - id\n                              - refCatalog\n                              - typeId\n                              - dictId\n                              - maxLength\n                              - maxLengthDecimal\n                              - fieldMask\n                              - name\n                              - isEdit\n                              - isReq\n                              - isPrimaryKey\n                              - tehName\n                              - isMulti\n                              - type\n                              - isDeletedTMP\n                              - isDeleted\n                        required:\n                          - count\n                  required:\n                    - ehdAttrSpec\n              required:\n                - getCatalogSpecResponse\n\n    getCatalogSpecNewResponse:\n      description: Схема ответа getCatalogSpecNew\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getCatalogSpecNewResponse:\n                  xml:\n                    prefix: ehd\n                    name: getCatalogSpecNewResponse\n                  properties:\n                    ehdAttrSpecNew:\n                      xml:\n                        prefix: ehd\n                        name: ehdAttrSpecNew\n                      type: array\n                      items:\n                        properties:\n                          count:\n                            description: |-\n                              Количество всех объектов в каталоге\n                            type: integer\n                          ehdCommonAttribute:\n                            type: object\n                            properties:\n                              id:\n                                description: |-\n                                  Идентификатор атрибута в каталоге\n                                type: integer\n                              refCatalog:\n                                description: |-\n                                  Идентификатор каталога, связанного со ссылочным атрибутом, или идентификатор вложенного каталога для табличных атрибутов\n                                type: integer\n                              dictId:\n                                description: |-\n                                  Идентификатор справочника для справочного атрибута\n                                type: integer\n                              typeId:\n                                description: |-\n                                  Идентификатор типа атрибута\n                                type: integer\n                              maxLength:\n                                description: |-\n                                  Максимальная длина значения атрибута\n                                  \n                                  Для целых чисел, дробных чисел и строк - значение берется из настроек атрибутов каталога\n\n                                  Для дробных чисел возвращается максимальная длина дробной части\n\n                                  Для global_id, global_object_id значение всегда 100\n\n                                  Для атрибутов ручного ввода (в т.ч. по геометрии) возвращается 0\n\n                                  Для остальных атрибутов возвращается 4000\n                                type: integer\n                              maxLengthDecimal:\n                                description: |-\n                                  Максимальная длина дробной части дробного числа\n\n                                  Всегда возвращается пустое значение (xsi:nil)\n                                type: integer\n                              fieldMask:\n                                description: |-\n                                  Маска значения атрибута\n                                type: string\n                              name:\n                                description: |-\n                                  Русскоязычное наименование атрибута\n                                type: string\n                              colname:\n                                description: |-\n                                  Наименование атрибута с идентификатором\n                                type: string\n                              isEdit:\n                                description: |-\n                                  Является ли атрибут редактируемым\n                                type: boolean\n                              isReq:\n                                description: |-\n                                  Является ли атрибут обязательным\n                                type: boolean\n                              isPrimaryKey:\n                                description: |-\n                                  Является ли атрибут первичным ключом\n                                type: boolean\n                              tehName:\n                                description: |-\n                                  Техническое наименование атрибута\n                                type: string\n                              isMulti:\n                                description: |-\n                                  Может ли атрибут содержать несколько значений\n                                type: boolean\n                              type:\n                                description: |-\n                                  Техническое наименование типа атрибута\n\n                                    - `INTEGER` - дробное число (также применяется к gloabl_id и gloabl_object_id)\n                                    - `INT` - целое число\n                                    - `STRING` - текст (также применяется к system_object_id, system_global_object_id, состоянию подписи, а также атрибутам ручного ввода)\n                                    - `DATE` – дата. Возможные форматы передаются в поле маски\n                                    - `DICT` - справочник\n                                    - `TABLE` – таблица\n                                    - `FILE` - файл\n                                    - `LINK` - ссылка на объект каталога\n                                    - `BOOLEAN` - логический тип\n                                type: string\n                                enum:\n                                  - INTEGER\n                                  - INT\n                                  - STRING\n                                  - DATE\n                                  - DICT\n                                  - TABLE\n                                  - FILE\n                                  - LINK\n                                  - BOOLEAN\n                              isDeletedTMP:\n                                description: |-\n                                  Устаревшее. Признак неподписанного удаления атрибута\n\n                                  Сейчас всегда возвращется как `xsi:nil=\"true\"`.\n                                type: boolean\n                              isDeleted:\n                                description: |-\n                                  Устаревшее. Признак подписанного удаления атрибута\n\n                                  Сейчас всегда возвращется как `xsi:nil=\"true\"`.\n                                type: boolean\n                            required:\n                              - id\n                              - refCatalog\n                              - typeId\n                              - dictId\n                              - maxLength\n                              - maxLengthDecimal\n                              - fieldMask\n                              - name\n                              - isEdit\n                              - isReq\n                              - isPrimaryKey\n                              - tehName\n                              - isMulti\n                              - type\n                              - isDeletedTMP\n                              - isDeleted\n                              - colname\n                        required:\n                          - count\n                  required:\n                    - ehdAttrSpecNew\n              required:\n                - getCatalogSpecNewResponse\n        \n    getCatalogStatsRequest:\n      description: Схема запроса метода getCatalogStats\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getCatalogStats:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getCatalogStats\n                  properties:\n                    idCatalog:\n                      description: Идентификатор каталога\n                      type: integer\n                    countSubscribe:\n                      description: |-\n                        Возвращать ли количество неподписанных объектов каталога\n\n                        При передаче значения `1` в ответе возвращается поле `cntNotSubscribe`, при любых других значениях, поле возвращается со значением null (xsi:nil)\n                      type: integer\n                  required:\n                    - idCatalog\n              required:\n                - getCatalogStats\n\n    getCatalogStatsResponse:\n      description: Схема ответа getCatalogStats \n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getCatalogStatsResponse:\n                  xml:\n                    prefix: ehd\n                    name: getCatalogStatsResponse\n                  properties:\n                    ehdCatalogStats:\n                      xml:\n                        prefix: ehd\n                        name: ehdCatalogStats\n                      properties:\n                        catalogId:\n                          description: |-\n                            Идентификатор каталога заполнения\n                          type: integer\n                        fullName:\n                          description: |-\n                            Идентификатор каталога заполнения\n                          type: string\n                        technicalName:\n                          description: |-\n                            Идентификатор каталога заполнения\n                          type: string\n                        cntActiveObj:\n                          description: |-\n                            Число активных объектов в каталоге заполнения\n                          type: integer\n                        cntDelObj:\n                          description: |-\n                            Число удаленных (подписанных) объектов в каталоге заполнения\n                          type: integer\n                        cntNotSubscribe:\n                          description: |-\n                            Число неподписанных объектов в каталоге заполнения\n\n                            Значение возвращается, только если в запросе передано countSubscribe=1, в остальных случаях null (xsi:nil)\n                          type: integer\n                        cntError:\n                          description: |-\n                            Число объектов, имеющих ошибки ФЛК, в каталоге заполнения\n\n                            Для вложенных каталогов всегда 0\n                          type: integer\n                        cntGeoError:\n                          description: |-\n                            Число объектов, имеющих ошибки геоданных, в каталоге заполнения\n                            \n                            Для вложенных каталогов всегда 0\n                          type: integer\n                      required:\n                        - catalogId\n                        - fullName\n                        - technicalName\n                        - cntActiveObj\n                        - cntDelObj\n                        - cntNotSubscribe\n                        - cntError\n                        - cntGeoError\n                  required:\n                    - ehdCatalogStats\n    \n    getAllDictRequest:\n      description: Схема запроса метода getAllDict\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getAllDict:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getAllDict\n              required:\n                - getAllDict\n\n    getAllDictResponse:\n      description: Схема ответа getAllDict\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getAllDictResponse:\n                  xml:\n                    prefix: ehd\n                    name: getAllDictResponse\n                  properties:\n                    ehdDictionaries:\n                      type: array\n                      xml:\n                        prefix: ehd\n                        name: ehdDictionaries\n                      items:\n                        properties:\n                          ehdDictionary:\n                            properties:\n                              id:\n                                description: Идентификатор справочника\n                                type: integer\n                              name:\n                                description: Наименование справочника\n                                type: string\n                              total:\n                                description: Число активных элементов справочника\n                                type: integer\n                            required:\n                              - id\n                              - name\n                              - total\n                        required:\n                        - ehdDictionary\n                  required:\n                    - ehdDictionaries\n              required:\n                - getAllDictResponse\n\n    getDictItemRequest:\n      description: Схема запроса getDictItem\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getDictItem:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getDictItem\n                  properties:\n                    dictionaryId:\n                      description: Идентификатор справочника\n                      type: integer\n                    start:\n                      description: |-\n                        Порядковый номер элемента, с которого осуществляется выборка\n\n                        Начинается с номера 1 включительно\n                      type: integer\n                    end:\n                      description: |-\n                        Порядковый номер элемента (включительно), которым заканчивается выборка \n                      type: integer\n                    elementId:\n                      description: Идентификатор элемента в справочнике, если необходимо найти конкретный элемент\n                      type: string\n                    version:\n                      description: |-\n                        Версия метода, по умолчанию 1.\n                      type: integer\n                      enum:\n                        - 1\n                        - 2\n                      default: 1\n                    showDeleted:\n                      description: Возвращать ли удаленные элементы справочника (при передаче 1)\n                      type: integer\n                      enum:\n                        - 0\n                        - 1\n              required:\n                - getDictItem\n\n    getDictItemResponse:\n      description: Схема ответа getDictItem\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getDictItemResponse:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getDictItemResponse\n                  properties:\n                    ehdDictionaryItems:\n                      type: array\n                      xml:\n                        prefix: ehd\n                        name: ehdDictionaryItems\n                      items:\n                        properties:\n                          ehdDictionary:\n                            properties:\n                              id:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              parent_id:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              name:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              enName:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              isDeleted:\n                                description: |-\n                                  Признак удаления элемента справочника\n\n                                    - 0 - активный\n                                    - 1 - удаленный\n\n                                  Возвращается во второй версии метода\n                                type: integer\n                                enum:\n                                  - 0\n                                  - 1\n                            required:\n                              - id\n                              - name\n                              - parent_id\n                              - enName\n                        required:\n                          - ehdDictionary\n                  required:\n                    - ehdDictionaryItems\n              required:\n                - getDictItemResponse\n\n    getDictItemV2Request:\n      description: Схема запроса getDictItemV2\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getDictItemV2:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getDictItemV2\n                  properties:\n                    dictionaryId:\n                      description: Идентификатор справочника\n                      type: integer\n                    start:\n                      description: |-\n                        Порядковый номер элемента, с которого осуществляется выборка\n\n                        Начинается с номера 1 включительно\n                      type: integer\n                    end:\n                      description: |-\n                        Порядковый номер элемента (включительно), которым заканчивается выборка \n                      type: integer\n              required:\n                - getDictItemV2\n\n    getDictItemV2Response:\n      description: Схема ответа getDictItemV2\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getDictIteV2Response:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getDictIteV2Response\n                  properties:\n                    ehdDictionaryItemsV2:\n                      type: array\n                      xml:\n                        prefix: ehd\n                        name: ehdDictionaryItemsV2\n                      items:\n                        properties:\n                          ehdDictionaryItemV2:\n                            properties:\n                              id:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              parent_id:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              name:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              enName:\n                                description: Идентификатор элемента справочника\n                                type: string\n                              dictAttrsV2:\n                                description: Значения всех атрибутов элемента справочника\n                                type: array\n                                items:\n                                  properties:\n                                    tehName:\n                                      description: Техническое наименование атрибута элемента справочника\n                                      type: string\n                                    name:\n                                      description: Наименование атрибута элемента справочника\n                                      type: string\n                                    value:\n                                      description: Значение атрибута элемента справочника\n                                      type: string\n                                  required:\n                                    - techName\n                                    - name\n                                    - value\n                            required:\n                              - id\n                              - name\n                              - parent_id\n                              - enName\n                              - dictAttrsV2\n                        required:\n                          - ehdDictionaryItemV2\n                  required:\n                    - ehdDictionaryItemsV2\n              required:\n                - getDictIteV2Response\n\n    getCatalogItemsRequest:\n      description: Схема запроса getCatalogItems\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getCatalogItems:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getCatalogItems\n                  properties:\n                    idCatalog:\n                      description: Идентификатор каталога заполнения\n                      type: integer\n                    start:\n                      description: |-\n                        Порядковый номер объекта в каталоге, с которого осуществляется выборка\n\n                        Нумерация начинается с 1 включительно\n                      type: integer\n                    end:\n                      description: Порядковый номер объекта в каталоге (включительно), которым заканчивается выборка\n                      type: integer\n                    hideDeleted:\n                      description: |-\n                        Скрывать ли в выдаче удаленные объекты\n\n                        При `true` возвращаются только объекты, находящиеся в статусах:\n                          - новый;\n                          - подписанный;\n                          - на изменении.\n\n                        По умолчанию `false`\n                      type: boolean\n                      default: false\n                    idParentCatalog:\n                      description: Идентификатор родительского каталога\n                      type: boolean\n                    idGlobalObject:\n                      description: Идентификатор родительского объекта\n                      type: boolean\n                    filters:\n                      description: |-\n                        Фильтры по объектам\n\n                        Передается как CDATA, внутри которого должен находиться массив `filters`, содержащий объекты фильтрации `filter`. Для каждого фильтра в виде атрибутов тэга `filter` задается идентификатор атрибута `id_attr` и тип фильтра `filt_type`. Значение фильтра передается между открывающим и закрывающим тэгом `filter`.\n                      type: string\n                      properties:\n                        id_attr:\n                          description: Идентификатор атрибута каталога из спецификации\n                          type: integer\n                          xml:\n                            attribute: true\n                        filt_type:\n                          description: |-\n                            Метод фильтрации\n\n                              - '1' - Содержит указанное значение\n                              - '2' - Начинается на указанное значение\n                              - '3' - Заканчивается на указанное значение\n                              - '4' - Совпадает с указанным значением\n                              - '5' - Только пустые значения\n                              - '6' - Соответствует регулярному выражению\n\n                            В случае если значение для фильтра передано неверно (например, некорректное регулярное выражение), возвращается пустой ответ.\n                          type: integer\n                          enum:\n                            - 1\n                            - 2\n                            - 3\n                            - 4\n                            - 5\n                            - 6\n                          xml:\n                            attribute: true\n                    status:\n                      description: |-\n                        Фильтр по полю статусу объекта\n\n                          - `IS_SIGN` — подписанные и удаленные (подписанные) объекты;\n                          - `IS_SIGN_RUS` — объекты с подписанной русской версией объекта; устаревший фильтр, сейчас совпадает с `IS_SIGN`;\n                          - `IS_NOT_SIGN` — неподписанные объекты, возвращаются новые (ни разу неподписанные), объекты на изменении, на удалении и на восстановлении;\n                          - `IS_DELETED` — удаленные объекты, объекты на удалении, а также объекты на восстановлении;\n                          - `IS_NOT_DELETED` — неудаленные объекты, т.е. новые (ни разу неподписанные), а также подписанные и объекты на изменении;\n                          - `HAS_ERROR` — объекты с ошибками поставщика данных, на данных момент в ЕХД 2 нет разделения на типы ошибок по ОИВам;\n                          - `HAS_NO_MY_ERROR` — объекты с ошибками других ОИВов (поставщиков), на данных момент в ЕХД 2 нет разделения на типы ошибок по ОИВам;\n                          - `GEOSIGN_IN_PROGRESS` — объекты, для которых не завершился перенос гео данных, устаревший фильтр, не актуален для ЕХД 2;\n                          - `IS_HAS_GEO_ERROR` — объекты с ошибками геометрии.\n\n                        Статусы перечисляются через точку с запятой.\n                      type: string\n                      enum:\n                        - IS_SIGN\n                        - IS_SIGN_RUS\n                        - IS_NOT_SIGN\n                        - IS_DELETED\n                        - IS_NOT_DELETED\n                        - HAS_ERROR\n                        - HAS_NO_MY_ERROR\n                        - GEOSIGN_IN_PROGRESS\n                        - IS_HAS_GEO_ERROR\n                    fetchGeodata:\n                      description: |-\n                        Возвращать геоданные объектов в атрибуте geodata\n\n                        По умолчанию `false`\n                      type: boolean\n                      default: false\n                    geoType:\n                      description: |-\n                        Система координат\n                          - `wgs` - Система координат WGS 84\n                          - `msk` - Система координат MSK 77\n\n                        Если в каталоге заполнения установлена система координат WGS 84, получение в формате MSK 77 невозможно. Значение геоданных (в атрибуте с id = -17) будет пустым.\n\n                        По умолчанию используется система координат, настроенная в каталоге заполнения.\n                      type: string\n                      enum:\n                        - wgs\n                        - msk\n                    getSigned:\n                      description: |-\n                        При значении `true` в выдачу попадают последние подписанные версии объектов. Если объект ни разу не подписан, то в выдачу он не попадает.\n\n                        По умолчанию `false`\n                      type: boolean\n                      default: false\n                  required:\n                    - idCatalog\n                    - start\n                    - end\n                    - hideDeleted\n              required:\n                - getCatalogItems\n\n    getCatalogItemsNewRequest:\n      description: Схема запроса getCatalogItemsNew\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeRequest'\n        - properties:\n            Body:\n              properties:\n                getCatalogItemsNew:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: getCatalogItemsNew\n                  properties:\n                    idCatalog:\n                      description: Идентификатор каталога заполнения\n                      type: integer\n                    gloabl_id:\n                      description: Глобальный идентификатор объекта\n                      type: integer\n                    system_object_id:\n                      description: |-\n                        Идентификатор объекта в системе поставщика данных\n\n                        При одновременной передаче с `global_id` приоритет отдается `system_object_id`\n                      type: string\n                    getSigned:\n                      description: |-\n                        При значении `true` в выдачу попадают последние подписанные версии объектов. Если объект ни разу не подписан, то в выдачу он не попадает.\n\n                        По умолчанию `false`\n                      type: boolean\n                      default: false\n                  required:\n                    - idCatalog\n              required:\n                - getCatalogItems\n\n    getCatalogItemsResponse:\n      description: Схема ответа getCatalogItems\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getCatalogItemsResponse:\n                  xml:\n                    prefix: ehd\n                    name: getCatalogItemsResponse\n                  properties:\n                    ehdCatalogItemsset:\n                      type: array\n                      xml:\n                        prefix: ehd\n                        name: ehdCatalogItemsset\n                      items:\n                        properties:\n                          ehdCatalogItem:\n                            description: Объект каталога со значениями атрибутов\n                            type: object\n                            xml:\n                              prefix: ehd\n                              name: ehdCatalogItem\n                            properties:\n                              ehdCatalogAttr:\n                                description: Атрибут каталога (в т.ч. системный)\n                                xml:\n                                  prefix: ehd\n                                  name: ehdCatalogAttr\n                                properties:\n                                  id:\n                                    description: |-\n                                      Идентификатор атрибута каталога\n                                    type: integer\n                                  isDeleted:\n                                    description: |-\n                                      Является ли объект удаленным (подписанным)\n                                        - `0` - нет\n                                        - `1` - да\n                                    type: integer\n                                    enum:\n                                      - 0\n                                      - 1\n                                  isDeletedTMP:\n                                    description: |-\n                                      Является ли объект на удалении (удаленным неподписанным)\n                                        - `0` - нет\n                                        - `1` - да\n                                    type: integer\n                                    enum:\n                                      - 0\n                                      - 1\n                                  tehName:\n                                    description: |-\n                                      Техническое наименование атрибута каталога\n\n                                      Возвращается в `getCatalogSpec`\n                                    type: string\n                                  type:\n                                    description: |-\n                                      Техническое наименование типа атрибута каталога\n\n                                      Возвращается в `getCatalogSpec`\n                                    type: string\n                                    enum:\n                                      - INTEGER\n                                      - INT\n                                      - STRING\n                                      - DATE\n                                      - DICT\n                                      - TABLE\n                                      - FILE\n                                      - LINK\n                                      - BOOLEAN\n                                      - GEO\n                                  value:\n                                    description: |-\n                                      Значение атрибута каталога. В зависимости от типа атрибута значения может отличаться: \n\n                                        - целые числа, дробные числа (дробная часть отделяется запятой), строки, а также любые идентификаторы возвращаются как обычные литералы;\n                                        - дата возвращается в формате ДД.ММ.ГГГГ;\n                                        - дата со временем возвращается в формате ДД.ММ.ГГГГ чч:мм:сс;\n                                        - флаг возвращается со значением 0 (нет) или 1 (да);\n                                        - справочный атрибут возвращается как строка из идентификаторов выбранных справочных элементов, разделенных точкой с запятой;\n                                        - ссылочный атрибут возвращается как строка из  глобальных идентификаторов выбранных объектов, разделенных точкой с запятой;\n                                        - файловый атрибут возвращается как строка из   идентификаторов uuid файлов, разделенных точкой с запятой;\n                                        - табличные атрибуты возвращаются с одним значением - русскоязычным названием атрибута;\n                                        - атрибут \"Состояние подписи\" (id = -4) возвращается со значением 0 (если объект ни разу не подписан) или 1 (если у объекта есть подписанная версия); \n                                        - атрибуты \"Наличие геоданных\" (id = -22), а также атрибуты, обозначающие ручной ввод, возвращаются со значением 0 (нет) или 1 (да); \n                                        - геоданные (id = -17) передаются как json в формате ESRI. Система координат зависит от входящего параметра `geoType`.\n                                    type: string\n                                  dictValue:\n                                    description: Устаревшее, всегда возвращается как null (xsi:nil)\n                                    type: string\n                                  groupValue:\n                                    description: Устаревшее, всегда возвращается как null (xsi:nil)\n                                    type: string\n                                required:\n                                  - id\n                                  - isDeleted\n                                  - isDeletedTMP\n                                  - techName\n                                  - type\n                                  - value\n                                  - dictValue\n                                  - groupValue\n                            required:\n                            - ehdCatalogAttr\n                        required:\n                          - ehdCatalogItem\n                  required:\n                    - ehdCatalogItemsset\n              required:\n                - getCatalogItemsResponse\n\n    getCatalogItemsNewResponse:\n      description: Схема ответа getCatalogItemsNew\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                getCatalogItemsNewResponse:\n                  xml:\n                    prefix: ehd\n                    name: getCatalogItemsNewResponse\n                  properties:\n                    ehdCatalogItemsset:\n                      type: array\n                      xml:\n                        prefix: ehd\n                        name: ehdCatalogItemsset\n                      items:\n                        properties:\n                          ehdCatalogItem:\n                            description: Объект каталога со значениями атрибутов\n                            type: object\n                            xml:\n                              prefix: ehd\n                              name: ehdCatalogItem\n                            properties:\n                              ehdCatalogAttr:\n                                description: Атрибут каталога (в т.ч. системный)\n                                xml:\n                                  prefix: ehd\n                                  name: ehdCatalogAttr\n                                properties:\n                                  id:\n                                    description: |-\n                                      Идентификатор атрибута каталога\n                                    type: integer\n                                  isDeleted:\n                                    description: |-\n                                      Является ли объект удаленным (подписанным)\n                                        - `0` - нет\n                                        - `1` - да\n                                    type: integer\n                                    enum:\n                                      - 0\n                                      - 1\n                                  isDeletedTMP:\n                                    description: |-\n                                      Является ли объект на удалении (удаленным неподписанным)\n                                        - `0` - нет\n                                        - `1` - да\n                                    type: integer\n                                    enum:\n                                      - 0\n                                      - 1\n                                  tehName:\n                                    description: |-\n                                      Техническое наименование атрибута каталога\n                                    type: string\n                                  type:\n                                    description: |-\n                                      Техническое наименование типа атрибута каталога\n                                    type: string\n                                    enum:\n                                      - INTEGER\n                                      - INT\n                                      - STRING\n                                      - DATE\n                                      - DICT\n                                      - TABLE\n                                      - FILE\n                                      - LINK\n                                      - BOOLEAN\n                                  value:\n                                    description: |-\n                                      Значение атрибута каталога. В зависимости от типа атрибута значения может отличаться: \n\n                                        - целые числа, дробные числа (дробная часть отделяется запятой), строки, а также любые идентификаторы возвращаются как обычные литералы;\n                                        - дата возвращается в формате ДД.ММ.ГГГГ;\n                                        - дата со временем возвращается в формате ДД.ММ.ГГГГ чч:мм:сс;\n                                        - флаг возвращается со значением 0 (нет) или 1 (да);\n                                        - справочный атрибут возвращается как строка из идентификаторов выбранных справочных элементов, разделенных точкой с запятой;\n                                        - ссылочный атрибут возвращается как строка из  глобальных идентификаторов выбранных объектов, разделенных точкой с запятой;\n                                        - файловый атрибут возвращается как строка из   идентификаторов uuid файлов, разделенных точкой с запятой;\n                                        - табличные атрибуты возвращаются с одним значением - русскоязычным названием атрибута;\n                                        - атрибут \"Состояние подписи\" (id = -4) возвращается со значением 0 (если объект ни разу не подписан) или 1 (если у объекта есть подписанная версия); \n                                        - атрибуты \"Наличие геоданных\" (id = -22), а также атрибуты, обозначающие ручной ввод, возвращаются со значением 0 (нет) или 1 (да); \n                                    type: string\n                                  dictValue:\n                                    description: Устаревшее, всегда возвращается как null (xsi:nil)\n                                    type: string\n                                  groupValue:\n                                    description: Устаревшее, всегда возвращается как null (xsi:nil)\n                                    type: string\n                                required:\n                                  - id\n                                  - isDeleted\n                                  - isDeletedTMP\n                                  - techName\n                                  - type\n                                  - value\n                                  - dictValue\n                                  - groupValue\n                            required:\n                            - ehdCatalogAttr\n                        required:\n                          - ehdCatalogItem\n                  required:\n                    - ehdCatalogItemsset\n              required:\n                - getCatalogItemsNewResponse\n\n    CommonSubscribeError: \n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                Fault:\n                  xml: \n                    prefix: soap    \n                  properties:\n                    faultcode:\n                      description: Текстовый код, который указывает на тип ошибки\n                      type: string\n                      xml: \n                        prefix: ehd            \n                    faultstring:\n                      description: Текстовое сообщение с объяснением ошибки\n                      type: string\n                      xml: \n                        prefix: ehd\n                    detail:\n                      properties:\n                        SubscribeFault:\n                          xml: \n                            prefix: ehd\n                      required:\n                        - SubscribeFault\n                  required:\n                    - faultcode\n                    - faultstring                    \n              required:\n                - Fault             \n    \n    setSignatureCatalogRequest:\n      description: Схема запроса setSignatureCatalog\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeSignedRequest'\n        - properties:\n            Body:\n              properties:\n                Id:\n                  description: Уникальный идентификатор, на который ссылается подпись в заголовке подписи (например, <ds:Reference URI=\"#body\">).\n                  type: string\n                  xml:\n                    prefix: wsu\n                    name: Id\n                    attribute: true\n                setSignatureCatalog:\n                  type: object\n                  xml:\n                    prefix: ehd\n                    name: setSignatureCatalog\n                  properties:\n                    idCatalog:\n                      description: Идентификатор каталога заполнения\n                      type: integer\n                  required:\n                    - idCatalog\n              required:\n                - setSignatureCatalog\n                - Id\n\n    setSignatureCatalogResponse:\n      description: Схема ответа setSignatureCatalog\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              type: object\n              properties:\n                setSignatureCatalogResponse:\n                  xml:\n                    prefix: ehd\n                    name: setSignatureCatalogResponse\n                  properties:\n                    setSignatureCatalog:\n                      xml:\n                        prefix: ehd\n                        name: setSignatureCatalog\n                      properties:\n                        status:\n                          description: Статус ответа\n                          type: integer\n                        message:\n                          description: Текст сообщения\n                          type: string\n                        detail_message:\n                          description: Детальное сообщение\n                          type: string\n                        catalog_id:\n                          description: Идентификатор подписанного каталога\n                          type: integer\n                        action:\n                          description: Действие, всегда `subscribe`\n                          type: string\n                          enum:\n                            - subscribe\n                      required:\n                        - status\n                        - message\n                        - detail_message\n                        - catalog_id\n                        - action\n                  required:\n                    - setSignatureCatalog\n              required:\n                - setSignatureCatalogResponse\n\n    setDataInRequest:\n      description: Схема запроса setDataIn\n      type: object\n      oneOf:\n        - allOf:\n            - $ref: '#/components/schemas/EhdEnvelopeRequest'\n            - description: Схема неподписанного запроса\n            - properties:\n                Body:\n                  allOf:\n                    - $ref: '#/components/schemas/setDataInBody'\n        - allOf:\n            - $ref: '#/components/schemas/EhdEnvelopeSignedRequest'\n            - description: Схема подписанного запроса\n            - properties:\n                Body:\n                  allOf:\n                    - properties:\n                        Id:\n                          description: Уникальный идентификатор, на который ссылается подпись в заголовке подписи (например, <ds:Reference URI=\"#body\">).\n                          type: string\n                          xml:\n                            prefix: wsu\n                            name: Id\n                            attribute: true\n                    - $ref: '#/components/schemas/setDataInBody'\n                    - required:\n                        - Id\n   \n    setDataInBody:\n      description: Схема тела запроса setDataIn\n      type: object\n      properties:\n        setDataIn:\n          type: object\n          xml:\n            prefix: ehd\n            name: setDataIn\n          properties:\n            xml:\n              description: XML-содержимое запроса, значение внутри оборачивается в CDATA\n              type: object\n              properties:\n                message:\n                  type: object\n                  properties:\n                    id:\n                      description: GUID пакета\n                      type: string\n                    catalog:\n                      description: |-\n                        Данные объектов каталога заполнения, в т.ч. вложенного\n\n                        Объекты в запросе группируются по каталогу \n                      type: object\n                      properties:\n                        parent_catalog_id:\n                          description: Идентификатор родительского каталога при передаче объектов вложенных каталогов \n                          type: integer\n                          xml:\n                            attribute: true\n                        name:\n                          description: Устаревшее, не используется в ЕХД 2\n                          type: string\n                          xml:\n                            attribute: true\n                        item:\n                          description: Данные объекта\n                          type: object\n                          properties:\n                            action:\n                              description: Действие над объектом, подробное описание см. в описании метода `setDataIn`\n                              type: string\n                              xml:\n                                attribute: true\n                              enum:\n                                - added\n                                - modified\n                                - deleted\n                            isManualGeo:\n                              description: Признак заполнения геоданных с использованием ручного ввода для загрузки геометрии в блоке \"На карту\"\n                              type: boolean\n                              xml:\n                                attribute: true\n                            categories:\n                              description: Идентификатор каталога\n                              type: array\n                              items:\n                                properties:\n                                  category:\n                                    description: Идентификатор каталога\n                                    type: integer\n                                    properties:\n                                      nameHier:\n                                        description: Устаревшее, не используется в ЕХД 2\n                                        type: string\n                                        xml:\n                                          attribute: true\n                              minItems: 1\n                              maxItems: 1\n                            geodata:\n                              description: Геоданные объекта, передаются для корневых объектов в формате JSON ESRI\n                              type: string\n                              properties: \n                                isManual:\n                                  description: Признак заполнения атрибутов, описывающих местоположение, с использованием ручного ввода в блоке \"Из карты\"\n                                  type: integer\n                                  xml:\n                                    attribute: true\n                                  enum:\n                                    - 0\n                                    - 1\n                            data:\n                              description: Значения атрибутов объекта\n                              type: array\n                              items:\n                                properties:\n                                  attribute:\n                                    description: Атрибут объекта со значением\n                                    type: object\n                                    properties:\n                                      field_id:\n                                        description: Идентификатор атрибута в каталоге\n                                        type: integer\n                                        xml:\n                                          attribute: true\n                                      type:\n                                        description: Техническое наименование типа атрибута, должно совпадать со значением для атрибута в ответе `getCatalogSpec`\n                                        type: string\n                                        xml:\n                                          attribute: true\n                                        enum:\n                                          - INTEGER\n                                          - INT\n                                          - STRING\n                                          - DATE\n                                          - DICT\n                                          - FILE\n                                          - BOOLEAN\n                                          - LINK\n                                      pk:\n                                        description: Устаревшее, не используется в ЕХД 2\n                                        type: boolean\n                                        example: false\n                                        xml:\n                                          attribute: true\n                                      isManual:\n                                        description: Заполняется ли значение атрибута с использованием ручного ввода\n                                        type: integer\n                                        xml:\n                                          attribute: true\n                                        enum:\n                                          - 0\n                                          - 1\n                                      values:\n                                        description: |-\n                                          Массив значений атрибута\n\n                                          Для справочных, ссылочных атрибутов может быть несколько значений\n\n                                          Файлы пердаются одним значением в массиве `file` внутри `value` \n                                        type: array\n                                        items:\n                                          properties:\n                                            value:\n                                              description: |-\n                                                Значение атрибута, формат зависит от типа атрибута\n                                                  - Файлы передаются в виде объекта с указанием названия, расширения и содержимого в формате Base64\n                                                  - Строки, целые числа, дробные числа (дробная часть отделяется запятой) передаются в виде обычных литералов;\n                                                  - Даты передаются в формате ДД.ММ.ГГГГ;\n                                                  - Даты со временем передаются в формате ДД.ММ.ГГГГ чч:мм:сс;\n                                                  - Флаги передаются в виде значений 0 (нет) или 1 (да);\n                                                  - Справочные элементы передаются со значением \"Атрибута для связи\" справочника из настроек атрибута в каталоге заполнения;\n                                                  - Ссылочные объекты передаются со значением \"Атрибута для связи\" каталога, на который сделана ссылка, из настроек атрибута в каталоге заполнения;\n                                              properties:\n                                                occurrence:\n                                                  description: Устаревшее, не используется в ЕХД 2\n                                                  type: string\n                                                  xml:\n                                                    attribute: true\n                                              oneOf:\n                                                - type: string\n                                                  description: Значения атрибута всех типов кроме файл\n                                                - properties:\n                                                    file:\n                                                      description: Файлы в файловом атрибуте\n                                                      type: array\n                                                      items:\n                                                        properties:\n                                                          name:\n                                                            description: Наименование файла\n                                                            type: string\n                                                            example: example\n                                                          extension:\n                                                            description: Расширение файла\n                                                            type: string\n                                                            example: txt\n                                                            enum:\n                                                              - csv\n                                                              - txt\n                                                              - doc\n                                                              - docx\n                                                              - pdf\n                                                              - pptx\n                                                              - gif\n                                                              - xls\n                                                              - xlsx\n                                                              - xml\n                                                              - jpeg\n                                                              - jpg\n                                                              - png\n                                                              - svg\n                                                              - bmp\n                                                              - jfif\n                                                              - rar\n                                                              - zip\n                                                          content:\n                                                            description: Содержимое файла, закодированное в Base64\n                                                            type: string\n                                                            example: ZXhhbXBsZQ==\n                                                        required:\n                                                          - name\n                                                          - extension\n                                                          - content\n                                    required:\n                                      - field_id\n                                required:\n                                  - attribute\n                          required:\n                            - action\n                            - categories\n                      required:\n                        - item\n                  required:\n                    - catalog\n              required:\n                - message\n          required:\n            - xml\n      required:\n        - setDataIn\n\n    setDataInResponse:\n      description: Схема ответа setDataIn\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/EhdEnvelopeResponse'\n        - properties:\n            Body:\n              properties:\n                setDataInResponse:\n                  description: Массив с сообщениями о выполнении операций обработки объекта\n                  xml:\n                    prefix: ehd\n                    name: setDataInResponse\n                  type: array\n                  items:\n                    properties:\n                      setDataResponse:\n                        description: |-\n                          Сообщение о выполнении операции по конкретному объекту из запроса\n\n                          Возвращается для объекта, который находится выше по иерархии каталогов, среди объектов, переданных в запросе\n\n                          В общем случае может отличаться от корневого объекта каталога, если корневой не был передан в запросе. В таком случае для объекта может возвращаться только объект с типом save или delete.\n                        xml:\n                          prefix: ehd\n                          name: setDataResponse\n                        properties:\n                          status:\n                            description: Статусный код сообщения\n                            type: integer\n                          message:\n                            description: Краткое сообщение\n                            type: string\n                          detail_message:\n                            description: Детальное описание сообщения\n                            type: string\n                          global_id:\n                            description: |-\n                              Глобальный идентификатор объекта, к которому относится ответ\n                            type: integer\n                          system_object_id:\n                            description: |-\n                              Идентификатор объекта в системе-поставщике, к которому относится ответ\n                            type: string\n                          action:\n                            description: |-\n                              Тип операции, на которую получено сообщение \n                                - `save` - сохранение объекта\n                                - `delete` - удаление объекта\n                                - `save_geo` - сохранение геоданных объекта\n                                - `subscribe` - подписание объекта\n                            type: string\n                        required:\n                          - status\n                          - message\n                          - detail_message\n                          - global_id\n                          - system_object_id\n                          - action\n                    required:\n                      - setDataResponse\n              required:\n                - setDataInResponse\n    \n  \n  responses:    \n    ServerError:\n      description: |-\n        Ошибка, возвращаемая как ошибка сервера SOAP. Для более простой сохранности обратной совместимости некоторые логические ошибки, возникаемые на стороне клиента также возвращаются как ошибки сервера (S:Server).\n        \n        Могут возвращаться следующие ошибки:\n          - Отсутствуют username и/или password в HTTP-заголовках запроса (код -1);\n          - Неверная комбинация username и password, или система не существует (код -2);\n          - Запрос выполнен от лица неактивной (удаленной) системы (код -2);\n          - Ошибка парсинга XML (код -3);\n          - Нет доступа (не связан с системой или не существует) к каталогу в методе getCatalogSpec, getCatalogStats, getCatalogItems, setDataIn, setSignatureCatalog (код -3);\n          - Нет доступа (не связан с доступным каталогом или не существует) к справочнику в методе getDictItem, getDictItemV2 (код -3);\n          - Прочие внутренние ошибки сервера (код -3);\n          - Не передан заголовок SOAP с данными сертификата и подписи в методе setSignatureCatalog (код -5);\n          - Подпись не соответствует загруженным данным в методе setSignatureCatalog (код -5), тип объекта с кодом ошибки отличается от setDataIn (SubscribeFault);\n          - Подпись не соответствует загруженным данным в методе setDataIn (код -5), тип объекта с кодом ошибки отличается от setSignatureCatalog (AuthFault);\n          - Превышен лимит по числу одновременных запросов (код -3).\n      content:\n        application/soap+xml:\n          schema:\n            $ref: '#/components/schemas/ServerError'\n          examples:\n            \"[faultCode -1] Не переданы username и password\":\n              $ref: '#/components/examples/NoAuthHeadersError'\n            \"[faultCode -2] Переданы неверные username и password\":\n              $ref: '#/components/examples/WrongAuthDataError'\n            \"[faultCode -2] Система неактивна\":\n              $ref: '#/components/examples/InactiveSystemError'\n            \"[faultCode -3] Ошибка парсинга XML\":\n              $ref: '#/components/examples/XMLParseError'\n            \"[faultCode -3] Нет доступа к каталогу\":\n              $ref: '#/components/examples/CatalogForbiddenError'\n            \"[faultCode -3] Нет доступа к справочнику\":\n              $ref: '#/components/examples/DictionaryForbiddenError'\n            \"[faultCode -3] Внутренняя ошибка сервера\":\n              $ref: '#/components/examples/InternalServerError'\n            \"[faultCode -5] Не передана подпись (метод setSignatureCatalog)\":\n              $ref: '#/components/examples/MissingSignatureError'\n            \"[faultCode -5] Подпись не соответствует данным (метод setSignatureCatalog)\":\n              $ref: '#/components/examples/InvalidSignSetSignatureCatalogError'\n            \"[faultCode -5] Подпись не соответствует данным (метод setDataIn)\":\n              $ref: '#/components/examples/InvalidSignSetDataInError'\n            \"[faultCode -3] Превышен лимит по числу одновременных запросов\":\n              $ref: '#/components/examples/InternalServerError'\n          \n\n  examples:\n    NoAuthHeadersError:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Необходимо передать параметры авторизации\n            detail:\n              ehd:AuthFault:\n                - faultCode: -1\n                - faultString: Необходимо передать параметры авторизации\n    \n    WrongAuthDataError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Переданы неверные сочетания Username и Password\n            detail:\n              ehd:AuthFault:\n                - faultCode: -2\n                - faultString: Переданы неверные сочетания Username и Password\n    \n    InactiveSystemError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Данная система неактивна\n            detail:\n              ehd:AuthFault:\n                - faultCode: -2\n                - faultString: Данная система неактивна\n    \n    XMLParseError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Ошибка разбора XML документа\n            detail:\n              ehd:AuthFault:\n                - faultCode: -3\n                - faultString: Ошибка разбора XML документа\n    \n    InvalidSignSetDataInError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Подпись не соответствует загруженным данным\n            detail:\n              ehd:AuthFault:\n                - faultCode: -5\n                - faultString: Подпись не соответствует загруженным данным\n    \n    MissingSignatureError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Заголовок запроса должен содержать сертификат и подпись\n            detail:\n              ehd:SubscribeFault:\n                - faultCode: -5\n                - faultString: Заголовок запроса должен содержать сертификат и подпись\n    \n    InvalidSignSetSignatureCatalogError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Подпись не соответствует загруженным данным\n            detail:\n              ehd:SubscribeFault:\n                - faultCode: -5\n                - faultString: Подпись не соответствует загруженным данным\n    \n    InternalServerError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Внутренняя ошибка сервера\n            detail:\n              ehd:AuthFault:\n                - faultCode: -3\n                - faultString: Внутренняя ошибка сервера\n\n    LimitsError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Превышен лимит по числу одновременных запросов\n            detail:\n              ehd:AuthFault:\n                - faultCode: -3\n                - faultString: Превышен лимит по числу одновременных запросов\n    \n    CatalogForbiddenError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Нет доступа к каталогу\n            detail:\n              ehd:AuthFault:\n                - faultCode: -3\n                - faultString: Нет доступа к каталогу\n    \n    DictionaryForbiddenError:\n      value:\n        Body:\n          Fault: \n            faultcode: S:Server\n            faultstring: Нет доступа к справочнику\n            detail:\n              ehd:AuthFault:\n                - faultCode: -3\n                - faultString: Нет доступа к справочнику\n                         \n    getCatalogListRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogList:\n            - version: 2\n                      \n    getCatalogListV2Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogListResponse:\n            - ehd:ehdCatalogs:\n              - ehd:ehdCatalog:\n                - ehd:id: 261\n                - ehd:fullName: Реестр разрешений на строительство\n                - ehd:technicalName: Реестр разрешений на строительство\n                - ehd:shortName: Реестр разрешений на строительство\n                - ehd:accountingObject: Разрешения на строительство, выданные Комитетом государственногостроительного надзора города Москвы\n                - ehd:keywords: разрешение, строительство, мосгосстройнадзор, мгсн\n                - ehd:vid: Справочник (основные атрибуты объекта)\n                - ehd:type: Городской отраслевой (ведомственный)\n                - ehd:period: Ежегодно\n                - ehd:hasGeo: false\n                - ehd:categories: Строительство\n                - ehd:oiv: Департамент информационных технологий города Москвы, Управа района Вешняки города Москвы\n                - ehd:objCategories: Реестр разрешений на строительство\n              - ehd:ehdCatalog:\n                - ehd:id: 341\n                - ehd:fullName: Реестр утверждённых проектов планировки территорий\n                - ehd:technicalName: Реестр утверждённых проектов планировки территорий (ППТ)\n                - ehd:shortName: Реестр утверждённых проектов планировки территорий\n                - ehd:accountingObject: Проекты планировок территории, утверждённые постановлениями Правительства Москвы\n                - ehd:keywords: Проект планировки, проекты планировок\n                - ehd:vid: Справочник (основные атрибуты объекта)\n                - ehd:type: Городской отраслевой (ведомственный)\n                - ehd:period: Еженедельно\n                - ehd:hasGeo: false\n                - ehd:categories: Строительство\n                - ehd:oiv: Департамент информационных технологий города Москвы\n                - ehd:objCategories: Реестр утверждённых проектов планировки территорий; Проекты планировок территории, утверждённые постановлениями Правительства Москвы\n    \n    getCatalogListV1Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogListResponse:\n            - ehd:ehdCatalogs:\n              - ehd:ehdCatalog:\n                - ehd:id: 261\n                - ehd:fullName: Реестр разрешений на строительство\n                - ehd:technicalName: Реестр разрешений на строительство\n                - ehd:shortName: Реестр разрешений на строительство\n                - ehd:accountingObject: Разрешения на строительство, выданные Комитетом государственногостроительного надзора города Москвы\n                - ehd:keywords: разрешение, строительство, мосгосстройнадзор, мгсн\n                - ehd:vid: Справочник (основные атрибуты объекта)\n                - ehd:type: Городской отраслевой (ведомственный)\n                - ehd:period: Ежегодно\n                - ehd:hasGeo: false\n                - ehd:categories: Строительство\n                - ehd:oiv: Департамент информационных технологий города Москвы, Управа района Вешняки города Москвы\n              - ehd:ehdCatalog:\n                - ehd:id: 341\n                - ehd:fullName: Реестр утверждённых проектов планировки территорий\n                - ehd:technicalName: Реестр утверждённых проектов планировки территорий (ППТ)\n                - ehd:shortName: Реестр утверждённых проектов планировки территорий\n                - ehd:accountingObject: Проекты планировок территории, утверждённые постановлениямиПравительства Москвы\n                - ehd:keywords: Проект планировки, проекты планировок\n                - ehd:vid: Справочник (основные атрибуты объекта)\n                - ehd:type: Городской отраслевой (ведомственный)\n                - ehd:period: Еженедельно\n                - ehd:hasGeo: false\n                - ehd:categories: Строительство\n                - ehd:oiv: Департамент информационных технологий города Москвы\n\n    getCatalogSpecRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpec:\n              - ehd:idCatalog: 341\n              - ehd:version: 2\n    getCatalogSpeNewRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpec:\n              - ehd:idCatalog: 341\n    \n    getCatalogSpecV4Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpecResponse:\n            - ehd:ehdAttrSpec:\n              - ehd:count: 169\n              - ehd:geoType: Point;Line;Poly\n              - ehd:geoFormat: WGS84\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -1\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 2\n                - ehd:maxLength: 100\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'global_id'\n                - ehd:colname: global_id\n                - ehd:isEdit: false\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: true\n                - ehd:tehName: 'global_id'\n                - ehd:isMulti: false\n                - ehd:type: INTEGER\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -2\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'system_object_id'\n                - ehd:colname: system_object_id\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'system_object_id'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n              - ehd:ehdCommonAttribute:\n                - ehd:id: 586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 9\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: 'XX-000000'\n                - ehd:name: 'Номер контракта'\n                - ehd:colname: col_586905\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'Nomer kontrakta'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -4\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'Состояние подписи'\n                - ehd:colname: signature\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'signature'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -22\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Наличие геоданных\n                - ehd:colname: has_geo\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: has_geo\n                - ehd:isMulti: false\n                - ehd:type: BOOLEAN\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для Номер контракта\n                - ehd:colname: dict_586905\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_1312\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -1011\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод местоположения\n                - ehd:colname: dict_location\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_location\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -587905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для загрузки геометрии\n                - ehd:colname: dict_geo\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_geo\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n    \n    getCatalogSpecV3Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpecResponse:\n            - ehd:ehdAttrSpec:\n              - ehd:count: 169\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -1\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 2\n                - ehd:maxLength: 100\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'global_id'\n                - ehd:colname: global_id\n                - ehd:isEdit: false\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: true\n                - ehd:tehName: 'global_id'\n                - ehd:isMulti: false\n                - ehd:type: INTEGER\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n                - ehd:isManualInput: false\n                - ehd:isManualInputGeo: false\n                - ehd:fillFor: MODIFIED\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -2\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'system_object_id'\n                - ehd:colname: system_object_id\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'system_object_id'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n                - ehd:isManualInput: false\n                - ehd:isManualInputGeo: false\n                - ehd:fillFor: MODIFIED\n              - ehd:ehdCommonAttribute:\n                - ehd:id: 586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 9\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: 'XX-000000'\n                - ehd:name: 'Номер контракта'\n                - ehd:colname: col_586905\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'Nomer kontrakta'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n                - ehd:isManualInput: false\n                - ehd:isManualInputGeo: false\n                - ehd:fillFor: MODIFIED\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -4\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'Состояние подписи'\n                - ehd:colname: signature\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'signature'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n                - ehd:isManualInput: false\n                - ehd:isManualInputGeo: false\n                - ehd:fillFor: MODIFIED\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -17\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: null\n                - ehd:maxLength: null\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: geodata\n                - ehd:colname: geodata\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: geodata\n                - ehd:isMulti: false\n                - ehd:type: GEO\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n                - ehd:isManualInput: false\n                - ehd:isManualInputGeo: false\n                - ehd:fillFor: MODIFIED\n    \n    getCatalogSpecV2Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpecResponse:\n            - ehd:ehdAttrSpec:\n              - ehd:count: 169\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -1\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 2\n                - ehd:maxLength: 100\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'global_id'\n                - ehd:colname: global_id\n                - ehd:isEdit: false\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: true\n                - ehd:tehName: 'global_id'\n                - ehd:isMulti: false\n                - ehd:type: INTEGER\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -2\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'system_object_id'\n                - ehd:colname: system_object_id\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'system_object_id'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n              - ehd:ehdCommonAttribute:\n                - ehd:id: 586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 9\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: 'XX-000000'\n                - ehd:name: 'Номер контракта'\n                - ehd:colname: col_586905\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'Nomer kontrakta'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -4\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'Состояние подписи'\n                - ehd:colname: signature\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'signature'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для Номер контракта\n                - ehd:colname: dict_586905\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_1312\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -1011\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод местоположения\n                - ehd:colname: dict_location\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_location\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -587905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для загрузки геометрии\n                - ehd:colname: dict_geo\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_geo\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n    \n    getCatalogSpecV1Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpecResponse:\n            - ehd:ehdAttrSpec:\n              - ehd:count: 169\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -1\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 2\n                - ehd:maxLength: 100\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'global_id'\n                - ehd:isEdit: false\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: true\n                - ehd:tehName: 'global_id'\n                - ehd:isMulti: false\n                - ehd:type: INTEGER\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -2\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'system_object_id'\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'system_object_id'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n              - ehd:ehdCommonAttribute:\n                - ehd:id: 586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 9\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: 'XX-000000'\n                - ehd:name: 'Номер контракта'\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'Nomer kontrakta'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -4\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'Состояние подписи'\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'signature'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для Номер контракта\n                - ehd:colname: dict_586905\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_1312\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -1011\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод местоположения\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_location\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -587905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для загрузки геометрии\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_geo\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n\n    getCatalogSpecNewResponse:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogSpecNewResponse:\n            - ehd:ehdAttrSpecNew:\n              - ehd:count: 169\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -1\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 2\n                - ehd:maxLength: 100\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'global_id'\n                - ehd:colname: global_id\n                - ehd:isEdit: false\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: true\n                - ehd:tehName: 'global_id'\n                - ehd:isMulti: false\n                - ehd:type: INTEGER\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n              - ehd:ehdCommonAttribute:\n                - ehd:id: -2\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'system_object_id'\n                - ehd:colname: system_object_id\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'system_object_id'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n              - ehd:ehdCommonAttribute:\n                - ehd:id: 586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 9\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: 'XX-000000'\n                - ehd:name: 'Номер контракта'\n                - ehd:colname: col_586905\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'Nomer kontrakta'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -4\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 1\n                - ehd:maxLength: 4000\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: 'Состояние подписи'\n                - ehd:colname: signature\n                - ehd:isEdit: true\n                - ehd:isReq: true\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: 'signature'\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -586905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для Номер контракта\n                - ehd:colname: dict_586905\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_1312\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -1011\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод местоположения\n                - ehd:colname: dict_location\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_location\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n            - ehd:ehdCommonAttribute:\n                - ehd:id: -587905\n                - ehd:refCatalog: null\n                - ehd:dictId: null\n                - ehd:typeId: 7\n                - ehd:maxLength: 0\n                - ehd:maxLengthDecimal: null\n                - ehd:fieldMask: null\n                - ehd:name: Ручной ввод для загрузки геометрии\n                - ehd:colname: dict_geo\n                - ehd:isEdit: false\n                - ehd:isReq: false\n                - ehd:isPrimaryKey: false\n                - ehd:tehName: dict_geo\n                - ehd:isMulti: false\n                - ehd:type: STRING\n                - ehd:isDeletedTMP: null\n                - ehd:isDeleted: null\n                - ehd:isAutocomplete: false\n\n    getCatalogStatsRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogStats:\n            - idCatalog: 261\n            - countSubscribe: 1\n\n    getCatalogStatsResponse:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:ehdCatalogStats:\n            - ehd:catalogId: 263\n            - ehd:fullName: 'ТОП-30 предприятий по объемам выставленных штрафных санкций'\n            - ehd:technicalName: 'top30predpriztii'\n            - ehd:cntActiveObj: 30\n            - ehd:cntDelObj: 4\n            - ehd:cntNotSubscribe: 4\n            - ehd:cntError: 2\n            - ehd:cntGeoError: 0\n\n    getAllDictRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getAllDict:\n\n    getAllDictResponse:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getAllDictResponse:\n            - ehd:ehdDictionaries:\n              - ehd:ehdDictionary:\n                - ehd:id: 60\n                - ehd:name: 'Справочник округов2'\n                - ehd:total: 12\n              - ehd:ehdDictionary:\n                - ehd:id: 61\n                - ehd:name: 'Справочник районов'\n                - ehd:total: 146\n              - ehd:ehdDictionary:\n                - ehd:id: 1\n                - ehd:name: 'Дополнительные адреса'\n                - ehd:total: 24373 \n                               \n    getDictItemRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getDictItem:\n            - ehd:dictionaryId: 24\n            - ehd:start: null\n            - ehd:end: null\n            - ehd:elementId: 12\n            - ehd:version: 2\n            - ehd:showDeleted: 1\n\n    getDictItemResponseV2:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getDictItemResponse:\n            - ehd:ehdDictionaryItems:\n              - ehd:ehdDictionary:\n                - ehd:id: 1\n                - ehd:parent_id: null\n                - ehd:name: 'государственная'\n                - ehd:enName: null\n                - ehd:isDeleted: 0\n              - ehd:ehdDictionary:\n                - ehd:id: 2\n                - ehd:parent_id: 1\n                - ehd:name: 'федеральная'\n                - ehd:enName: null\n                - ehd:isDeleted: 0\n              - ehd:ehdDictionary:\n                - ehd:id: 3\n                - ehd:parent_id: 1\n                - ehd:name: 'субъектов Российской Федерации'\n                - ehd:enName: null\n                - ehd:isDeleted: 0\n\n    getDictItemResponseV1:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getDictItemResponse:\n            - ehd:ehdDictionaryItems:\n              - ehd:ehdDictionary:\n                - ehd:id: 1\n                - ehd:parent_id:\n                - ehd:name: 'государственная'\n                - ehd:enName: null\n              - ehd:ehdDictionary:\n                - ehd:id: 2\n                - ehd:parent_id: 1\n                - ehd:name: 'федеральная'\n                - ehd:enName: null\n              - ehd:ehdDictionary:\n                - ehd:id: 3\n                - ehd:parent_id: 1\n                - ehd:enName: null\n                - ehd:name: 'субъектов Российской Федерации'\n\n    getDictItemV2Request:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getDictItem:\n            - ehd:dictionaryId: 24\n            - ehd:start: null\n            - ehd:end: null\n\n    getDictItemV2Response:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getDictItemResponse:\n            - ehd:ehdDictionaryItems:\n              - ehd:ehdDictionary:\n                - ehd:id: 1\n                - ehd:parent_id:\n                - ehd:name: 'государственная'\n                - ehd:enName: null\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: ID\n                  - ehd:name: Идентификатор\n                  - ehd:value: 1\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: PRNT_ID\n                  - ehd:name: Родительсткий идентификатор\n                  - ehd:value: null\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: NAME\n                  - ehd:name: Наименование\n                  - ehd:value: государственная\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: EN_NAME\n                  - ehd:name: Наименование на английском\n                  - ehd:value: null\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: S_NAME_ENG\n                  - ehd:name: Без названия\n                  - ehd:value: state\n              - ehd:ehdDictionary:\n                - ehd:id: 2\n                - ehd:parent_id: 1\n                - ehd:name: 'федеральная'\n                - ehd:enName: null\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: ID\n                  - ehd:name: Идентификатор\n                  - ehd:value: 2\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: PRNT_ID\n                  - ehd:name: Родительсткий идентификатор\n                  - ehd:value: 1\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: NAME\n                  - ehd:name: Наименование\n                  - ehd:value: федеральная\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: EN_NAME\n                  - ehd:name: Наименование на английском\n                  - ehd:value: null\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: S_NAME_ENG\n                  - ehd:name: Без названия\n                  - ehd:value: federal\n              - ehd:ehdDictionary:\n                - ehd:id: 3\n                - ehd:parent_id: 1\n                - ehd:enName: null\n                - ehd:name: 'субъектов Российской Федерации'\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: ID\n                  - ehd:name: Идентификатор\n                  - ehd:value: 3\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: PRNT_ID\n                  - ehd:name: Родительсткий идентификатор\n                  - ehd:value: 1\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: NAME\n                  - ehd:name: Наименование\n                  - ehd:value: субъектов Российской Федерации\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: EN_NAME\n                  - ehd:name: Наименование на английском\n                  - ehd:value: null\n                - ehd:dictAttrsV2:\n                  - ehd:tehName: S_NAME_ENG\n                  - ehd:name: Без названия\n                  - ehd:value: of Russian Federation subject\n\n    getCatalogItemsRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogItems:\n            - idCatalog: 195283\n            - start: 1\n            - end: 100\n            - hideDeleted: true\n            - idParentCatalog: null\n            - idGlobalObject: null\n            - filters: <![CDATA[<filters><filter id_attr=\"14077\" filt_type=\"2\">Большая Академическая</filter></filters>]]>\n            - status: IS_SIGN_RUS;HAS_ERROR\n            - fetchGeodata: true\n            - geoType: wgs\n            - getSigned: true\n\n    getCatalogItemsNewRequest:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogItems:\n            - idCatalog: 195283\n            - global_id: 12346812\n            - system_object_id: \n            - getSigned: true\n\n    getCatalogItemsRootResponse:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogItemsResponse:\n            - ehd:ehdCatalogItemsset:\n              - ehd:ehdCatalogItem:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'global_id'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: 2184314205\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -2\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'system_object_id'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: '11-1'\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1231\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'integer_attr'\n                  - ehd:type: INT\n                  - ehd:dictValue:\n                  - ehd:value: -122\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1232\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'float_attr'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: -543,73\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'string_attr'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: Строковый атрибут\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1235\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'date_attr'\n                  - ehd:type: DATE\n                  - ehd:dictValue:\n                  - ehd:value: 11.03.2015\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1236\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'datetime_attr'\n                  - ehd:type: DATE\n                  - ehd:dictValue:\n                  - ehd:value: 11.03.2015 13:45:12\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1237\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'boolean_attr'\n                  - ehd:type: BOOLEAN\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1238\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_attr'\n                  - ehd:type: DICT\n                  - ehd:dictValue:\n                  - ehd:value: 3;312;123\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1239\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'link_attr'\n                  - ehd:type: LINK\n                  - ehd:dictValue:\n                  - ehd:value: 43268;7362478\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1240\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'file_attr'\n                  - ehd:type: FILE\n                  - ehd:dictValue:\n                  - ehd:value: 43501099-70a5-4567-874a-e5cc53ecb531;400249e6-e8cf-4bb0-bcfa-f130dfe7f61a;61f11ce6-2ffb-4c72-80a0-dc1a5eac2258\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1241\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'table_attr'\n                  - ehd:type: TABLE\n                  - ehd:dictValue:\n                  - ehd:value: Табличный атрибут\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_647'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -2233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_geo'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1011\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_location'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 0\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -4\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'signature'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -22\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'has_geo'\n                  - ehd:type: BOOLEAN\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -17\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'geodata'\n                  - ehd:type: GEO\n                  - ehd:dictValue:\n                  - ehd:value: '{\"x\":15.999198751972612,\"y\":8969.999234754096,\"spatialReference\":{\"wkid\":77}}'\n                  - ehd:groupValue:\n\n    getCatalogItemsNewResponse:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogItemsResponse:\n            - ehd:ehdCatalogItemsset:\n              - ehd:ehdCatalogItem:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'global_id'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: 2184314205\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -2\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'system_object_id'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: '11-1'\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1231\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'integer_attr'\n                  - ehd:type: INT\n                  - ehd:dictValue:\n                  - ehd:value: -122\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1232\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'float_attr'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: -543,73\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'string_attr'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: Строковый атрибут\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1235\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'date_attr'\n                  - ehd:type: DATE\n                  - ehd:dictValue:\n                  - ehd:value: 11.03.2015\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1236\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'datetime_attr'\n                  - ehd:type: DATE\n                  - ehd:dictValue:\n                  - ehd:value: 11.03.2015 13:45:12\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1237\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'boolean_attr'\n                  - ehd:type: BOOLEAN\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1238\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_attr'\n                  - ehd:type: DICT\n                  - ehd:dictValue:\n                  - ehd:value: 3;312;123\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1239\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'link_attr'\n                  - ehd:type: LINK\n                  - ehd:dictValue:\n                  - ehd:value: 43268;7362478\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1240\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'file_attr'\n                  - ehd:type: FILE\n                  - ehd:dictValue:\n                  - ehd:value: 43501099-70a5-4567-874a-e5cc53ecb531;400249e6-e8cf-4bb0-bcfa-f130dfe7f61a;61f11ce6-2ffb-4c72-80a0-dc1a5eac2258\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1241\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'table_attr'\n                  - ehd:type: TABLE\n                  - ehd:dictValue:\n                  - ehd:value: Табличный атрибут\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_647'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -2233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_geo'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1011\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_location'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 0\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -4\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'signature'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -22\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'has_geo'\n                  - ehd:type: BOOLEAN\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n\n    getCatalogItemsNestResponse:\n      value:\n        xmlns:ehd: http://ehd.mos.com/\n        Body:\n          ehd:getCatalogItemsResponse:\n            - ehd:ehdCatalogItemsset:\n              - ehd:ehdCatalogItem:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'global_id'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: 2184314205\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -2\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'system_object_id'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: '11-1'\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -3\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'global_object_id'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: 1242314323\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -5\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'system_global_object_id'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: '11'\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1231\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'integer_attr'\n                  - ehd:type: INT\n                  - ehd:dictValue:\n                  - ehd:value: -122\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1232\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'float_attr'\n                  - ehd:type: INTEGER\n                  - ehd:dictValue:\n                  - ehd:value: -543,73\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'string_attr'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: Строковый атрибут\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1235\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'date_attr'\n                  - ehd:type: DATE\n                  - ehd:dictValue:\n                  - ehd:value: 11.03.2015\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1236\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'datetime_attr'\n                  - ehd:type: DATE\n                  - ehd:dictValue:\n                  - ehd:value: 11.03.2015 13:45:12\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1237\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'boolean_attr'\n                  - ehd:type: BOOLEAN\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1238\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_attr'\n                  - ehd:type: DICT\n                  - ehd:dictValue:\n                  - ehd:value: 3;312;123\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1239\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'link_attr'\n                  - ehd:type: LINK\n                  - ehd:dictValue:\n                  - ehd:value: 43268;7362478\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1240\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'file_attr'\n                  - ehd:type: FILE\n                  - ehd:dictValue:\n                  - ehd:value: 43501099-70a5-4567-874a-e5cc53ecb531;400249e6-e8cf-4bb0-bcfa-f130dfe7f61a;61f11ce6-2ffb-4c72-80a0-dc1a5eac2258\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: 1241\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'table_attr'\n                  - ehd:type: TABLE\n                  - ehd:dictValue:\n                  - ehd:value: Табличный атрибут\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -1233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_647'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -2233\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'dict_geo'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -4\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'signature'\n                  - ehd:type: STRING\n                  - ehd:dictValue:\n                  - ehd:value: 1\n                  - ehd:groupValue:\n                - ehd:ehdCatalogAttr:\n                  - ehd:id: -17\n                  - ehd:isDeleted: 0\n                  - ehd:isDeletedTmp: 0\n                  - ehd:tehName: 'geodata'\n                  - ehd:type: GEO\n                  - ehd:dictValue:\n                  - ehd:value:\n                  - ehd:groupValue:                              \n                  \n    setSignatureCatalogRequest:\n      description: Пример запроса, в Swagger нет возможности отобразить такой запрос с отступами, пример можно скопировать и отформатировать в редакторе кода\n      value:\n        '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:ehd=\"http://ehd.mos.com/\" xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">\n            <soapenv:Header>\n                <wsse:Security soapenv:actor=\"http://smev.gosuslugi.ru/actors/smev\">\n                    <wsse:BinarySecurityToken EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" wsu:Id=\"SenderCertificate\">\n                        MIIBfzCCASygAwIBAgIFAIQfa3IwCgYIKoUDBwEBAwIwMDELMAkGA1UEBhMCUlUxETAPBgNVBAoMCDQyQU5TV0VSMQ4wDAYDVQQDDAVBRE1JTjAeFw0yMjA1MTMwNjAyMTFaFw0yMzA1MTMwNjAyMTFaMDAxCzAJBgNVBAYTAlJVMREwDwYDVQQKDAg0MkFOU1dFUjEOMAwGA1UEAwwFQURNSU4wZjAfBggqhQMHAQEBATATBgcqhQMCAiMBBggqhQMHAQECAgNDAARA0GpmHAevuMNjh5UkQKYemaZZRorbaCd/ToxOgc6qEvnG6OJjFb4RQ87FuImB921uWAnu77NQLZ1M7oLoDAVvQaMmMCQwDgYDVR0PAQH/BAQDAgbAMBIGA1UdEwEB/wQIMAYBAf8CAQUwCgYIKoUDBwEBAwIDQQDLjZpUaaXhhgP48+K+cJ5OstVGmwn2NFqEUdMRXFOX7Az+9YFyeknpm70HtGtX3ZKx7pdEd8JgkkpCMATXqP1n\n                    </wsse:BinarySecurityToken>\n                    <ds:Signature>\n                        <ds:SignedInfo>\n                            <ds:CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n                            <ds:SignatureMethod Algorithm=\"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34102012-gostr34112012-256\"/>\n                            <ds:Reference URI=\"#body\">\n                                <ds:Transforms>\n                                    <ds:Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\"/>\n                                </ds:Transforms>\n                                <ds:DigestMethod Algorithm=\"urn:ietf:params:xml:ns:cpxmlsec:algorithms:gostr34112012-256\"/>\n                                <ds:DigestValue>JhxNWQ/Lby0lu3rKaHUFO+VQkQvVZemk0yOHvN32zSk=</ds:DigestValue>\n                            </ds:Reference>\n                        </ds:SignedInfo>\n                        <ds:SignatureValue>2xh5FCnLqUOVuxZnKI6y8eydoQ62769drgrC0b6Ny6TbKr7aWFUmNqxt3CNKMK7+b6wwJLwZYn/z8UAjGtasCg==</ds:SignatureValue>\n                        <ds:KeyInfo>\n                            <wsse:SecurityTokenReference>\n                                <wsse:Reference URI=\"#SenderCertificate\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\"/>\n                            </wsse:SecurityTokenReference>\n                        </ds:KeyInfo>\n                    </ds:Signature>\n                </wsse:Security>\n            </soapenv:Header>\n            <soapenv:Body wsu:Id=\"body\">\n                <ehd:setSignatureCatalog>\n                    <idCatalog>1234</idCatalog>\n                </ehd:setSignatureCatalog>\n            </soapenv:Body>\n        </soapenv:Envelope>'\n\n    setSignatureCatalogResponse:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: 1\n              ehd:message: 'Успешно'\n              ehd:detail_message: 'Дата подписания каталога - 04.03.2025 11:02:25'\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setSignatureCatalogNestError:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: -1\n              ehd:message: Система {systemId} не может подписать каталог {nestCatalogId} \n              ehd:detail_message: Подписание вложенных каталогов невозможно\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setSignatureCatalogUnsignedObjectsError:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: -1\n              ehd:message: В каталоге имеются неподписанные записи. Для подписания каталога целиком данным методом необходимо, чтобы все записи каталога были подписанными.\n              ehd:detail_message:\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setSignatureCatalogInvalidObjectsError:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: -1\n              ehd:message: В настоящее время происходит передача геоданных в ИАИС ЕГИП. Подписание каталога целиком невозможно.\n              ehd:detail_message:\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setSignatureCatalogInvalidGeoError:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: -1\n              ehd:message: В каталоге есть записи с ошибками геометрии. Подписание каталога целиком невозможно.\n              ehd:detail_message:\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setSignatureCatalogActiveSingingError:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: -1\n              ehd:message: В настоящее время в каталоге происходит подписание данных. Запуск нового подписания невозможен.\n              ehd:detail_message:\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setSignatureCatalogAnyError:\n      value:\n        Body:\n          setSignatureCatalogResponse:\n            setSignatureCatalog: \n              ehd:status: -1\n              ehd:message: Произошла ошибка при подписании каталога.\n              ehd:detail_message: Не заполнено описание каталога\n              ehd:catalog_id: 195282\n              ehd:action: 'subscribe'\n\n    setDataInRequest:\n      description: Пример запроса, в Swagger нет возможности отобразить такой запрос с отступами, пример можно скопировать и отформатировать в редакторе кода \n      value:\n        '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ehd=\"http://ehd.mos.com/\">\n        <soapenv:Body wsu:Id=\"body\">\n            <ehd:setDataIn>\n              <xml><![CDATA[<message>\n                              <id>40929a9f-52d9-4c37-9c8b-dad9b59fef8d</id>\n                              <catalog>\n                                  <item action=\"added\" isManualGeo=\"true\"> <!-- Использование ручного ввода для блока На карту -->\n                                      <categories>\n                                          <category>59</category>\n                                      </categories>\n                                      <geodata>{\"rings\" : [[ [-97.06138,32.837], [-97.06133,32.836] , [-97.06326,32.759] ]]}</geodata>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>1</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"1234\" type=\"STRING\">\n                                              <values>\n                                                  <value>Иванов Иван Иванович</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"121212\" type=\"STRING\" isManual=\"1\"> <!-- Использование ручного ввода для Автозаполнения -->\n                                              <values>\n                                                  <value>директор</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"234\" type=\"INT\">\n                                              <values>\n                                                  <value>-213</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"342\" type=\"INTEGER\">\n                                              <values>\n                                                  <value>-213,12</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"45632\" type=\"DATE\">\n                                              <values>\n                                                  <value>12.02.1992</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"48903\" type=\"DATE\">\n                                              <values>\n                                                  <value>23.05.2024 12:12:05</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"6732\" type=\"FLAG\">\n                                              <values>\n                                                  <value>0</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"557\" type=\"DICT\">\n                                              <values>\n                                                  <value>район Арбат</value>\n                                                  <value>Басманный район</value>\n                                                  <value>район Замоскворечье</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"559\" type=\"LINK\">\n                                              <values>\n                                                  <value>345234</value>\n                                                  <value>123412</value>\n                                                  <value>563456</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"558\" type=\"FILE\">\n                                              <values>\n                                                  <value>\n                                                  <file>\n                                                      <name>example</name>\n                                                      <extension>xml</extension>\n                                                      <content>ZXhhbXBsZQ==</content>\n                                                  </file>\n                                                  <file>\n                                                      <name>example1</name>\n                                                      <extension>xml</extension>\n                                                      <content>RXhhbXBsZTE=</content>\n                                                  </file>\n                                                  <file>\n                                                      <name>example2</name>\n                                                      <extension>xml</extension>\n                                                      <content>RXhhbXBsZTI=</content>\n                                                  </file>\n                                                  </value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                                  <item action=\"modified\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">59</category>\n                                      </categories>\n                                      <geodata isManual=\"1\">{\"x\":37.302102,\"y\":55.489177}</geodata> <!-- Использование ручного ввода для блока Из карты -->\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"1234\" type=\"STRING\">\n                                              <values>\n                                                  <value>Петров Петр Петрович</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                                  <item action=\"deleted\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">59</category>\n                                      </categories>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>3</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                              </catalog>\n                              <catalog parent_catalog_id=\"59\">\n                                  <item action=\"modified\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">60</category>\n                                      </categories>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>2-1</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"-5\" type=\"STRING\">\n                                              <values>\n                                                  <value>2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"5645712\" type=\"STRING\">\n                                              <values>\n                                                  <value>Паспорт РФ 1111 222222</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                                  <item action=\"modified\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">60</category>\n                                      </categories>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>2-2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"-5\" type=\"STRING\">\n                                              <values>\n                                                  <value>2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"5645712\" type=\"STRING\">\n                                              <values>\n                                                  <value>Паспорт РФ 3333 444444</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                              </catalog>\n                          </message>]]>\n              </xml>\n            </ehd:setDataIn>\n          </soapenv:Body>\n        </soapenv:Envelope>'\n\n    setDataInSignedRequest:\n      description: Пример запроса, в Swagger нет возможности отобразить такой запрос с отступами, пример можно скопировать и отформатировать в редакторе кода \n      value:\n        '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n        <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" xmlns:ehd=\"http://ehd.mos.com/\" xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">\n        <soapenv:Header>\n            <wsse:Security soapenv:actor=\"http://smev.gosuslugi.ru/actors/smev\">\n              <wsse:BinarySecurityToken EncodingType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-soap-message-security-1.0#Base64Binary\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" wsu:Id=\"SenderCertificate\">MIII2jCgiInAG08wURBW3Ee2fyuVOehoh0=</wsse:BinarySecurityToken>\n              <Signature>\n                  <SignedInfo>\n                    <CanonicalizationMethod Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n                    <SignatureMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#gostr34102001-gostr3411\" />\n                    <Reference URI=\"#body\">\n                        <Transforms>\n                          <Transform Algorithm=\"http://www.w3.org/2001/10/xml-exc-c14n#\" />\n                        </Transforms>\n                        <DigestMethod Algorithm=\"http://www.w3.org/2001/04/xmldsig-more#gostr3411\" />\n                        <DigestValue>LyHAvBRNYcqS4c4/NkxhAO5RWsVR9wTeVAMLJ+UCxRo=</DigestValue>\n                    </Reference>\n                  </SignedInfo>\n                  <SignatureValue>DuwpVvsL64KMqZCnIXrKBsPQ2E10GIl32RyJMidBPYFZ78j4bpwy9z2LGin3gEwj2CAF7kYm5e98sF4r5jJQ/w==</SignatureValue>\n                  <KeyInfo>\n                    <wsse:SecurityTokenReference>\n                        <wsse:Reference URI=\"#SenderCertificate\" ValueType=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-x509-token-profile-1.0#X509v3\" />\n                    </wsse:SecurityTokenReference>\n                  </KeyInfo>\n              </Signature>\n            </wsse:Security>\n        </soapenv:Header>\n        <soapenv:Body wsu:Id=\"body\">\n            <ehd:setDataIn>\n              <xml><![CDATA[<message>\n                              <id>40929a9f-52d9-4c37-9c8b-dad9b59fef8d</id>\n                              <catalog>\n                                  <item action=\"added\" isManualGeo=\"true\"> <!-- Использование ручного ввода для блока На карту -->\n                                      <categories>\n                                          <category>59</category>\n                                      </categories>\n                                      <geodata>{\"rings\" : [[ [-97.06138,32.837], [-97.06133,32.836] , [-97.06326,32.759] ]]}</geodata>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>1</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"1234\" type=\"STRING\">\n                                              <values>\n                                                  <value>Иванов Иван Иванович</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"121212\" type=\"STRING\" isManual=\"1\"> <!-- Использование ручного ввода для Автозаполнения -->\n                                              <values>\n                                                  <value>директор</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"234\" type=\"INT\">\n                                              <values>\n                                                  <value>-213</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"342\" type=\"INTEGER\">\n                                              <values>\n                                                  <value>-213,12</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"45632\" type=\"DATE\">\n                                              <values>\n                                                  <value>12.02.1992</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"48903\" type=\"DATE\">\n                                              <values>\n                                                  <value>23.05.2024 12:12:05</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"6732\" type=\"FLAG\">\n                                              <values>\n                                                  <value>0</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"557\" type=\"DICT\">\n                                              <values>\n                                                  <value>район Арбат</value>\n                                                  <value>Басманный район</value>\n                                                  <value>район Замоскворечье</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"559\" type=\"LINK\">\n                                              <values>\n                                                  <value>345234</value>\n                                                  <value>123412</value>\n                                                  <value>563456</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"558\" type=\"FILE\">\n                                              <values>\n                                                  <value>\n                                                  <file>\n                                                      <name>example</name>\n                                                      <extension>xml</extension>\n                                                      <content>ZXhhbXBsZQ==</content>\n                                                  </file>\n                                                  <file>\n                                                      <name>example1</name>\n                                                      <extension>xml</extension>\n                                                      <content>RXhhbXBsZTE=</content>\n                                                  </file>\n                                                  <file>\n                                                      <name>example2</name>\n                                                      <extension>xml</extension>\n                                                      <content>RXhhbXBsZTI=</content>\n                                                  </file>\n                                                  </value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                                  <item action=\"modified\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">59</category>\n                                      </categories>\n                                      <geodata isManual=\"1\">{\"x\":37.302102,\"y\":55.489177}</geodata> <!-- Использование ручного ввода для блока Из карты -->\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"1234\" type=\"STRING\">\n                                              <values>\n                                                  <value>Петров Петр Петрович</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                                  <item action=\"deleted\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">59</category>\n                                      </categories>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>3</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                              </catalog>\n                              <catalog parent_catalog_id=\"59\">\n                                  <item action=\"modified\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">60</category>\n                                      </categories>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>2-1</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"-5\" type=\"STRING\">\n                                              <values>\n                                                  <value>2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"5645712\" type=\"STRING\">\n                                              <values>\n                                                  <value>Паспорт РФ 1111 222222</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                                  <item action=\"modified\">\n                                      <categories>\n                                          <category nameHier=\"nameHierarchy\">60</category>\n                                      </categories>\n                                      <data>\n                                          <attribute field_id=\"-2\" type=\"STRING\">\n                                              <values>\n                                                  <value>2-2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"-5\" type=\"STRING\">\n                                              <values>\n                                                  <value>2</value>\n                                              </values>\n                                          </attribute>\n                                          <attribute field_id=\"5645712\" type=\"STRING\">\n                                              <values>\n                                                  <value>Паспорт РФ 3333 444444</value>\n                                              </values>\n                                          </attribute>\n                                      </data>\n                                  </item>\n                              </catalog>\n                          </message>]]>\n              </xml>\n            </ehd:setDataIn>\n          </soapenv:Body>\n        </soapenv:Envelope>'\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    XMLReaderError:\n      value:\n        Header:\n        Body:\n          soapenv:Fault: \n            - ehd:faultcode: 'S:Server'\n            - ehd:faultstring: \"Couldn't create SOAP message due to exception: XML reader error: com.ctc.wstx.exc.WstxUnexpectedCharException: Unexpected character ' ' (code 32) (expected a name start character) at [row,col {unknown-source}]: [2,7]\"\n            \n    NotSignElementsError:\n      value:\n        Header:\n        Body:\n          soapenv:Fault: \n            - ehd:faultcode: 'S:Server'\n            - ehd:faultstring: 'Заголовок запроса должен содержать сертификат и подпись'\n            - ehd:detail:\n                - ehd:SubscribeFault: \n    \n    SignatureHashError:\n      value:\n        Header:\n        Body:\n          soapenv:Fault: \n            - ehd:faultcode: 'S:Server'\n            - ehd:faultstring: 'Произошла ошибка при парсинге тега подписи'\n            - ehd:detail:\n                - ehd:SubscribeFault:\n    \n   # Получилось измененеием id каталога в запросе SetsignatureCatalog\n   # + пустой DigestVallue\n\n    #изменены подписываемые данные\n           \n    NotObjectSignError:           \n      value:\n        Header:\n        Body:\n          soapenv:Fault: \n            - ehd:faultcode: 'S:Server'\n            - ehd:faultstring: 'Подпись не соответствует загруженным данным'\n            - ehd:detail:\n                - ehd:SubscribeFault:       \n        \n    setDataInGlobalIdError:\n      value:\n        Header:\n        Body: \n          ehd:setDataResponse:\n            - ehd:status: -1\n            - ehd:message: 'Ошибка! Объекта с идентификатором 30001 нет в каталоге 195282.'\n            - ehd:detail_message:\n            - ehd:global_id: 3000\n            - ehd:system_object_id:\n            - ehd:action: save\n\n    setDataInFieldIdError:\n      value:\n        Header:\n        Body: \n          ehd:setDataResponse:\n            - ehd:status: 200\n            - ehd:message: 'Ошибка в поле field_id'\n            - ehd:detail_message: 'Поле field_id не может быть пустым'\n            - ehd:global_id:\n            - ehd:system_object_id:\n            - ehd:action:\n\n    setDataInResponse:\n      value:\n        Body:\n          ehd:setDataInResponse:\n            - ehd:setDataResponse:\n              - ehd:status: 1\n              - ehd:message: 'Ok'\n              - ehd:detail_message: Объект успешно обработан\n              - ehd:global_id: 5000002303\n              - ehd:system_object_id: '8998j'\n              - ehd:action: save\n            - ehd:setDataResponse:\n              - ehd:status: 1\n              - ehd:message: 'Ok'\n              - ehd:detail_message: Геоданные объекта сохранены\n              - ehd:global_id: 5000002303\n              - ehd:system_object_id: '8998j'\n              - ehd:action: save_geo\n            - ehd:setDataResponse:\n              - ehd:status: 1\n              - ehd:message: 'Ok'\n              - ehd:detail_message: Объект успешно подписан\n              - ehd:global_id: 5000002303\n              - ehd:system_object_id: '8998j'\n              - ehd:action: subscribe\n\n    setDataInInvalidRequestError:\n      value:\n        Body:\n          ehd:setDataInResponse:\n            - ehd:setDataResponse:\n              - ehd:status: 200\n              - ehd:message: 'Bad request'\n              - ehd:detail_message: Превышено максимально допустимое количество символов. Максимальное количество = 20.\n              - ehd:global_id: 5000002303\n              - ehd:system_object_id: '8998j'\n              - ehd:action: save\n",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с фоновыми проверками каталога\n  version: 1.0.0\n\n\npaths:\n\n  /backgroundChecks:\n    post:\n      tags:\n        - backgroundChecks\n      summary: Запуск фоновой проверки\n      description: |-\n        Метод позволяет запустить фоновую проверку и автопроцессы на выбранном каталоге. \n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/BackgroundCheckInfo'\n            examples:\n              Пример:\n                $ref: '#/components/examples/BackgroundCheckInfoRequest'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Фоновая проверка добавлена в очередь:\n                  $ref: '#/components/examples/BackgroundCheckCreatedResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            \n            ### Возможные ошибки бизнес-логики:\n              - На выбранном каталоге уже запущена фоновая проверка.\n              - Для каталога запущен процесс удаления всех объектов.\n              - Некорректно выставлены флаги `Полная фоновая проверка`, `Проверка свойств атрибутов`, `Проверка регулярных выражений`, `Проверка поискового индекса`.\n              - Некорректно заполнены поля `Запуск главного процесса` и `Тех. наименование пакета конструктора`.\n              - Невалидное условие ограничения выборки.\n              - Указанный e-mail не соответствует регулярному выражению.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n                    - $ref: '#/components/schemas/ConditionValidationError'\n              examples:\n                На каталоге уже запущена фоновая проверка:\n                  $ref: '#/components/examples/CatalogInBackCheckError'\n                Для каталога запущен процесс удаления всех объектов:\n                  $ref: '#/components/examples/CatalogInDeletionError'\n                Некорректно выставлены флаги `Полная фоновая проверка`, `Проверка свойств атрибутов`, `Проверка регулярных выражений`, `Проверка поискового индекса`:\n                  $ref: '#/components/examples/BackgroundCheckFlagsError'\n                Некорректно заполнены поля `Запуск главного процесса` и `Тех. наименование пакета конструктора`:\n                  $ref: '#/components/examples/BackgroundCheckConstructorError'\n                Невалидное условие ограничения выборки:\n                  $ref: '#/components/examples/ConditionValidationError'\n                Указанный e-mail не соответствует регулярному выражению:\n                  $ref: '#/components/examples/EmailFormatError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Указанный id каталога не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n\n    get:\n      tags:\n        - backgroundChecks\n      summary: Получение параметров выбранных фоновых проверок\n      description: |-\n        Метод возвращает информацию о параметрах фоновой проверки, вызывается из истории фоновых проверок.\n      parameters:\n        - $ref: '#/components/parameters/backgroundCheckIdsQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/BackgroundCheckInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/BackgroundCheckInfoArrayResponse'\n\n  /backgroundChecks/validate:\n    post:\n      tags:\n        - backgroundChecks\n      summary: Валидация условия ограничения выборки\n      description: |-\n        Метод позволяет выполнить валидацию условия ограничения выборки для фоновой проверки.\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                condition:\n                  description: Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.\n                  type: string\n                catalogId:\n                  description: Идентификатор каталога для получения атрибутов и проверки их использования в условии\n                  type: integer\n              required:\n                - condition\n                - catalogId\n            examples:\n              Пример:\n                description: Пример тела запроса с условием\n                value:\n                  condition: \"contains(attr.City, 'Москва')\"\n                  catalogId: 6404\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SuccessValidationResponse'\n        '400':\n          description: |-\n            Ошибка построения запроса или целостности переданных данных.\n            \n            ### Возможные ошибки бизнес-логики:\n              - Невалидное условие ограничения выборки.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ConditionValidationError'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\n  /backgroundChecks/reset:\n    get:\n      tags:\n        - backgroundChecks\n      summary: Сброс ошибок фоновых проверок с объектов каталога\n      description: |-\n        Метод позволяет сбросить с объектов выбранного каталога все ошибки фоновых проверок.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/BackgroundCheckErrorsCleanedResponse'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id каталога не существует.\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id каталога:\n                  $ref: 'catalogs.yaml#/components/examples/CatalogNotFoundError'\n\n  /backgroundChecks/{backgroundCheckId}/cancel:\n    get:\n      tags:\n        - backgroundChecks\n      summary: Отмена фоновой проверки объектов каталога\n      description: |-\n        Метод позволяет отменить выбранную фоновую проверку. \n      parameters:\n        - $ref: '#/components/parameters/backgroundCheckIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/BackgroundCheckCanceledByUserResponse'\n        '400':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Фоновая проверка уже завершена.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Фоновая проверка уже завершена:\n                  $ref: '#/components/examples/BackgroundCheckFinishedError'\n        '404':\n          description: |-\n            ### Возможные ошибки бизнес-логики:\n              - Запрошенный id фоновой проверки не существует. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id фоновой проверки:\n                  $ref: '#/components/examples/BackgroundCheckNotFoundError'\n\n  /backgroundChecks/history:\n    post:\n      tags:\n        - backgroundChecks\n      summary: Получение истории фоновых проверок каталога\n      description: |-\n        Метод позволяет получить историю фоновых проверок выбранного каталога.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `userName`, `dateStart`, `dateEnd`, используется тело запроса.\n      parameters:\n        - $ref: 'catalogs.yaml#/components/parameters/catalogIdQueryParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка истории фоновых проверок (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - userName\n                              - dateStart\n                              - dateEnd\n            examples:\n              Пример:\n                  $ref: '#/components/examples/BackgroundCheckHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/CatalogBackgroundCheckHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/CatalogBackgroundCheckHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: 'catalogs.yaml#/components/responses/CatalogNotFoundResponse'\n\ncomponents:\n\n  schemas:    \n\n    BackgroundCheckInfo:\n      description:  Данные фоновой проверки\n      type: object\n      properties:\n        id:\n          description: Идентификатор фоновой проверки\n          type: integer\n          format: int32\n          readOnly: true\n        catalogId:\n          description: Идентификатор каталога для фоновой проверки\n          type: integer\n          format: int32\n          writeOnly: true\n        email:\n          description: E-mail, на который высылаются результаты фоновой проверки\n          type: string\n        condition:\n          description: Ограничение выборки, описанное пользователем в формате TOML. Передаётся в виде строки с экранированием символов.\n          type: string\n        isFullBackgroundCheck:\n          description: Полная фоновая проверка\n          type: boolean\n          default: true\n        checkAttributes:\n          description: Проверка свойств атрибутов\n          type: boolean\n          default: true\n        checkRegexps:\n          description: Проверка регулярных выражений\n          type: boolean\n          default: true\n        checkSearchIndex:\n          description: Проверка поискового индекса\n          type: boolean\n          default: true\n        launchMainProcess:\n          description: Запуск главного процесса конструктора проверок\n          type: boolean\n          default: true\n        constructorPackage:\n          description: Тех. наименование пакета конструктора проверок. Указывается, если выбран запуск отдельного пакета\n          type: string\n        manageChangingObjects:\n          description: Изменения объекта в ходе фоновой проверки\n          $ref: '#/components/schemas/ChangeObjectInProcessTag'\n      required:\n        - catalogId\n        - isFullBackgroundCheck\n        - checkAttributes\n        - checkRegexps\n        - checkSearchIndex\n        - manageChangingObjects\n\n    ChangeObjectInProcessTag:\n      description: |-\n        Тэг для поля \"Изменения объектов в ходе фоновой проверки\":\n          - `logOnly` - Формировать лог фоновой проверки, \n          - `logErrors` - Формировать лог и помечать объекты ошибочными, \n          - `logErrorsChange` - Формировать лог, помечать объекты ошибочными и выполнять изменение через автопроцессы.\n      oneOf:\n        - type: string\n          enum:\n            - logOnly\n            - logErrors\n            - logErrorsChange\n\n    ConditionValidationError:\n      type: object\n      properties:\n        code:\n          description: HTTP-код ошибки\n          type: integer\n          format: int32\n          example: 400\n        messageType:\n          description: Тип ответа\n          type: string\n          example: Bad request\n        errors:\n          type: array\n          items: \n            type: string\n            enum:\n              - \"Недопустимое выражение '{expression}'.\"\n              - \"Найдено {symbol/expression}. Ожидалось {symbol/expression}.\"\n              - \"В каталоге отсутсвует указанный атрибут attr.{techName}.\"\n              - \"Указано значение с некорректным типом данных. Ожидалось {type}.\"\n              - \"Передан некорректный набор входных параметров в {operator}.\"\n              - \"Не найден справочник с идентификатором {dictId}.\"\n              - \"Не найден элемент справочника {elementId} в справочнике {dictId}.\"\n              - \"Атрибут с типом {type} недоступен для оператора {operator}.\"\n              - \"Не найден каталог с идентификатором {catalogId}.\"\n              - \"Не найдено регулярное выражение с идентификатором {regexpId}.\"\n              - \"В справочнике отсутсвует указанный атрибут attr.{dictTechName}.{columnTechName}/dictAttr.{techName}\"\n      required:\n        - code\n        - messageType\n        - errors\n\n    CatalogBackgroundCheckHistoryItem:\n      description: Элемент истории фоновой проверки каталога \n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор фоновой проверки каталога \n          type: integer\n          format: int32\n        userName: \n          description: Имя пользователя, запустившего проверку\n          type: string\n        action:\n          description: Действие, может принимать значения \"Запуск фоновой проверки\", \n            \"Запуск периодической фоновой проверки\", \"Сброс ошибок фоновой проверки\".\n          type: string\n        dateStart:\n          description: Дата старта фоновой проверки каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата окончания фоновой проверки каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        countInWorkObj:\n          description: Количество объектов, взятых в работу при запуске фоновой проверки\n          type: integer\n        countCheckedObj:\n          description: Количество проверенных объектов (по окончании процесса фоновой проверки)\n          type: integer\n        countErrorObj:\n          description: Количество ошибочных объектов (по окончании процесса фоновой проверки)\n          type: integer\n        logFileId:\n          description: Идентификатор (uuid) файла лога\n          type: string\n        status:\n          $ref: '#/components/schemas/BackgroundCheckHistoryStatus'\n      required:\n        - id\n        - action\n        - dateStart\n        - countInWorkObj\n        - countCheckedObj\n        - status\n\n    BackgroundCheckHistoryStatus:\n      description: Статус в истории фоновых проверок каталога заполнения\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/BackgroundCheckHistoryStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/BackgroundCheckHistoryStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: В работе\n        tagId: inWork\n\n    BackgroundCheckHistoryStatusNameEnum:\n      description: Название статуса в истории фоновых проверок каталога заполнения\n      oneOf:\n        - type: string\n          # enum:\n          #   - Новый\n          #   - В работе\n          #   - Проверка отменена пользователем\n          #   - \"Проверка не завершена: системная ошибка\"\n          #   - Проверка завершена успешно\n          #   - Проверка завершена с ошибками\n    \n    BackgroundCheckHistoryStatusTagIdEnum:\n      description: |-\n        Технчиеское наименование статуса фоновой проверки в истории фоновых проверок каталога заполнения\n          - `new` - Новый, \n          - `inWork` - В работе, \n          - `canceled` - Проверка отменена пользователем,\n          - `error` - Проверка не завершена: системная ошибка, \n          - `finishedSuccess` - Проверка завершена успешно,\n          - `finishedError` - Проверка завершена с ошибками.\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - inWork\n            - canceled\n            - error\n            - finishedSuccess\n            - finishedError\n\n  parameters:\n    backgroundCheckIdPathParam:\n      name: backgroundCheckId\n      in: path\n      description: |-\n        Идентификатор фоновой проверки.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 5392\n\n    backgroundCheckIdQueryParam:\n      name: backgroundCheckId\n      in: query\n      description: |-\n        Идентификатор фоновой проверки.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 5392\n\n    backgroundCheckIdsQueryParam:\n      name: backgroundCheckIds\n      required: true\n      in: query\n      description: |-\n        Список идентификаторов фоновых проверок.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [356, 923, 76]  \n\n  examples:\n\n    BackgroundCheckInfoRequest:\n      description: Пример тела запроса для запуска фоновой проверки\n      value:\n        catalogId: 36226\n        email: IvanPetrov@gmail.com\n        condition: \"contains(attr.City, 'Москва')\"\n        isFullBackgroundCheck: false\n        checkAttributes: true\n        checkRegexps: false\n        checkSearchIndex: true\n        launchMainProcess: false\n        constructorPackage: autoChangePackage\n        manageChangingObjects: logErrors\n\n    BackgroundCheckInfoArrayResponse:\n      description: Пример тела ответа с массивом параметров фоновых проверок\n      value:\n        - id: 2843\n          email: IvanPetrov@gmail.com\n          condition: \"attr.Name.Contains(25)\"\n          isFullBackgroundCheck: false\n          checkAttributes: true\n          checkRegexps: false\n          checkSearchIndex: true\n          launchMainProcess: false\n          constructorPackage: autoChangePackage\n          manageChangingObjects: logErrors\n\n    BackgroundCheckHistoryRequest:\n      description: Пример тела запроса для получения истории фоновых проверок каталога\n      value:\n        filters:\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024 15:25:05\n          - attribute: userName\n            operator: contains\n            value: Иван\n    \n    CatalogBackgroundCheckHistoryItemArrayResponse:\n      description: Пример ответа с историей фоновых проверок каталога\n      value:\n        - id: 2\n          action: Запуск фоновой проверки\n          dateStart: 28.09.2023 13:18:13\n          dateEnd: 28.09.2023 13:27:54\n          countInWorkObj: 2500\n          countCheckedObj: 2500\n          countErrorObj: 260\n          logFileId: c7b50ccd-dc45-4381-8606-6eaae7e43e66\n          status:\n            id: 5\n            tagId: finishedError\n            name: Проверка завершена с ошибками\n\n    BackgroundCheckCreatedResponse:\n      description: Пример ответа при успешном запуске фоновой проверки\n      value:\n        id: 542\n        code: 201\n        messageType: Created\n        message: Фоновая проверка запущена, процесс будет осуществляться в фоне. \n\n    SuccessValidationResponse:\n      description: Пример ответа при успешной валидации условия ограничения выборки\n      value:\n        code: 200\n        messageType: Ok\n        message: Валидация условия успешна\n\n    BackgroundCheckErrorsCleanedResponse:\n      description: Пример ответа при сбросе ошибок фоновых проверок с объектов каталога\n      value:\n        code: 200\n        messageType: Ok\n        message: Ошибки фоновых проверок сняты с объектов каталога.\n    \n    BackgroundCheckCanceledByUserResponse:\n      description: Пример ответа при отмене фоновой проверки пользователем\n      value:\n        code: 200\n        messageType: Ok\n        message: Фоновая проверка отменена пользователем.\n\n    BackgroundCheckNotFoundError:\n      description: |-\n        Указанная фоновая проверка не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Фоновой проверки с идентификатором {backgroundCheckId} не существует.\n   \n    BackgroundCheckFinishedError:\n      description: Пример ответа с ошибкой, если фоновая проверка  каталога завершена до отмены\n      value:\n        id: 75\n        code: 400\n        messageType: Bad request\n        message: Фоновая проверка каталога была завершена. Отмена фоновой проверки невозможна.\n\n    CatalogInBackCheckError:\n      description: Пример ответа с ошибкой, если каталог находится в процессе фоновой проверки\n      value:\n        code: 400\n        messageType: Bad request\n        message: \n          На каталоге уже запущена фоновая проверка, необходимо дождаться её окончания или отменить.\n\n    CatalogInDeletionError:\n      description: Пример ответа с ошибкой, если для каталога запущен процесс удаления всех объектов\n      value:\n        code: 400\n        messageType: Bad request\n        message:\n          Для каталога запущен процесс удаления всех объектов, запуск фоновой проверки недоступен.\n\n    BackgroundCheckFlagsError:\n      description: |-\n        Некорректно выставлены флаги `Полная фоновая проверка`, `Проверка свойств атрибутов`, `Проверка регулярных выражений`, `Проверка поискового индекса`. Должен быть выставлен хотя бы один флаг.\n      value:\n        code: 400\n        messageType: Bad request\n        message: Некорректно выставлены флаги `Полная фоновая проверка`, `Проверка свойств атрибутов`, `Проверка регулярных выражений`, `Проверка поискового индекса`. Должен быть выставлен хотя бы один флаг.\n\n    BackgroundCheckConstructorError:\n      description: |-\n        Некорректно заполнены поля `Запуск главного процесса` и `Тех. наименование пакета конструктора`\n      value:\n        code: 400\n        messageType: Bad request\n        message: Некорректно заполнены поля `Запуск главного процесса` и `Тех. наименование пакета конструктора`. Эти поля не могут быть заполнены одновременно\n\n    EmailFormatError:\n      description: |-\n        Некорректный формат e-mail\n      value:\n        code: 400\n        messageType: Parameter field format error\n        message: Неверный формат данных в поле \"E-mail\". Значение должно представлять e-mail в формате `^[\\\\w-\\\\.]+@[\\\\w-]+(\\\\.[\\\\w-]+)*\\\\.[a-z]{2,}$`\n\n    ConditionValidationError:\n      description: Невалидное условие ограничения выборки\n      value:\n        code: 400\n        messageType: Bad request\n        errors: \n          - Не найден справочник с идентификатором {dictId}.",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы со сборными каталогами\n  version: 1.0.0\n\npaths:\n  /accumulatedCatalogs/search:\n    post:\n      tags:\n        - accumulatedCatalogs\n      summary: Поиск по списку сборных каталогов\n      description: |-\n        Возвращает список сборных каталогов в соответствии с параматерами запроса.\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию.\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `200`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 200\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос в списке каталогов.\n            Поиск производится по идентификатору и наименованию каталога.\n            \n            Запрос со значением `12` вернет все каталоги, идентификатор или наименование которых содержит подстроку `12`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: id\n            enum:\n              - id\n              - name\n              - lastRun\n              - nextRun\n        - $ref: '_common.yaml#/components/parameters/orderByDescQueryParam'\n        # - name: periodicity\n        #   in: query\n        #   required: false\n        #   description: |-\n        #     Фильтр по периодичности обновления сборного каталога. Передается техническое наименование (тэг) периодичности.\n        #     Если параметр не указан, возвращаются каталоги с любым значением периодичности обновления.\n        #   schema:\n        #     $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityTagIdEnum'\n        # - name: status\n        #   in: query\n        #   required: false\n        #   description: |-\n        #     Фильтр по статусу сборного каталога. Передается техническое наименование (тэг) статуса.\n        #     Если параметр не указан, возвращаются каталоги, находящиеся в любом статусе.\n        #   schema:\n        #     $ref: '#/components/schemas/AccumulatedCatalogStatusTagIdEnum'\n      requestBody: \n        required: false\n        description: Тело запроса с фильтрами по статусу и периодичности сборного каталога\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                periodicity:\n                  description: |-\n                    Фильтр по периодичности обновления сборного каталога. Передаются технические наименования (тэги) периодичности.\n                    Если параметр не указан, возвращаются каталоги с любым значением периодичности обновления.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityTagIdEnum'\n                status:\n                  description: |-\n                    Фильтр по статусу сборного каталога. Передаются технические наименования (тэги) статуса.\n                    Если параметр не указан, возвращаются каталоги, находящиеся в любом статусе.\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/AccumulatedCatalogStatusTagIdEnum'\n            examples:\n              Пример:\n                value:\n                  periodicity: [daily]\n                  status: [active]\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. \n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив. \n            Если переданы несуществующие идентификаторы периодичности, статуса, то также возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AccumulatedCatalogListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /accumulatedCatalogs:\n    post:\n      tags:\n        - accumulatedCatalogs\n      summary: Создание сборного каталога\n      description: |-\n        Метод используется при создании сборного каталога.\n        При создании каталога необходимо обязательно передать и выполнить валидацию TOML-кода настроек каталога.\n\n        В случае ошибок валидации, если в ответе метода `POST /accumulatedCatalogs/validate` есть объекты, где severity=ERROR, возвращается ошибка 400.\n      requestBody:\n        $ref: '#/components/requestBodies/AccumulatedCatalogSettings'\n      responses:\n        '201':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/CreatedResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogCreatedResponse'\n        '400':\n          description: Ошибка валидации или сохранения сборного каталога\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogValidationError'\n    # delete:\n    #   tags:\n    #     - accumulatedCatalogs\n    #   summary: Удаление сборных каталогов\n    #   description: |-\n    #     Выполняет удаление сборных каталогов с указанными идентификаторами.\n\n    #     Если каталога с указанным идентификатором не найдено, ошибка не возвращается.\n    #   parameters:\n    #     - $ref: '#/components/parameters/catalogIdsQueryParam'\n    #   responses:\n    #     '200':\n    #       description: Успешный ответ\n    #       content:\n    #         application/json:\n    #           schema:\n    #             $ref: '_common.yaml#/components/schemas/OkResponse'\n    #           examples:\n    #             Пример:\n    #               $ref: '#/components/examples/AccumulatedCatalogDeletedResponse'\n    #     '400':\n    #       description: |-\n    #         Ошибка удаления сборных каталогов.\n    #         При наличии ошибки для одного из переданных каталогов удаление не выполняется целиком.\n            \n    #         ### Возможные ошибки бизнес-логики:\n    #           - С каталогом связаны каталоги публикации.\n    #       content:\n    #         application/json:\n    #           schema:\n    #               oneOf:\n    #                 - $ref: '_common.yaml#/components/schemas/BadRequestError'\n    #           examples:\n    #             С каталогом связаны каталоги публикации:\n    #               $ref: '#/components/examples/AccumulatedCatalogHasPublicationCatalogsError'\n\n  /accumulatedCatalogs/{catalogId}:\n    put:\n      tags:\n        - accumulatedCatalogs\n      summary: Изменение настроек сборного каталога\n      description: |-\n        Метод используется при редактировании сборного каталога.\n        При редактировании каталога необходимо обязательно передать и выполнить валидацию TOML-кода настроек каталога.\n\n        В случае ошибок валидации, если в ответе метода `POST /accumulatedCatalogs/validate` есть объекты, где severity=ERROR, возвращается ошибка 400.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      requestBody:\n        $ref: '#/components/requestBodies/AccumulatedCatalogSettings'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogEditedResponse'\n        '400':\n          description: Ошибка валидации или сохранения сборного каталога\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogValidationError'\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n  \n  /accumulatedCatalogs/{catalogId}/settings:\n    get:\n      tags:\n        - accumulatedCatalogs\n      summary: Получение сборных каталогов по идентификаторам\n      description: |-\n        Возвращает информацию о настройках сборного каталога по идентификатору.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/AccumulatedCatalogSettings'\n              examples:\n                Пример:\n                  value:\n                    settings: \"{TOML}\"\n                    customFilesIds:\n                      - 0f583f97-9bb7-4b44-b37e-bfae615e4780\n                      - ff531f97-9bb7-4b12-b37e-bfae615e3244\n                    name: Парковые территории\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n\n  # /accumulatedCatalogs/{catalogId}/customCSV:\n  #   get:\n  #     tags:\n  #       - accumulatedCatalogs\n  #     summary: Получение информации о кастомных файлах-источниках сборного каталога\n  #     description: |-\n  #       Возвращает информацию о файлах, загруженных в файловое хранилище, для данного сборного каталога\n  #     parameters:\n  #       - $ref: '#/components/parameters/catalogIdPathParam'\n  #     responses:\n  #       '200':\n  #         description: Успешный ответ\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '#/components/schemas/AccumulatedCatalogCSVInfo'\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/AccumulatedCatalogCSVInfoArrayResponse'\n  #       '404':\n  #         $ref: '#/components/responses/AccumulatedCatalogNotFound'\n\n  /accumulatedCatalogs/validate:\n    post:\n      tags:\n        - accumulatedCatalogs\n      summary: Валидация настроек сборного каталога\n      description: |-\n        Возвращает список ошибок при валидации сборного каталога.\n        Метод может быть вызван при сохранении каталога, либо отдельно.\n\n        Метод принимает на вход настройки сборного каталога в формате TOML.\n\n        Если ошибок нет, возвращается пустой массив.\n      requestBody:\n        $ref: '#/components/requestBodies/AccumulatedCatalogSettings'\n      responses:\n        '200':\n          description: Ошибки валидации сборного каталога\n          content:\n            application/json:\n              schema:\n                description: Массив ошибок, обнаруженных при валидации сборного каталога\n                type: array\n                items:\n                  $ref: '#/components/schemas/DmartProcessingMessage'\n        '400':\n          description: Ошибка обработки запроса валидации\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  value:\n                    code: 400\n                    messageType: Bad request\n                    message: \"{Текст ошибки из API IT Summa}\"\n  # /accumulatedCatalogs/uploadCSV:\n  #   post:\n  #     tags:\n  #       - accumulatedCatalogs\n  #     summary: Загрузка и обработка файла источника для сборного каталога формата .csv\n  #     description: |-\n  #       Метод позволяет обработать колонки файла и после успешной обработки загрузить его в файловое хранилище.\n  #       Для загрузки в хранилище должен вызываться `POST /files`.\n        \n  #       После загрузки метод возвращает список колонок загруженного файла. \n  #     requestBody:\n  #       content:\n  #         multipart/form-data:\n  #           schema:\n  #             $ref: '#/components/schemas/CustomCSV'\n  #     responses:\n  #       '200':\n  #         description: Успешный ответ\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '#/components/schemas/CustomCSVProcessedFileInfo'\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/CustomCSVProcessedFileInfoResponse'\n  #       '400':\n  #         description: |-\n  #           ### Возможные ошибки бизнес-логики:\n  #             - Загруженный файл не соответствует формату .csv.\n  #             - Наименования колонок файла не уникальны.  \n  #         content:\n  #           application/json:\n  #             schema:\n  #                 oneOf:\n  #                   - $ref: '_common.yaml#/components/schemas/BadRequestError'\n  #             examples:\n  #               Загруженный файл не соответствует формату .csv:\n  #                 $ref: '#/components/examples/CustomFileIsNotCSV'\n  #               Наименования колонок файла не уникальны:\n  #                 $ref: '#/components/examples/CustomCSVColumnNameNotUniqueError'\n  \n  /accumulatedCatalogs/{catalogId}/history:\n    get:\n      tags:\n        - accumulatedCatalogs\n      summary: Получение истории обновлений сборного каталога\n      description: Метод позволяет получить историю о процессах обновления сборного каталога\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка истории (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. Если истории по переданному каталогу нет, возвращается пустой массив\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AccumulatedCatalogHistoryItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogHistoryResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n  \n  # /accumulatedCatalogs/{catalogId}/history/cancel:\n  #   get:\n  #     tags:\n  #       - accumulatedCatalogs\n  #     summary: Отмена обновления сборного каталога\n  #     description: |-\n  #       Метод позволяет отменить активное формирование или обновление сборного каталога.\n\n  #       В случае отсутстивия активного процесса возвращается ошибка 400.\n  #     parameters:\n  #       - $ref: '#/components/parameters/catalogIdPathParam'\n  #       - name: jobId\n  #         in: query\n  #         description: Идентификатор процесса обновления сборного каталога\n  #         required: true\n  #         schema:\n  #           type: integer\n  #         example: 23684\n  #     responses:\n  #       '200':\n  #         description: Успешный ответ\n  #         content:\n  #           application/json:\n  #             schema:\n  #               type: array\n  #               items:\n  #                 $ref: '_common.yaml#/components/schemas/OkResponse'\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/AccumulatedCatalogProcessCancelledResponse'\n  #       '400':\n  #         description: |-\n  #           Ошибка отмены обновления сборного каталога:\n  #             - Процесс обновления с переданным идентификатором уже завершен\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '_common.yaml#/components/schemas/BadRequestError'\n  #             examples:\n  #               Процесс обновления уже завершен:\n  #                 $ref: '#/components/examples/AccumulatedCatalogProcessAlreadyCancelledResponse'\n  #       '404':\n  #         description: Процесс с переданным идентификатором не найден\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '_common.yaml#/components/schemas/NotFoundError'\n  #             examples:\n  #               Процесс не найден:\n  #                 $ref: '#/components/examples/AccumulatedCatalogProcessNotFoundResponse'\n\n  \n  /accumulatedCatalogs/{catalogId}/sourceExports:\n    get:\n      tags:\n        - accumulatedCatalogs\n      summary: Получение истории выгрузок каталогов заполенения для сборного каталога\n      description: Метод позволяет получить историю и статус выгрузок каталогов заполнения для сборного каталога\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка истории (число от `1` до `100`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            default: 50\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ. Если истории по переданному каталогу нет, возвращается пустой массив\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/AccumulatedCatalogSourceExportHistoryItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/AccumulatedCatalogSourceExportHistoryResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n  \n  /accumulatedCatalogs/{catalogId}/status:\n    put:\n      tags:\n        - accumulatedCatalogs\n      summary: Изменение статуса сборного каталога\n      description: |-\n        Выполняет изменение статуса сборного каталога.\n\n        При изменении статуса на Активный проверяется, нужна ли выгрузка каталогов заполнения из ЕХД. Если нужна, то она запускается для каталогов заполнения, которые не являются актуальными для этого сборного каталога.\n\n        При изменении статуса на Неактивный выгрузки каталогов источников перестают формироваться, уходя в статус отмены пользователем.\n        Процесс обновления сборного каталога также автоматически завершается.\n\n        Если до перевода каталога в статус Неактивный выполнялся вызов метода `/accumulatedCatalogs/{catalogId}/run`, после которого началась выгрузка каталогов источников в ЕХД, и статус изменили на Неактивный до завершения этих выгрузок, то выгрузки останавливаются, а сам процесс построения сборного каталога не начинаетя. \n\n        При повторном вызове метода со статусом Активный перезапуск процесса формирования выгрузок для каталога не запускается.\n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      requestBody:\n        description: Тело запроса для изменения статуса сборного каталога\n        content:\n          application/json:\n            schema:\n              description: Объект, передаваемый для изменения статуса сборного каталога\n              type: object\n              properties:\n                status:\n                  description: Новый статус сборного каталога\n                  allOf:\n                    - $ref: '#/components/schemas/AccumulatedCatalogStatusTagIdEnum'\n                periodicity:\n                  description: Новая периодичность обновления сборного каталога\n                  allOf:\n                    - $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityTagIdEnum'\n                startAt:\n                  description: |-\n                    Плановая дата следующего обновления сборного каталога\n                    \n                    Обязательное поле, если новый статус - активный\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n              required:\n                - status\n      responses:\n        '200':\n          description: Успешный ответ, в зависимости от наличия активных процессов по сборному текст ответа может отличаться\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Статус изменен на Неактивный:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Статус каталога изменен на Неактивный\n                Статус изменен на Неактивный, запуск ручного построения отменен:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Статус каталога изменен на Неактивный, запуск ручного построения отменен\n                Статус изменен на Активный:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Статус каталога изменен на Активный\n                Статус изменен на Активный, запущена выгрузка каталогов-источников:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Статус каталога изменен на Активный, запущена выгрузка каталогов-источников\n        '400':\n          description: |-\n            Ошибка построения запроса\n\n            Возможные ошибки бизнес-логики:\n              - Не передана дата следующего обновления\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Не передана следующего обновления:\n                  $ref: '#/components/examples/MissingNextUpdateDate'\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n  \n  /accumulatedCatalogs/{catalogId}/run:\n    get:\n      tags:\n        - accumulatedCatalogs\n      summary: Разовое построение сборного каталога для отладки\n      description: |-\n        Выполняет ручной запуск построения сборного каталога.\n\n        В случае, если для каталога не сформированы вызгрузки КЗ-источников,\n        сначала запускается экспорт источников, информация о которых возвращается в `GET /accumulatedCatalogs/{catalogId}/sourceExports`\n\n        В зависимости от наличия активных процессов выгрузки каталогов-источников ответ 200 может отличаться. См. примеры. \n      parameters:\n        - $ref: '#/components/parameters/catalogIdPathParam'\n      responses:\n        '200':\n          description: Успешный ответ, в зависимости от наличия активных процессов выгрузки каталогов-источников и их необходимости ответ может отличаться\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Не требуется выгрузка каталогов из ЕХД:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Построение сборного каталога запущено\n                Требуется выгрузка каталогов из ЕХД:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Выгрузка каталогов-источников запущена, построение сборного каталога начнется по её завершении.\n                Выгрузка каталогов уже находится в работе:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: В текущий момент выполняется выгрузки каталогов-источников, построение сборного каталога начнется по её завершении.\n        '400':\n          description: |-\n            Ошибка построения запроса\n\n            Возможные ошибки бизнес-логики:\n              - Процесс построения сборного каталога уже запущен\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  value:\n                    code: 400\n                    messageType: Bad request\n                    message: Процесс построения сборного каталога уже запущен, см. историю обновлений\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n    \n  /accumulatedCatalogs/jobs:\n    post:\n      tags:\n        - accumulatedCatalogs\n      summary: (Внутр.) Создание процесса обновления сборного каталога\n      description: |-\n        Выполняет регистрацию процесса обновления сборного каталога.\n      requestBody:\n        description: Тело запроса для регистрации процесса обновления сборного каталога.\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                catalogId:\n                  description: Идентификатор сборного каталога\n                  type: integer\n                jobId:\n                  description: Идентификатор процесса обновления\n                  type: string\n              required:\n                - catalogId\n                - jobId\n            examples:\n              Пример:\n                value:\n                  catalogId: 34\n                  jobId: Ad302A2c-8f0c-406f-afA1-6cCA5af250eA\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: jobId зарегистрирован\n        '404':\n          $ref: '#/components/responses/AccumulatedCatalogNotFound'\n\n  /accumulatedCatalogs/jobs/{jobId}:\n    put:\n      tags:\n        - accumulatedCatalogs\n      summary: (Внутр.) Регистрация выходных файлов по процессу обновления сборного каталога\n      description: |-\n        Позволяет зарегистрировать выходные файлы, сформированные по итогу процесса обнволения сборного каталога\n\n        В случае успешного ответа процесс обнволения считается успешно завершенным\n      parameters:\n        - name: jobId\n          description: Идентифкатор процесса обновления\n          in: path\n          required: true\n          schema:\n            type: string\n      requestBody:\n        required: true\n        description: Тело запроса с информацией о выходных файлах сборного каталога\n        content:\n          application/json:\n            schema:\n              properties:\n                channels:\n                  description: Массив выходных файлов сборного каталога\n                  type: array\n                  items:\n                    $ref: '#/components/schemas/ChannelOutput'\n                  minItems: 1\n              required:\n                - channels\n            examples:\n              Пример:\n                value:\n                  channels:\n                    - channelId: outputs.fountains_uvao:snapshot\n                      filename: 0f583f97-9bb7-4b44-b37e-bfae615e4780-fountains_uvao.zip\n                      uuid: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n                      sha256sum: 135a7a68115c170106505dcf93e4cbaa4fd158d339e97d0801fe37f134062865\n                      totalBytes: 41234234\n                      objCount: 2421\n                    - channelId: outputs.fountains_szao:snapshot\n                      filename: 0f583f97-9bb7-4b44-b37e-bfae615e4780-fountains_szao.zip\n                      uuid: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n                      sha256sum: 66e42d8c396115e5db9697f8533bec8f3fdc09b85966aaff8e550abaf9ba7c4d\n                      totalBytes: 49852734\n                      objCount: 4523\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Файлы приняты, процесс помечен как завершенный\n        '404':\n          description: |-\n            Задача не найдена.\n          content:\n            application/json:\n              schema:\n                  oneOf:\n                    - $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Пример:\n                  value:\n                    code: 404\n                    messageType: Not found\n                    message: Задачи с идентификатором {jobId} не существует\n                \n  /accumulatedCatalogs/sendPush:\n    post:\n      tags:\n        - accumulatedCatalogs\n      summary: (Внутр.) (ПСЕВДО) Отправка пуш-уведомления по сборному каталогу\n      description: |-\n        Не является методом! Просто описание форматов пушей, которые отправляются воркером сервиса подписок на пуши.\n      requestBody:\n        description: Тело запроса с информацией о пуш-уведомлении\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/AccumulatedCatalogPushInfo'\n            examples:\n              Пуш-уведомление об изменении настроек каталога (тип S):\n                $ref: '#/components/examples/CatalogSettingsChangedPush'\n              Пуш-уведомление о первичной выгрузке (тип E):\n                $ref: '#/components/examples/SourceExportPush'\n              Пуш-уведомление с изменением по объекту (тип I,U,D):\n                $ref: '#/components/examples/ObjectCahngedPush'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  value:\n                    code: 200\n                    messageType: Ok\n                    message: Push отправлен\n        '400':\n          description: Ошибка отправки пуш-уведомления\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Пример:\n                  value:\n                    code: 400\n                    messageType: Bad request\n                    message: \"{Текст ошибки отправки пуш-уведомления}\"\n  \n  # /accumulatedCatalogs/{catalogId}/periodicity:\n  #   put:\n  #     tags:\n  #       - accumulatedCatalogs\n  #     summary: Изменение периодичности обновления сборного каталога\n  #     description: |-\n  #       Выполняет изменение периодичности обновления сборного каталога.\n\n  #       При изменении периодичности текущий процесс обнволения каталога не прекращается.\n  #       Меняется только дата следующего обновления каталога, если он находится в стаусе Активный.\n  #     parameters:\n  #       - $ref: '#/components/parameters/catalogIdPathParam'\n  #       - name: periodicity\n  #         in: query\n  #         required: true\n  #         description: Обновленное значение периодичности сборного каталога\n  #         schema:\n  #           $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityTagIdEnum'\n  #     responses:\n  #       '200':\n  #         description: Успешный ответ\n  #         content:\n  #           application/json:\n  #             schema:\n  #               $ref: '_common.yaml#/components/schemas/OkResponse'\n  #             examples:\n  #               Пример:\n  #                 $ref: '#/components/examples/AccumulatedCatalogPeriodicityChangedResponse'\n  #       '404':\n  #         $ref: '#/components/responses/AccumulatedCatalogNotFound'\n\ncomponents:\n  schemas:\n    AccumulatedCatalogStatusTagIdEnum:\n      description: |-\n        Техническое наименование cтатуса сборного каталога\n          - `inactive` - Неактивный\n          - `active` - Активный\n      type: string\n      enum:\n        - inactive\n        - active\n    \n    AccumulatedCatalogStatusNameEnum:\n      description: |-\n        Наименование статуса сборного каталога\n      type: string\n      # enum:\n      #   - Неактивный\n      #   - Активный\n    \n    AccumulatedCatalogStatus:\n      description: Статус сборного каталога\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/AccumulatedCatalogStatusTagIdEnum'\n        tagId:\n          $ref: '#/components/schemas/AccumulatedCatalogStatusNameEnum'\n      required:\n        - id\n        - name\n        - tagId\n    \n    AccumulatedCatalogUpdatePeriodicityTagIdEnum:\n      description: |-\n        Техническое наименование периодичности обновления сборного каталога\n          - `daily` - Ежедневно\n          - `weekly` - Еженедельно\n      type: string\n      enum:\n        # - hourly\n        - daily\n        - weekly\n        # - monthly\n        # - quarterly\n        # - yearly\n    AccumulatedCatalogUpdatePeriodicityNameEnum:\n      description: |-\n        Наименование периодичности обновления сборного каталога\n      type: string\n      # enum:\n      #   - Ежечасно\n      #   - Ежедневно\n      #   - Еженедельно\n      #   - Ежемесячно\n      #   - Ежеквартально\n      #   - Ежегодно\n    \n    AccumulatedCatalogUpdatePeriodicity:\n      description: Периодичность обновления сборного каталога\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityNameEnum'\n        tagId:\n          $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n    \n    AccumulatedCatalogUpdateStatusTagIdEnum:\n      description: |-\n        Техническое наименование статуса обновления сборного каталога\n          - `waiting` - Подготовка данных\n          - `loading` - Загрузка данных\n          - `processing` - Обработка объектов\n          - `resultUploading` - Подготовка итоговых файлов\n          - `finished` - Завершено\n          - `error` - Ошибка\n      type: string\n      enum:\n        - waiting # ожидание формирования файлов со стороны ЕХД\n        - loading # загрузка файлов источников\n        - processing # обработка объектов\n        - resultUploading # подготовка итогового файла\n        - finished # завершен\n        - error # ошибка\n    \n    AccumulatedCatalogUpdateStatusNameEnum:\n      description: Наименование статуса обновления сборного каталога\n      type: string\n      # enum:\n      #   - Подготовка первичной выгрузки\n      #   - Ошибка формирования\n      #   - Загрузка объектов в ПХОДД\n      #   - Ошибка загрузки объектов\n      #   - Ошибка загрузки файлов\n      #   - Обработка\n      #   - Ошибка обработки\n      #   - Формирование итогового файла\n      #   - Ошибка формирования итогового файла\n      #   - Завершен\n    \n    AccumulatedCatalogJobResult:\n      description: Результат обработки сборного каталога\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор результата\n        name:\n          description: Русскоязычное наименование результата обработки сборного каталога\n          type: string\n        tagId:\n          $ref: '#/components/schemas/AccumulatedCatalogJobResultTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n    \n\n    AccumulatedCatalogJobResultTagIdEnum:\n      description: |-\n        Техническое наименование результата обработки сборного каталога\n          - `postponed` - Обработка отложена\n          - `successful` - Успешно обработан\n          - `failed` - Ошибка обработки\n          - `canceled` - Обработка отменена\n      type: string\n      enum:\n        - postponed\n        - successful\n        - failed\n        - canceled\n\n\n    AccumulatedCatalogUpdateStatus:\n      description: Статус обновления сборного каталога\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/AccumulatedCatalogUpdateStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/AccumulatedCatalogUpdateStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n\n    AccumulatedCatalogListItem:\n      description: Информация о сборном каталоге в списке сборных каталогов\n      type: object\n      properties:\n        id:\n          description: Идентификатор сборного каталога\n          type: integer\n        name:\n          description: Наименование сборного каталога\n          type: string\n        sourceCatalogIds:\n          description: Идентификаторы каталогов заполнения, которые являются источниками сборного каталога\n          type: array\n          items:\n            type: integer\n        periodicity:\n          $ref: '#/components/schemas/AccumulatedCatalogUpdatePeriodicityNameEnum'\n        status:\n          $ref: '#/components/schemas/AccumulatedCatalogStatus'\n        lastRun:\n          description: Дата последнего обновления сборного каталога. Если нет, возвращается пустая строка\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n          \n        nextRun:\n          description: Дата следующего запуска сборного каталога. Если нет, возвращается пустая строка\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        currentJobStatus:\n          description: Статус текущего процесса обработки сборного каталога\n          type: string\n        lastRunResult:\n          description: Результат последней обработки сборного каталога\n          type: string\n      required:\n        - id\n        - name\n        - sourceCatalogIds\n        - periodicity\n        - status\n        - lastRun\n        - nextRun\n        - currentJobStatus\n        - lastRunResult\n\n    AccumulatedCatalogSettings:\n      description: Настройки сборного каталога\n      type: object\n      properties:\n        settings:\n          description: Настройки сборного каталога в формате TOML\n          type: string\n        customFileIds:\n          description: Информация о кастомных файлах-источниках\n          type: array\n          items:\n            type: string\n        name:\n          description: Наименование каталога\n          type: string\n          readOnly: true\n      required:\n        - settings\n\n    \n    ChannelOutput:\n      description: Объект с информацией о выходном файле сборного каталога\n      type: object\n      properties:\n        channelId:\n          description: Идентификатор выхода сборного каталога\n          type: string\n        filename:\n          description: Название файла с раширением\n          type: string\n        uuid:\n          description: Идентификатор (uuid) сформированного выходного файла\n          type: string\n        sha256sum:\n          type: string\n          pattern: '^[a-f0-9]{64}$'\n          description: Хэш SHA256 файла\n        totalBytes:\n          type: integer\n          description: Размер файла в байтах\n        objCount:\n          type: integer\n          description: Число объектов в выходном файле\n      required:\n        - channelId\n        - filename\n        - uuid\n        - sha256sum\n        - totalBytes\n        - objCount\n\n    AccumulatedCatalogCSVInfo:\n      description: Информация о кастомном CSV файле для сборного каталога\n      type: object\n      properties:\n        id:\n          description: Идентификатор uuid файла\n          type: string\n        name:\n          description: Имя файла (без расширения)\n          type: string\n        extension:\n          description: Расширение файла, включая точку\n          type: string\n        columnNames:\n          type: array\n          items:\n            type: string\n        encoding:\n          description: Кодировка\n          type: string\n          enum:\n            - UTF-8\n            - WINDOWS-1251\n            - MACCYRILLIC\n            - KOI8-R\n        separator:\n          description: Разделитель\n          type: string\n        textLimiter:\n          description: Ограничитель текста\n          type: string\n      required:\n        - id\n        - name\n        - extension\n        - columnNames\n        - encoding\n        - separator\n        - textLimiter\n\n    CustomCSV:\n      description: Информация о файле-источнике для сборного каталога формата CSV\n      type: object\n      properties:\n        file:\n          type: string\n          format: binary\n          description: Файл с содержимым\n        encoding:\n          description: Кодировка\n          type: string\n          enum:\n            - UTF-8\n            - WINDOWS-1251\n            - MACCYRILLIC\n            - KOI8-R\n        separator:\n          description: Разделитель\n          type: string\n        textLimiter:\n          description: Ограничитель текста\n          type: string\n      required:\n        - file\n        - encoding\n        - separator\n        - textLimiter\n\n    CustomCSVProcessedFileInfo:\n      description: Информация о колонках загруженного файла csv для сборного каталога\n      type: object\n      properties:\n        fileId:\n          description: Идентификатор файла\n          type: string\n        columnNames:\n          type: array\n          items:\n            type: string\n      required:\n        - fileId\n        - columnNames\n  \n    AccumulatedCatalogHistoryItem:\n      description: Элемент истории обновления сборного каталога\n      type: object\n      properties:\n        jobId:\n          description: Идентификатор процесса обновления\n          type: string\n        dateStart:\n          description: Дата и время начала обновления каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата и время завершения обновления каталога \n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        resultFiles:\n          description: Информация о результирующих выходных файлах в minIO файлового хранилища\n          type: array\n          items:\n            type: object\n            properties:\n              id:\n                description: Идентификатор файла (uuid)\n                type: string\n              channelId:\n                description: |-\n                  Идентификатор выхода сборного каталога.\n\n                  Формируется на основе технического наименования секции, описывающей выход в TOML-спецификации сборного каталога,\n                  а также на основе типа выхода (snapshot, delta).\n            required:\n              - id\n              - channelId\n        status:\n          $ref: '#/components/schemas/AccumulatedCatalogUpdateStatus'\n      required:\n        - jobId\n        - dateStart\n        - status  \n\n    AccumulatedCatalogSourceExportHistoryItem:\n      description: Элемент истории выгрузок источников сборного каталога\n      type: object\n      allOf:\n        - $ref: 'catalogs.yaml#/components/schemas/CommonCatalogInfo'\n      properties:\n        exportId:\n          description: Идентификатор процесса выгрузки\n          type: integer\n        dateStart:\n          description: Дата и время начала выгрузки каталога заполнения\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата и время завершения выгрузки каталога заполнения\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        resultFileId:\n          description: Идентификатор результирующего файла в minIO файлового хранилища\n          type: string\n        userName:\n          description: ФИО пользователя, изменившего статус сборного каталога на активный и запустившего выгрузку\n          type: string\n        status:\n          $ref: 'exports.yaml#/components/schemas/ExportStatus'\n        countAllObj:\n          type: integer\n          description: Общее количество объектов в экспорте   \n      required:\n        - exportId\n        - dateStart\n        - status\n\n    DmartProcessingMessage:\n      description: Сообщение виладации спецификации сборного каталога\n      type: object\n      properties:\n        severity:\n          type: string\n          description: Тип сообщения\n          enum:\n            - INFO\n            - WARNING\n            - ERROR\n        location:\n          description: Позиция синтаксической ошибки спецификации в формате `<Номер строки>:<Позиция>`\n          type: string\n        message:\n          description: Текст сообщени\n          type: string\n        stage:\n          description: Этап обработки спецификации, к которому относится сообщение\n          type: string\n          enum:\n            - parsing\n            - compiling\n            - executing\n            - dataImport\n            - dataExport\n      required:\n        - severity\n        - location\n        - message\n        - stage\n\n    AccumulatedCatalogPushInfo:\n      description: Пуш-уведомление, отправляемое в Kafka ITSumma\n      type: object\n      properties:\n        meta:\n          description: Метаданные пуш-уведомления, которые приходят из очереди RabbitMQ по пушам для сборных каталогов\n          type: object\n          properties:\n            id:\n              description: Идентификатор пуш-уведомления\n              type: integer\n            pushDateTime:\n              description: Дата и время создания пуш-уведомления в ЕХД\n              allOf:\n                - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n            operType:\n              description: |-\n                Тип пуш-уведомления:\n                  - `E` - первичная выгрузка каталога\n                  - `I` - создание объекта\n                  - `U` - изменение или восстановление объекта\n                  - `D` - удаление объекта\n                  - `S` - изменение настроек каталога\n\n                Формат тела пуш-уведомления для типов I, U, D совпадает\n              type: string\n              enum:\n                - E\n                - I\n                - U\n                - D\n                - S\n            catalogId:\n              description: Идентификатор каталога заполнения (источника для сборного)\n              type: integer\n            catalogVersion:\n              description: Номер версии каталога\n              type: integer\n            objectVersion:\n              description: Номер версии объекта\n              type: integer\n            globalId:\n              description: Глобальный идентификатор объекта (для типов I,U,D)\n              type: integer\n          required:\n            - id\n            - pushTimestamp\n            - operType\n            - catalogId\n        body:\n          description: |-\n            Тело пуш-уведомления\n\n            Формат тела пуш-уведомления для типов I, U, D совпадает\n          oneOf:\n            - $ref: '#/components/schemas/SourceExportPushBody'\n            - $ref: '#/components/schemas/ObjectChangePushBody'\n            - $ref: '#/components/schemas/CatalogSettingChangePushBody'\n      required:\n        - meta\n        - body\n        \n\n    \n    SourceExportPushBody:\n      description: Тело пуш-уведомления о выгрзуке каталога заполнения (источника для сборного)\n      type: object\n      properties:\n        uuid:\n          description: Идентификатор UUID файла выгрузки\n          type: string\n        objCount:\n          description: Количество объектов в итоговом файле\n          type: integer\n        catalogId:\n          description: Идентификатор каталога заполнения (источника)\n          type: integer\n        name:\n          description: Наименование итогового файла\n          type: string\n        extension:\n          description: Расширение итогового файла\n          type: string\n        mimeType:\n          description: MIME-тип файла\n          type: string\n        sha256sum:\n          description: Хэш сумма итогового файла\n          type: string\n        totalBytes:\n          description: Размер итогового файла в байтах\n          type: integer\n        exportId:\n          description: Идентификатор процесса экспорта в ЕХД\n          type: integer\n        dateCreated:\n          description: Дата и время создания записи об экспорте\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateStart:\n          description: Дата и время начала экспорта\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd :\n          description: Дата и время окончания экспорта\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n      required:\n        - uuid\n        - objCount\n        - catalogId\n        - name\n        - extension\n        - mimeType\n        - sha256sum\n        - totalBytes\n        - exportId\n        - dateCreated\n        - dateStart\n        - dateEnd \n    \n    ObjectChangePushBody:\n      description: Тело пуш-уведомления с информацией об объекте (\"дельта\")\n      type: object\n      allOf:\n        - $ref: 'catalogObjects.yaml#/components/schemas/FillingCatalogObjectVerbose'\n\n    CatalogSettingChangePushBody:\n      description: Тело пуш-уведомления с информацией о настройках каталога\n      type: object\n      # Мне лень перед отпуском это писать, надо GET-структуру продублировать для POST запроса\n      # properties:\n      #   attributes:\n      # required:\n      #   - attributes\n      #   - map\n\n\n  parameters:\n    catalogIdPathParam:\n      name: catalogId\n      required: true\n      in: path\n      description: |-\n        Идентификатор сборного каталога.\n      schema:\n        type: integer\n      example: 194700\n\n    catalogIdsQueryParam:\n      name: catalogIds\n      required: true\n      in: query\n      description: |-\n        Массив идентификаторов каталогов.\n        \n        Число элементов в списке от `1` до `100`.\n      schema:\n        type: array\n        items:\n          type: integer\n        minItems: 1\n        maxItems: 100\n      example: [194700, 186532, 11033]\n  \n  requestBodies:\n    AccumulatedCatalogSettings:\n      description: Тело запроса с настройками сборного каталога в формате TOML\n      content:\n        application/json:\n          schema:\n            $ref: '#/components/schemas/AccumulatedCatalogSettings'\n          examples:\n            Пример:\n              value:\n                settings: \"{TOML}\"\n                customFilesIds:\n                  - 0f583f97-9bb7-4b44-b37e-bfae615e4780\n                  - ff531f97-9bb7-4b12-b37e-bfae615e3244\n  responses:\n    AccumulatedCatalogNotFound:\n      description: |-\n        Сборный каталог не найден.\n      content:\n        application/json:\n          schema:\n              oneOf:\n                - $ref: '_common.yaml#/components/schemas/NotFoundError'\n          examples:\n            Пример:\n              $ref: '#/components/examples/AccumulatedCatalogNotFoundError'\n\n  examples:\n    AccumulatedCatalogListItemArrayResponse:\n      value:\n        - id: 1234\n          name: Кровли\n          sourceCatalogIds: [64872, 3248, 2763]\n          periodicity: Ежедневно\n          status: \n            id: 1\n            tagId: active\n            name: Активный\n          lastRun: 22.06.2025 13:27:54\n          nextRun: 23.06.2025 13:27:54\n          currentJobStatus: Подготовка данных\n          lastRunResult: Ошибка обработки\n        - id: 1234\n          name: Парковые территории\n          sourceCatalogIds: [312, 12341, 12312, 2131, 2442]\n          periodicity: Еженедельно\n          status: \n            id: 2\n            tagId: inactive\n            name: Неактивный\n          lastRun: 22.06.2025 04:24:02\n          nextRun: \"\"\n          currentJobStatus: \"\"\n          lastRunResult: Успешно обработан\n        - id: 1234\n          name: Учреждения медицины\n          sourceCatalogIds: [532, 523434, 68823, 23567, 333]\n          periodicity: Ежедневно\n          status: \n            id: 1\n            tagId: active\n            name: Активный\n          lastRun: \"\"\n          nextRun: 22.06.2025 12:00:00\n          currentJobStatus: Обработка объектов\n          lastRunResult: \"\"\n\n    AccumulatedCatalogCSVInfoArrayResponse:\n      value:\n        - id: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n          name: Парковые территории 1\n          extension: .csv\n          columnNames:\n            - id\n            - name\n            - geo\n          encoding: utf-8\n          separator: \";\"\n          textLimiter: \"\\\"\"\n        - id: 0f583f97-9bb7-4b44-b37e-bfae615e1112\n          name: Парковые территории 2\n          extension: .csv\n          columnNames:\n            - id\n            - name\n            - geo\n          encoding: utf-8\n          separator: \";\"\n          textLimiter: \"\\\"\"\n    \n    CustomCSVProcessedFileInfoResponse:\n      value:\n        fileId: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n        columnNames:\n          - id\n          - name\n          - geo\n    \n    AccumulatedCatalogHistoryResponse:\n      value:\n        - jobId: 7a280950-2324-4b18-b76b-b54c614ecebe\n          dateStart: 22.06.2025 04:24:02\n          dateEnd: 22.06.2025 08:24:02\n          status:\n            id: 4\n            tagId: finished\n            name: Завершено\n          resultFiles:\n            - id: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n              channelId: outputs.fountains_uvao:snapshot\n            - id: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n              channelId: outputs.fountains_szao:snapshot\n        - jobId: 834ed42b-b4f0-4010-9663-05c7e07cdcc5\n          dateStart: 23.06.2025 04:24:02\n          dateEnd: null\n          status:\n            id: 2\n            tagId: processing\n            name: Обработка объектов\n          resultFileId: null\n\n\n    AccumulatedCatalogSourceExportHistoryResponse:\n      value:\n        - exportId: 46326\n          id: 121\n          fullName: Парковые территории\n          dateStart: 22.06.2025 04:24:02\n          dateEnd: 22.06.2025 08:25:03\n          status:\n            id: 3\n            tagId: finished\n            name: Экспорт завершен успешно\n          resultFileId: 0f583f97-9bb7-4b44-b37e-bfae615e4780\n          countAllObj: 214672\n        - exportId: 46327\n          id: 123\n          fullName: Парки\n          dateStart: 23.06.2025 04:24:02\n          dateEnd: null\n          status:\n            id: 2\n            tagId: inWork\n            name: В работе\n          resultFileId: null\n    \n    AccumulatedCatalogCreatedResponse:\n      value:\n        id: 194700\n        code: 201\n        messageType: Created\n        message: Каталог успешно создан\n\n      \n    AccumulatedCatalogValidationError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Спецификация не прошла валидацию\n    \n    AccumulatedCatalogJobCreatedResponse:\n      value:\n        id: 194700\n        code: 201\n        messageType: Created\n        message: Процесс обработки сборного каталога успешно зарегистрирован\n\n    AccumulatedCatalogEditedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Настройки каталога успешно изменены\n\n    AccumulatedCatalogDeletedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Сборные каталоге удалены\n    \n    AccumulatedCatalogHasPublicationCatalogsError:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Каталог с идентификатором {catalogId} имеет связанные каталоги публикации\n\n    AccumulatedCatalogNotFoundError:\n      value:\n        code: 404\n        messageType: Not found\n        message: Каталога с идентификатором {catalogId} не существует\n\n    CustomFileIsNotCSV:\n      description: Пример ответа с ошибкой, если файл имеет отличный от .csv формат\n      value:\n        code: 400\n        messageType: Bad request\n        message: Загруженный файл не соответствует формату text/csv\n\n    CustomCSVColumnNameNotUniqueError:\n      description: Пример ответа с ошибкой, если наименования столбцов неуникальны\n      value:\n        code: 400\n        messageType: Bad request\n        message: Наименование колонки файла {columnName} неуникально\n\n    AccumulatedCatalogStatusChangedToActiveResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Статус каталога изменен на Активный\n\n    MissingNextUpdateDate:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Не передана дата следующего обновления сборного каталога\n    \n    AccumulatedCatalogStatusChangedToInactiveResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Статус каталога изменен на Неактивный\n\n    InactiveCatalogRunNotAllowed:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Запуск построения невозможен для неактивного сборного каталога\n\n    AccumulatedCatalogPeriodicityChangedResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Периодичность каталога изменена\n\n    AccumulatedCatalogProcessCancelledResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Процесс обновления сборного каталога отменен\n\n    AccumulatedCatalogProcessAlreadyCancelledResponse:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Процесс обновления уже завершен\n\n    AccumulatedCatalogProcessNotFoundResponse:\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Процесса обновления с идентификатором {jobId} не существует для каталога {catalogId}\n\n    SourceExportPush:\n      value:\n        meta:\n          id: 4230857823\n          pushDateTime: \"24.02.2025 12:31:24\"\n          operType: \"E\"\n          catalogId: 6404\n          catalogVersion: 3\n          objectVersion: null\n          globalId: null\n        body:\n          uuid: \"be273f4d-520d-4ba5-85be-62abbcc94b84\"\n          objCount: 564185\n          catalogId: 6404\n          name: \"export_6404-Адресный реестр_24_02_2025_12_45_00\"\n          extension: \".zip\"\n          mimeType: \"application/zip\"\n          sha256sum: 5f6340e841b88a0ae8758f24cb6cfb959f93930e6045ae19e89dd96406b0c550\n          totalBytes: 67452342\n          exportId: 42367\n          dateCreated: \"24.02.2025 12:31:24\"\n          dateStart: \"24.02.2025 12:32:53\"\n          dateEnd: \"24.02.2025 12:45:00\"\n\n    ObjectCahngedPush:\n      value:\n        meta:\n          id: 238074589237\n          pushDateTime: \"24.02.2025 12:31:24\"\n          operType: \"I\"\n          catalogId: 6404\n          catalogVersion: 3\n          objectVersion: 1\n          globalId: 12029439\n        body:\n          catalogId: 8432\n          globalId: 1249763289\n          systemObjectId: object_7236\n          data:\n            - catalogAttrId: 30\n              attrId: 130\n              value: Петров\n              isManualInput: false\n            - catalogAttrId: 33\n              attrId: 133\n              value: 33\n              isManualInput: false\n            - catalogAttrId: 36\n              attrId: 136\n              value: \"10.10.1980\"\n              isManualInput: false\n            - catalogAttrId: 39\n              attrId: 139\n              value: true\n              isManualInput: false\n            - catalogAttrId: 45\n              attrId: 145\n              value:\n                - globalId: 1983723\n                  value: Петров В.В\n                - globalId: 1386430\n                  value: Петров К.Р.\n              isManualInput: false\n            - catalogAttrId: 846\n              attrId: 3456\n              value:\n                - dictElementId: 1\n                  value: Понедельник\n                - dictElementId: 3\n                  value: Среда\n              isManualInput: false\n            - catalogAttrId: 84645\n              attrId: 1233\n              value:\n                - 791c351c-641b-4f27-b212-fec14e9b7b39\n                - dfc4a850-8279-4b45-8224-b7ecaa628f31\n                - f33b881e-a87d-4a47-9458-fe2e2256ec66\n              isManualInput: false\n            - catalogAttrId: 48\n              attrId: 148\n              isManualInput: false\n              value:\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  systemObjectId: единица-1\n                  globalId: 123123112\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Кошки мышки\n                      isManualInput: false\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"10.10.1980\"\n                      isManualInput: false\n                    - catalogAttrId: 57\n                      attrId: 157\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentSystemObjectId: единица-1\n                          rootGlobalId: 1249763289\n                          parentGlobalId: 123123112\n                          systemObjectId: единица-1-1\n                          globalId: 1012349862378\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов П.И.\n                              isManualInput: false\n                - catalogId: 8433\n                  parentCatalogId: 8432\n                  rootCatalogId: 8432\n                  parentGlobalId: 1249763289\n                  parentSystemObjectId: object_7236\n                  rootGlobalId: 1249763289\n                  globalId: 7654321\n                  systemObjectId: единица-2\n                  data:\n                    - catalogAttrId: 51\n                      attrId: 151\n                      value: ООО Рога и копыта\n                      isManualInput: false\n                    - catalogAttrId: 54\n                      attrId: 154\n                      value: \"21.07.2000\"\n                      isManualInput: false\n                    - catalogAttrId: 57\n                      attrId: 157\n                      isManualInput: false\n                      value:\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          globalId: 987654\n                          systemObjectId: единица-2-1\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванова К.И.\n                              isManualInput: false\n                        - catalogId: 8434\n                          parentCatalogId: 8433\n                          rootCatalogId: 8432\n                          parentGlobalId: 7654321\n                          parentSystemObjectId: единица-2\n                          systemObjectId: единица-2-2\n                          rootGlobalId: 1249763289\n                          data:\n                            - catalogAttrId: 60\n                              attrId: 160\n                              value: Иванов Р.И.\n                              isManualInput: false\n          geodata:\n            type: Feature\n            properties: \n              srs: EPSG:4326\n              isManualInput: false\n            geometry:\n              type: GeometryCollection\n              geometries:\n                - type: Point\n                  coordinates: \n                    - 37.57488596826171\n                    - 55.753835074882915\n                - type: MultiLineString\n                  coordinates:\n                    -\n                      -\n                        - 37.20208680549581\n                        - 55.75991514505003\n                      -\n                        - 38.401608888302064\n                        - 55.60775947055342\n                    -\n                      -\n                        - 39.2929204707026\n                        - 55.38448524332469\n                    -\n                      -\n                        - 38.62012154676003\n                        - 55.445280980775465\n                - type: MultiPolygon\n                  coordinates:\n                    -\n                      -\n                        -\n                          - 38.63968631610595\n                          - 55.59156664817431\n                        -\n                          - 38.61372729774422\n                          - 55.513883281785866\n                        -\n                          - 38.77855209164545\n                          - 55.55705844341085\n                        - \n                          - 38.63968631610595\n                          - 55.59156664817431  \n    \n    CatalogSettingsChangedPush:\n      value:\n        meta:\n          id: 238074589237\n          pushDateTime: \"24.02.2025 12:31:24\"\n          operType: \"S\"\n          catalogId: 6404\n          catalogVersion: 4\n          objectVersion: null\n          globalId: null\n        body:\n          attributes:\n            - attribute:\n                id: 1\n                techName: name\n                rusName: Наименование\n                enName: Name\n                type:\n                  id: 1\n                  name: Строка\n                  typeTag: string\n                description: Имя\n              catalogAttrId: 190\n              selectedAlterNameId: null\n              order: 1\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: true\n              manualInputTargets:\n                - attrId: 34\n                  isDependent: true\n                - attrId: 198\n                  isDependent: false\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              maxLength: 4000\n              fieldMask: null\n              fieldRegex:\n                id: 9076\n                name: Имя человека\n                value: ^[А-Яа-я]+[ А-Яа-я]*$\n              defaultValue: Иван\n              searchIndex:\n                - id: 1\n                  name: Тестовая организация\n            - attribute:\n                id: 34\n                techName: age\n                rusName: Возраст\n                enName: Age\n                type:\n                  id: 9\n                  name: Целое число\n                  typeTag: integer\n                description: Возраст\n              catalogAttrId: 191\n              selectedAlterNameId: null\n              order: 2\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: createObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: [1]\n              oiv:\n                - id: 1\n                  name:\n              defaultValue: 18\n              maxLength: 3\n              isPositiveValues: true\n            - attribute:\n                id: 98\n                techName: price\n                rusName: Цена\n                enName: Price\n                type:\n                  id: 9\n                  name: Дробное число\n                  typeTag: float\n                description: Цена\n              catalogAttrId: 192\n              selectedAlterNameId: null\n              order: 3\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              defaultValue: 99,99\n              maxLength: 50\n              isPositiveValues: true\n              fieldRegex: null\n              maxLengthDecimal: 2\n            - attribute:\n                id: 198\n                techName: birthday\n                rusName: Дата рождения\n                enName: Birthday\n                type:\n                  id: 3\n                  name: Дата\n                  typeTag: date\n                description: Дата рождения\n                alterNames:\n                - id: 12\n                  rusAlterName: День рождения\n                  enAlterName: Birthday\n              catalogAttrId: 193\n              selectedAlterNameId: 12\n              order: 4\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: [1]\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              defaultValue: null\n              isTime: false\n              fieldMask: dd.mm.yyyy\n            - attribute:\n                id: 54\n                techName: goodman\n                rusName: Хороший человек\n                enName: Good man\n                type:\n                  id: 7\n                  name: Флаг\n                  typeTag: boolean\n                description: Признак, что человек хороший\n              catalogAttrId: 194\n              selectedAlterNameId: null\n              order: 5\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: createObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              defaultValue: true\n            - attribute:\n                id: 84325\n                techName: photo\n                rusName: Фото\n                enName: Photo\n                type:\n                  id: 6\n                  name: Файл\n                  typeTag: file\n                description: Фото\n              catalogAttrId: 196\n              selectedAlterNameId: null\n              order: 6\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              isMultiple: true\n            - attribute:\n                id: 3892\n                techName: characteristic\n                rusName: Характеристика\n                enName: Characteristic\n                type:\n                  id: 4\n                  name: Справочник\n                  typeTag: dict\n                description: null\n                dictionary:\n                  id: 123\n                  name: Характеристики человека\n                  parentId: 122\n              catalogAttrId: 197\n              selectedAlterNameId: null\n              order: 7\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              dictId: 15\n              maxCntElement: 1\n              minCntElement: 10\n              parentDictAttrId: null\n              refColDict: null\n              defaultColDict:\n                techName: NAME\n                rusName: Наименование\n              sort: asc\n              isMultiple: true\n            - attribute:\n                id: 348\n                techName: friend\n                rusName: Друг\n                enName: Friend\n                type:\n                  id: 8\n                  name: Ссылка на объект\n                  typeTag: link\n                description: null\n              catalogAttrId: 198\n              selectedAlterNameId: null\n              order: 8\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              refCatalog:\n                id: 194700\n                name: Персоны\n                mainAttrId: 361\n              refAttr:\n                id: 1\n                name: Наменование\n              maxCntElement: 3\n              minCntElement: 1\n              isMultiple: true\n              isRefUnsignedObj: true\n            - attribute:\n                id: 10\n                techName: education\n                rusName: Образование\n                enName: Education\n                type:\n                  id: 5\n                  name: Таблица\n                  typeTag: table\n                description: null\n              catalogAttrId: 199\n              selectedAlterNameId: null\n              order: 9\n              isReq: true\n              isUniq: true\n              isUniqWithinParent: false\n              isMain: false\n              isBanEdit: true\n              isSystemModify: true\n              objOperatingMode: updateObj\n              isManualInput: false\n              manualInputTargets: []\n              manualInputSources: []\n              oiv:\n                - id: 1\n                  name: Тестовая организация\n              maxCntElement: 10\n              minCntElement: 0\n              # childCatalogUniqAttrIds: [1]\n              childCatalogId: 194701\n              attributes:\n                - attribute:\n                    id: 12\n                    techName: institution\n                    rusName: Учебное заведение\n                    enName: Institution\n                    type:\n                      id: 1\n                      name: Строка\n                      typeTag: string\n                    description: Имя\n                  selectedAlterNameId: null\n                  catalogAttrId: 201\n                  order: 1\n                  isReq: true\n                  isUniq: true\n                  isUniqWithinParent: true\n                  isMain: false\n                  isBanEdit: true\n                  isSystemModify: true\n                  objOperatingMode: updateObj\n                  isManualInput: false\n                  manualInputTargets: []\n                  manualInputSources: []\n                  oiv:\n                    - id: 1\n                      name: Тестовая организация\n                  maxLength: 4000\n                  fieldMask: null\n                  fieldRegex: null\n                  defaultValue: null\n                  searchIndex: null\n          map: \n            hasGeo: true\n            typeGeoTagIds:\n              - Point\n              - MultiLineString\n              - MultiPolygon\n            isReq: true\n            isOneTypeGeoForObj: false",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для интеграции с ОПОД в части отображения наборов данных\n  version: 1.0.0\n\nservers:\n  - url: https://data-v2-test.mos.ru\n  - url: https://data-v2-stage.mos.ru\n  - url: https://data-v2.mos.ru\n\npaths:\n\n  /odata/datasets/search:\n    post:\n      tags:\n        - odata\n      summary: Получение списка наборов данных, опубликованных в ОПОД\n      description: |-\n        Возвращает список наборов данных, отсортированный по возрастанию наименования набора данных.\n        Список должен содержать только неудалённые НД, имеющие статус \"Опубликован\" или \"Архивный\".\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n        Для фильтрации используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `100`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: search\n          in: query\n          required: false\n          description: |-\n            Текстовый поисковый запрос по списку наборов данных.  \n            Поиск производится по атрибуту `fullName` и должен быть регистронезависимым.   \n            Запрос со значением `Москва` вернет все наборы, наименование которых содержит подстроку `москва`.\n          schema:\n            type: string\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: fullName\n            enum:\n              - fullName\n              - fullNameEn\n              - thematicCategoryName\n              - thematicCategoryNameEn\n              - numberView\n              - rating\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/datasetsListRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'   \n\n  /odata/category/search:\n    post:\n      tags:\n        - odata\n      summary: Получение списка тематических категорий, опубликованных в ОПОД\n      description: |-\n        Возвращает список тематических категорий, отсортированный по возрастанию наименования категории. \n        В список входят только неудалённые категории, находящиеся в статусе \"Опубликована\".\n\n        Метод позволяет выполнять сортировку, фильтрацию, текстовый поиск и пагинацию. Подробнее см. параметры запроса.\n      parameters:\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `100`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: fullName\n            enum:\n              - id\n              - name\n              - nameEn\n              - datasetsCount\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'\n      requestBody:\n        $ref: '#/components/requestBodies/thematicCategoriesListRequestBody'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/ThematicCategoryListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/ThematicCategoryListItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count' \n\n  /odata/oiv/search:\n    get:\n      tags:\n        - odata\n      summary: Получение списка ОИВ, НД которых публикуются в ОПОД\n      description: |-\n        Возвращает список ОИВ, отсортированный по возрастанию наименования ОИВ. \n        В список входят только ОИВ, которые указаны в наборах данных в качетсве поставщика. Должны учитываться только неудаленные наборы данных в статусах \"Опубликован\" и \"Архивный\".\n      parameters:\n        - name: sortBy\n          in: query\n          description: |-\n            Поле, по которому производится сортировка.\n          required: false\n          schema:\n            type: string\n            default: fullName\n            enum:\n              - id\n              - name\n              - nameEn\n              - datasetsCount\n        - $ref: '_common.yaml#/components/parameters/orderByAscQueryParam'  \n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/OivListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OivListItemArrayResponse'\n\n  /odata/datasets/{datasetId}:\n    get:\n      tags:\n        - odata\n      summary: Получение настроек набора данных\n      description: |-\n        Возвращает настройки набора данных, включающие \n          - общую информацию, \n          - статистику по набору, \n          - данные об актуальных версии и релизе, \n          - настройки атрибутов указанной в запросе версии,\n          - данные об указанном в запросе релизе.\n        Данный метод возвращает информацию об исторических и акутальных версиях и релизах, а также о новых, если передан accessKey \n      parameters:\n        - $ref: 'datasets.yaml#/components/parameters/datasetIdPathParam'\n        - name: version\n          in: query\n          description: |-\n            Номер версии набора данных, настройки которой необходимо вернуть в ответе. Если данный параметр не передаётся, то возвращаются настройки актуальной версии.\n          required: false\n          schema:\n            type: integer\n        - name: release\n          in: query\n          description: |-\n            Номер релиза набора данных, данные которого необходимо вернуть в ответе. \n            Данный параметр зависит от параметра version:\n              `version НЕ передается`:\n                - release не передаётся - возвращаются данные актуального релиза\n                - release передаётся - возвращаются данные для релиза в актуальной версии\n              `version передаётся`:\n                - release не передаётся - возвращаются данные последнего исторического релиза в указанной версии\n                - release передаётся - возвращаются данные для релиза в указанной версии\n          required: false\n          schema:\n            type: integer\n        - $ref: '#/components/parameters/accessKeyQueryParam'       \n      responses:\n        '200':\n          description: |-\n            Полная информация о НД для отображения страницы набора данных без объектов.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DatasetAllInfo'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetAllInfoResponse'  \n        '404':\n          description: |-\n            Ошибки отсутствия запрашиваемой сущности. Проверки выполняются в следующем порядке:\n              - проверяется существование набора данных в статусе \"Опубликован\" или \"Архивный\", если передан ключ, то и в статусе \"На проверке\". Если не найден, то ошибка по НД\n              - если НД найден, то проверяется существование версии в рамках НД с указнным номером в статусе \"Актуальная\" или \"Историческая\", если передан ключ, то и в статусе \"Новая\". Если не найдена, то ошибка по версии\n              - если версия найдена, то проверяется существование релиза в рамках версии с указанным номером в статусе \"Актуальный\" или \"Исторический\", если передан ключ, то и в статусе \"Новый\". Если не найден, то ошибка по релизу\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: 'datasets.yaml#/components/examples/DatasetNotFoundResponse'\n                Несуществующая версия набора данных:\n                  $ref: 'datasets.yaml#/components/examples/DatasetVersionNotFoundResponse'\n                Несуществующий релиз набора данных:\n                  $ref: 'datasets.yaml#/components/examples/DatasetReleaseNotFoundResponse'          \n\n  /odata/datasets/{datasetId}/versions:\n    get:\n      tags:\n        - odata\n      summary: Получение версий набора данных\n      description: |-\n        Возвращает список версий набора данных, отсортированный по убыванию номера версии. \n      parameters:\n        - $ref: 'datasets.yaml#/components/parameters/datasetIdPathParam'\n        - $ref: '#/components/parameters/accessKeyQueryParam'\n      responses:\n        '200':\n          description: |-\n            Список версий набора данных в статусх \"Актуальная\" или \"Историческая\". Если передан ключ, то добавляется версия и в статусе \"Новая\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/DatasetVersion'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetVersionArrayResponse'  \n        '404':\n          description: |-\n            Ошибки отсутствия запрашиваемой сущности:\n              - проверяется существование набора данных в статусе \"Опубликован\" или \"Архивный\", если передан ключ, то и в статусе \"На проверке\". \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: 'datasets.yaml#/components/examples/DatasetNotFoundResponse'\n\n  /odata/datasets/{datasetId}/releases: \n    get:\n      tags:\n        - odata\n      summary: Получение релизов набора данных\n      description: |-\n        Возвращает список релизов наборов данных, отсортированный по убыванию номера релиза.   \n      parameters:\n        - $ref: 'datasets.yaml#/components/parameters/datasetIdPathParam'\n        - name: limit\n          in: query\n          required: false\n          description: |-\n            Количество возвращаемых каталогов (от `1` до `100`).\n          schema:\n            type: integer\n            format: int32\n            default: 100\n            minimum: 1\n            maximum: 100\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n        - $ref: '#/components/parameters/accessKeyQueryParam'\n      responses:\n        '200':\n          description: |-\n            Список релизов набора данных в статусх \"Актуальный\" или \"Исторический\". Если передан ключ, то добавляется релиз и в статусе \"Новый\"\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  type: object\n                  properties:\n                    versionNum:\n                      description: Номер версии набора данных\n                      type: integer\n                  allOf:\n                    - $ref: '#/components/schemas/DatasetRelease'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/DatasetReleaseArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'           \n        '404':\n          description: |-\n            Ошибки отсутствия запрашиваемой сущности:\n              - проверяется существование набора данных в статусе \"Опубликован\" или \"Архивный\", если передан ключ, то и в статусе \"На проверке\". \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: 'datasets.yaml#/components/examples/DatasetNotFoundResponse'     \n\n  /odata/datasets/{datasetId}/stat:\n    post:\n      tags:\n        - odata\n      summary: Сохранение статистики по НД\n      description: |-\n        Сохраняет факт просмотра или скачивания набора данных\n      parameters:\n        - $ref: 'datasets.yaml#/components/parameters/datasetIdPathParam'\n        - name: type\n          in: query\n          required: true\n          description: |-\n            Тип действия с набором данных:\n              1 - просмотр набора данных\n              2 - скачивание файла экспорта с содержимым набора данных\n          schema:\n            type: integer\n            format: int32\n      responses:\n        '200':\n          description: |-\n            Успешный ответ\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/OkResponse'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/OkStatResponse'       \n        '404':\n          description: |-\n            Ошибки отсутствия запрашиваемой сущности:\n              - проверяется существование набора данных в статусе \"Опубликован\" или \"Архивный\", если передан ключ, то и в статусе \"На проверке\". \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id набора данных:\n                  $ref: 'datasets.yaml#/components/examples/DatasetNotFoundResponse'\n        '400':\n          description: |-\n            Ошибки бизнес-логики\n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/BadRequestError'\n              examples:\n                Указан некорректный тип действия:\n                  $ref: '#/components/examples/IncorrectStatTypeResponse'\n\n  /odata/season:\n    get:\n      tags:\n        - odata\n      summary: Получение сезонных наборов данных\n      description: |-\n        Возвращает список наборов данных для слайдера стартовой страницы \"Сезонные наборы\". Список должен удовлетворять условиям: \n          - неудалённые НД в статусе \"Опубликован\", \n          - сезонность НД соответсвует сезонности, выбранной в ГИС ЕХД,\n          - в актуальной версии НД указано hasGeo: true.\n        \n        Максимальное кол-во элементов в списке = 12.\n        Если НД, соответствующих сезону, получается меньше 12, то список дополняется наборами с наибольшим рейтингом за все время, с учётом выполнения условий по статусу и карте. \n\n        Список должен быть отсортирован по убыванию рейтинга. \n        Если есть несколько НД с одинаковым рейтингом то эти НД в свою очередь сортируются по убыванию кол-ва скачиваний.\n\n      responses:\n        '200':\n          description: |-\n            Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/SeasonDatasetListItem'\n              examples:\n                Пример:\n                  $ref: '#/components/examples/SeasonDatasetArrayResponse'\n\n  /odata/sets:\n    get:\n      tags:\n        - odata\n      summary: Получение новых и популярных наборов данных\n      description: |-\n        Возвращает список наборов данных для слайдера стартовой страницы \"Новые и популярные наборы\". \n        В список должны входить неудалённые НД в статусе \"Опубликован\". \n\n        Максимальное кол-во элементов в списке = 12.\n\n        Список состоит из списка новых и списка популярных наборов в следующем соотношении:\n          - кол-во новых НД: от 0 до 8 включительно,\n          - кол-во популярных: 12 - кол-во новых.\n\n        При этом один и тот же НД не должен оказаться в списке новых и списке популярных. Если НД подходит в оба списка, то предпочтение отдаётся списку новых НД.\n\n        Условия попадания НД в список и сортировки описаны в схеме ответа.\n      responses:\n        '200':\n          description: |-\n            Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  newSets:\n                    description: |-\n                      Содержит наборы данных, с даты первой публикации которых прошло не более 30 дней. \n                      Массив может содержать максимум 8 элементов.\n                      Список должен быть отсортирован по убыванию даты первой публикации. Если дата публикации у нескольких наборов одинаковая, то к ним применяется сортировка по убыванию кол-ва просмотров.\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/NewAndPopularDatasetListItem'\n                  popularSets:\n                    description: |-\n                      Содержит наборы данных, у которых кол-во просмотров за последние 7 дней, включая текущую дату > 0.\n                      Кол-во элементов массива зависит от кол-ва элементов в newSets и вычисляется как 12 - кол-во newSets.\n                      Список должен быть отсортирован по убыванию кол-ва просмотров. Если наборы содержат одинаковое кол-во просмотров, то к ним применяется сортировка по убыванию рейтинга.\n                    type: array\n                    items:\n                      $ref: '#/components/schemas/NewAndPopularDatasetListItem'  \n              examples:\n                Пример:\n                  $ref: '#/components/examples/NewAndPopularDatasetArrayResponse'\n\n  /odata/catalog/get:\n    post:\n      tags:\n        - odata\n      summary: (прокси) Получение объектов КП\n      description: |-\n        Возвращает объекты каталога публикации, связанного с набором данных. \n        Является прокси метода POST /publrest/catalog/get\n        Внутри метода подставляются хэдер для авторизации во внешнем REST API ГИС ЕХД\n          - ehd-system: opod\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: 'publrest.yaml#/components/schemas/CatalogGetRequest'\n            examples:\n              Пример:\n                $ref: 'publrest.yaml#/components/examples/CatalogGetRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n            Если в теле запроса есть параметр paging=true, то возвращается объект CatalogGetResponsePaging\n          content:\n            application/json:\n              schema:\n                oneOf:\n                  - $ref: 'publrest.yaml#/components/schemas/CatalogGetResponse'\n                  - $ref: 'publrest.yaml#/components/schemas/CatalogGetResponsePaging'\n              examples:\n                Пример, если нет параметра `paging` в запросе:\n                    $ref: 'publrest.yaml#/components/examples/CatalogGetResponse'\n                Пример, если в запросе есть параметр `paging=true`:\n                    $ref: 'publrest.yaml#/components/examples/CatalogGetResponsePaging'\n                Пример, если в запросе есть параметр `fetchGeodata =true`:\n                    $ref: 'publrest.yaml#/components/examples/CatalogGetResponseFetchGeodata'\n\n  /odata/dictionary/get:\n    post:\n      tags:\n      - odata\n      summary: (прокси) Получение элементов справочника\n      description: |-\n        Возвращает список элементов справочника.\n        Является прокси метода POST /publrest/dictionary/get\n        Внутри метода подставляются хэдер для авторизации во внешнем REST API ГИС ЕХД\n          - ehd-system: opod\n      requestBody:\n        content:\n          application/json:\n            schema:\n                $ref: 'publrest.yaml#/components/schemas/DictionaryGetRequest'\n            examples:\n              Пример:\n                $ref: 'publrest.yaml#/components/examples/DictionaryGetRequest'\n      responses:\n        '200':\n          description: |-\n            Успешный ответ.\n            При отсутствии элементов, удовлетворяющих условиям запроса, возвращается пустой массив в параметре `response`.\n          content:\n            application/json:\n              schema:\n                $ref: 'publrest.yaml#/components/schemas/DictionaryGetResponse'\n              examples:\n                Прмиер:\n                  $ref: 'publrest.yaml#/components/examples/DictionaryGetResponse'\n\n  /odata/MEDIA/showFile:\n    get:\n      tags:\n        - odata\n      summary: (прокси) Отображение изображения, вложенного в объект\n      description: |-\n        Метод используется для отображения изображения в браузере.\n        Для управления размером используется `thumbnail` (указывается если необходимо отобразить изображение в уменьшенном виде).\n        Является прокси метода GET /publrest/MEDIA/showFile\n        Внутри метода подставляются хэдер для авторизации во внешнем REST API ГИС ЕХД\n          - ehd-system: opod\n      parameters:\n        - $ref: 'publrest.yaml#/components/parameters/fileUuidQueryParam'\n        - name: size\n          in: query\n          description: Указать `thumbnail` если изображение в уменьшенном виде\n          required: false\n          schema:\n            type: string\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            image/jpg:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n        '404':\n          $ref: 'publrest.yaml#/components/responses/FileNotFoundResponse'\n\n  /odata/MEDIA/getFile:\n    get:\n      tags:\n        - odata\n      summary: (прокси) Скачивание файла\n      description: |-\n        Метод используется для скачивания файла по идентификатору.\n        Является прокси метода GET /publrest/MEDIA/getFile\n        Внутри метода подставляются хэдер для авторизации во внешнем REST API ГИС ЕХД\n          - ehd-system: opod\n      parameters:\n        - $ref: 'publrest.yaml#/components/parameters/fileUuidQueryParam'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/octet-stream:\n              schema:\n                  type: string\n                  format: binary\n                  example: <file-content>\n        '404':\n          $ref: 'publrest.yaml#/components/responses/FileNotFoundResponse'\n\n  /odata/files/getFilesInfo:\n    post:\n      tags:\n        - odata\n      summary: (прокси) Получение информации об одном или нескольких файлах\n      description: |-\n        Метод используется для получения информации о файлах. В теле запроса передаются идентификаторы файлов (UUID).\n        Является прокси метода POST /files/getFilesInfo\n        Внутри метода подставляется Bearer токен авторзации ОПОД.\n      requestBody:\n        description: Пример тела запроса\n        content:\n          application/json:\n            schema:\n                $ref: 'files.yaml#/components/schemas/fileUuidArray'\n            examples:\n              Пример:\n                $ref: 'files.yaml#/components/examples/fileUuidArrayRequest'                      \n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: 'files.yaml#/components/schemas/File'\n              examples:\n                Пример:\n                  $ref: 'files.yaml#/components/examples/FileArrayResponse'\n\ncomponents:\n\n  schemas:\n\n    DatasetStatistic:\n      type: object\n      properties:\n        rating:\n          description: Рейтинг пользовательских оценок за все время публикации дата-сета на портале.\n          type: number\n        numberVotes:\n          description: Число проголосовавших, т.е. указавших оценку дата-сету за все время публикации набора на портале.\n          type: integer\n        numberView:\n          description: Число запросов на просмотр опубликованного датасета за все время публикации набора на портале.\n          type: integer \n        numberDownloads:\n          description: Число запросов на скачивание опубликованного датасета за все время публикации набора на портале.\n          type: integer  \n\n    DatasetListItem:\n      type: object\n      properties:\n        id:\n          description: Идентификатор набора данных\n          type: integer\n        fullName:\n          description: Русскоязычное полное наименование набора данных\n          type: string\n        fullNameEn:\n          description: Англоязычное полное наименование набора данных\n          type: string\n        publicationStatusTagId:\n          $ref: 'datasets.yaml#/components/schemas/DatasetPublicationStatusTagIdEnum'       \n        oivId: \n          description: Идентификатор поставщика информации набора данных (ответственный ОИВ)\n          type: integer\n        oivName:\n          description: Наименование поставщика информации набора данных (ответственный ОИВ)\n          type: string  \n        oivNameEn:\n          description: Наименование поставщика информации набора данных (ответственный ОИВ) на английском языке\n          type: string\n        thematicCategoryId:  \n          description: Идентификатор тематическаой категории набора данных\n          type: integer\n        thematicCategoryName:\n          description: Наименование тематическаой категории набора данных\n          type: string  \n        thematicCategoryNameEn:\n          description: Наименование тематической категории набора данных на английском языке\n          type: string\n        firstPublicationDate:\n          description: Дата публикации набора данных на ОПОД. Устанавливается автоматически в момент, когда У НД впервые меняют статус на \"Опубликовано\"\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'\n        actualReleaseDate:\n          description: Дата публикации актуального релиза набора данных.\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'                               \n        seasonalityTagId:\n          $ref: 'datasets.yaml#/components/schemas/DatasetSeasonalityTagIdEnum'\n        isIsoIndicator:\n          description: Признак, содержит ли набор показатели ISO37120 и U4SSC\n          type: boolean\n        isAvailableIndicator:\n          description: Признак, относится ли набор данных к категории \"Доступная среда\"\n          type: boolean\n        hasGeo:\n          description: |-\n            Наличие геопривязки в актуальной версии набора данных.\n          type: boolean  \n        isDict:\n          description: Признак, что набор данных раскрывается на ОПОД как справочник\n          type: boolean\n        dictTypeTagId:\n          description: Тип справочника\n          type: string\n        stat:\n          $ref: '#/components/schemas/DatasetStatistic'      \n\n    ThematicCategoryListItem:\n      type: object\n      properties:\n        id:\n          description: Идентификатор тематической категории\n          type: integer\n        name:\n          description: Наименование тематической категории\n          type: string\n        nameEn:\n          description: Наименование тематической категории на английском языке\n          type: string\n        datasetsCount:\n          description: Количество наборов данных в статусах \"Опубликован\" и \"Архивный\", в которых указана данная тематическая категория\n          type: integer\n        datasetsIds:\n          description: Массив идентификаторов наборов данных в статусах \"Опубликован\" и \"Архивный\", в которых указана данная тематическая категория\n          type: array\n          items:\n            type: integer  \n        imageId:\n          description: UUID файла иконки тематической категории, по которому можно получить изображение из файлового сервиса ГИС ЕХД.\n          type: string\n        imageCode:\n          description: Содержание svg файла иконки тематической категории, описанное на языке разметки XML.\n          type: string\n\n    OivListItem:\n      type: object\n      properties:\n        id:\n          description: Идентификатор ОИВ\n          type: integer\n        name:\n          description: Полное наименование ОИВ\n          type: string\n        nameEn:\n          description: Полное наименование ОИВ на английском языке\n          type: string\n        datasetsCount:\n          description: Количество наборов данных в статусах \"Опубликован\" и \"Архивный\", в которых указан даннаый ОИВ в качестве поставщика данных\n          type: integer\n\n    DatasetAllInfo:\n      type: object\n      properties:\n        generalInfo:\n          allOf:\n            - $ref: 'datasets.yaml#/components/schemas/DatasetCommonGeneralInfo'\n          properties:\n            oiv:\n              type: object\n              properties:\n                nameEn:\n                  description: Наименование ОИВа на английском языке\n                  type: string\n              required:\n                - nameEn     \n            thematicCategory: \n              type: object\n              properties:\n                nameEn:\n                  description: Наименование тематической категории на английском языке\n                  type: string\n              required:\n                - nameEn\n            description:\n              description: |-\n                Расширенное описание набора данных в формате html. \n                Берётся из последней версии настроек каталога публикации, с которым связана актуальная версия набора данных.\n                Если набор данных содержит только первую новую версию, то КП берётся с неё.\n              type: string \n              readOnly: true                  \n        stat:\n          $ref: '#/components/schemas/DatasetStatistic'\n        actualData:\n          description: Информация об актуальных версии и релизе набора данных.\n          type: object\n          properties:\n            versionNum:\n              description: Номер актуальной версии набора данных\n              type: integer\n            versionOpenDate:\n              allOf:\n                - description: Дата публикации версии в ОПОД\n                - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n            releaseNum: \n              description: Номер актуального релиза набора данных. Номер указывается в рамках актуальной версии НД \n              type: integer\n            releaseCreateDate:\n              allOf:\n                - description: Дата создания релиза набора данных. Используется для запроса объектов.\n                - $ref: '_common.yaml#/components/schemas/DateTimeFormat'  \n            releaseOpenDate:\n              allOf:\n                - description: Дата публикации релиза набора данных. Используется для отображения пользователю.\n                - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n            validDate:\n              allOf: \n                - description: Дата, до которой данные релиза считаются актуальными. Выисляется при в момент выполнения запроса. Вычисление производится на основе даты актуального релиза и периодичности обновления.\n                - $ref: '_common.yaml#/components/schemas/DateFormat' \n        version:\n          description: Настройки версии, указанной в запросе.\n          allOf:\n            - $ref: 'datasets.yaml#/components/schemas/CommonDatasetVersionSettings'\n            - $ref: '#/components/schemas/DatasetVersion'\n          type: object\n          properties:\n            hasGeo:\n              description: |-\n                Наличие геопривязки в версии набора данных. \n                Если признак установлен, то массив атрибутов должен содержать поля geoData, geoData.coordinates, geoData.type, geodata_center.   \n              type: boolean  \n        release:\n          description: Данные релиза, указанного в запросе\n          allOf:\n            - $ref: '#/components/schemas/DatasetRelease'\n\n    DatasetVersion:\n      type: object\n      properties:\n        versionNum:\n          description: Номер версии набора данных\n          type: integer\n        openDate:\n          allOf:\n            - description: Дата открытия версии набора данных\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        publicationStatusTagId:\n          $ref: 'datasets.yaml#/components/schemas/VersionPublicationStatusTagIdEnum'\n          type: boolean  \n        publicationCatalogId:\n          description: Идентификатор каталога публикации, который привязан к версии набора данных\n          type: integer\n\n    DatasetRelease:\n      properties:\n        releaseNum:\n          description: Номер релиза\n          type: integer\n        сreateDate:\n          allOf:\n            - description: Дата создания релиза набора данных. Используется для запроса объектов.\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'          \n        openDate:\n          allOf:\n            - description: Дата публикации релиза набора данных. Используется для отображения пользователю.\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        publicationStatus:\n          $ref: 'datasets.yaml#/components/schemas/ReleasePublicationStatusTagIdEnum'    \n        cntObjects:\n          description: Количество объектов в релизе\n          type: integer        \n\n    CommonSliderDatasetListItem:\n      type: object\n      properties:\n        id:\n          description: Идентификатор набора данных\n          type: integer\n        fullName:\n          description: Русскоязычное полное наименование набора данных\n          type: string\n        fullNameEn:\n          description: Англоязычное полное наименование набора данных\n          type: string  \n        thematicCategoryId:  \n          description: Идентификатор тематической категории набора данных.\n          type: integer\n        thematicCategoryName:\n          description: Наименование тематической категории набора данных\n          type: string  \n        thematicCategoryNameEn:\n          description: Наименование тематической категории набора данных на английском языке\n          type: string\n        thematicCategoryImageId:\n          description: UUID файла иконки тематической категории, по которому можно получить изображение из файлового сервиса ГИС ЕХД.\n          type: string\n        thematicCategoryImageCode:\n          description: Содержание svg файла иконки тематической категории, описанное на языке разметки XML.\n          type: string  \n        rating:\n          description: Рейтинг пользовательских оценок за все время публикации набора данных на портале.\n          type: number\n\n    SeasonDatasetListItem:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonSliderDatasetListItem'\n      properties:\n        seasonality:\n          $ref: 'datasets.yaml#/components/schemas/DatasetSeasonality'    \n        numberDownloads:\n          description: Число запросов на скачивание опубликованного датасета за последние 7 дней, включая текущую дату.\n          type: integer\n\n    NewAndPopularDatasetListItem:\n      type: object\n      allOf:\n        - $ref: '#/components/schemas/CommonSliderDatasetListItem'\n      properties:\n        firstPublicationDate:\n          description: Дата первой публикации набора данных на ОПОД\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateFormat'  \n        numberView:\n          description: Количество просмотров набора данных за последние 7 дней, включая текущую дату.\n          type: integer\n\n  parameters:\n    \n    accessKeyQueryParam:\n      name: accessKey\n      in: query \n      description: |-\n        Ключ доступа к \n          - наборам данных в статусе \"На проверке\",\n          - к версиям в статусе \"Новая\"\n          - к релизам в статусе \"Новый\" или \"Исторический\", опубликованный позже актуального релиза \n        Соответственно, если в запросе передается данный параметр и указывается набор, версия или релиз в перечисленных выше статусах, то формируется ответ с соответствующими данными, иначе отдаётся ошибка 404 об отсутсвующем НД, версии или релизе соответственно.  \n      required: false\n      schema:\n        type: string      \n  \n  requestBodies:\n\n    datasetsListRequestBody:\n      description: Пример тела запроса для поиска по списку наборов данных\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - fullName\n                            - fullNameEn\n                            - publicationStatusTagId\n                            - thematicCategoryId\n                            - oivId\n                            - isDict\n                            - seasonalityTagId\n                            - dictTypeTagId\n                            - hasGeo\n                            - isAvailableIndicator\n                            - isIsoIndicator\n                            - firstPublicationDate\n          examples:\n            Пример:\n              value:\n                filters:\n                  - attribute: 'firstPublicationDate'\n                    operator: 'greaterThan'\n                    value: '16.09.2022'\n      required: false\n\n    thematicCategoriesListRequestBody:\n      description: Пример тела запроса для поиска по списку наборов данных\n      content:\n        application/json:\n          schema:\n            type: object\n            properties:\n              filters:\n                type: array\n                items:\n                  allOf:\n                    - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                    - properties:\n                        attribute:\n                          type: string\n                          enum:\n                            - id\n                            - name\n                            - nameEn\n                            - datasetsCount\n          examples:\n            Пример:\n              value:\n                filters:\n                  - attribute: 'firstPublicationDate'\n                    operator: 'greaterThan'\n                    value: '16.09.2022'\n      required: false  \n\n  examples:\n\n  # Примеры простых успешных ответов\n\n    OkStatResponse:\n      value:\n        code: 200\n        messageType: Ok\n        message: Данные успешно сохранены!\n\n  # Примеры ответов-сущностей\n\n    DatasetListItemArrayResponse:\n      value:\n        - id: 530\n          fullName: Объекты культурного наследия\n          fullNameEn: Objects of cultural heritage\n          publicationStatusTagId: published   \n          oivId: 1201\n          oivName: Департамент культурного наследия города Москвы\n          oivNameEn: Moscow Department of cultural heritage\n          thematicCategoryId: 107\n          thematicCategoryName: Культура\n          thematicCategoryNameEn: Culture\n          firstPublicationDate: 17.06.2014\n          actualReleaseDate: 28.05.2025                             \n          seasonalityTagId: notSeasonal\n          isIsoIndicator: false\n          isAvailableIndicator: false\n          hasGeo: true\n          isDict: false\n          dictTypeTagId: null\n          stat:\n            rating: 3.3\n            numberVotes: 953\n            numberView: 3310931\n            numberDownloads: 32194\n        - id: 60788\n          fullName: Wi-Fi в библиотеках\n          fullNameEn: Wi-Fi in libraries\n          publicationStatusTagId: published   \n          oivId: 8652\n          oivName: Департамент информационных технологий города Москвы\n          oivNameEn: Moscow Department of information technologies\n          thematicCategoryId: 107\n          thematicCategoryName: Связь\n          thematicCategoryNameEn: Communication\n          firstPublicationDate: 19.07.2018\n          actualReleaseDate: 19.03.2025                             \n          seasonalityTagId: notSeasonal\n          isIsoIndicator: false\n          isAvailableIndicator: false\n          hasGeo: true\n          isDict: false\n          dictTypeTagId: null\n          stat:\n            rating: 2\n            numberVotes: 163\n            numberView: 59646\n            numberDownloads: 71449\n\n    ThematicCategoryListItemArrayResponse:\n      value:\n        - id: 102\n          name: Дороги и транспорт\n          nameEn: Roads and transport\n          datasetsCount: 3\n          datasetsIds: \n            - 1881\n            - 754\n            - 753\n          imageId: 0ed86af5-d6c7-4e33-9f21-9bec4d40dace\n          imageCode: |- \n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n            <g id=\"Group_5470\" data-name=\"Group 5470\" transform=\"translate(-579 -411)\">\n              <path id=\"Path_11783\" data-name=\"Path 11783\" d=\"M10650-19018a1,1,0,0,1-1-1v-1h-8v1a1,1,0,0,1-1,1h-4a1,1,0,0,1-1-1v-1a1,1,0,0,1-1-1v-18.518a2.512,2.512,0,0,1,2.538-2.48h16.922a2.512,2.512,0,0,1,2.538,2.48V-19021a1,1,0,0,1-1,1v1a1,1,0,0,1-1,1Zm1-2h0Zm-14,0h0Zm17-2v-5h-18v5Zm0-7v-5h-18v5Zm0-7v-3.518a.524.524,0,0,0-.54-.482h-16.922a.524.524,0,0,0-.54.482v3.518Zm-5,11.5a1.5,1.5,0,0,1,1.5-1.5,1.5,1.5,0,0,1,1.5,1.5,1.5,1.5,0,0,1-1.5,1.5A1.5,1.5,0,0,1,10649-19024.5Zm-11,0a1.5,1.5,0,0,1,1.5-1.5,1.5,1.5,0,0,1,1.5,1.5,1.5,1.5,0,0,1-1.5,1.5A1.5,1.5,0,0,1,10638-19024.5Zm3-12.5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h8a1,1,0,0,1,1,1,1,1,0,0,1-1,1Z\" transform=\"translate(-10050 19457)\" fill=\"currentColor\"/>\n              <rect id=\"Rectangle_2906\" data-name=\"Rectangle 2906\" width=\"32\" height=\"32\" transform=\"translate(579 411)\" fill=\"none\"/>\n            </g>\n            </svg>\n        - id: 132\n          name: Досуг и отдых\n          nameEn: Leisure and recreation\n          datasetsCount: 3\n          datasetsIds: \n            - 1384\n            - 1385\n            - 2269\n          imageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n          imageCode: |-\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n            <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n              <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n              <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n            </g>\n            </svg>\n\n    OivListItemArrayResponse:\n      value:\n        - id: 8779\n          name: Главное архивное управление города Москвы\n          nameEn: Main archive directorate of Moscow\n          datasetsCount: 8\n        - id: 8124\n          name: Главное контрольное управление города Москвы\n          nameEn: Main control authority of Moscow\n          datasetsCount: 2\n\n    DatasetAllInfoResponse:\n      value:\n        generalInfo:\n          fullName: Объекты культурного наследия\n          fullNameEn: Objects of cultural heritage\n          publicationStatusTagId: published  \n          identNumber:\n            inn: 7705021556\n            identName: Obektykulturnogonaslediya\n          oiv: \n            id: 1201\n            name: Департамент культурного наследия города Москвы\n            nameEn: Moscow Department of cultural heritag\n          respPersonFIO: Иванов Иван Иванович\n          respPersonEmail: ivanovii@mail.ru\n          respPersonPhone: +79876543210\n          thematicCategory:  \n            id: 107\n            name: Культура\n            nameEn: Culture \n          kindDataset:\n            id: 7\n            name: Список\n          typeDataset:\n            id: 2 \n            name: Городской отраслевой (ведомственный)\n          keywords: памятник, культурное наследие, культура, наследие\n          keywordsEn: monument, cultural heritage, culture, heritage\n          accountingObject: Объекты культурного наследия и выявленные объекты культурного наследия, в том числе с разделением по категориям, расположенные в пределах установленных границ города Москвы.\n          accountingObjectEn: Objects of cultural heritage and identified cultural heritage sites located within the established boundaries of the city of Moscow.                           \n          periodUpdate: Ежемесячно\n          firstPublicationDate: 17.06.2014                         \n          seasonality:\n            tagId: allSeasonal\n            name: Всесезонный набор данных\n          sefUrl: 7705021556-obekty-kulturnogo-naslediya-i-vyyavlennye-obekty-kulturnogo-naslediya\n          polygonsSortingTagId: asc \n          isClusteredByDistrict: false\n          isIsoIndicator: false\n          isAvailableIndicator: false\n          forumLink: null\n          isDict: false\n          dictTypeTagId: null\n          useInDatasetsIds: []\n          description: |-\n            Набор данных \"Объекты культурного наследия города Москвы\" содержит информацию об объектах, находящихся в соответствии с Федеральным законом от 25 июня 2002 г. № 73-ФЗ \"Об объектах культурного наследия (памятниках истории и культуры) народов Российской Федерации\" под государственной охраной, а именно: объектах культурного наследия, включенных в единый государственный реестр объектов культурного наследия (памятников истории и культуры) народов Российской Федерации, и выявленных объектах культурного наследия.\n        stat:\n          rating: 3.3\n          numberVotes: 953\n          numberView: 3310931\n          numberDownloads: 32194\n        actualData:\n          versionNum: 2\n          versionOpenDate: 10.08.2023 13:09:47\n          releaseNum: 104\n          releaseCreateDate: 06.06.2025 14:29:50\n          releaseOpenDate: 06.06.2025 14:30:01\n          validDate: 06.07.2025\n        version:\n          versionNum: 1\n          openDate: 17.06.2014 10:05:00\n          publicationStatusTagId: historical\n          hasGeo: false\n          publicationCatalogId: 9773\n          attributes:\n            - attrId: 1035661\n              techName: ObjectNameOnDoc\n              name: Наименование объекта по документам\n              enName: Name of the object according to the documents\n              typeTag: string \n              order: 1\n              isDisplay: true\n              isDisplayInTable: true\n              isDisplayInExport: true\n              systemAttr:\n                - name\n            - attrId: 1185896\n              techName: Location\n              name: Местоположение объекта\n              enName: Location\n              typeTag: table \n              order: 2\n              isDisplay: true\n              isDisplayInTable: false\n              isDisplayInExport: true\n              systemAttr: []   \n              attributes: \n                - attrId: 1185900\n                  techName: Address\n                  name: Адрес/Адресный ориентир/Местоположение\n                  enName: Address\n                  typeTag: string \n                  order: 3\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n                - attrId: 1185901\n                  techName: UNOM\n                  name: УНОМ\n                  enName: UNOM\n                  typeTag: integer \n                  order: 4\n                  isDisplay: true\n                  isDisplayInTable: false\n                  isDisplayInExport: true\n                  systemAttr: []\n        release:\n          releaseNum: 59\n          createDate: 20.09.2020 14:30:00\n          openDate: 20.09.2020 15:00:30\n          publicationStatus: historical\n          cntObjects: 1370\n\n    DatasetVersionArrayResponse:\n      value:\n        - versionNum: 2\n          openDate: 10.08.2023 12:00:00\n          publicationStatusTagId: actual\n          publicationCatalogId: 9773   \n        - versionNum: 1\n          openDate: 17.06.2014 12:00:00\n          publicationStatusTagId: historical\n          publicationCatalogId: 9773\n\n    DatasetReleaseArrayResponse:\n      value:\n        - varsionNum: 2\n          releaseNum: 104\n          createDate: 06.06.2025 11:59:50  \n          openDate: 06.06.2025 12:00:00\n          publicationStatus: actual\n          cntObjects: 1423\n        - varsionNum: 2\n          releaseNum: 103\n          createDate: 05.05.2025 11:59:50\n          openDate: 05.05.2025 12:00:00\n          publicationStatus: historical\n          cntObjects: 1420\n\n    SeasonDatasetArrayResponse:\n      value:\n        - id: 895\n          fullName: Площадки пейнтбольные\n          fullNameEn: Paintball sites\n          thematicCategoryId: 111   \n          thematicCategoryName: Досуг и отдых\n          thematicCategoryNameEn: Leisure and recreation\n          thematicCategoryImageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n          thematicCategoryImageCode: |-\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n            <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n              <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n              <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n            </g>\n            </svg>\n          seasonality:\n            tagId: allSeasonal\n            name: Всесезонный набор данных\n          rating: 5.0\n          numberDownloads: 1\n        - id: 64071\n          fullName: Площадки для занятий фитнесом в парках\n          fullNameEn: Places for sports and recreation. Fitness facilities in parks\n          thematicCategoryId: 111   \n          thematicCategoryName: Досуг и отдых\n          thematicCategoryNameEn: Leisure and recreation\n          thematicCategoryImageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n          thematicCategoryImageCode: |-\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n            <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n              <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n              <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n            </g>\n            </svg>\n          seasonality:\n            tagId: allSeasonal\n            name: Всесезонный набор данных\n          rating: 4.9\n          numberDownloads: 7\n        - id: 888\n          fullName: Стрелковые тиры\n          fullNameEn: Shooting ranges\n          thematicCategoryId: 111   \n          thematicCategoryName: Досуг и отдых\n          thematicCategoryNameEn: Leisure and recreation\n          thematicCategoryImageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n          thematicCategoryImageCode: |-\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n            <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n              <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n              <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n            </g>\n            </svg>\n          seasonality:\n            tagId: allSeasonal\n            name: Всесезонный набор данных\n          rating: 4.9\n          numberDownloads: 5\n\n    NewAndPopularDatasetArrayResponse:\n      value:\n        newSets:\n          - id: 895\n            fullName: Площадки пейнтбольные\n            fullNameEn: Paintball sites\n            thematicCategoryId: 111   \n            thematicCategoryName: Досуг и отдых\n            thematicCategoryNameEn: Leisure and recreation\n            thematicCategoryImageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n            thematicCategoryImageCode: |-\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n              <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n                <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n                <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n              </g>\n              </svg>\n            firstPublicationDate: 05.06.2025\n            rating: 5.0\n            numberView: 1\n        popularSets:\n          - id: 64071\n            fullName: Площадки для занятий фитнесом в парках\n            fullNameEn: Places for sports and recreation. Fitness facilities in parks\n            thematicCategoryId: 111   \n            thematicCategoryName: Досуг и отдых\n            thematicCategoryNameEn: Leisure and recreation\n            thematicCategoryImageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n            thematicCategoryImageCode: |-\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n              <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n                <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n                <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n              </g>\n              </svg>\n            firstPublicationDate: 08.06.2023\n            rating: 4.9\n            numberView: 7\n          - id: 888\n            fullName: Стрелковые тиры\n            fullNameEn: Shooting ranges\n            thematicCategoryId: 111   \n            thematicCategoryName: Досуг и отдых\n            thematicCategoryNameEn: Leisure and recreation\n            thematicCategoryImageId: 0f17ed3b-11c7-4a4b-a82a-3ce5412feebe\n            thematicCategoryImageCode: |-\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\">\n              <g id=\"Group_5448\" data-name=\"Group 5448\" transform=\"translate(-432 -647)\">\n                <rect id=\"Rectangle_2879\" data-name=\"Rectangle 2879\" width=\"32\" height=\"32\" transform=\"translate(432 647)\" fill=\"none\"/>\n                <path id=\"Path_7615\" data-name=\"Path 7615\" d=\"M18354-19022v-3h-3v3a1,1,0,0,1-1,1,1,1,0,0,1-1-1v-4a1,1,0,0,1,1-1h4v-3a1,1,0,0,1,1-1,1,1,0,0,1,1,1v8a.994.994,0,0,1-1,1A1,1,0,0,1,18354-19022Zm-9,0v-11h-7.393a1.617,1.617,0,0,1-1.605-1.547,4.347,4.347,0,0,1,1.041-2.844,7.013,7.013,0,0,1,2.457-1.826,14.982,14.982,0,0,1,5.5-1.3v-.482a1,1,0,0,1,.994-1,1,1,0,0,1,1,1v.482a15.1,15.1,0,0,1,5.5,1.279,7.032,7.032,0,0,1,2.457,1.816,4.377,4.377,0,0,1,1.047,2.844,1.657,1.657,0,0,1-1.611,1.576H18347v11a1,1,0,0,1-1,1A1,1,0,0,1,18345-19022Zm5.49-13h3.471a3.624,3.624,0,0,0-2.318-2.434,10.814,10.814,0,0,0-1.936-.674A7.259,7.259,0,0,1,18350.49-19035Zm-6.977,0h4.971c-.139-2.6-1.529-3.547-2.49-3.547C18344.861-19038.545,18343.652-19037.307,18343.514-19035Zm-3.158-2.418a3.655,3.655,0,0,0-2.312,2.418h3.469a7.221,7.221,0,0,1,.789-3.1A10.969,10.969,0,0,0,18340.355-19037.416ZM18341-19022v-3h-3v3a1,1,0,0,1-1,1,.994.994,0,0,1-1-1v-8a1,1,0,0,1,1-1,1,1,0,0,1,1,1v3h4a1,1,0,0,1,1,1v4a1,1,0,0,1-1,1A1,1,0,0,1,18341-19022Z\" transform=\"translate(-17898.002 19695)\" fill=\"currentColor\"/>\n              </g>\n              </svg>\n            firstPublicationDate: 17.06.2014\n            rating: 4.9\n            numberView: 5\n\n  # Примеры ответов-ошибок\n\n    IncorrectStatTypeResponse:\n      value:\n        code: 400\n        messageType: Bad request\n        message: Указан некорректный тип действия с набором данных.                     ",
    "type": "yaml"
  },
  {
    "text": "openapi: 3.0.3\n\ninfo:\n  title: Описание внутреннего API для ЕХД 2.0\n  description: |-\n    Описание методов для работы с внешними интеграциями\n  version: 1.0.0\n\n\npaths:\n\n  /integrations/history:\n    post:\n      tags:\n        - integrations\n      summary: Получение истории загрузок, выполненных через внешние интеграции\n      description: |-\n        Метод позволяет получить историю всех загрузок, выполненных через внешние интеграции.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `dateStart`, `dateEnd`, используется тело запроса.\n      parameters:\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка истории загрузок (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - dateStart\n                              - dateEnd\n            examples:\n              Пример:\n                  $ref: '#/components/examples/IntegrationHistoryRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/IntegrationHistoryItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/IntegrationHistoryItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n\n  /integrations/{integrationId}/details:\n    post:\n      tags:\n        - integrations\n      summary: Получение детализации по выбранной загрузке\n      description: |-\n        Метод позволяет получить детализацию по загрузке данных в каталоги.\n        \n        Метод позволяет выполнять фильтрацию и пагинацию. Подробнее см. параметры запроса.\n        \n        Для фильтрации по полям `catalogId`, `catalogName` используется тело запроса.\n      parameters:\n        - $ref: '#/components/parameters/integrationIdPathParam'\n        - name: limit\n          in: query\n          description: |-\n            Количество возвращаемых элементов списка каталогов (число от `1` до `1000`). По умолчанию `50`.\n          required: false\n          schema:\n            type: integer\n            format: int32\n            default: 50\n            minimum: 1\n            maximum: 1000\n        - $ref: '_common.yaml#/components/parameters/offsetQueryParam'\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                filters:\n                  type: array\n                  items:\n                    allOf:\n                      - $ref: '_common.yaml#/components/schemas/BasicFilter'\n                      - properties:\n                          attribute:\n                            enum:\n                              - catalogId\n                              - catalogName\n            examples:\n              Пример:\n                  $ref: '#/components/examples/IntegrationDetailRequest'\n      responses:\n        '200':\n          description: Успешный ответ\n          content:\n            application/json:\n              schema:\n                type: array\n                items:\n                  $ref: '#/components/schemas/IntegrationDetailsItem'\n              examples:\n                Пример:\n                    $ref: '#/components/examples/IntegrationDetailsItemArrayResponse'\n          headers:\n            X-Total-Count:\n              $ref: '_common.yaml#/components/headers/X-Total-Count'\n        '404':\n          description: |-\n            Запрошенный id интеграции не существует. \n          content:\n            application/json:\n              schema:\n                $ref: '_common.yaml#/components/schemas/NotFoundError'\n              examples:\n                Несуществующий id интеграции:\n                  $ref: '#/components/examples/IntegrationNotFoundError'\n\n\ncomponents:\n\n  schemas:    \n\n    IntegrationHistoryItem:\n      description: Элемент истории загрузок\n      type: object\n      readOnly: true\n      properties:\n        id: \n          description: Идентификатор загрузки\n          type: integer\n          format: int32\n        loaderType:\n          $ref: '#/components/schemas/LoaderTypeTagIdEnum'\n        dateStart:\n          description: Дата старта загрузки\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата окончания загрузки\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        status:\n          $ref: '#/components/schemas/IntegrationHistoryStatus'\n      required:\n        - id\n        - loaderType\n        - dateStart\n        - status\n\n    IntegrationDetailsItem:\n      description: Детализация загрузки по каталогам\n      type: object\n      readOnly: true\n      properties:\n        catalogId: \n          description: Идентификатор каталога\n          type: integer\n          format: int32         \n        catalogName: \n          description: Наименование каталога\n          type: integer\n          format: int32\n        dateStart:\n          description: Дата старта загрузки\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        dateEnd:\n          description: Дата окончания загрузки\n          allOf:\n            - $ref: '_common.yaml#/components/schemas/DateTimeFormat'\n        countAddedObj:\n          description: Количество добавленных объектов\n          type: integer\n        countUpdatedObj:\n          description: Количество обновленных объектов\n          type: integer\n        countDeletedObj:\n          description: Количество удаленных объектов\n          type: integer\n        countRecoveredObj:\n          description: Количество восстановленных объектов\n          type: integer\n        countErrorObj:\n          description: Количество ошибок в объектах\n          type: integer\n        logFileId:\n          description: Идентификатор (uuid) файла лога\n          type: string\n      required:\n        - catalogId\n        - catalogName\n        - dateStart\n\n    IntegrationHistoryStatus:\n      description: Статус в истории загрузок, выполненных через интеграции\n      type: object\n      properties:\n        id: \n          type: integer\n          description: Идентификатор статуса\n        name:\n          $ref: '#/components/schemas/IntegrationHistoryStatusNameEnum'\n        tagId:\n          $ref: '#/components/schemas/IntegrationHistoryStatusTagIdEnum'\n      required:\n        - id\n        - name\n        - tagId\n      example:\n        id: 1\n        name: В работе\n        tagId: inWork\n\n    IntegrationHistoryStatusNameEnum:\n      description: Название статуса в истории загрузок, выполненных через интеграции\n      oneOf:\n        - type: string\n          # enum:\n          #   - Новый\n          #   - Идет процесс загрузки в каталоги ЕХД\n          #   - Ошибка загрузки в каталоги ЕХД\n          #   - Загрузка завершена успешно\n    \n    IntegrationHistoryStatusTagIdEnum:\n      description: |-\n        Технчиеское наименование статуса в истории загрузок, выполненных через интеграции\n          - `new` - Новый, \n          - `inWork` - Идет процесс загрузки в каталоги ЕХД, \n          - `finishedError` - Ошибка загрузки в каталоги ЕХД, \n          - `finishedSuccess` - Загрузка завершена успешно\n      oneOf:\n        - type: string\n          enum:\n            - new\n            - inWork\n            - finishedError\n            - finishedSuccess\n\n    LoaderTypeTagIdEnum:\n      description: Наименование типа загрузчика\n      oneOf:\n        - type: string\n          enum:\n            - 2gis\n            - kladr\n            - gar\n            - PHODD\n\n  parameters:\n    integrationIdPathParam:\n      name: integrationId\n      in: path\n      description: |-\n        Идентификатор загрузки.\n      required: true\n      schema:\n        type: integer\n        format: int32\n      example: 5392\n\n  examples:\n\n    IntegrationHistoryRequest:\n      description: Пример тела запроса для получения истории загрузок\n      value:\n        filters:\n          - attribute: dateStart\n            operator: greaterThan\n            value: 01.02.2024 15:25:05\n\n    IntegrationDetailRequest:\n      description: Пример тела запроса для получения детализации по загрузке\n      value:\n        filters:\n          - attribute: catalogId\n            operator: contains\n            value: 78422\n    \n    IntegrationHistoryItemArrayResponse:\n      description: Пример ответа с историей загрузок через интеграции\n      value:\n        - id: 23\n          loaderType: kladr\n          dateStart: 28.09.2023 13:18:13\n          dateEnd: 28.09.2023 14:27:54\n          status:\n            id: 1\n            tagId: new\n            name: Новый\n\n    IntegrationDetailsItemArrayResponse:\n      description: Пример ответа с детализацией по загрузке данных в каталоги\n      value:\n        - catalogId: 5442\n          catalogName: Уровни адресных объектов\n          dateStart: 28.09.2023 13:18:13\n          dateEnd: 28.09.2023 15:20:52\n          countAddedObj: 2500\n          countUpdatedObj: 2\n          countDeletedObj: 0\n          countRecoveredObj: 30\n          countErrorObj: 260\n          logFileId: c7b50ccd-dc45-4381-8606-6eaae7e43e66\n    \n    IntegrationNotFoundError:\n      description: |-\n        Указанная интеграция не найден.\n      value:\n        code: 404\n        messageType: Resource not found\n        message: Интеграции с идентификатором {integrationId} не существует.\n   ",
    "type": "yaml"
  }
]